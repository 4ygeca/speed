

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 21 20:02:47 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F18326
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	cinit,global,class=CODE,merge=1,delta=2
    30                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    31                           	psect	bitbssBANK1,global,bit,class=BANK1,space=1,delta=1,noexec
    32                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	bitbssBANK2,global,bit,class=BANK2,space=1,delta=1,noexec
    34                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    36                           	psect	bitbssBANK3,global,bit,class=BANK3,space=1,delta=1,noexec
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    38                           	psect	clrtext,global,class=CODE,delta=2
    39                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    40                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    42                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    43                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    45                           	psect	jmp_tab__printf,global,class=ENTRY,delta=2
    46                           	psect	jmp_tab__spd_init,global,class=ENTRY,delta=2
    47                           	psect	jmp_tab__button_check,global,class=ENTRY,delta=2
    48                           	psect	jmp_tab__write_correction,global,class=ENTRY,delta=2
    49                           	psect	jmp_tab__puts,global,class=ENTRY,delta=2
    50                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    51                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    52                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    53                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    54                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    55                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    56                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    57                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    58                           	psect	jmp_tab__read_correction,global,class=ENTRY,delta=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    60                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    61                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    62                           	psect	jmp_tab__eeprom_read_error_handler,global,class=ENTRY,delta=2
    63                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    64                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text14,local,class=CODE,merge=1,delta=2,codecov
    66                           	psect	text15,local,class=CODE,merge=1,delta=2,codecov
    67                           	psect	text16,local,class=CODE,merge=1,delta=2,codecov
    68                           	psect	text17,local,class=CODE,merge=1,delta=2,codecov
    69                           	psect	text18,local,class=CODE,merge=1,delta=2,codecov
    70                           	psect	text19,local,class=CODE,merge=1,delta=2,codecov
    71                           	psect	text20,local,class=CODE,merge=1,delta=2,codecov
    72                           	psect	text21,local,class=CODE,merge=1,delta=2,codecov
    73                           	psect	text22,local,class=CODE,merge=1,delta=2,codecov
    74                           	psect	text23,local,class=CODE,merge=1,delta=2,codecov
    75                           	psect	text24,local,class=CODE,merge=1,delta=2,codecov
    76                           	psect	text25,local,class=CODE,merge=1,delta=2,codecov
    77                           	psect	text26,local,class=CODE,merge=1,delta=2,codecov
    78                           	psect	text27,local,class=CODE,merge=1,delta=2,codecov
    79                           	psect	text28,local,class=CODE,merge=1,delta=2,codecov
    80                           	psect	text29,local,class=CODE,merge=1,delta=2,codecov
    81                           	psect	text30,local,class=CODE,merge=1,delta=2,codecov
    82                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text35,local,class=CODE,merge=1,delta=2,codecov
    87                           	psect	text36,local,class=CODE,merge=1,delta=2,codecov
    88                           	psect	text37,local,class=CODE,merge=1,delta=2,codecov
    89                           	psect	text38,local,class=CODE,merge=1,delta=2,codecov
    90                           	psect	text39,local,class=CODE,merge=1,delta=2,codecov
    91                           	psect	text40,local,class=CODE,merge=1,delta=2,codecov
    92                           	psect	text41,local,class=CODE,merge=1,delta=2,codecov
    93                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    94                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    95                           	psect	jmp_tab__vfprintf,global,class=ENTRY,delta=2
    96                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	jmp_tab__vfpfcnvrt,global,class=ENTRY,delta=2
    98                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	jmp_tab__dtoa,global,class=ENTRY,delta=2
   100                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	jmp_tab__pad,global,class=ENTRY,delta=2
   102                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
   104                           	psect	text49,local,class=CODE,merge=1,delta=2,group=3
   105                           	psect	text50,local,class=CODE,merge=1,delta=2,group=3
   106                           	psect	text51,local,class=CODE,merge=1,delta=2,codecov
   107                           	psect	text52,local,class=CODE,merge=1,delta=2,codecov
   108                           	psect	text53,local,class=CODE,merge=1,delta=2,group=3
   109                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text56,local,class=CODE,merge=1,delta=2,codecov
   112                           	psect	text57,local,class=CODE,merge=1,delta=2,codecov
   113                           	psect	text58,local,class=CODE,merge=1,delta=2,codecov
   114                           	psect	text59,local,class=CODE,merge=1,delta=2,codecov
   115                           	psect	text60,local,class=CODE,merge=1,delta=2,codecov
   116                           	psect	text61,local,class=CODE,merge=1,delta=2,codecov
   117                           	psect	text62,local,class=CODE,merge=1,delta=2,codecov
   118                           	psect	text63,local,class=CODE,merge=1,delta=2,codecov
   119                           	psect	text64,local,class=CODE,merge=1,delta=2,codecov
   120                           	psect	text65,local,class=CODE,merge=1,delta=2,codecov
   121                           	psect	text66,local,class=CODE,merge=1,delta=2,codecov
   122                           	psect	text67,local,class=CODE,merge=1,delta=2,codecov
   123                           	psect	text68,local,class=CODE,merge=1,delta=2,codecov
   124                           	psect	text69,local,class=CODE,merge=1,delta=2,codecov
   125                           	psect	text70,local,class=CODE,merge=1,delta=2,codecov
   126                           	psect	text71,local,class=CODE,merge=1,delta=2,codecov
   127                           	psect	text72,local,class=CODE,merge=1,delta=2,codecov
   128                           	psect	text73,local,class=CODE,merge=1,delta=2,codecov
   129                           	psect	text74,local,class=CODE,merge=1,delta=2,codecov
   130                           	psect	text75,local,class=CODE,merge=1,delta=2,codecov
   131                           	psect	text76,local,class=CODE,merge=1,delta=2,codecov
   132                           	psect	text77,local,class=CODE,merge=1,delta=2,codecov
   133                           	psect	text78,local,class=CODE,merge=1,delta=2,codecov
   134                           	psect	intentry,global,class=CODE,delta=2
   135                           	psect	text80,local,class=CODE,merge=1,delta=2,codecov
   136                           	psect	text81,local,class=CODE,merge=1,delta=2,codecov
   137                           	psect	text82,local,class=CODE,merge=1,delta=2,codecov
   138                           	psect	text83,local,class=CODE,merge=1,delta=2,codecov
   139                           	psect	text84,local,class=CODE,merge=1,delta=2,codecov
   140                           	psect	text85,local,class=CODE,merge=1,delta=2,codecov
   141                           	psect	text86,local,class=CODE,merge=1,delta=2,codecov
   142                           	psect	text87,local,class=CODE,merge=1,delta=2,codecov
   143                           	psect	text88,local,class=CODE,merge=1,delta=2,codecov
   144                           	psect	text89,local,class=CODE,merge=1,delta=2,codecov
   145                           	psect	text90,local,class=CODE,merge=1,delta=2
   146                           	psect	text91,local,class=CODE,merge=1,delta=2
   147                           	psect	text92,local,class=CODE,merge=1,delta=2
   148                           	psect	text93,local,class=CODE,merge=1,delta=2
   149                           	psect	text94,local,class=CODE,merge=1,delta=2
   150                           	psect	text95,local,class=CODE,merge=1,delta=2
   151                           	psect	text96,local,class=CODE,merge=1,delta=2
   152                           	psect	text97,local,class=CODE,merge=1,delta=2
   153                           	psect	text98,local,class=CODE,merge=1,delta=2
   154                           	psect	text99,local,class=CODE,merge=1,delta=2,codecov
   155                           	psect	text100,local,class=CODE,merge=1,delta=2
   156                           	psect	text101,local,class=CODE,merge=1,delta=2
   157                           	psect	text102,local,class=CODE,merge=1,delta=2
   158                           	psect	text103,local,class=CODE,merge=1,delta=2
   159                           	psect	text104,local,class=CODE,merge=1,delta=2,codecov
   160                           	psect	text105,local,class=CODE,merge=1,delta=2,codecov
   161                           	psect	text106,local,class=CODE,merge=1,delta=2,codecov
   162                           	psect	text107,local,class=CODE,merge=1,delta=2,codecov
   163                           	psect	text108,local,class=CODE,merge=1,delta=2,codecov
   164                           	psect	text109,local,class=CODE,merge=1,delta=2,codecov
   165                           	psect	text110,local,class=CODE,merge=1,delta=2
   166                           	psect	text111,local,class=CODE,merge=1,delta=2
   167                           	psect	text112,local,class=CODE,merge=1,delta=2
   168                           	psect	text113,local,class=CODE,merge=1,delta=2,codecov
   169                           	psect	text114,local,class=CODE,merge=1,delta=2,codecov
   170                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
   171                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
   172                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   173                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   174                           	dabs	1,0x7E,2
   175  0000                     
   176                           ; Version 2.40
   177                           ; Generated 02/12/2021 GMT
   178                           ; 
   179                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution. Publication is not required when
   193                           ;        this file is used in an embedded application.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC16F18326 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000E                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008E                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0097                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010E                     	;# 
   260  0111                     	;# 
   261  0112                     	;# 
   262  0113                     	;# 
   263  0114                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  018C                     	;# 
   270  018E                     	;# 
   271  0197                     	;# 
   272  0199                     	;# 
   273  0199                     	;# 
   274  0199                     	;# 
   275  019A                     	;# 
   276  019A                     	;# 
   277  019A                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019C                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019D                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019E                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  019F                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020E                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0219                     	;# 
   316  021A                     	;# 
   317  021B                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021D                     	;# 
   321  021E                     	;# 
   322  021F                     	;# 
   323  028C                     	;# 
   324  028E                     	;# 
   325  0291                     	;# 
   326  0291                     	;# 
   327  0292                     	;# 
   328  0293                     	;# 
   329  0294                     	;# 
   330  0295                     	;# 
   331  0295                     	;# 
   332  0296                     	;# 
   333  0297                     	;# 
   334  0298                     	;# 
   335  029F                     	;# 
   336  030C                     	;# 
   337  030E                     	;# 
   338  0311                     	;# 
   339  0311                     	;# 
   340  0312                     	;# 
   341  0313                     	;# 
   342  0314                     	;# 
   343  0315                     	;# 
   344  0315                     	;# 
   345  0316                     	;# 
   346  0317                     	;# 
   347  0318                     	;# 
   348  038C                     	;# 
   349  038E                     	;# 
   350  0391                     	;# 
   351  0392                     	;# 
   352  0393                     	;# 
   353  0397                     	;# 
   354  0398                     	;# 
   355  0399                     	;# 
   356  039A                     	;# 
   357  039C                     	;# 
   358  039D                     	;# 
   359  039E                     	;# 
   360  039F                     	;# 
   361  0411                     	;# 
   362  0411                     	;# 
   363  0412                     	;# 
   364  0413                     	;# 
   365  0414                     	;# 
   366  0415                     	;# 
   367  0416                     	;# 
   368  0417                     	;# 
   369  0418                     	;# 
   370  0418                     	;# 
   371  0419                     	;# 
   372  041A                     	;# 
   373  041B                     	;# 
   374  041C                     	;# 
   375  041D                     	;# 
   376  041E                     	;# 
   377  041F                     	;# 
   378  0498                     	;# 
   379  0498                     	;# 
   380  0499                     	;# 
   381  049A                     	;# 
   382  049B                     	;# 
   383  049B                     	;# 
   384  049C                     	;# 
   385  049D                     	;# 
   386  049E                     	;# 
   387  049F                     	;# 
   388  0617                     	;# 
   389  0618                     	;# 
   390  0619                     	;# 
   391  0619                     	;# 
   392  061A                     	;# 
   393  061B                     	;# 
   394  061C                     	;# 
   395  061C                     	;# 
   396  061F                     	;# 
   397  0691                     	;# 
   398  0692                     	;# 
   399  0693                     	;# 
   400  0694                     	;# 
   401  0695                     	;# 
   402  0696                     	;# 
   403  0697                     	;# 
   404  0698                     	;# 
   405  0699                     	;# 
   406  0711                     	;# 
   407  0712                     	;# 
   408  0713                     	;# 
   409  0714                     	;# 
   410  0715                     	;# 
   411  0716                     	;# 
   412  0717                     	;# 
   413  0718                     	;# 
   414  0719                     	;# 
   415  0891                     	;# 
   416  0891                     	;# 
   417  0891                     	;# 
   418  0891                     	;# 
   419  0891                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0892                     	;# 
   423  0892                     	;# 
   424  0893                     	;# 
   425  0893                     	;# 
   426  0893                     	;# 
   427  0893                     	;# 
   428  0893                     	;# 
   429  0893                     	;# 
   430  0894                     	;# 
   431  0894                     	;# 
   432  0894                     	;# 
   433  0895                     	;# 
   434  0895                     	;# 
   435  0895                     	;# 
   436  0896                     	;# 
   437  0896                     	;# 
   438  0896                     	;# 
   439  089B                     	;# 
   440  0911                     	;# 
   441  0912                     	;# 
   442  0913                     	;# 
   443  0914                     	;# 
   444  0915                     	;# 
   445  0916                     	;# 
   446  0918                     	;# 
   447  0919                     	;# 
   448  091A                     	;# 
   449  091B                     	;# 
   450  091C                     	;# 
   451  091D                     	;# 
   452  091E                     	;# 
   453  091F                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E24                     	;# 
   475  0E25                     	;# 
   476  0E28                     	;# 
   477  0E29                     	;# 
   478  0E2A                     	;# 
   479  0E2B                     	;# 
   480  0E2C                     	;# 
   481  0E2D                     	;# 
   482  0E2E                     	;# 
   483  0E2F                     	;# 
   484  0E90                     	;# 
   485  0E91                     	;# 
   486  0E92                     	;# 
   487  0E94                     	;# 
   488  0E95                     	;# 
   489  0EA0                     	;# 
   490  0EA1                     	;# 
   491  0EA2                     	;# 
   492  0EA3                     	;# 
   493  0EA4                     	;# 
   494  0EA5                     	;# 
   495  0F0F                     	;# 
   496  0F10                     	;# 
   497  0F11                     	;# 
   498  0F12                     	;# 
   499  0F13                     	;# 
   500  0F14                     	;# 
   501  0F15                     	;# 
   502  0F16                     	;# 
   503  0F17                     	;# 
   504  0F18                     	;# 
   505  0F19                     	;# 
   506  0F1A                     	;# 
   507  0F1B                     	;# 
   508  0F1C                     	;# 
   509  0F1D                     	;# 
   510  0F1E                     	;# 
   511  0F1F                     	;# 
   512  0F20                     	;# 
   513  0F21                     	;# 
   514  0F22                     	;# 
   515  0F23                     	;# 
   516  0F24                     	;# 
   517  0F25                     	;# 
   518  0F26                     	;# 
   519  0F27                     	;# 
   520  0F28                     	;# 
   521  0F29                     	;# 
   522  0F2A                     	;# 
   523  0F2B                     	;# 
   524  0F2C                     	;# 
   525  0F2D                     	;# 
   526  0F2E                     	;# 
   527  0F2F                     	;# 
   528  0F30                     	;# 
   529  0F31                     	;# 
   530  0F32                     	;# 
   531  0F33                     	;# 
   532  0F34                     	;# 
   533  0F35                     	;# 
   534  0F36                     	;# 
   535  0F37                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000E                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  008C                     	;# 
   581  008E                     	;# 
   582  0090                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0097                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010E                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  018C                     	;# 
   606  018E                     	;# 
   607  0197                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019E                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  019F                     	;# 
   631  019F                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020E                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0216                     	;# 
   649  0217                     	;# 
   650  0217                     	;# 
   651  0219                     	;# 
   652  021A                     	;# 
   653  021B                     	;# 
   654  021C                     	;# 
   655  021D                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  028C                     	;# 
   660  028E                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0297                     	;# 
   670  0298                     	;# 
   671  029F                     	;# 
   672  030C                     	;# 
   673  030E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0314                     	;# 
   679  0315                     	;# 
   680  0315                     	;# 
   681  0316                     	;# 
   682  0317                     	;# 
   683  0318                     	;# 
   684  038C                     	;# 
   685  038E                     	;# 
   686  0391                     	;# 
   687  0392                     	;# 
   688  0393                     	;# 
   689  0397                     	;# 
   690  0398                     	;# 
   691  0399                     	;# 
   692  039A                     	;# 
   693  039C                     	;# 
   694  039D                     	;# 
   695  039E                     	;# 
   696  039F                     	;# 
   697  0411                     	;# 
   698  0411                     	;# 
   699  0412                     	;# 
   700  0413                     	;# 
   701  0414                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  0418                     	;# 
   706  0418                     	;# 
   707  0419                     	;# 
   708  041A                     	;# 
   709  041B                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  041F                     	;# 
   714  0498                     	;# 
   715  0498                     	;# 
   716  0499                     	;# 
   717  049A                     	;# 
   718  049B                     	;# 
   719  049B                     	;# 
   720  049C                     	;# 
   721  049D                     	;# 
   722  049E                     	;# 
   723  049F                     	;# 
   724  0617                     	;# 
   725  0618                     	;# 
   726  0619                     	;# 
   727  0619                     	;# 
   728  061A                     	;# 
   729  061B                     	;# 
   730  061C                     	;# 
   731  061C                     	;# 
   732  061F                     	;# 
   733  0691                     	;# 
   734  0692                     	;# 
   735  0693                     	;# 
   736  0694                     	;# 
   737  0695                     	;# 
   738  0696                     	;# 
   739  0697                     	;# 
   740  0698                     	;# 
   741  0699                     	;# 
   742  0711                     	;# 
   743  0712                     	;# 
   744  0713                     	;# 
   745  0714                     	;# 
   746  0715                     	;# 
   747  0716                     	;# 
   748  0717                     	;# 
   749  0718                     	;# 
   750  0719                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0891                     	;# 
   755  0891                     	;# 
   756  0891                     	;# 
   757  0892                     	;# 
   758  0892                     	;# 
   759  0892                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0893                     	;# 
   764  0893                     	;# 
   765  0893                     	;# 
   766  0894                     	;# 
   767  0894                     	;# 
   768  0894                     	;# 
   769  0895                     	;# 
   770  0895                     	;# 
   771  0895                     	;# 
   772  0896                     	;# 
   773  0896                     	;# 
   774  0896                     	;# 
   775  089B                     	;# 
   776  0911                     	;# 
   777  0912                     	;# 
   778  0913                     	;# 
   779  0914                     	;# 
   780  0915                     	;# 
   781  0916                     	;# 
   782  0918                     	;# 
   783  0919                     	;# 
   784  091A                     	;# 
   785  091B                     	;# 
   786  091C                     	;# 
   787  091D                     	;# 
   788  091E                     	;# 
   789  091F                     	;# 
   790  0E0F                     	;# 
   791  0E10                     	;# 
   792  0E11                     	;# 
   793  0E12                     	;# 
   794  0E13                     	;# 
   795  0E14                     	;# 
   796  0E15                     	;# 
   797  0E16                     	;# 
   798  0E17                     	;# 
   799  0E18                     	;# 
   800  0E19                     	;# 
   801  0E1A                     	;# 
   802  0E1B                     	;# 
   803  0E1C                     	;# 
   804  0E1D                     	;# 
   805  0E1E                     	;# 
   806  0E1F                     	;# 
   807  0E20                     	;# 
   808  0E21                     	;# 
   809  0E22                     	;# 
   810  0E24                     	;# 
   811  0E25                     	;# 
   812  0E28                     	;# 
   813  0E29                     	;# 
   814  0E2A                     	;# 
   815  0E2B                     	;# 
   816  0E2C                     	;# 
   817  0E2D                     	;# 
   818  0E2E                     	;# 
   819  0E2F                     	;# 
   820  0E90                     	;# 
   821  0E91                     	;# 
   822  0E92                     	;# 
   823  0E94                     	;# 
   824  0E95                     	;# 
   825  0EA0                     	;# 
   826  0EA1                     	;# 
   827  0EA2                     	;# 
   828  0EA3                     	;# 
   829  0EA4                     	;# 
   830  0EA5                     	;# 
   831  0F0F                     	;# 
   832  0F10                     	;# 
   833  0F11                     	;# 
   834  0F12                     	;# 
   835  0F13                     	;# 
   836  0F14                     	;# 
   837  0F15                     	;# 
   838  0F16                     	;# 
   839  0F17                     	;# 
   840  0F18                     	;# 
   841  0F19                     	;# 
   842  0F1A                     	;# 
   843  0F1B                     	;# 
   844  0F1C                     	;# 
   845  0F1D                     	;# 
   846  0F1E                     	;# 
   847  0F1F                     	;# 
   848  0F20                     	;# 
   849  0F21                     	;# 
   850  0F22                     	;# 
   851  0F23                     	;# 
   852  0F24                     	;# 
   853  0F25                     	;# 
   854  0F26                     	;# 
   855  0F27                     	;# 
   856  0F28                     	;# 
   857  0F29                     	;# 
   858  0F2A                     	;# 
   859  0F2B                     	;# 
   860  0F2C                     	;# 
   861  0F2D                     	;# 
   862  0F2E                     	;# 
   863  0F2F                     	;# 
   864  0F30                     	;# 
   865  0F31                     	;# 
   866  0F32                     	;# 
   867  0F33                     	;# 
   868  0F34                     	;# 
   869  0F35                     	;# 
   870  0F36                     	;# 
   871  0F37                     	;# 
   872  0FE4                     	;# 
   873  0FE5                     	;# 
   874  0FE6                     	;# 
   875  0FE7                     	;# 
   876  0FE8                     	;# 
   877  0FE9                     	;# 
   878  0FEA                     	;# 
   879  0FEB                     	;# 
   880  0FED                     	;# 
   881  0FEE                     	;# 
   882  0FEF                     	;# 
   883  0000                     	;# 
   884  0001                     	;# 
   885  0002                     	;# 
   886  0003                     	;# 
   887  0004                     	;# 
   888  0005                     	;# 
   889  0006                     	;# 
   890  0007                     	;# 
   891  0008                     	;# 
   892  0009                     	;# 
   893  000A                     	;# 
   894  000B                     	;# 
   895  000C                     	;# 
   896  000E                     	;# 
   897  0010                     	;# 
   898  0011                     	;# 
   899  0012                     	;# 
   900  0013                     	;# 
   901  0014                     	;# 
   902  0015                     	;# 
   903  0015                     	;# 
   904  0016                     	;# 
   905  0016                     	;# 
   906  0017                     	;# 
   907  0018                     	;# 
   908  0019                     	;# 
   909  0019                     	;# 
   910  001A                     	;# 
   911  001B                     	;# 
   912  001C                     	;# 
   913  001D                     	;# 
   914  001E                     	;# 
   915  001F                     	;# 
   916  008C                     	;# 
   917  008E                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0094                     	;# 
   923  0097                     	;# 
   924  009B                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  009F                     	;# 
   930  010C                     	;# 
   931  010E                     	;# 
   932  0111                     	;# 
   933  0112                     	;# 
   934  0113                     	;# 
   935  0114                     	;# 
   936  0115                     	;# 
   937  0116                     	;# 
   938  0117                     	;# 
   939  0118                     	;# 
   940  0119                     	;# 
   941  018C                     	;# 
   942  018E                     	;# 
   943  0197                     	;# 
   944  0199                     	;# 
   945  0199                     	;# 
   946  0199                     	;# 
   947  019A                     	;# 
   948  019A                     	;# 
   949  019A                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019C                     	;# 
   956  019C                     	;# 
   957  019C                     	;# 
   958  019D                     	;# 
   959  019D                     	;# 
   960  019D                     	;# 
   961  019E                     	;# 
   962  019E                     	;# 
   963  019E                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  019F                     	;# 
   967  019F                     	;# 
   968  019F                     	;# 
   969  020C                     	;# 
   970  020E                     	;# 
   971  0211                     	;# 
   972  0211                     	;# 
   973  0212                     	;# 
   974  0212                     	;# 
   975  0213                     	;# 
   976  0213                     	;# 
   977  0214                     	;# 
   978  0214                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0216                     	;# 
   984  0216                     	;# 
   985  0217                     	;# 
   986  0217                     	;# 
   987  0219                     	;# 
   988  021A                     	;# 
   989  021B                     	;# 
   990  021C                     	;# 
   991  021D                     	;# 
   992  021D                     	;# 
   993  021E                     	;# 
   994  021F                     	;# 
   995  028C                     	;# 
   996  028E                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0297                     	;# 
  1006  0298                     	;# 
  1007  029F                     	;# 
  1008  030C                     	;# 
  1009  030E                     	;# 
  1010  0311                     	;# 
  1011  0311                     	;# 
  1012  0312                     	;# 
  1013  0313                     	;# 
  1014  0314                     	;# 
  1015  0315                     	;# 
  1016  0315                     	;# 
  1017  0316                     	;# 
  1018  0317                     	;# 
  1019  0318                     	;# 
  1020  038C                     	;# 
  1021  038E                     	;# 
  1022  0391                     	;# 
  1023  0392                     	;# 
  1024  0393                     	;# 
  1025  0397                     	;# 
  1026  0398                     	;# 
  1027  0399                     	;# 
  1028  039A                     	;# 
  1029  039C                     	;# 
  1030  039D                     	;# 
  1031  039E                     	;# 
  1032  039F                     	;# 
  1033  0411                     	;# 
  1034  0411                     	;# 
  1035  0412                     	;# 
  1036  0413                     	;# 
  1037  0414                     	;# 
  1038  0415                     	;# 
  1039  0416                     	;# 
  1040  0417                     	;# 
  1041  0418                     	;# 
  1042  0418                     	;# 
  1043  0419                     	;# 
  1044  041A                     	;# 
  1045  041B                     	;# 
  1046  041C                     	;# 
  1047  041D                     	;# 
  1048  041E                     	;# 
  1049  041F                     	;# 
  1050  0498                     	;# 
  1051  0498                     	;# 
  1052  0499                     	;# 
  1053  049A                     	;# 
  1054  049B                     	;# 
  1055  049B                     	;# 
  1056  049C                     	;# 
  1057  049D                     	;# 
  1058  049E                     	;# 
  1059  049F                     	;# 
  1060  0617                     	;# 
  1061  0618                     	;# 
  1062  0619                     	;# 
  1063  0619                     	;# 
  1064  061A                     	;# 
  1065  061B                     	;# 
  1066  061C                     	;# 
  1067  061C                     	;# 
  1068  061F                     	;# 
  1069  0691                     	;# 
  1070  0692                     	;# 
  1071  0693                     	;# 
  1072  0694                     	;# 
  1073  0695                     	;# 
  1074  0696                     	;# 
  1075  0697                     	;# 
  1076  0698                     	;# 
  1077  0699                     	;# 
  1078  0711                     	;# 
  1079  0712                     	;# 
  1080  0713                     	;# 
  1081  0714                     	;# 
  1082  0715                     	;# 
  1083  0716                     	;# 
  1084  0717                     	;# 
  1085  0718                     	;# 
  1086  0719                     	;# 
  1087  0891                     	;# 
  1088  0891                     	;# 
  1089  0891                     	;# 
  1090  0891                     	;# 
  1091  0891                     	;# 
  1092  0891                     	;# 
  1093  0892                     	;# 
  1094  0892                     	;# 
  1095  0892                     	;# 
  1096  0893                     	;# 
  1097  0893                     	;# 
  1098  0893                     	;# 
  1099  0893                     	;# 
  1100  0893                     	;# 
  1101  0893                     	;# 
  1102  0894                     	;# 
  1103  0894                     	;# 
  1104  0894                     	;# 
  1105  0895                     	;# 
  1106  0895                     	;# 
  1107  0895                     	;# 
  1108  0896                     	;# 
  1109  0896                     	;# 
  1110  0896                     	;# 
  1111  089B                     	;# 
  1112  0911                     	;# 
  1113  0912                     	;# 
  1114  0913                     	;# 
  1115  0914                     	;# 
  1116  0915                     	;# 
  1117  0916                     	;# 
  1118  0918                     	;# 
  1119  0919                     	;# 
  1120  091A                     	;# 
  1121  091B                     	;# 
  1122  091C                     	;# 
  1123  091D                     	;# 
  1124  091E                     	;# 
  1125  091F                     	;# 
  1126  0E0F                     	;# 
  1127  0E10                     	;# 
  1128  0E11                     	;# 
  1129  0E12                     	;# 
  1130  0E13                     	;# 
  1131  0E14                     	;# 
  1132  0E15                     	;# 
  1133  0E16                     	;# 
  1134  0E17                     	;# 
  1135  0E18                     	;# 
  1136  0E19                     	;# 
  1137  0E1A                     	;# 
  1138  0E1B                     	;# 
  1139  0E1C                     	;# 
  1140  0E1D                     	;# 
  1141  0E1E                     	;# 
  1142  0E1F                     	;# 
  1143  0E20                     	;# 
  1144  0E21                     	;# 
  1145  0E22                     	;# 
  1146  0E24                     	;# 
  1147  0E25                     	;# 
  1148  0E28                     	;# 
  1149  0E29                     	;# 
  1150  0E2A                     	;# 
  1151  0E2B                     	;# 
  1152  0E2C                     	;# 
  1153  0E2D                     	;# 
  1154  0E2E                     	;# 
  1155  0E2F                     	;# 
  1156  0E90                     	;# 
  1157  0E91                     	;# 
  1158  0E92                     	;# 
  1159  0E94                     	;# 
  1160  0E95                     	;# 
  1161  0EA0                     	;# 
  1162  0EA1                     	;# 
  1163  0EA2                     	;# 
  1164  0EA3                     	;# 
  1165  0EA4                     	;# 
  1166  0EA5                     	;# 
  1167  0F0F                     	;# 
  1168  0F10                     	;# 
  1169  0F11                     	;# 
  1170  0F12                     	;# 
  1171  0F13                     	;# 
  1172  0F14                     	;# 
  1173  0F15                     	;# 
  1174  0F16                     	;# 
  1175  0F17                     	;# 
  1176  0F18                     	;# 
  1177  0F19                     	;# 
  1178  0F1A                     	;# 
  1179  0F1B                     	;# 
  1180  0F1C                     	;# 
  1181  0F1D                     	;# 
  1182  0F1E                     	;# 
  1183  0F1F                     	;# 
  1184  0F20                     	;# 
  1185  0F21                     	;# 
  1186  0F22                     	;# 
  1187  0F23                     	;# 
  1188  0F24                     	;# 
  1189  0F25                     	;# 
  1190  0F26                     	;# 
  1191  0F27                     	;# 
  1192  0F28                     	;# 
  1193  0F29                     	;# 
  1194  0F2A                     	;# 
  1195  0F2B                     	;# 
  1196  0F2C                     	;# 
  1197  0F2D                     	;# 
  1198  0F2E                     	;# 
  1199  0F2F                     	;# 
  1200  0F30                     	;# 
  1201  0F31                     	;# 
  1202  0F32                     	;# 
  1203  0F33                     	;# 
  1204  0F34                     	;# 
  1205  0F35                     	;# 
  1206  0F36                     	;# 
  1207  0F37                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000E                     	;# 
  1233  0010                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0015                     	;# 
  1240  0016                     	;# 
  1241  0016                     	;# 
  1242  0017                     	;# 
  1243  0018                     	;# 
  1244  0019                     	;# 
  1245  0019                     	;# 
  1246  001A                     	;# 
  1247  001B                     	;# 
  1248  001C                     	;# 
  1249  001D                     	;# 
  1250  001E                     	;# 
  1251  001F                     	;# 
  1252  008C                     	;# 
  1253  008E                     	;# 
  1254  0090                     	;# 
  1255  0091                     	;# 
  1256  0092                     	;# 
  1257  0093                     	;# 
  1258  0094                     	;# 
  1259  0097                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  009F                     	;# 
  1266  010C                     	;# 
  1267  010E                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0117                     	;# 
  1275  0118                     	;# 
  1276  0119                     	;# 
  1277  018C                     	;# 
  1278  018E                     	;# 
  1279  0197                     	;# 
  1280  0199                     	;# 
  1281  0199                     	;# 
  1282  0199                     	;# 
  1283  019A                     	;# 
  1284  019A                     	;# 
  1285  019A                     	;# 
  1286  019B                     	;# 
  1287  019B                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019C                     	;# 
  1292  019C                     	;# 
  1293  019C                     	;# 
  1294  019D                     	;# 
  1295  019D                     	;# 
  1296  019D                     	;# 
  1297  019E                     	;# 
  1298  019E                     	;# 
  1299  019E                     	;# 
  1300  019F                     	;# 
  1301  019F                     	;# 
  1302  019F                     	;# 
  1303  019F                     	;# 
  1304  019F                     	;# 
  1305  020C                     	;# 
  1306  020E                     	;# 
  1307  0211                     	;# 
  1308  0211                     	;# 
  1309  0212                     	;# 
  1310  0212                     	;# 
  1311  0213                     	;# 
  1312  0213                     	;# 
  1313  0214                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0215                     	;# 
  1318  0215                     	;# 
  1319  0216                     	;# 
  1320  0216                     	;# 
  1321  0217                     	;# 
  1322  0217                     	;# 
  1323  0219                     	;# 
  1324  021A                     	;# 
  1325  021B                     	;# 
  1326  021C                     	;# 
  1327  021D                     	;# 
  1328  021D                     	;# 
  1329  021E                     	;# 
  1330  021F                     	;# 
  1331  028C                     	;# 
  1332  028E                     	;# 
  1333  0291                     	;# 
  1334  0291                     	;# 
  1335  0292                     	;# 
  1336  0293                     	;# 
  1337  0294                     	;# 
  1338  0295                     	;# 
  1339  0295                     	;# 
  1340  0296                     	;# 
  1341  0297                     	;# 
  1342  0298                     	;# 
  1343  029F                     	;# 
  1344  030C                     	;# 
  1345  030E                     	;# 
  1346  0311                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0314                     	;# 
  1351  0315                     	;# 
  1352  0315                     	;# 
  1353  0316                     	;# 
  1354  0317                     	;# 
  1355  0318                     	;# 
  1356  038C                     	;# 
  1357  038E                     	;# 
  1358  0391                     	;# 
  1359  0392                     	;# 
  1360  0393                     	;# 
  1361  0397                     	;# 
  1362  0398                     	;# 
  1363  0399                     	;# 
  1364  039A                     	;# 
  1365  039C                     	;# 
  1366  039D                     	;# 
  1367  039E                     	;# 
  1368  039F                     	;# 
  1369  0411                     	;# 
  1370  0411                     	;# 
  1371  0412                     	;# 
  1372  0413                     	;# 
  1373  0414                     	;# 
  1374  0415                     	;# 
  1375  0416                     	;# 
  1376  0417                     	;# 
  1377  0418                     	;# 
  1378  0418                     	;# 
  1379  0419                     	;# 
  1380  041A                     	;# 
  1381  041B                     	;# 
  1382  041C                     	;# 
  1383  041D                     	;# 
  1384  041E                     	;# 
  1385  041F                     	;# 
  1386  0498                     	;# 
  1387  0498                     	;# 
  1388  0499                     	;# 
  1389  049A                     	;# 
  1390  049B                     	;# 
  1391  049B                     	;# 
  1392  049C                     	;# 
  1393  049D                     	;# 
  1394  049E                     	;# 
  1395  049F                     	;# 
  1396  0617                     	;# 
  1397  0618                     	;# 
  1398  0619                     	;# 
  1399  0619                     	;# 
  1400  061A                     	;# 
  1401  061B                     	;# 
  1402  061C                     	;# 
  1403  061C                     	;# 
  1404  061F                     	;# 
  1405  0691                     	;# 
  1406  0692                     	;# 
  1407  0693                     	;# 
  1408  0694                     	;# 
  1409  0695                     	;# 
  1410  0696                     	;# 
  1411  0697                     	;# 
  1412  0698                     	;# 
  1413  0699                     	;# 
  1414  0711                     	;# 
  1415  0712                     	;# 
  1416  0713                     	;# 
  1417  0714                     	;# 
  1418  0715                     	;# 
  1419  0716                     	;# 
  1420  0717                     	;# 
  1421  0718                     	;# 
  1422  0719                     	;# 
  1423  0891                     	;# 
  1424  0891                     	;# 
  1425  0891                     	;# 
  1426  0891                     	;# 
  1427  0891                     	;# 
  1428  0891                     	;# 
  1429  0892                     	;# 
  1430  0892                     	;# 
  1431  0892                     	;# 
  1432  0893                     	;# 
  1433  0893                     	;# 
  1434  0893                     	;# 
  1435  0893                     	;# 
  1436  0893                     	;# 
  1437  0893                     	;# 
  1438  0894                     	;# 
  1439  0894                     	;# 
  1440  0894                     	;# 
  1441  0895                     	;# 
  1442  0895                     	;# 
  1443  0895                     	;# 
  1444  0896                     	;# 
  1445  0896                     	;# 
  1446  0896                     	;# 
  1447  089B                     	;# 
  1448  0911                     	;# 
  1449  0912                     	;# 
  1450  0913                     	;# 
  1451  0914                     	;# 
  1452  0915                     	;# 
  1453  0916                     	;# 
  1454  0918                     	;# 
  1455  0919                     	;# 
  1456  091A                     	;# 
  1457  091B                     	;# 
  1458  091C                     	;# 
  1459  091D                     	;# 
  1460  091E                     	;# 
  1461  091F                     	;# 
  1462  0E0F                     	;# 
  1463  0E10                     	;# 
  1464  0E11                     	;# 
  1465  0E12                     	;# 
  1466  0E13                     	;# 
  1467  0E14                     	;# 
  1468  0E15                     	;# 
  1469  0E16                     	;# 
  1470  0E17                     	;# 
  1471  0E18                     	;# 
  1472  0E19                     	;# 
  1473  0E1A                     	;# 
  1474  0E1B                     	;# 
  1475  0E1C                     	;# 
  1476  0E1D                     	;# 
  1477  0E1E                     	;# 
  1478  0E1F                     	;# 
  1479  0E20                     	;# 
  1480  0E21                     	;# 
  1481  0E22                     	;# 
  1482  0E24                     	;# 
  1483  0E25                     	;# 
  1484  0E28                     	;# 
  1485  0E29                     	;# 
  1486  0E2A                     	;# 
  1487  0E2B                     	;# 
  1488  0E2C                     	;# 
  1489  0E2D                     	;# 
  1490  0E2E                     	;# 
  1491  0E2F                     	;# 
  1492  0E90                     	;# 
  1493  0E91                     	;# 
  1494  0E92                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0EA0                     	;# 
  1498  0EA1                     	;# 
  1499  0EA2                     	;# 
  1500  0EA3                     	;# 
  1501  0EA4                     	;# 
  1502  0EA5                     	;# 
  1503  0F0F                     	;# 
  1504  0F10                     	;# 
  1505  0F11                     	;# 
  1506  0F12                     	;# 
  1507  0F13                     	;# 
  1508  0F14                     	;# 
  1509  0F15                     	;# 
  1510  0F16                     	;# 
  1511  0F17                     	;# 
  1512  0F18                     	;# 
  1513  0F19                     	;# 
  1514  0F1A                     	;# 
  1515  0F1B                     	;# 
  1516  0F1C                     	;# 
  1517  0F1D                     	;# 
  1518  0F1E                     	;# 
  1519  0F1F                     	;# 
  1520  0F20                     	;# 
  1521  0F21                     	;# 
  1522  0F22                     	;# 
  1523  0F23                     	;# 
  1524  0F24                     	;# 
  1525  0F25                     	;# 
  1526  0F26                     	;# 
  1527  0F27                     	;# 
  1528  0F28                     	;# 
  1529  0F29                     	;# 
  1530  0F2A                     	;# 
  1531  0F2B                     	;# 
  1532  0F2C                     	;# 
  1533  0F2D                     	;# 
  1534  0F2E                     	;# 
  1535  0F2F                     	;# 
  1536  0F30                     	;# 
  1537  0F31                     	;# 
  1538  0F32                     	;# 
  1539  0F33                     	;# 
  1540  0F34                     	;# 
  1541  0F35                     	;# 
  1542  0F36                     	;# 
  1543  0F37                     	;# 
  1544  0FE4                     	;# 
  1545  0FE5                     	;# 
  1546  0FE6                     	;# 
  1547  0FE7                     	;# 
  1548  0FE8                     	;# 
  1549  0FE9                     	;# 
  1550  0FEA                     	;# 
  1551  0FEB                     	;# 
  1552  0FED                     	;# 
  1553  0FEE                     	;# 
  1554  0FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000E                     	;# 
  1569  0010                     	;# 
  1570  0011                     	;# 
  1571  0012                     	;# 
  1572  0013                     	;# 
  1573  0014                     	;# 
  1574  0015                     	;# 
  1575  0015                     	;# 
  1576  0016                     	;# 
  1577  0016                     	;# 
  1578  0017                     	;# 
  1579  0018                     	;# 
  1580  0019                     	;# 
  1581  0019                     	;# 
  1582  001A                     	;# 
  1583  001B                     	;# 
  1584  001C                     	;# 
  1585  001D                     	;# 
  1586  001E                     	;# 
  1587  001F                     	;# 
  1588  008C                     	;# 
  1589  008E                     	;# 
  1590  0090                     	;# 
  1591  0091                     	;# 
  1592  0092                     	;# 
  1593  0093                     	;# 
  1594  0094                     	;# 
  1595  0097                     	;# 
  1596  009B                     	;# 
  1597  009B                     	;# 
  1598  009C                     	;# 
  1599  009D                     	;# 
  1600  009E                     	;# 
  1601  009F                     	;# 
  1602  010C                     	;# 
  1603  010E                     	;# 
  1604  0111                     	;# 
  1605  0112                     	;# 
  1606  0113                     	;# 
  1607  0114                     	;# 
  1608  0115                     	;# 
  1609  0116                     	;# 
  1610  0117                     	;# 
  1611  0118                     	;# 
  1612  0119                     	;# 
  1613  018C                     	;# 
  1614  018E                     	;# 
  1615  0197                     	;# 
  1616  0199                     	;# 
  1617  0199                     	;# 
  1618  0199                     	;# 
  1619  019A                     	;# 
  1620  019A                     	;# 
  1621  019A                     	;# 
  1622  019B                     	;# 
  1623  019B                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019C                     	;# 
  1628  019C                     	;# 
  1629  019C                     	;# 
  1630  019D                     	;# 
  1631  019D                     	;# 
  1632  019D                     	;# 
  1633  019E                     	;# 
  1634  019E                     	;# 
  1635  019E                     	;# 
  1636  019F                     	;# 
  1637  019F                     	;# 
  1638  019F                     	;# 
  1639  019F                     	;# 
  1640  019F                     	;# 
  1641  020C                     	;# 
  1642  020E                     	;# 
  1643  0211                     	;# 
  1644  0211                     	;# 
  1645  0212                     	;# 
  1646  0212                     	;# 
  1647  0213                     	;# 
  1648  0213                     	;# 
  1649  0214                     	;# 
  1650  0214                     	;# 
  1651  0215                     	;# 
  1652  0215                     	;# 
  1653  0215                     	;# 
  1654  0215                     	;# 
  1655  0216                     	;# 
  1656  0216                     	;# 
  1657  0217                     	;# 
  1658  0217                     	;# 
  1659  0219                     	;# 
  1660  021A                     	;# 
  1661  021B                     	;# 
  1662  021C                     	;# 
  1663  021D                     	;# 
  1664  021D                     	;# 
  1665  021E                     	;# 
  1666  021F                     	;# 
  1667  028C                     	;# 
  1668  028E                     	;# 
  1669  0291                     	;# 
  1670  0291                     	;# 
  1671  0292                     	;# 
  1672  0293                     	;# 
  1673  0294                     	;# 
  1674  0295                     	;# 
  1675  0295                     	;# 
  1676  0296                     	;# 
  1677  0297                     	;# 
  1678  0298                     	;# 
  1679  029F                     	;# 
  1680  030C                     	;# 
  1681  030E                     	;# 
  1682  0311                     	;# 
  1683  0311                     	;# 
  1684  0312                     	;# 
  1685  0313                     	;# 
  1686  0314                     	;# 
  1687  0315                     	;# 
  1688  0315                     	;# 
  1689  0316                     	;# 
  1690  0317                     	;# 
  1691  0318                     	;# 
  1692  038C                     	;# 
  1693  038E                     	;# 
  1694  0391                     	;# 
  1695  0392                     	;# 
  1696  0393                     	;# 
  1697  0397                     	;# 
  1698  0398                     	;# 
  1699  0399                     	;# 
  1700  039A                     	;# 
  1701  039C                     	;# 
  1702  039D                     	;# 
  1703  039E                     	;# 
  1704  039F                     	;# 
  1705  0411                     	;# 
  1706  0411                     	;# 
  1707  0412                     	;# 
  1708  0413                     	;# 
  1709  0414                     	;# 
  1710  0415                     	;# 
  1711  0416                     	;# 
  1712  0417                     	;# 
  1713  0418                     	;# 
  1714  0418                     	;# 
  1715  0419                     	;# 
  1716  041A                     	;# 
  1717  041B                     	;# 
  1718  041C                     	;# 
  1719  041D                     	;# 
  1720  041E                     	;# 
  1721  041F                     	;# 
  1722  0498                     	;# 
  1723  0498                     	;# 
  1724  0499                     	;# 
  1725  049A                     	;# 
  1726  049B                     	;# 
  1727  049B                     	;# 
  1728  049C                     	;# 
  1729  049D                     	;# 
  1730  049E                     	;# 
  1731  049F                     	;# 
  1732  0617                     	;# 
  1733  0618                     	;# 
  1734  0619                     	;# 
  1735  0619                     	;# 
  1736  061A                     	;# 
  1737  061B                     	;# 
  1738  061C                     	;# 
  1739  061C                     	;# 
  1740  061F                     	;# 
  1741  0691                     	;# 
  1742  0692                     	;# 
  1743  0693                     	;# 
  1744  0694                     	;# 
  1745  0695                     	;# 
  1746  0696                     	;# 
  1747  0697                     	;# 
  1748  0698                     	;# 
  1749  0699                     	;# 
  1750  0711                     	;# 
  1751  0712                     	;# 
  1752  0713                     	;# 
  1753  0714                     	;# 
  1754  0715                     	;# 
  1755  0716                     	;# 
  1756  0717                     	;# 
  1757  0718                     	;# 
  1758  0719                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0891                     	;# 
  1765  0892                     	;# 
  1766  0892                     	;# 
  1767  0892                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0893                     	;# 
  1774  0894                     	;# 
  1775  0894                     	;# 
  1776  0894                     	;# 
  1777  0895                     	;# 
  1778  0895                     	;# 
  1779  0895                     	;# 
  1780  0896                     	;# 
  1781  0896                     	;# 
  1782  0896                     	;# 
  1783  089B                     	;# 
  1784  0911                     	;# 
  1785  0912                     	;# 
  1786  0913                     	;# 
  1787  0914                     	;# 
  1788  0915                     	;# 
  1789  0916                     	;# 
  1790  0918                     	;# 
  1791  0919                     	;# 
  1792  091A                     	;# 
  1793  091B                     	;# 
  1794  091C                     	;# 
  1795  091D                     	;# 
  1796  091E                     	;# 
  1797  091F                     	;# 
  1798  0E0F                     	;# 
  1799  0E10                     	;# 
  1800  0E11                     	;# 
  1801  0E12                     	;# 
  1802  0E13                     	;# 
  1803  0E14                     	;# 
  1804  0E15                     	;# 
  1805  0E16                     	;# 
  1806  0E17                     	;# 
  1807  0E18                     	;# 
  1808  0E19                     	;# 
  1809  0E1A                     	;# 
  1810  0E1B                     	;# 
  1811  0E1C                     	;# 
  1812  0E1D                     	;# 
  1813  0E1E                     	;# 
  1814  0E1F                     	;# 
  1815  0E20                     	;# 
  1816  0E21                     	;# 
  1817  0E22                     	;# 
  1818  0E24                     	;# 
  1819  0E25                     	;# 
  1820  0E28                     	;# 
  1821  0E29                     	;# 
  1822  0E2A                     	;# 
  1823  0E2B                     	;# 
  1824  0E2C                     	;# 
  1825  0E2D                     	;# 
  1826  0E2E                     	;# 
  1827  0E2F                     	;# 
  1828  0E90                     	;# 
  1829  0E91                     	;# 
  1830  0E92                     	;# 
  1831  0E94                     	;# 
  1832  0E95                     	;# 
  1833  0EA0                     	;# 
  1834  0EA1                     	;# 
  1835  0EA2                     	;# 
  1836  0EA3                     	;# 
  1837  0EA4                     	;# 
  1838  0EA5                     	;# 
  1839  0F0F                     	;# 
  1840  0F10                     	;# 
  1841  0F11                     	;# 
  1842  0F12                     	;# 
  1843  0F13                     	;# 
  1844  0F14                     	;# 
  1845  0F15                     	;# 
  1846  0F16                     	;# 
  1847  0F17                     	;# 
  1848  0F18                     	;# 
  1849  0F19                     	;# 
  1850  0F1A                     	;# 
  1851  0F1B                     	;# 
  1852  0F1C                     	;# 
  1853  0F1D                     	;# 
  1854  0F1E                     	;# 
  1855  0F1F                     	;# 
  1856  0F20                     	;# 
  1857  0F21                     	;# 
  1858  0F22                     	;# 
  1859  0F23                     	;# 
  1860  0F24                     	;# 
  1861  0F25                     	;# 
  1862  0F26                     	;# 
  1863  0F27                     	;# 
  1864  0F28                     	;# 
  1865  0F29                     	;# 
  1866  0F2A                     	;# 
  1867  0F2B                     	;# 
  1868  0F2C                     	;# 
  1869  0F2D                     	;# 
  1870  0F2E                     	;# 
  1871  0F2F                     	;# 
  1872  0F30                     	;# 
  1873  0F31                     	;# 
  1874  0F32                     	;# 
  1875  0F33                     	;# 
  1876  0F34                     	;# 
  1877  0F35                     	;# 
  1878  0F36                     	;# 
  1879  0F37                     	;# 
  1880  0FE4                     	;# 
  1881  0FE5                     	;# 
  1882  0FE6                     	;# 
  1883  0FE7                     	;# 
  1884  0FE8                     	;# 
  1885  0FE9                     	;# 
  1886  0FEA                     	;# 
  1887  0FEB                     	;# 
  1888  0FED                     	;# 
  1889  0FEE                     	;# 
  1890  0FEF                     	;# 
  1891  0000                     	;# 
  1892  0001                     	;# 
  1893  0002                     	;# 
  1894  0003                     	;# 
  1895  0004                     	;# 
  1896  0005                     	;# 
  1897  0006                     	;# 
  1898  0007                     	;# 
  1899  0008                     	;# 
  1900  0009                     	;# 
  1901  000A                     	;# 
  1902  000B                     	;# 
  1903  000C                     	;# 
  1904  000E                     	;# 
  1905  0010                     	;# 
  1906  0011                     	;# 
  1907  0012                     	;# 
  1908  0013                     	;# 
  1909  0014                     	;# 
  1910  0015                     	;# 
  1911  0015                     	;# 
  1912  0016                     	;# 
  1913  0016                     	;# 
  1914  0017                     	;# 
  1915  0018                     	;# 
  1916  0019                     	;# 
  1917  0019                     	;# 
  1918  001A                     	;# 
  1919  001B                     	;# 
  1920  001C                     	;# 
  1921  001D                     	;# 
  1922  001E                     	;# 
  1923  001F                     	;# 
  1924  008C                     	;# 
  1925  008E                     	;# 
  1926  0090                     	;# 
  1927  0091                     	;# 
  1928  0092                     	;# 
  1929  0093                     	;# 
  1930  0094                     	;# 
  1931  0097                     	;# 
  1932  009B                     	;# 
  1933  009B                     	;# 
  1934  009C                     	;# 
  1935  009D                     	;# 
  1936  009E                     	;# 
  1937  009F                     	;# 
  1938  010C                     	;# 
  1939  010E                     	;# 
  1940  0111                     	;# 
  1941  0112                     	;# 
  1942  0113                     	;# 
  1943  0114                     	;# 
  1944  0115                     	;# 
  1945  0116                     	;# 
  1946  0117                     	;# 
  1947  0118                     	;# 
  1948  0119                     	;# 
  1949  018C                     	;# 
  1950  018E                     	;# 
  1951  0197                     	;# 
  1952  0199                     	;# 
  1953  0199                     	;# 
  1954  0199                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019A                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019C                     	;# 
  1964  019C                     	;# 
  1965  019C                     	;# 
  1966  019D                     	;# 
  1967  019D                     	;# 
  1968  019D                     	;# 
  1969  019E                     	;# 
  1970  019E                     	;# 
  1971  019E                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  019F                     	;# 
  1977  020C                     	;# 
  1978  020E                     	;# 
  1979  0211                     	;# 
  1980  0211                     	;# 
  1981  0212                     	;# 
  1982  0212                     	;# 
  1983  0213                     	;# 
  1984  0213                     	;# 
  1985  0214                     	;# 
  1986  0214                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0216                     	;# 
  1992  0216                     	;# 
  1993  0217                     	;# 
  1994  0217                     	;# 
  1995  0219                     	;# 
  1996  021A                     	;# 
  1997  021B                     	;# 
  1998  021C                     	;# 
  1999  021D                     	;# 
  2000  021D                     	;# 
  2001  021E                     	;# 
  2002  021F                     	;# 
  2003  028C                     	;# 
  2004  028E                     	;# 
  2005  0291                     	;# 
  2006  0291                     	;# 
  2007  0292                     	;# 
  2008  0293                     	;# 
  2009  0294                     	;# 
  2010  0295                     	;# 
  2011  0295                     	;# 
  2012  0296                     	;# 
  2013  0297                     	;# 
  2014  0298                     	;# 
  2015  029F                     	;# 
  2016  030C                     	;# 
  2017  030E                     	;# 
  2018  0311                     	;# 
  2019  0311                     	;# 
  2020  0312                     	;# 
  2021  0313                     	;# 
  2022  0314                     	;# 
  2023  0315                     	;# 
  2024  0315                     	;# 
  2025  0316                     	;# 
  2026  0317                     	;# 
  2027  0318                     	;# 
  2028  038C                     	;# 
  2029  038E                     	;# 
  2030  0391                     	;# 
  2031  0392                     	;# 
  2032  0393                     	;# 
  2033  0397                     	;# 
  2034  0398                     	;# 
  2035  0399                     	;# 
  2036  039A                     	;# 
  2037  039C                     	;# 
  2038  039D                     	;# 
  2039  039E                     	;# 
  2040  039F                     	;# 
  2041  0411                     	;# 
  2042  0411                     	;# 
  2043  0412                     	;# 
  2044  0413                     	;# 
  2045  0414                     	;# 
  2046  0415                     	;# 
  2047  0416                     	;# 
  2048  0417                     	;# 
  2049  0418                     	;# 
  2050  0418                     	;# 
  2051  0419                     	;# 
  2052  041A                     	;# 
  2053  041B                     	;# 
  2054  041C                     	;# 
  2055  041D                     	;# 
  2056  041E                     	;# 
  2057  041F                     	;# 
  2058  0498                     	;# 
  2059  0498                     	;# 
  2060  0499                     	;# 
  2061  049A                     	;# 
  2062  049B                     	;# 
  2063  049B                     	;# 
  2064  049C                     	;# 
  2065  049D                     	;# 
  2066  049E                     	;# 
  2067  049F                     	;# 
  2068  0617                     	;# 
  2069  0618                     	;# 
  2070  0619                     	;# 
  2071  0619                     	;# 
  2072  061A                     	;# 
  2073  061B                     	;# 
  2074  061C                     	;# 
  2075  061C                     	;# 
  2076  061F                     	;# 
  2077  0691                     	;# 
  2078  0692                     	;# 
  2079  0693                     	;# 
  2080  0694                     	;# 
  2081  0695                     	;# 
  2082  0696                     	;# 
  2083  0697                     	;# 
  2084  0698                     	;# 
  2085  0699                     	;# 
  2086  0711                     	;# 
  2087  0712                     	;# 
  2088  0713                     	;# 
  2089  0714                     	;# 
  2090  0715                     	;# 
  2091  0716                     	;# 
  2092  0717                     	;# 
  2093  0718                     	;# 
  2094  0719                     	;# 
  2095  0891                     	;# 
  2096  0891                     	;# 
  2097  0891                     	;# 
  2098  0891                     	;# 
  2099  0891                     	;# 
  2100  0891                     	;# 
  2101  0892                     	;# 
  2102  0892                     	;# 
  2103  0892                     	;# 
  2104  0893                     	;# 
  2105  0893                     	;# 
  2106  0893                     	;# 
  2107  0893                     	;# 
  2108  0893                     	;# 
  2109  0893                     	;# 
  2110  0894                     	;# 
  2111  0894                     	;# 
  2112  0894                     	;# 
  2113  0895                     	;# 
  2114  0895                     	;# 
  2115  0895                     	;# 
  2116  0896                     	;# 
  2117  0896                     	;# 
  2118  0896                     	;# 
  2119  089B                     	;# 
  2120  0911                     	;# 
  2121  0912                     	;# 
  2122  0913                     	;# 
  2123  0914                     	;# 
  2124  0915                     	;# 
  2125  0916                     	;# 
  2126  0918                     	;# 
  2127  0919                     	;# 
  2128  091A                     	;# 
  2129  091B                     	;# 
  2130  091C                     	;# 
  2131  091D                     	;# 
  2132  091E                     	;# 
  2133  091F                     	;# 
  2134  0E0F                     	;# 
  2135  0E10                     	;# 
  2136  0E11                     	;# 
  2137  0E12                     	;# 
  2138  0E13                     	;# 
  2139  0E14                     	;# 
  2140  0E15                     	;# 
  2141  0E16                     	;# 
  2142  0E17                     	;# 
  2143  0E18                     	;# 
  2144  0E19                     	;# 
  2145  0E1A                     	;# 
  2146  0E1B                     	;# 
  2147  0E1C                     	;# 
  2148  0E1D                     	;# 
  2149  0E1E                     	;# 
  2150  0E1F                     	;# 
  2151  0E20                     	;# 
  2152  0E21                     	;# 
  2153  0E22                     	;# 
  2154  0E24                     	;# 
  2155  0E25                     	;# 
  2156  0E28                     	;# 
  2157  0E29                     	;# 
  2158  0E2A                     	;# 
  2159  0E2B                     	;# 
  2160  0E2C                     	;# 
  2161  0E2D                     	;# 
  2162  0E2E                     	;# 
  2163  0E2F                     	;# 
  2164  0E90                     	;# 
  2165  0E91                     	;# 
  2166  0E92                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0EA0                     	;# 
  2170  0EA1                     	;# 
  2171  0EA2                     	;# 
  2172  0EA3                     	;# 
  2173  0EA4                     	;# 
  2174  0EA5                     	;# 
  2175  0F0F                     	;# 
  2176  0F10                     	;# 
  2177  0F11                     	;# 
  2178  0F12                     	;# 
  2179  0F13                     	;# 
  2180  0F14                     	;# 
  2181  0F15                     	;# 
  2182  0F16                     	;# 
  2183  0F17                     	;# 
  2184  0F18                     	;# 
  2185  0F19                     	;# 
  2186  0F1A                     	;# 
  2187  0F1B                     	;# 
  2188  0F1C                     	;# 
  2189  0F1D                     	;# 
  2190  0F1E                     	;# 
  2191  0F1F                     	;# 
  2192  0F20                     	;# 
  2193  0F21                     	;# 
  2194  0F22                     	;# 
  2195  0F23                     	;# 
  2196  0F24                     	;# 
  2197  0F25                     	;# 
  2198  0F26                     	;# 
  2199  0F27                     	;# 
  2200  0F28                     	;# 
  2201  0F29                     	;# 
  2202  0F2A                     	;# 
  2203  0F2B                     	;# 
  2204  0F2C                     	;# 
  2205  0F2D                     	;# 
  2206  0F2E                     	;# 
  2207  0F2F                     	;# 
  2208  0F30                     	;# 
  2209  0F31                     	;# 
  2210  0F32                     	;# 
  2211  0F33                     	;# 
  2212  0F34                     	;# 
  2213  0F35                     	;# 
  2214  0F36                     	;# 
  2215  0F37                     	;# 
  2216  0FE4                     	;# 
  2217  0FE5                     	;# 
  2218  0FE6                     	;# 
  2219  0FE7                     	;# 
  2220  0FE8                     	;# 
  2221  0FE9                     	;# 
  2222  0FEA                     	;# 
  2223  0FEB                     	;# 
  2224  0FED                     	;# 
  2225  0FEE                     	;# 
  2226  0FEF                     	;# 
  2227  0000                     	;# 
  2228  0001                     	;# 
  2229  0002                     	;# 
  2230  0003                     	;# 
  2231  0004                     	;# 
  2232  0005                     	;# 
  2233  0006                     	;# 
  2234  0007                     	;# 
  2235  0008                     	;# 
  2236  0009                     	;# 
  2237  000A                     	;# 
  2238  000B                     	;# 
  2239  000C                     	;# 
  2240  000E                     	;# 
  2241  0010                     	;# 
  2242  0011                     	;# 
  2243  0012                     	;# 
  2244  0013                     	;# 
  2245  0014                     	;# 
  2246  0015                     	;# 
  2247  0015                     	;# 
  2248  0016                     	;# 
  2249  0016                     	;# 
  2250  0017                     	;# 
  2251  0018                     	;# 
  2252  0019                     	;# 
  2253  0019                     	;# 
  2254  001A                     	;# 
  2255  001B                     	;# 
  2256  001C                     	;# 
  2257  001D                     	;# 
  2258  001E                     	;# 
  2259  001F                     	;# 
  2260  008C                     	;# 
  2261  008E                     	;# 
  2262  0090                     	;# 
  2263  0091                     	;# 
  2264  0092                     	;# 
  2265  0093                     	;# 
  2266  0094                     	;# 
  2267  0097                     	;# 
  2268  009B                     	;# 
  2269  009B                     	;# 
  2270  009C                     	;# 
  2271  009D                     	;# 
  2272  009E                     	;# 
  2273  009F                     	;# 
  2274  010C                     	;# 
  2275  010E                     	;# 
  2276  0111                     	;# 
  2277  0112                     	;# 
  2278  0113                     	;# 
  2279  0114                     	;# 
  2280  0115                     	;# 
  2281  0116                     	;# 
  2282  0117                     	;# 
  2283  0118                     	;# 
  2284  0119                     	;# 
  2285  018C                     	;# 
  2286  018E                     	;# 
  2287  0197                     	;# 
  2288  0199                     	;# 
  2289  0199                     	;# 
  2290  0199                     	;# 
  2291  019A                     	;# 
  2292  019A                     	;# 
  2293  019A                     	;# 
  2294  019B                     	;# 
  2295  019B                     	;# 
  2296  019B                     	;# 
  2297  019B                     	;# 
  2298  019B                     	;# 
  2299  019C                     	;# 
  2300  019C                     	;# 
  2301  019C                     	;# 
  2302  019D                     	;# 
  2303  019D                     	;# 
  2304  019D                     	;# 
  2305  019E                     	;# 
  2306  019E                     	;# 
  2307  019E                     	;# 
  2308  019F                     	;# 
  2309  019F                     	;# 
  2310  019F                     	;# 
  2311  019F                     	;# 
  2312  019F                     	;# 
  2313  020C                     	;# 
  2314  020E                     	;# 
  2315  0211                     	;# 
  2316  0211                     	;# 
  2317  0212                     	;# 
  2318  0212                     	;# 
  2319  0213                     	;# 
  2320  0213                     	;# 
  2321  0214                     	;# 
  2322  0214                     	;# 
  2323  0215                     	;# 
  2324  0215                     	;# 
  2325  0215                     	;# 
  2326  0215                     	;# 
  2327  0216                     	;# 
  2328  0216                     	;# 
  2329  0217                     	;# 
  2330  0217                     	;# 
  2331  0219                     	;# 
  2332  021A                     	;# 
  2333  021B                     	;# 
  2334  021C                     	;# 
  2335  021D                     	;# 
  2336  021D                     	;# 
  2337  021E                     	;# 
  2338  021F                     	;# 
  2339  028C                     	;# 
  2340  028E                     	;# 
  2341  0291                     	;# 
  2342  0291                     	;# 
  2343  0292                     	;# 
  2344  0293                     	;# 
  2345  0294                     	;# 
  2346  0295                     	;# 
  2347  0295                     	;# 
  2348  0296                     	;# 
  2349  0297                     	;# 
  2350  0298                     	;# 
  2351  029F                     	;# 
  2352  030C                     	;# 
  2353  030E                     	;# 
  2354  0311                     	;# 
  2355  0311                     	;# 
  2356  0312                     	;# 
  2357  0313                     	;# 
  2358  0314                     	;# 
  2359  0315                     	;# 
  2360  0315                     	;# 
  2361  0316                     	;# 
  2362  0317                     	;# 
  2363  0318                     	;# 
  2364  038C                     	;# 
  2365  038E                     	;# 
  2366  0391                     	;# 
  2367  0392                     	;# 
  2368  0393                     	;# 
  2369  0397                     	;# 
  2370  0398                     	;# 
  2371  0399                     	;# 
  2372  039A                     	;# 
  2373  039C                     	;# 
  2374  039D                     	;# 
  2375  039E                     	;# 
  2376  039F                     	;# 
  2377  0411                     	;# 
  2378  0411                     	;# 
  2379  0412                     	;# 
  2380  0413                     	;# 
  2381  0414                     	;# 
  2382  0415                     	;# 
  2383  0416                     	;# 
  2384  0417                     	;# 
  2385  0418                     	;# 
  2386  0418                     	;# 
  2387  0419                     	;# 
  2388  041A                     	;# 
  2389  041B                     	;# 
  2390  041C                     	;# 
  2391  041D                     	;# 
  2392  041E                     	;# 
  2393  041F                     	;# 
  2394  0498                     	;# 
  2395  0498                     	;# 
  2396  0499                     	;# 
  2397  049A                     	;# 
  2398  049B                     	;# 
  2399  049B                     	;# 
  2400  049C                     	;# 
  2401  049D                     	;# 
  2402  049E                     	;# 
  2403  049F                     	;# 
  2404  0617                     	;# 
  2405  0618                     	;# 
  2406  0619                     	;# 
  2407  0619                     	;# 
  2408  061A                     	;# 
  2409  061B                     	;# 
  2410  061C                     	;# 
  2411  061C                     	;# 
  2412  061F                     	;# 
  2413  0691                     	;# 
  2414  0692                     	;# 
  2415  0693                     	;# 
  2416  0694                     	;# 
  2417  0695                     	;# 
  2418  0696                     	;# 
  2419  0697                     	;# 
  2420  0698                     	;# 
  2421  0699                     	;# 
  2422  0711                     	;# 
  2423  0712                     	;# 
  2424  0713                     	;# 
  2425  0714                     	;# 
  2426  0715                     	;# 
  2427  0716                     	;# 
  2428  0717                     	;# 
  2429  0718                     	;# 
  2430  0719                     	;# 
  2431  0891                     	;# 
  2432  0891                     	;# 
  2433  0891                     	;# 
  2434  0891                     	;# 
  2435  0891                     	;# 
  2436  0891                     	;# 
  2437  0892                     	;# 
  2438  0892                     	;# 
  2439  0892                     	;# 
  2440  0893                     	;# 
  2441  0893                     	;# 
  2442  0893                     	;# 
  2443  0893                     	;# 
  2444  0893                     	;# 
  2445  0893                     	;# 
  2446  0894                     	;# 
  2447  0894                     	;# 
  2448  0894                     	;# 
  2449  0895                     	;# 
  2450  0895                     	;# 
  2451  0895                     	;# 
  2452  0896                     	;# 
  2453  0896                     	;# 
  2454  0896                     	;# 
  2455  089B                     	;# 
  2456  0911                     	;# 
  2457  0912                     	;# 
  2458  0913                     	;# 
  2459  0914                     	;# 
  2460  0915                     	;# 
  2461  0916                     	;# 
  2462  0918                     	;# 
  2463  0919                     	;# 
  2464  091A                     	;# 
  2465  091B                     	;# 
  2466  091C                     	;# 
  2467  091D                     	;# 
  2468  091E                     	;# 
  2469  091F                     	;# 
  2470  0E0F                     	;# 
  2471  0E10                     	;# 
  2472  0E11                     	;# 
  2473  0E12                     	;# 
  2474  0E13                     	;# 
  2475  0E14                     	;# 
  2476  0E15                     	;# 
  2477  0E16                     	;# 
  2478  0E17                     	;# 
  2479  0E18                     	;# 
  2480  0E19                     	;# 
  2481  0E1A                     	;# 
  2482  0E1B                     	;# 
  2483  0E1C                     	;# 
  2484  0E1D                     	;# 
  2485  0E1E                     	;# 
  2486  0E1F                     	;# 
  2487  0E20                     	;# 
  2488  0E21                     	;# 
  2489  0E22                     	;# 
  2490  0E24                     	;# 
  2491  0E25                     	;# 
  2492  0E28                     	;# 
  2493  0E29                     	;# 
  2494  0E2A                     	;# 
  2495  0E2B                     	;# 
  2496  0E2C                     	;# 
  2497  0E2D                     	;# 
  2498  0E2E                     	;# 
  2499  0E2F                     	;# 
  2500  0E90                     	;# 
  2501  0E91                     	;# 
  2502  0E92                     	;# 
  2503  0E94                     	;# 
  2504  0E95                     	;# 
  2505  0EA0                     	;# 
  2506  0EA1                     	;# 
  2507  0EA2                     	;# 
  2508  0EA3                     	;# 
  2509  0EA4                     	;# 
  2510  0EA5                     	;# 
  2511  0F0F                     	;# 
  2512  0F10                     	;# 
  2513  0F11                     	;# 
  2514  0F12                     	;# 
  2515  0F13                     	;# 
  2516  0F14                     	;# 
  2517  0F15                     	;# 
  2518  0F16                     	;# 
  2519  0F17                     	;# 
  2520  0F18                     	;# 
  2521  0F19                     	;# 
  2522  0F1A                     	;# 
  2523  0F1B                     	;# 
  2524  0F1C                     	;# 
  2525  0F1D                     	;# 
  2526  0F1E                     	;# 
  2527  0F1F                     	;# 
  2528  0F20                     	;# 
  2529  0F21                     	;# 
  2530  0F22                     	;# 
  2531  0F23                     	;# 
  2532  0F24                     	;# 
  2533  0F25                     	;# 
  2534  0F26                     	;# 
  2535  0F27                     	;# 
  2536  0F28                     	;# 
  2537  0F29                     	;# 
  2538  0F2A                     	;# 
  2539  0F2B                     	;# 
  2540  0F2C                     	;# 
  2541  0F2D                     	;# 
  2542  0F2E                     	;# 
  2543  0F2F                     	;# 
  2544  0F30                     	;# 
  2545  0F31                     	;# 
  2546  0F32                     	;# 
  2547  0F33                     	;# 
  2548  0F34                     	;# 
  2549  0F35                     	;# 
  2550  0F36                     	;# 
  2551  0F37                     	;# 
  2552  0FE4                     	;# 
  2553  0FE5                     	;# 
  2554  0FE6                     	;# 
  2555  0FE7                     	;# 
  2556  0FE8                     	;# 
  2557  0FE9                     	;# 
  2558  0FEA                     	;# 
  2559  0FEB                     	;# 
  2560  0FED                     	;# 
  2561  0FEE                     	;# 
  2562  0FEF                     	;# 
  2563  0000                     	;# 
  2564  0001                     	;# 
  2565  0002                     	;# 
  2566  0003                     	;# 
  2567  0004                     	;# 
  2568  0005                     	;# 
  2569  0006                     	;# 
  2570  0007                     	;# 
  2571  0008                     	;# 
  2572  0009                     	;# 
  2573  000A                     	;# 
  2574  000B                     	;# 
  2575  000C                     	;# 
  2576  000E                     	;# 
  2577  0010                     	;# 
  2578  0011                     	;# 
  2579  0012                     	;# 
  2580  0013                     	;# 
  2581  0014                     	;# 
  2582  0015                     	;# 
  2583  0015                     	;# 
  2584  0016                     	;# 
  2585  0016                     	;# 
  2586  0017                     	;# 
  2587  0018                     	;# 
  2588  0019                     	;# 
  2589  0019                     	;# 
  2590  001A                     	;# 
  2591  001B                     	;# 
  2592  001C                     	;# 
  2593  001D                     	;# 
  2594  001E                     	;# 
  2595  001F                     	;# 
  2596  008C                     	;# 
  2597  008E                     	;# 
  2598  0090                     	;# 
  2599  0091                     	;# 
  2600  0092                     	;# 
  2601  0093                     	;# 
  2602  0094                     	;# 
  2603  0097                     	;# 
  2604  009B                     	;# 
  2605  009B                     	;# 
  2606  009C                     	;# 
  2607  009D                     	;# 
  2608  009E                     	;# 
  2609  009F                     	;# 
  2610  010C                     	;# 
  2611  010E                     	;# 
  2612  0111                     	;# 
  2613  0112                     	;# 
  2614  0113                     	;# 
  2615  0114                     	;# 
  2616  0115                     	;# 
  2617  0116                     	;# 
  2618  0117                     	;# 
  2619  0118                     	;# 
  2620  0119                     	;# 
  2621  018C                     	;# 
  2622  018E                     	;# 
  2623  0197                     	;# 
  2624  0199                     	;# 
  2625  0199                     	;# 
  2626  0199                     	;# 
  2627  019A                     	;# 
  2628  019A                     	;# 
  2629  019A                     	;# 
  2630  019B                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019C                     	;# 
  2636  019C                     	;# 
  2637  019C                     	;# 
  2638  019D                     	;# 
  2639  019D                     	;# 
  2640  019D                     	;# 
  2641  019E                     	;# 
  2642  019E                     	;# 
  2643  019E                     	;# 
  2644  019F                     	;# 
  2645  019F                     	;# 
  2646  019F                     	;# 
  2647  019F                     	;# 
  2648  019F                     	;# 
  2649  020C                     	;# 
  2650  020E                     	;# 
  2651  0211                     	;# 
  2652  0211                     	;# 
  2653  0212                     	;# 
  2654  0212                     	;# 
  2655  0213                     	;# 
  2656  0213                     	;# 
  2657  0214                     	;# 
  2658  0214                     	;# 
  2659  0215                     	;# 
  2660  0215                     	;# 
  2661  0215                     	;# 
  2662  0215                     	;# 
  2663  0216                     	;# 
  2664  0216                     	;# 
  2665  0217                     	;# 
  2666  0217                     	;# 
  2667  0219                     	;# 
  2668  021A                     	;# 
  2669  021B                     	;# 
  2670  021C                     	;# 
  2671  021D                     	;# 
  2672  021D                     	;# 
  2673  021E                     	;# 
  2674  021F                     	;# 
  2675  028C                     	;# 
  2676  028E                     	;# 
  2677  0291                     	;# 
  2678  0291                     	;# 
  2679  0292                     	;# 
  2680  0293                     	;# 
  2681  0294                     	;# 
  2682  0295                     	;# 
  2683  0295                     	;# 
  2684  0296                     	;# 
  2685  0297                     	;# 
  2686  0298                     	;# 
  2687  029F                     	;# 
  2688  030C                     	;# 
  2689  030E                     	;# 
  2690  0311                     	;# 
  2691  0311                     	;# 
  2692  0312                     	;# 
  2693  0313                     	;# 
  2694  0314                     	;# 
  2695  0315                     	;# 
  2696  0315                     	;# 
  2697  0316                     	;# 
  2698  0317                     	;# 
  2699  0318                     	;# 
  2700  038C                     	;# 
  2701  038E                     	;# 
  2702  0391                     	;# 
  2703  0392                     	;# 
  2704  0393                     	;# 
  2705  0397                     	;# 
  2706  0398                     	;# 
  2707  0399                     	;# 
  2708  039A                     	;# 
  2709  039C                     	;# 
  2710  039D                     	;# 
  2711  039E                     	;# 
  2712  039F                     	;# 
  2713  0411                     	;# 
  2714  0411                     	;# 
  2715  0412                     	;# 
  2716  0413                     	;# 
  2717  0414                     	;# 
  2718  0415                     	;# 
  2719  0416                     	;# 
  2720  0417                     	;# 
  2721  0418                     	;# 
  2722  0418                     	;# 
  2723  0419                     	;# 
  2724  041A                     	;# 
  2725  041B                     	;# 
  2726  041C                     	;# 
  2727  041D                     	;# 
  2728  041E                     	;# 
  2729  041F                     	;# 
  2730  0498                     	;# 
  2731  0498                     	;# 
  2732  0499                     	;# 
  2733  049A                     	;# 
  2734  049B                     	;# 
  2735  049B                     	;# 
  2736  049C                     	;# 
  2737  049D                     	;# 
  2738  049E                     	;# 
  2739  049F                     	;# 
  2740  0617                     	;# 
  2741  0618                     	;# 
  2742  0619                     	;# 
  2743  0619                     	;# 
  2744  061A                     	;# 
  2745  061B                     	;# 
  2746  061C                     	;# 
  2747  061C                     	;# 
  2748  061F                     	;# 
  2749  0691                     	;# 
  2750  0692                     	;# 
  2751  0693                     	;# 
  2752  0694                     	;# 
  2753  0695                     	;# 
  2754  0696                     	;# 
  2755  0697                     	;# 
  2756  0698                     	;# 
  2757  0699                     	;# 
  2758  0711                     	;# 
  2759  0712                     	;# 
  2760  0713                     	;# 
  2761  0714                     	;# 
  2762  0715                     	;# 
  2763  0716                     	;# 
  2764  0717                     	;# 
  2765  0718                     	;# 
  2766  0719                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0891                     	;# 
  2770  0891                     	;# 
  2771  0891                     	;# 
  2772  0891                     	;# 
  2773  0892                     	;# 
  2774  0892                     	;# 
  2775  0892                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0893                     	;# 
  2779  0893                     	;# 
  2780  0893                     	;# 
  2781  0893                     	;# 
  2782  0894                     	;# 
  2783  0894                     	;# 
  2784  0894                     	;# 
  2785  0895                     	;# 
  2786  0895                     	;# 
  2787  0895                     	;# 
  2788  0896                     	;# 
  2789  0896                     	;# 
  2790  0896                     	;# 
  2791  089B                     	;# 
  2792  0911                     	;# 
  2793  0912                     	;# 
  2794  0913                     	;# 
  2795  0914                     	;# 
  2796  0915                     	;# 
  2797  0916                     	;# 
  2798  0918                     	;# 
  2799  0919                     	;# 
  2800  091A                     	;# 
  2801  091B                     	;# 
  2802  091C                     	;# 
  2803  091D                     	;# 
  2804  091E                     	;# 
  2805  091F                     	;# 
  2806  0E0F                     	;# 
  2807  0E10                     	;# 
  2808  0E11                     	;# 
  2809  0E12                     	;# 
  2810  0E13                     	;# 
  2811  0E14                     	;# 
  2812  0E15                     	;# 
  2813  0E16                     	;# 
  2814  0E17                     	;# 
  2815  0E18                     	;# 
  2816  0E19                     	;# 
  2817  0E1A                     	;# 
  2818  0E1B                     	;# 
  2819  0E1C                     	;# 
  2820  0E1D                     	;# 
  2821  0E1E                     	;# 
  2822  0E1F                     	;# 
  2823  0E20                     	;# 
  2824  0E21                     	;# 
  2825  0E22                     	;# 
  2826  0E24                     	;# 
  2827  0E25                     	;# 
  2828  0E28                     	;# 
  2829  0E29                     	;# 
  2830  0E2A                     	;# 
  2831  0E2B                     	;# 
  2832  0E2C                     	;# 
  2833  0E2D                     	;# 
  2834  0E2E                     	;# 
  2835  0E2F                     	;# 
  2836  0E90                     	;# 
  2837  0E91                     	;# 
  2838  0E92                     	;# 
  2839  0E94                     	;# 
  2840  0E95                     	;# 
  2841  0EA0                     	;# 
  2842  0EA1                     	;# 
  2843  0EA2                     	;# 
  2844  0EA3                     	;# 
  2845  0EA4                     	;# 
  2846  0EA5                     	;# 
  2847  0F0F                     	;# 
  2848  0F10                     	;# 
  2849  0F11                     	;# 
  2850  0F12                     	;# 
  2851  0F13                     	;# 
  2852  0F14                     	;# 
  2853  0F15                     	;# 
  2854  0F16                     	;# 
  2855  0F17                     	;# 
  2856  0F18                     	;# 
  2857  0F19                     	;# 
  2858  0F1A                     	;# 
  2859  0F1B                     	;# 
  2860  0F1C                     	;# 
  2861  0F1D                     	;# 
  2862  0F1E                     	;# 
  2863  0F1F                     	;# 
  2864  0F20                     	;# 
  2865  0F21                     	;# 
  2866  0F22                     	;# 
  2867  0F23                     	;# 
  2868  0F24                     	;# 
  2869  0F25                     	;# 
  2870  0F26                     	;# 
  2871  0F27                     	;# 
  2872  0F28                     	;# 
  2873  0F29                     	;# 
  2874  0F2A                     	;# 
  2875  0F2B                     	;# 
  2876  0F2C                     	;# 
  2877  0F2D                     	;# 
  2878  0F2E                     	;# 
  2879  0F2F                     	;# 
  2880  0F30                     	;# 
  2881  0F31                     	;# 
  2882  0F32                     	;# 
  2883  0F33                     	;# 
  2884  0F34                     	;# 
  2885  0F35                     	;# 
  2886  0F36                     	;# 
  2887  0F37                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE9                     	;# 
  2894  0FEA                     	;# 
  2895  0FEB                     	;# 
  2896  0FED                     	;# 
  2897  0FEE                     	;# 
  2898  0FEF                     	;# 
  2899  0000                     	;# 
  2900  0001                     	;# 
  2901  0002                     	;# 
  2902  0003                     	;# 
  2903  0004                     	;# 
  2904  0005                     	;# 
  2905  0006                     	;# 
  2906  0007                     	;# 
  2907  0008                     	;# 
  2908  0009                     	;# 
  2909  000A                     	;# 
  2910  000B                     	;# 
  2911  000C                     	;# 
  2912  000E                     	;# 
  2913  0010                     	;# 
  2914  0011                     	;# 
  2915  0012                     	;# 
  2916  0013                     	;# 
  2917  0014                     	;# 
  2918  0015                     	;# 
  2919  0015                     	;# 
  2920  0016                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001B                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008E                     	;# 
  2934  0090                     	;# 
  2935  0091                     	;# 
  2936  0092                     	;# 
  2937  0093                     	;# 
  2938  0094                     	;# 
  2939  0097                     	;# 
  2940  009B                     	;# 
  2941  009B                     	;# 
  2942  009C                     	;# 
  2943  009D                     	;# 
  2944  009E                     	;# 
  2945  009F                     	;# 
  2946  010C                     	;# 
  2947  010E                     	;# 
  2948  0111                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0118                     	;# 
  2956  0119                     	;# 
  2957  018C                     	;# 
  2958  018E                     	;# 
  2959  0197                     	;# 
  2960  0199                     	;# 
  2961  0199                     	;# 
  2962  0199                     	;# 
  2963  019A                     	;# 
  2964  019A                     	;# 
  2965  019A                     	;# 
  2966  019B                     	;# 
  2967  019B                     	;# 
  2968  019B                     	;# 
  2969  019B                     	;# 
  2970  019B                     	;# 
  2971  019C                     	;# 
  2972  019C                     	;# 
  2973  019C                     	;# 
  2974  019D                     	;# 
  2975  019D                     	;# 
  2976  019D                     	;# 
  2977  019E                     	;# 
  2978  019E                     	;# 
  2979  019E                     	;# 
  2980  019F                     	;# 
  2981  019F                     	;# 
  2982  019F                     	;# 
  2983  019F                     	;# 
  2984  019F                     	;# 
  2985  020C                     	;# 
  2986  020E                     	;# 
  2987  0211                     	;# 
  2988  0211                     	;# 
  2989  0212                     	;# 
  2990  0212                     	;# 
  2991  0213                     	;# 
  2992  0213                     	;# 
  2993  0214                     	;# 
  2994  0214                     	;# 
  2995  0215                     	;# 
  2996  0215                     	;# 
  2997  0215                     	;# 
  2998  0215                     	;# 
  2999  0216                     	;# 
  3000  0216                     	;# 
  3001  0217                     	;# 
  3002  0217                     	;# 
  3003  0219                     	;# 
  3004  021A                     	;# 
  3005  021B                     	;# 
  3006  021C                     	;# 
  3007  021D                     	;# 
  3008  021D                     	;# 
  3009  021E                     	;# 
  3010  021F                     	;# 
  3011  028C                     	;# 
  3012  028E                     	;# 
  3013  0291                     	;# 
  3014  0291                     	;# 
  3015  0292                     	;# 
  3016  0293                     	;# 
  3017  0294                     	;# 
  3018  0295                     	;# 
  3019  0295                     	;# 
  3020  0296                     	;# 
  3021  0297                     	;# 
  3022  0298                     	;# 
  3023  029F                     	;# 
  3024  030C                     	;# 
  3025  030E                     	;# 
  3026  0311                     	;# 
  3027  0311                     	;# 
  3028  0312                     	;# 
  3029  0313                     	;# 
  3030  0314                     	;# 
  3031  0315                     	;# 
  3032  0315                     	;# 
  3033  0316                     	;# 
  3034  0317                     	;# 
  3035  0318                     	;# 
  3036  038C                     	;# 
  3037  038E                     	;# 
  3038  0391                     	;# 
  3039  0392                     	;# 
  3040  0393                     	;# 
  3041  0397                     	;# 
  3042  0398                     	;# 
  3043  0399                     	;# 
  3044  039A                     	;# 
  3045  039C                     	;# 
  3046  039D                     	;# 
  3047  039E                     	;# 
  3048  039F                     	;# 
  3049  0411                     	;# 
  3050  0411                     	;# 
  3051  0412                     	;# 
  3052  0413                     	;# 
  3053  0414                     	;# 
  3054  0415                     	;# 
  3055  0416                     	;# 
  3056  0417                     	;# 
  3057  0418                     	;# 
  3058  0418                     	;# 
  3059  0419                     	;# 
  3060  041A                     	;# 
  3061  041B                     	;# 
  3062  041C                     	;# 
  3063  041D                     	;# 
  3064  041E                     	;# 
  3065  041F                     	;# 
  3066  0498                     	;# 
  3067  0498                     	;# 
  3068  0499                     	;# 
  3069  049A                     	;# 
  3070  049B                     	;# 
  3071  049B                     	;# 
  3072  049C                     	;# 
  3073  049D                     	;# 
  3074  049E                     	;# 
  3075  049F                     	;# 
  3076  0617                     	;# 
  3077  0618                     	;# 
  3078  0619                     	;# 
  3079  0619                     	;# 
  3080  061A                     	;# 
  3081  061B                     	;# 
  3082  061C                     	;# 
  3083  061C                     	;# 
  3084  061F                     	;# 
  3085  0691                     	;# 
  3086  0692                     	;# 
  3087  0693                     	;# 
  3088  0694                     	;# 
  3089  0695                     	;# 
  3090  0696                     	;# 
  3091  0697                     	;# 
  3092  0698                     	;# 
  3093  0699                     	;# 
  3094  0711                     	;# 
  3095  0712                     	;# 
  3096  0713                     	;# 
  3097  0714                     	;# 
  3098  0715                     	;# 
  3099  0716                     	;# 
  3100  0717                     	;# 
  3101  0718                     	;# 
  3102  0719                     	;# 
  3103  0891                     	;# 
  3104  0891                     	;# 
  3105  0891                     	;# 
  3106  0891                     	;# 
  3107  0891                     	;# 
  3108  0891                     	;# 
  3109  0892                     	;# 
  3110  0892                     	;# 
  3111  0892                     	;# 
  3112  0893                     	;# 
  3113  0893                     	;# 
  3114  0893                     	;# 
  3115  0893                     	;# 
  3116  0893                     	;# 
  3117  0893                     	;# 
  3118  0894                     	;# 
  3119  0894                     	;# 
  3120  0894                     	;# 
  3121  0895                     	;# 
  3122  0895                     	;# 
  3123  0895                     	;# 
  3124  0896                     	;# 
  3125  0896                     	;# 
  3126  0896                     	;# 
  3127  089B                     	;# 
  3128  0911                     	;# 
  3129  0912                     	;# 
  3130  0913                     	;# 
  3131  0914                     	;# 
  3132  0915                     	;# 
  3133  0916                     	;# 
  3134  0918                     	;# 
  3135  0919                     	;# 
  3136  091A                     	;# 
  3137  091B                     	;# 
  3138  091C                     	;# 
  3139  091D                     	;# 
  3140  091E                     	;# 
  3141  091F                     	;# 
  3142  0E0F                     	;# 
  3143  0E10                     	;# 
  3144  0E11                     	;# 
  3145  0E12                     	;# 
  3146  0E13                     	;# 
  3147  0E14                     	;# 
  3148  0E15                     	;# 
  3149  0E16                     	;# 
  3150  0E17                     	;# 
  3151  0E18                     	;# 
  3152  0E19                     	;# 
  3153  0E1A                     	;# 
  3154  0E1B                     	;# 
  3155  0E1C                     	;# 
  3156  0E1D                     	;# 
  3157  0E1E                     	;# 
  3158  0E1F                     	;# 
  3159  0E20                     	;# 
  3160  0E21                     	;# 
  3161  0E22                     	;# 
  3162  0E24                     	;# 
  3163  0E25                     	;# 
  3164  0E28                     	;# 
  3165  0E29                     	;# 
  3166  0E2A                     	;# 
  3167  0E2B                     	;# 
  3168  0E2C                     	;# 
  3169  0E2D                     	;# 
  3170  0E2E                     	;# 
  3171  0E2F                     	;# 
  3172  0E90                     	;# 
  3173  0E91                     	;# 
  3174  0E92                     	;# 
  3175  0E94                     	;# 
  3176  0E95                     	;# 
  3177  0EA0                     	;# 
  3178  0EA1                     	;# 
  3179  0EA2                     	;# 
  3180  0EA3                     	;# 
  3181  0EA4                     	;# 
  3182  0EA5                     	;# 
  3183  0F0F                     	;# 
  3184  0F10                     	;# 
  3185  0F11                     	;# 
  3186  0F12                     	;# 
  3187  0F13                     	;# 
  3188  0F14                     	;# 
  3189  0F15                     	;# 
  3190  0F16                     	;# 
  3191  0F17                     	;# 
  3192  0F18                     	;# 
  3193  0F19                     	;# 
  3194  0F1A                     	;# 
  3195  0F1B                     	;# 
  3196  0F1C                     	;# 
  3197  0F1D                     	;# 
  3198  0F1E                     	;# 
  3199  0F1F                     	;# 
  3200  0F20                     	;# 
  3201  0F21                     	;# 
  3202  0F22                     	;# 
  3203  0F23                     	;# 
  3204  0F24                     	;# 
  3205  0F25                     	;# 
  3206  0F26                     	;# 
  3207  0F27                     	;# 
  3208  0F28                     	;# 
  3209  0F29                     	;# 
  3210  0F2A                     	;# 
  3211  0F2B                     	;# 
  3212  0F2C                     	;# 
  3213  0F2D                     	;# 
  3214  0F2E                     	;# 
  3215  0F2F                     	;# 
  3216  0F30                     	;# 
  3217  0F31                     	;# 
  3218  0F32                     	;# 
  3219  0F33                     	;# 
  3220  0F34                     	;# 
  3221  0F35                     	;# 
  3222  0F36                     	;# 
  3223  0F37                     	;# 
  3224  0FE4                     	;# 
  3225  0FE5                     	;# 
  3226  0FE6                     	;# 
  3227  0FE7                     	;# 
  3228  0FE8                     	;# 
  3229  0FE9                     	;# 
  3230  0FEA                     	;# 
  3231  0FEB                     	;# 
  3232  0FED                     	;# 
  3233  0FEE                     	;# 
  3234  0FEF                     	;# 
  3235  0000                     	;# 
  3236  0001                     	;# 
  3237  0002                     	;# 
  3238  0003                     	;# 
  3239  0004                     	;# 
  3240  0005                     	;# 
  3241  0006                     	;# 
  3242  0007                     	;# 
  3243  0008                     	;# 
  3244  0009                     	;# 
  3245  000A                     	;# 
  3246  000B                     	;# 
  3247  000C                     	;# 
  3248  000E                     	;# 
  3249  0010                     	;# 
  3250  0011                     	;# 
  3251  0012                     	;# 
  3252  0013                     	;# 
  3253  0014                     	;# 
  3254  0015                     	;# 
  3255  0015                     	;# 
  3256  0016                     	;# 
  3257  0016                     	;# 
  3258  0017                     	;# 
  3259  0018                     	;# 
  3260  0019                     	;# 
  3261  0019                     	;# 
  3262  001A                     	;# 
  3263  001B                     	;# 
  3264  001C                     	;# 
  3265  001D                     	;# 
  3266  001E                     	;# 
  3267  001F                     	;# 
  3268  008C                     	;# 
  3269  008E                     	;# 
  3270  0090                     	;# 
  3271  0091                     	;# 
  3272  0092                     	;# 
  3273  0093                     	;# 
  3274  0094                     	;# 
  3275  0097                     	;# 
  3276  009B                     	;# 
  3277  009B                     	;# 
  3278  009C                     	;# 
  3279  009D                     	;# 
  3280  009E                     	;# 
  3281  009F                     	;# 
  3282  010C                     	;# 
  3283  010E                     	;# 
  3284  0111                     	;# 
  3285  0112                     	;# 
  3286  0113                     	;# 
  3287  0114                     	;# 
  3288  0115                     	;# 
  3289  0116                     	;# 
  3290  0117                     	;# 
  3291  0118                     	;# 
  3292  0119                     	;# 
  3293  018C                     	;# 
  3294  018E                     	;# 
  3295  0197                     	;# 
  3296  0199                     	;# 
  3297  0199                     	;# 
  3298  0199                     	;# 
  3299  019A                     	;# 
  3300  019A                     	;# 
  3301  019A                     	;# 
  3302  019B                     	;# 
  3303  019B                     	;# 
  3304  019B                     	;# 
  3305  019B                     	;# 
  3306  019B                     	;# 
  3307  019C                     	;# 
  3308  019C                     	;# 
  3309  019C                     	;# 
  3310  019D                     	;# 
  3311  019D                     	;# 
  3312  019D                     	;# 
  3313  019E                     	;# 
  3314  019E                     	;# 
  3315  019E                     	;# 
  3316  019F                     	;# 
  3317  019F                     	;# 
  3318  019F                     	;# 
  3319  019F                     	;# 
  3320  019F                     	;# 
  3321  020C                     	;# 
  3322  020E                     	;# 
  3323  0211                     	;# 
  3324  0211                     	;# 
  3325  0212                     	;# 
  3326  0212                     	;# 
  3327  0213                     	;# 
  3328  0213                     	;# 
  3329  0214                     	;# 
  3330  0214                     	;# 
  3331  0215                     	;# 
  3332  0215                     	;# 
  3333  0215                     	;# 
  3334  0215                     	;# 
  3335  0216                     	;# 
  3336  0216                     	;# 
  3337  0217                     	;# 
  3338  0217                     	;# 
  3339  0219                     	;# 
  3340  021A                     	;# 
  3341  021B                     	;# 
  3342  021C                     	;# 
  3343  021D                     	;# 
  3344  021D                     	;# 
  3345  021E                     	;# 
  3346  021F                     	;# 
  3347  028C                     	;# 
  3348  028E                     	;# 
  3349  0291                     	;# 
  3350  0291                     	;# 
  3351  0292                     	;# 
  3352  0293                     	;# 
  3353  0294                     	;# 
  3354  0295                     	;# 
  3355  0295                     	;# 
  3356  0296                     	;# 
  3357  0297                     	;# 
  3358  0298                     	;# 
  3359  029F                     	;# 
  3360  030C                     	;# 
  3361  030E                     	;# 
  3362  0311                     	;# 
  3363  0311                     	;# 
  3364  0312                     	;# 
  3365  0313                     	;# 
  3366  0314                     	;# 
  3367  0315                     	;# 
  3368  0315                     	;# 
  3369  0316                     	;# 
  3370  0317                     	;# 
  3371  0318                     	;# 
  3372  038C                     	;# 
  3373  038E                     	;# 
  3374  0391                     	;# 
  3375  0392                     	;# 
  3376  0393                     	;# 
  3377  0397                     	;# 
  3378  0398                     	;# 
  3379  0399                     	;# 
  3380  039A                     	;# 
  3381  039C                     	;# 
  3382  039D                     	;# 
  3383  039E                     	;# 
  3384  039F                     	;# 
  3385  0411                     	;# 
  3386  0411                     	;# 
  3387  0412                     	;# 
  3388  0413                     	;# 
  3389  0414                     	;# 
  3390  0415                     	;# 
  3391  0416                     	;# 
  3392  0417                     	;# 
  3393  0418                     	;# 
  3394  0418                     	;# 
  3395  0419                     	;# 
  3396  041A                     	;# 
  3397  041B                     	;# 
  3398  041C                     	;# 
  3399  041D                     	;# 
  3400  041E                     	;# 
  3401  041F                     	;# 
  3402  0498                     	;# 
  3403  0498                     	;# 
  3404  0499                     	;# 
  3405  049A                     	;# 
  3406  049B                     	;# 
  3407  049B                     	;# 
  3408  049C                     	;# 
  3409  049D                     	;# 
  3410  049E                     	;# 
  3411  049F                     	;# 
  3412  0617                     	;# 
  3413  0618                     	;# 
  3414  0619                     	;# 
  3415  0619                     	;# 
  3416  061A                     	;# 
  3417  061B                     	;# 
  3418  061C                     	;# 
  3419  061C                     	;# 
  3420  061F                     	;# 
  3421  0691                     	;# 
  3422  0692                     	;# 
  3423  0693                     	;# 
  3424  0694                     	;# 
  3425  0695                     	;# 
  3426  0696                     	;# 
  3427  0697                     	;# 
  3428  0698                     	;# 
  3429  0699                     	;# 
  3430  0711                     	;# 
  3431  0712                     	;# 
  3432  0713                     	;# 
  3433  0714                     	;# 
  3434  0715                     	;# 
  3435  0716                     	;# 
  3436  0717                     	;# 
  3437  0718                     	;# 
  3438  0719                     	;# 
  3439  0891                     	;# 
  3440  0891                     	;# 
  3441  0891                     	;# 
  3442  0891                     	;# 
  3443  0891                     	;# 
  3444  0891                     	;# 
  3445  0892                     	;# 
  3446  0892                     	;# 
  3447  0892                     	;# 
  3448  0893                     	;# 
  3449  0893                     	;# 
  3450  0893                     	;# 
  3451  0893                     	;# 
  3452  0893                     	;# 
  3453  0893                     	;# 
  3454  0894                     	;# 
  3455  0894                     	;# 
  3456  0894                     	;# 
  3457  0895                     	;# 
  3458  0895                     	;# 
  3459  0895                     	;# 
  3460  0896                     	;# 
  3461  0896                     	;# 
  3462  0896                     	;# 
  3463  089B                     	;# 
  3464  0911                     	;# 
  3465  0912                     	;# 
  3466  0913                     	;# 
  3467  0914                     	;# 
  3468  0915                     	;# 
  3469  0916                     	;# 
  3470  0918                     	;# 
  3471  0919                     	;# 
  3472  091A                     	;# 
  3473  091B                     	;# 
  3474  091C                     	;# 
  3475  091D                     	;# 
  3476  091E                     	;# 
  3477  091F                     	;# 
  3478  0E0F                     	;# 
  3479  0E10                     	;# 
  3480  0E11                     	;# 
  3481  0E12                     	;# 
  3482  0E13                     	;# 
  3483  0E14                     	;# 
  3484  0E15                     	;# 
  3485  0E16                     	;# 
  3486  0E17                     	;# 
  3487  0E18                     	;# 
  3488  0E19                     	;# 
  3489  0E1A                     	;# 
  3490  0E1B                     	;# 
  3491  0E1C                     	;# 
  3492  0E1D                     	;# 
  3493  0E1E                     	;# 
  3494  0E1F                     	;# 
  3495  0E20                     	;# 
  3496  0E21                     	;# 
  3497  0E22                     	;# 
  3498  0E24                     	;# 
  3499  0E25                     	;# 
  3500  0E28                     	;# 
  3501  0E29                     	;# 
  3502  0E2A                     	;# 
  3503  0E2B                     	;# 
  3504  0E2C                     	;# 
  3505  0E2D                     	;# 
  3506  0E2E                     	;# 
  3507  0E2F                     	;# 
  3508  0E90                     	;# 
  3509  0E91                     	;# 
  3510  0E92                     	;# 
  3511  0E94                     	;# 
  3512  0E95                     	;# 
  3513  0EA0                     	;# 
  3514  0EA1                     	;# 
  3515  0EA2                     	;# 
  3516  0EA3                     	;# 
  3517  0EA4                     	;# 
  3518  0EA5                     	;# 
  3519  0F0F                     	;# 
  3520  0F10                     	;# 
  3521  0F11                     	;# 
  3522  0F12                     	;# 
  3523  0F13                     	;# 
  3524  0F14                     	;# 
  3525  0F15                     	;# 
  3526  0F16                     	;# 
  3527  0F17                     	;# 
  3528  0F18                     	;# 
  3529  0F19                     	;# 
  3530  0F1A                     	;# 
  3531  0F1B                     	;# 
  3532  0F1C                     	;# 
  3533  0F1D                     	;# 
  3534  0F1E                     	;# 
  3535  0F1F                     	;# 
  3536  0F20                     	;# 
  3537  0F21                     	;# 
  3538  0F22                     	;# 
  3539  0F23                     	;# 
  3540  0F24                     	;# 
  3541  0F25                     	;# 
  3542  0F26                     	;# 
  3543  0F27                     	;# 
  3544  0F28                     	;# 
  3545  0F29                     	;# 
  3546  0F2A                     	;# 
  3547  0F2B                     	;# 
  3548  0F2C                     	;# 
  3549  0F2D                     	;# 
  3550  0F2E                     	;# 
  3551  0F2F                     	;# 
  3552  0F30                     	;# 
  3553  0F31                     	;# 
  3554  0F32                     	;# 
  3555  0F33                     	;# 
  3556  0F34                     	;# 
  3557  0F35                     	;# 
  3558  0F36                     	;# 
  3559  0F37                     	;# 
  3560  0FE4                     	;# 
  3561  0FE5                     	;# 
  3562  0FE6                     	;# 
  3563  0FE7                     	;# 
  3564  0FE8                     	;# 
  3565  0FE9                     	;# 
  3566  0FEA                     	;# 
  3567  0FEB                     	;# 
  3568  0FED                     	;# 
  3569  0FEE                     	;# 
  3570  0FEF                     	;# 
  3571  0000                     	;# 
  3572  0001                     	;# 
  3573  0002                     	;# 
  3574  0003                     	;# 
  3575  0004                     	;# 
  3576  0005                     	;# 
  3577  0006                     	;# 
  3578  0007                     	;# 
  3579  0008                     	;# 
  3580  0009                     	;# 
  3581  000A                     	;# 
  3582  000B                     	;# 
  3583  000C                     	;# 
  3584  000E                     	;# 
  3585  0010                     	;# 
  3586  0011                     	;# 
  3587  0012                     	;# 
  3588  0013                     	;# 
  3589  0014                     	;# 
  3590  0015                     	;# 
  3591  0015                     	;# 
  3592  0016                     	;# 
  3593  0016                     	;# 
  3594  0017                     	;# 
  3595  0018                     	;# 
  3596  0019                     	;# 
  3597  0019                     	;# 
  3598  001A                     	;# 
  3599  001B                     	;# 
  3600  001C                     	;# 
  3601  001D                     	;# 
  3602  001E                     	;# 
  3603  001F                     	;# 
  3604  008C                     	;# 
  3605  008E                     	;# 
  3606  0090                     	;# 
  3607  0091                     	;# 
  3608  0092                     	;# 
  3609  0093                     	;# 
  3610  0094                     	;# 
  3611  0097                     	;# 
  3612  009B                     	;# 
  3613  009B                     	;# 
  3614  009C                     	;# 
  3615  009D                     	;# 
  3616  009E                     	;# 
  3617  009F                     	;# 
  3618  010C                     	;# 
  3619  010E                     	;# 
  3620  0111                     	;# 
  3621  0112                     	;# 
  3622  0113                     	;# 
  3623  0114                     	;# 
  3624  0115                     	;# 
  3625  0116                     	;# 
  3626  0117                     	;# 
  3627  0118                     	;# 
  3628  0119                     	;# 
  3629  018C                     	;# 
  3630  018E                     	;# 
  3631  0197                     	;# 
  3632  0199                     	;# 
  3633  0199                     	;# 
  3634  0199                     	;# 
  3635  019A                     	;# 
  3636  019A                     	;# 
  3637  019A                     	;# 
  3638  019B                     	;# 
  3639  019B                     	;# 
  3640  019B                     	;# 
  3641  019B                     	;# 
  3642  019B                     	;# 
  3643  019C                     	;# 
  3644  019C                     	;# 
  3645  019C                     	;# 
  3646  019D                     	;# 
  3647  019D                     	;# 
  3648  019D                     	;# 
  3649  019E                     	;# 
  3650  019E                     	;# 
  3651  019E                     	;# 
  3652  019F                     	;# 
  3653  019F                     	;# 
  3654  019F                     	;# 
  3655  019F                     	;# 
  3656  019F                     	;# 
  3657  020C                     	;# 
  3658  020E                     	;# 
  3659  0211                     	;# 
  3660  0211                     	;# 
  3661  0212                     	;# 
  3662  0212                     	;# 
  3663  0213                     	;# 
  3664  0213                     	;# 
  3665  0214                     	;# 
  3666  0214                     	;# 
  3667  0215                     	;# 
  3668  0215                     	;# 
  3669  0215                     	;# 
  3670  0215                     	;# 
  3671  0216                     	;# 
  3672  0216                     	;# 
  3673  0217                     	;# 
  3674  0217                     	;# 
  3675  0219                     	;# 
  3676  021A                     	;# 
  3677  021B                     	;# 
  3678  021C                     	;# 
  3679  021D                     	;# 
  3680  021D                     	;# 
  3681  021E                     	;# 
  3682  021F                     	;# 
  3683  028C                     	;# 
  3684  028E                     	;# 
  3685  0291                     	;# 
  3686  0291                     	;# 
  3687  0292                     	;# 
  3688  0293                     	;# 
  3689  0294                     	;# 
  3690  0295                     	;# 
  3691  0295                     	;# 
  3692  0296                     	;# 
  3693  0297                     	;# 
  3694  0298                     	;# 
  3695  029F                     	;# 
  3696  030C                     	;# 
  3697  030E                     	;# 
  3698  0311                     	;# 
  3699  0311                     	;# 
  3700  0312                     	;# 
  3701  0313                     	;# 
  3702  0314                     	;# 
  3703  0315                     	;# 
  3704  0315                     	;# 
  3705  0316                     	;# 
  3706  0317                     	;# 
  3707  0318                     	;# 
  3708  038C                     	;# 
  3709  038E                     	;# 
  3710  0391                     	;# 
  3711  0392                     	;# 
  3712  0393                     	;# 
  3713  0397                     	;# 
  3714  0398                     	;# 
  3715  0399                     	;# 
  3716  039A                     	;# 
  3717  039C                     	;# 
  3718  039D                     	;# 
  3719  039E                     	;# 
  3720  039F                     	;# 
  3721  0411                     	;# 
  3722  0411                     	;# 
  3723  0412                     	;# 
  3724  0413                     	;# 
  3725  0414                     	;# 
  3726  0415                     	;# 
  3727  0416                     	;# 
  3728  0417                     	;# 
  3729  0418                     	;# 
  3730  0418                     	;# 
  3731  0419                     	;# 
  3732  041A                     	;# 
  3733  041B                     	;# 
  3734  041C                     	;# 
  3735  041D                     	;# 
  3736  041E                     	;# 
  3737  041F                     	;# 
  3738  0498                     	;# 
  3739  0498                     	;# 
  3740  0499                     	;# 
  3741  049A                     	;# 
  3742  049B                     	;# 
  3743  049B                     	;# 
  3744  049C                     	;# 
  3745  049D                     	;# 
  3746  049E                     	;# 
  3747  049F                     	;# 
  3748  0617                     	;# 
  3749  0618                     	;# 
  3750  0619                     	;# 
  3751  0619                     	;# 
  3752  061A                     	;# 
  3753  061B                     	;# 
  3754  061C                     	;# 
  3755  061C                     	;# 
  3756  061F                     	;# 
  3757  0691                     	;# 
  3758  0692                     	;# 
  3759  0693                     	;# 
  3760  0694                     	;# 
  3761  0695                     	;# 
  3762  0696                     	;# 
  3763  0697                     	;# 
  3764  0698                     	;# 
  3765  0699                     	;# 
  3766  0711                     	;# 
  3767  0712                     	;# 
  3768  0713                     	;# 
  3769  0714                     	;# 
  3770  0715                     	;# 
  3771  0716                     	;# 
  3772  0717                     	;# 
  3773  0718                     	;# 
  3774  0719                     	;# 
  3775  0891                     	;# 
  3776  0891                     	;# 
  3777  0891                     	;# 
  3778  0891                     	;# 
  3779  0891                     	;# 
  3780  0891                     	;# 
  3781  0892                     	;# 
  3782  0892                     	;# 
  3783  0892                     	;# 
  3784  0893                     	;# 
  3785  0893                     	;# 
  3786  0893                     	;# 
  3787  0893                     	;# 
  3788  0893                     	;# 
  3789  0893                     	;# 
  3790  0894                     	;# 
  3791  0894                     	;# 
  3792  0894                     	;# 
  3793  0895                     	;# 
  3794  0895                     	;# 
  3795  0895                     	;# 
  3796  0896                     	;# 
  3797  0896                     	;# 
  3798  0896                     	;# 
  3799  089B                     	;# 
  3800  0911                     	;# 
  3801  0912                     	;# 
  3802  0913                     	;# 
  3803  0914                     	;# 
  3804  0915                     	;# 
  3805  0916                     	;# 
  3806  0918                     	;# 
  3807  0919                     	;# 
  3808  091A                     	;# 
  3809  091B                     	;# 
  3810  091C                     	;# 
  3811  091D                     	;# 
  3812  091E                     	;# 
  3813  091F                     	;# 
  3814  0E0F                     	;# 
  3815  0E10                     	;# 
  3816  0E11                     	;# 
  3817  0E12                     	;# 
  3818  0E13                     	;# 
  3819  0E14                     	;# 
  3820  0E15                     	;# 
  3821  0E16                     	;# 
  3822  0E17                     	;# 
  3823  0E18                     	;# 
  3824  0E19                     	;# 
  3825  0E1A                     	;# 
  3826  0E1B                     	;# 
  3827  0E1C                     	;# 
  3828  0E1D                     	;# 
  3829  0E1E                     	;# 
  3830  0E1F                     	;# 
  3831  0E20                     	;# 
  3832  0E21                     	;# 
  3833  0E22                     	;# 
  3834  0E24                     	;# 
  3835  0E25                     	;# 
  3836  0E28                     	;# 
  3837  0E29                     	;# 
  3838  0E2A                     	;# 
  3839  0E2B                     	;# 
  3840  0E2C                     	;# 
  3841  0E2D                     	;# 
  3842  0E2E                     	;# 
  3843  0E2F                     	;# 
  3844  0E90                     	;# 
  3845  0E91                     	;# 
  3846  0E92                     	;# 
  3847  0E94                     	;# 
  3848  0E95                     	;# 
  3849  0EA0                     	;# 
  3850  0EA1                     	;# 
  3851  0EA2                     	;# 
  3852  0EA3                     	;# 
  3853  0EA4                     	;# 
  3854  0EA5                     	;# 
  3855  0F0F                     	;# 
  3856  0F10                     	;# 
  3857  0F11                     	;# 
  3858  0F12                     	;# 
  3859  0F13                     	;# 
  3860  0F14                     	;# 
  3861  0F15                     	;# 
  3862  0F16                     	;# 
  3863  0F17                     	;# 
  3864  0F18                     	;# 
  3865  0F19                     	;# 
  3866  0F1A                     	;# 
  3867  0F1B                     	;# 
  3868  0F1C                     	;# 
  3869  0F1D                     	;# 
  3870  0F1E                     	;# 
  3871  0F1F                     	;# 
  3872  0F20                     	;# 
  3873  0F21                     	;# 
  3874  0F22                     	;# 
  3875  0F23                     	;# 
  3876  0F24                     	;# 
  3877  0F25                     	;# 
  3878  0F26                     	;# 
  3879  0F27                     	;# 
  3880  0F28                     	;# 
  3881  0F29                     	;# 
  3882  0F2A                     	;# 
  3883  0F2B                     	;# 
  3884  0F2C                     	;# 
  3885  0F2D                     	;# 
  3886  0F2E                     	;# 
  3887  0F2F                     	;# 
  3888  0F30                     	;# 
  3889  0F31                     	;# 
  3890  0F32                     	;# 
  3891  0F33                     	;# 
  3892  0F34                     	;# 
  3893  0F35                     	;# 
  3894  0F36                     	;# 
  3895  0F37                     	;# 
  3896  0FE4                     	;# 
  3897  0FE5                     	;# 
  3898  0FE6                     	;# 
  3899  0FE7                     	;# 
  3900  0FE8                     	;# 
  3901  0FE9                     	;# 
  3902  0FEA                     	;# 
  3903  0FEB                     	;# 
  3904  0FED                     	;# 
  3905  0FEE                     	;# 
  3906  0FEF                     	;# 
  3907  0000                     	;# 
  3908  0001                     	;# 
  3909  0002                     	;# 
  3910  0003                     	;# 
  3911  0004                     	;# 
  3912  0005                     	;# 
  3913  0006                     	;# 
  3914  0007                     	;# 
  3915  0008                     	;# 
  3916  0009                     	;# 
  3917  000A                     	;# 
  3918  000B                     	;# 
  3919  000C                     	;# 
  3920  000E                     	;# 
  3921  0010                     	;# 
  3922  0011                     	;# 
  3923  0012                     	;# 
  3924  0013                     	;# 
  3925  0014                     	;# 
  3926  0015                     	;# 
  3927  0015                     	;# 
  3928  0016                     	;# 
  3929  0016                     	;# 
  3930  0017                     	;# 
  3931  0018                     	;# 
  3932  0019                     	;# 
  3933  0019                     	;# 
  3934  001A                     	;# 
  3935  001B                     	;# 
  3936  001C                     	;# 
  3937  001D                     	;# 
  3938  001E                     	;# 
  3939  001F                     	;# 
  3940  008C                     	;# 
  3941  008E                     	;# 
  3942  0090                     	;# 
  3943  0091                     	;# 
  3944  0092                     	;# 
  3945  0093                     	;# 
  3946  0094                     	;# 
  3947  0097                     	;# 
  3948  009B                     	;# 
  3949  009B                     	;# 
  3950  009C                     	;# 
  3951  009D                     	;# 
  3952  009E                     	;# 
  3953  009F                     	;# 
  3954  010C                     	;# 
  3955  010E                     	;# 
  3956  0111                     	;# 
  3957  0112                     	;# 
  3958  0113                     	;# 
  3959  0114                     	;# 
  3960  0115                     	;# 
  3961  0116                     	;# 
  3962  0117                     	;# 
  3963  0118                     	;# 
  3964  0119                     	;# 
  3965  018C                     	;# 
  3966  018E                     	;# 
  3967  0197                     	;# 
  3968  0199                     	;# 
  3969  0199                     	;# 
  3970  0199                     	;# 
  3971  019A                     	;# 
  3972  019A                     	;# 
  3973  019A                     	;# 
  3974  019B                     	;# 
  3975  019B                     	;# 
  3976  019B                     	;# 
  3977  019B                     	;# 
  3978  019B                     	;# 
  3979  019C                     	;# 
  3980  019C                     	;# 
  3981  019C                     	;# 
  3982  019D                     	;# 
  3983  019D                     	;# 
  3984  019D                     	;# 
  3985  019E                     	;# 
  3986  019E                     	;# 
  3987  019E                     	;# 
  3988  019F                     	;# 
  3989  019F                     	;# 
  3990  019F                     	;# 
  3991  019F                     	;# 
  3992  019F                     	;# 
  3993  020C                     	;# 
  3994  020E                     	;# 
  3995  0211                     	;# 
  3996  0211                     	;# 
  3997  0212                     	;# 
  3998  0212                     	;# 
  3999  0213                     	;# 
  4000  0213                     	;# 
  4001  0214                     	;# 
  4002  0214                     	;# 
  4003  0215                     	;# 
  4004  0215                     	;# 
  4005  0215                     	;# 
  4006  0215                     	;# 
  4007  0216                     	;# 
  4008  0216                     	;# 
  4009  0217                     	;# 
  4010  0217                     	;# 
  4011  0219                     	;# 
  4012  021A                     	;# 
  4013  021B                     	;# 
  4014  021C                     	;# 
  4015  021D                     	;# 
  4016  021D                     	;# 
  4017  021E                     	;# 
  4018  021F                     	;# 
  4019  028C                     	;# 
  4020  028E                     	;# 
  4021  0291                     	;# 
  4022  0291                     	;# 
  4023  0292                     	;# 
  4024  0293                     	;# 
  4025  0294                     	;# 
  4026  0295                     	;# 
  4027  0295                     	;# 
  4028  0296                     	;# 
  4029  0297                     	;# 
  4030  0298                     	;# 
  4031  029F                     	;# 
  4032  030C                     	;# 
  4033  030E                     	;# 
  4034  0311                     	;# 
  4035  0311                     	;# 
  4036  0312                     	;# 
  4037  0313                     	;# 
  4038  0314                     	;# 
  4039  0315                     	;# 
  4040  0315                     	;# 
  4041  0316                     	;# 
  4042  0317                     	;# 
  4043  0318                     	;# 
  4044  038C                     	;# 
  4045  038E                     	;# 
  4046  0391                     	;# 
  4047  0392                     	;# 
  4048  0393                     	;# 
  4049  0397                     	;# 
  4050  0398                     	;# 
  4051  0399                     	;# 
  4052  039A                     	;# 
  4053  039C                     	;# 
  4054  039D                     	;# 
  4055  039E                     	;# 
  4056  039F                     	;# 
  4057  0411                     	;# 
  4058  0411                     	;# 
  4059  0412                     	;# 
  4060  0413                     	;# 
  4061  0414                     	;# 
  4062  0415                     	;# 
  4063  0416                     	;# 
  4064  0417                     	;# 
  4065  0418                     	;# 
  4066  0418                     	;# 
  4067  0419                     	;# 
  4068  041A                     	;# 
  4069  041B                     	;# 
  4070  041C                     	;# 
  4071  041D                     	;# 
  4072  041E                     	;# 
  4073  041F                     	;# 
  4074  0498                     	;# 
  4075  0498                     	;# 
  4076  0499                     	;# 
  4077  049A                     	;# 
  4078  049B                     	;# 
  4079  049B                     	;# 
  4080  049C                     	;# 
  4081  049D                     	;# 
  4082  049E                     	;# 
  4083  049F                     	;# 
  4084  0617                     	;# 
  4085  0618                     	;# 
  4086  0619                     	;# 
  4087  0619                     	;# 
  4088  061A                     	;# 
  4089  061B                     	;# 
  4090  061C                     	;# 
  4091  061C                     	;# 
  4092  061F                     	;# 
  4093  0691                     	;# 
  4094  0692                     	;# 
  4095  0693                     	;# 
  4096  0694                     	;# 
  4097  0695                     	;# 
  4098  0696                     	;# 
  4099  0697                     	;# 
  4100  0698                     	;# 
  4101  0699                     	;# 
  4102  0711                     	;# 
  4103  0712                     	;# 
  4104  0713                     	;# 
  4105  0714                     	;# 
  4106  0715                     	;# 
  4107  0716                     	;# 
  4108  0717                     	;# 
  4109  0718                     	;# 
  4110  0719                     	;# 
  4111  0891                     	;# 
  4112  0891                     	;# 
  4113  0891                     	;# 
  4114  0891                     	;# 
  4115  0891                     	;# 
  4116  0891                     	;# 
  4117  0892                     	;# 
  4118  0892                     	;# 
  4119  0892                     	;# 
  4120  0893                     	;# 
  4121  0893                     	;# 
  4122  0893                     	;# 
  4123  0893                     	;# 
  4124  0893                     	;# 
  4125  0893                     	;# 
  4126  0894                     	;# 
  4127  0894                     	;# 
  4128  0894                     	;# 
  4129  0895                     	;# 
  4130  0895                     	;# 
  4131  0895                     	;# 
  4132  0896                     	;# 
  4133  0896                     	;# 
  4134  0896                     	;# 
  4135  089B                     	;# 
  4136  0911                     	;# 
  4137  0912                     	;# 
  4138  0913                     	;# 
  4139  0914                     	;# 
  4140  0915                     	;# 
  4141  0916                     	;# 
  4142  0918                     	;# 
  4143  0919                     	;# 
  4144  091A                     	;# 
  4145  091B                     	;# 
  4146  091C                     	;# 
  4147  091D                     	;# 
  4148  091E                     	;# 
  4149  091F                     	;# 
  4150  0E0F                     	;# 
  4151  0E10                     	;# 
  4152  0E11                     	;# 
  4153  0E12                     	;# 
  4154  0E13                     	;# 
  4155  0E14                     	;# 
  4156  0E15                     	;# 
  4157  0E16                     	;# 
  4158  0E17                     	;# 
  4159  0E18                     	;# 
  4160  0E19                     	;# 
  4161  0E1A                     	;# 
  4162  0E1B                     	;# 
  4163  0E1C                     	;# 
  4164  0E1D                     	;# 
  4165  0E1E                     	;# 
  4166  0E1F                     	;# 
  4167  0E20                     	;# 
  4168  0E21                     	;# 
  4169  0E22                     	;# 
  4170  0E24                     	;# 
  4171  0E25                     	;# 
  4172  0E28                     	;# 
  4173  0E29                     	;# 
  4174  0E2A                     	;# 
  4175  0E2B                     	;# 
  4176  0E2C                     	;# 
  4177  0E2D                     	;# 
  4178  0E2E                     	;# 
  4179  0E2F                     	;# 
  4180  0E90                     	;# 
  4181  0E91                     	;# 
  4182  0E92                     	;# 
  4183  0E94                     	;# 
  4184  0E95                     	;# 
  4185  0EA0                     	;# 
  4186  0EA1                     	;# 
  4187  0EA2                     	;# 
  4188  0EA3                     	;# 
  4189  0EA4                     	;# 
  4190  0EA5                     	;# 
  4191  0F0F                     	;# 
  4192  0F10                     	;# 
  4193  0F11                     	;# 
  4194  0F12                     	;# 
  4195  0F13                     	;# 
  4196  0F14                     	;# 
  4197  0F15                     	;# 
  4198  0F16                     	;# 
  4199  0F17                     	;# 
  4200  0F18                     	;# 
  4201  0F19                     	;# 
  4202  0F1A                     	;# 
  4203  0F1B                     	;# 
  4204  0F1C                     	;# 
  4205  0F1D                     	;# 
  4206  0F1E                     	;# 
  4207  0F1F                     	;# 
  4208  0F20                     	;# 
  4209  0F21                     	;# 
  4210  0F22                     	;# 
  4211  0F23                     	;# 
  4212  0F24                     	;# 
  4213  0F25                     	;# 
  4214  0F26                     	;# 
  4215  0F27                     	;# 
  4216  0F28                     	;# 
  4217  0F29                     	;# 
  4218  0F2A                     	;# 
  4219  0F2B                     	;# 
  4220  0F2C                     	;# 
  4221  0F2D                     	;# 
  4222  0F2E                     	;# 
  4223  0F2F                     	;# 
  4224  0F30                     	;# 
  4225  0F31                     	;# 
  4226  0F32                     	;# 
  4227  0F33                     	;# 
  4228  0F34                     	;# 
  4229  0F35                     	;# 
  4230  0F36                     	;# 
  4231  0F37                     	;# 
  4232  0FE4                     	;# 
  4233  0FE5                     	;# 
  4234  0FE6                     	;# 
  4235  0FE7                     	;# 
  4236  0FE8                     	;# 
  4237  0FE9                     	;# 
  4238  0FEA                     	;# 
  4239  0FEB                     	;# 
  4240  0FED                     	;# 
  4241  0FEE                     	;# 
  4242  0FEF                     	;# 
  4243  0000                     	;# 
  4244  0001                     	;# 
  4245  0002                     	;# 
  4246  0003                     	;# 
  4247  0004                     	;# 
  4248  0005                     	;# 
  4249  0006                     	;# 
  4250  0007                     	;# 
  4251  0008                     	;# 
  4252  0009                     	;# 
  4253  000A                     	;# 
  4254  000B                     	;# 
  4255  000C                     	;# 
  4256  000E                     	;# 
  4257  0010                     	;# 
  4258  0011                     	;# 
  4259  0012                     	;# 
  4260  0013                     	;# 
  4261  0014                     	;# 
  4262  0015                     	;# 
  4263  0015                     	;# 
  4264  0016                     	;# 
  4265  0016                     	;# 
  4266  0017                     	;# 
  4267  0018                     	;# 
  4268  0019                     	;# 
  4269  0019                     	;# 
  4270  001A                     	;# 
  4271  001B                     	;# 
  4272  001C                     	;# 
  4273  001D                     	;# 
  4274  001E                     	;# 
  4275  001F                     	;# 
  4276  008C                     	;# 
  4277  008E                     	;# 
  4278  0090                     	;# 
  4279  0091                     	;# 
  4280  0092                     	;# 
  4281  0093                     	;# 
  4282  0094                     	;# 
  4283  0097                     	;# 
  4284  009B                     	;# 
  4285  009B                     	;# 
  4286  009C                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  009F                     	;# 
  4290  010C                     	;# 
  4291  010E                     	;# 
  4292  0111                     	;# 
  4293  0112                     	;# 
  4294  0113                     	;# 
  4295  0114                     	;# 
  4296  0115                     	;# 
  4297  0116                     	;# 
  4298  0117                     	;# 
  4299  0118                     	;# 
  4300  0119                     	;# 
  4301  018C                     	;# 
  4302  018E                     	;# 
  4303  0197                     	;# 
  4304  0199                     	;# 
  4305  0199                     	;# 
  4306  0199                     	;# 
  4307  019A                     	;# 
  4308  019A                     	;# 
  4309  019A                     	;# 
  4310  019B                     	;# 
  4311  019B                     	;# 
  4312  019B                     	;# 
  4313  019B                     	;# 
  4314  019B                     	;# 
  4315  019C                     	;# 
  4316  019C                     	;# 
  4317  019C                     	;# 
  4318  019D                     	;# 
  4319  019D                     	;# 
  4320  019D                     	;# 
  4321  019E                     	;# 
  4322  019E                     	;# 
  4323  019E                     	;# 
  4324  019F                     	;# 
  4325  019F                     	;# 
  4326  019F                     	;# 
  4327  019F                     	;# 
  4328  019F                     	;# 
  4329  020C                     	;# 
  4330  020E                     	;# 
  4331  0211                     	;# 
  4332  0211                     	;# 
  4333  0212                     	;# 
  4334  0212                     	;# 
  4335  0213                     	;# 
  4336  0213                     	;# 
  4337  0214                     	;# 
  4338  0214                     	;# 
  4339  0215                     	;# 
  4340  0215                     	;# 
  4341  0215                     	;# 
  4342  0215                     	;# 
  4343  0216                     	;# 
  4344  0216                     	;# 
  4345  0217                     	;# 
  4346  0217                     	;# 
  4347  0219                     	;# 
  4348  021A                     	;# 
  4349  021B                     	;# 
  4350  021C                     	;# 
  4351  021D                     	;# 
  4352  021D                     	;# 
  4353  021E                     	;# 
  4354  021F                     	;# 
  4355  028C                     	;# 
  4356  028E                     	;# 
  4357  0291                     	;# 
  4358  0291                     	;# 
  4359  0292                     	;# 
  4360  0293                     	;# 
  4361  0294                     	;# 
  4362  0295                     	;# 
  4363  0295                     	;# 
  4364  0296                     	;# 
  4365  0297                     	;# 
  4366  0298                     	;# 
  4367  029F                     	;# 
  4368  030C                     	;# 
  4369  030E                     	;# 
  4370  0311                     	;# 
  4371  0311                     	;# 
  4372  0312                     	;# 
  4373  0313                     	;# 
  4374  0314                     	;# 
  4375  0315                     	;# 
  4376  0315                     	;# 
  4377  0316                     	;# 
  4378  0317                     	;# 
  4379  0318                     	;# 
  4380  038C                     	;# 
  4381  038E                     	;# 
  4382  0391                     	;# 
  4383  0392                     	;# 
  4384  0393                     	;# 
  4385  0397                     	;# 
  4386  0398                     	;# 
  4387  0399                     	;# 
  4388  039A                     	;# 
  4389  039C                     	;# 
  4390  039D                     	;# 
  4391  039E                     	;# 
  4392  039F                     	;# 
  4393  0411                     	;# 
  4394  0411                     	;# 
  4395  0412                     	;# 
  4396  0413                     	;# 
  4397  0414                     	;# 
  4398  0415                     	;# 
  4399  0416                     	;# 
  4400  0417                     	;# 
  4401  0418                     	;# 
  4402  0418                     	;# 
  4403  0419                     	;# 
  4404  041A                     	;# 
  4405  041B                     	;# 
  4406  041C                     	;# 
  4407  041D                     	;# 
  4408  041E                     	;# 
  4409  041F                     	;# 
  4410  0498                     	;# 
  4411  0498                     	;# 
  4412  0499                     	;# 
  4413  049A                     	;# 
  4414  049B                     	;# 
  4415  049B                     	;# 
  4416  049C                     	;# 
  4417  049D                     	;# 
  4418  049E                     	;# 
  4419  049F                     	;# 
  4420  0617                     	;# 
  4421  0618                     	;# 
  4422  0619                     	;# 
  4423  0619                     	;# 
  4424  061A                     	;# 
  4425  061B                     	;# 
  4426  061C                     	;# 
  4427  061C                     	;# 
  4428  061F                     	;# 
  4429  0691                     	;# 
  4430  0692                     	;# 
  4431  0693                     	;# 
  4432  0694                     	;# 
  4433  0695                     	;# 
  4434  0696                     	;# 
  4435  0697                     	;# 
  4436  0698                     	;# 
  4437  0699                     	;# 
  4438  0711                     	;# 
  4439  0712                     	;# 
  4440  0713                     	;# 
  4441  0714                     	;# 
  4442  0715                     	;# 
  4443  0716                     	;# 
  4444  0717                     	;# 
  4445  0718                     	;# 
  4446  0719                     	;# 
  4447  0891                     	;# 
  4448  0891                     	;# 
  4449  0891                     	;# 
  4450  0891                     	;# 
  4451  0891                     	;# 
  4452  0891                     	;# 
  4453  0892                     	;# 
  4454  0892                     	;# 
  4455  0892                     	;# 
  4456  0893                     	;# 
  4457  0893                     	;# 
  4458  0893                     	;# 
  4459  0893                     	;# 
  4460  0893                     	;# 
  4461  0893                     	;# 
  4462  0894                     	;# 
  4463  0894                     	;# 
  4464  0894                     	;# 
  4465  0895                     	;# 
  4466  0895                     	;# 
  4467  0895                     	;# 
  4468  0896                     	;# 
  4469  0896                     	;# 
  4470  0896                     	;# 
  4471  089B                     	;# 
  4472  0911                     	;# 
  4473  0912                     	;# 
  4474  0913                     	;# 
  4475  0914                     	;# 
  4476  0915                     	;# 
  4477  0916                     	;# 
  4478  0918                     	;# 
  4479  0919                     	;# 
  4480  091A                     	;# 
  4481  091B                     	;# 
  4482  091C                     	;# 
  4483  091D                     	;# 
  4484  091E                     	;# 
  4485  091F                     	;# 
  4486  0E0F                     	;# 
  4487  0E10                     	;# 
  4488  0E11                     	;# 
  4489  0E12                     	;# 
  4490  0E13                     	;# 
  4491  0E14                     	;# 
  4492  0E15                     	;# 
  4493  0E16                     	;# 
  4494  0E17                     	;# 
  4495  0E18                     	;# 
  4496  0E19                     	;# 
  4497  0E1A                     	;# 
  4498  0E1B                     	;# 
  4499  0E1C                     	;# 
  4500  0E1D                     	;# 
  4501  0E1E                     	;# 
  4502  0E1F                     	;# 
  4503  0E20                     	;# 
  4504  0E21                     	;# 
  4505  0E22                     	;# 
  4506  0E24                     	;# 
  4507  0E25                     	;# 
  4508  0E28                     	;# 
  4509  0E29                     	;# 
  4510  0E2A                     	;# 
  4511  0E2B                     	;# 
  4512  0E2C                     	;# 
  4513  0E2D                     	;# 
  4514  0E2E                     	;# 
  4515  0E2F                     	;# 
  4516  0E90                     	;# 
  4517  0E91                     	;# 
  4518  0E92                     	;# 
  4519  0E94                     	;# 
  4520  0E95                     	;# 
  4521  0EA0                     	;# 
  4522  0EA1                     	;# 
  4523  0EA2                     	;# 
  4524  0EA3                     	;# 
  4525  0EA4                     	;# 
  4526  0EA5                     	;# 
  4527  0F0F                     	;# 
  4528  0F10                     	;# 
  4529  0F11                     	;# 
  4530  0F12                     	;# 
  4531  0F13                     	;# 
  4532  0F14                     	;# 
  4533  0F15                     	;# 
  4534  0F16                     	;# 
  4535  0F17                     	;# 
  4536  0F18                     	;# 
  4537  0F19                     	;# 
  4538  0F1A                     	;# 
  4539  0F1B                     	;# 
  4540  0F1C                     	;# 
  4541  0F1D                     	;# 
  4542  0F1E                     	;# 
  4543  0F1F                     	;# 
  4544  0F20                     	;# 
  4545  0F21                     	;# 
  4546  0F22                     	;# 
  4547  0F23                     	;# 
  4548  0F24                     	;# 
  4549  0F25                     	;# 
  4550  0F26                     	;# 
  4551  0F27                     	;# 
  4552  0F28                     	;# 
  4553  0F29                     	;# 
  4554  0F2A                     	;# 
  4555  0F2B                     	;# 
  4556  0F2C                     	;# 
  4557  0F2D                     	;# 
  4558  0F2E                     	;# 
  4559  0F2F                     	;# 
  4560  0F30                     	;# 
  4561  0F31                     	;# 
  4562  0F32                     	;# 
  4563  0F33                     	;# 
  4564  0F34                     	;# 
  4565  0F35                     	;# 
  4566  0F36                     	;# 
  4567  0F37                     	;# 
  4568  0FE4                     	;# 
  4569  0FE5                     	;# 
  4570  0FE6                     	;# 
  4571  0FE7                     	;# 
  4572  0FE8                     	;# 
  4573  0FE9                     	;# 
  4574  0FEA                     	;# 
  4575  0FEB                     	;# 
  4576  0FED                     	;# 
  4577  0FEE                     	;# 
  4578  0FEF                     	;# 
  4579  0000                     	;# 
  4580  0001                     	;# 
  4581  0002                     	;# 
  4582  0003                     	;# 
  4583  0004                     	;# 
  4584  0005                     	;# 
  4585  0006                     	;# 
  4586  0007                     	;# 
  4587  0008                     	;# 
  4588  0009                     	;# 
  4589  000A                     	;# 
  4590  000B                     	;# 
  4591  000C                     	;# 
  4592  000E                     	;# 
  4593  0010                     	;# 
  4594  0011                     	;# 
  4595  0012                     	;# 
  4596  0013                     	;# 
  4597  0014                     	;# 
  4598  0015                     	;# 
  4599  0015                     	;# 
  4600  0016                     	;# 
  4601  0016                     	;# 
  4602  0017                     	;# 
  4603  0018                     	;# 
  4604  0019                     	;# 
  4605  0019                     	;# 
  4606  001A                     	;# 
  4607  001B                     	;# 
  4608  001C                     	;# 
  4609  001D                     	;# 
  4610  001E                     	;# 
  4611  001F                     	;# 
  4612  008C                     	;# 
  4613  008E                     	;# 
  4614  0090                     	;# 
  4615  0091                     	;# 
  4616  0092                     	;# 
  4617  0093                     	;# 
  4618  0094                     	;# 
  4619  0097                     	;# 
  4620  009B                     	;# 
  4621  009B                     	;# 
  4622  009C                     	;# 
  4623  009D                     	;# 
  4624  009E                     	;# 
  4625  009F                     	;# 
  4626  010C                     	;# 
  4627  010E                     	;# 
  4628  0111                     	;# 
  4629  0112                     	;# 
  4630  0113                     	;# 
  4631  0114                     	;# 
  4632  0115                     	;# 
  4633  0116                     	;# 
  4634  0117                     	;# 
  4635  0118                     	;# 
  4636  0119                     	;# 
  4637  018C                     	;# 
  4638  018E                     	;# 
  4639  0197                     	;# 
  4640  0199                     	;# 
  4641  0199                     	;# 
  4642  0199                     	;# 
  4643  019A                     	;# 
  4644  019A                     	;# 
  4645  019A                     	;# 
  4646  019B                     	;# 
  4647  019B                     	;# 
  4648  019B                     	;# 
  4649  019B                     	;# 
  4650  019B                     	;# 
  4651  019C                     	;# 
  4652  019C                     	;# 
  4653  019C                     	;# 
  4654  019D                     	;# 
  4655  019D                     	;# 
  4656  019D                     	;# 
  4657  019E                     	;# 
  4658  019E                     	;# 
  4659  019E                     	;# 
  4660  019F                     	;# 
  4661  019F                     	;# 
  4662  019F                     	;# 
  4663  019F                     	;# 
  4664  019F                     	;# 
  4665  020C                     	;# 
  4666  020E                     	;# 
  4667  0211                     	;# 
  4668  0211                     	;# 
  4669  0212                     	;# 
  4670  0212                     	;# 
  4671  0213                     	;# 
  4672  0213                     	;# 
  4673  0214                     	;# 
  4674  0214                     	;# 
  4675  0215                     	;# 
  4676  0215                     	;# 
  4677  0215                     	;# 
  4678  0215                     	;# 
  4679  0216                     	;# 
  4680  0216                     	;# 
  4681  0217                     	;# 
  4682  0217                     	;# 
  4683  0219                     	;# 
  4684  021A                     	;# 
  4685  021B                     	;# 
  4686  021C                     	;# 
  4687  021D                     	;# 
  4688  021D                     	;# 
  4689  021E                     	;# 
  4690  021F                     	;# 
  4691  028C                     	;# 
  4692  028E                     	;# 
  4693  0291                     	;# 
  4694  0291                     	;# 
  4695  0292                     	;# 
  4696  0293                     	;# 
  4697  0294                     	;# 
  4698  0295                     	;# 
  4699  0295                     	;# 
  4700  0296                     	;# 
  4701  0297                     	;# 
  4702  0298                     	;# 
  4703  029F                     	;# 
  4704  030C                     	;# 
  4705  030E                     	;# 
  4706  0311                     	;# 
  4707  0311                     	;# 
  4708  0312                     	;# 
  4709  0313                     	;# 
  4710  0314                     	;# 
  4711  0315                     	;# 
  4712  0315                     	;# 
  4713  0316                     	;# 
  4714  0317                     	;# 
  4715  0318                     	;# 
  4716  038C                     	;# 
  4717  038E                     	;# 
  4718  0391                     	;# 
  4719  0392                     	;# 
  4720  0393                     	;# 
  4721  0397                     	;# 
  4722  0398                     	;# 
  4723  0399                     	;# 
  4724  039A                     	;# 
  4725  039C                     	;# 
  4726  039D                     	;# 
  4727  039E                     	;# 
  4728  039F                     	;# 
  4729  0411                     	;# 
  4730  0411                     	;# 
  4731  0412                     	;# 
  4732  0413                     	;# 
  4733  0414                     	;# 
  4734  0415                     	;# 
  4735  0416                     	;# 
  4736  0417                     	;# 
  4737  0418                     	;# 
  4738  0418                     	;# 
  4739  0419                     	;# 
  4740  041A                     	;# 
  4741  041B                     	;# 
  4742  041C                     	;# 
  4743  041D                     	;# 
  4744  041E                     	;# 
  4745  041F                     	;# 
  4746  0498                     	;# 
  4747  0498                     	;# 
  4748  0499                     	;# 
  4749  049A                     	;# 
  4750  049B                     	;# 
  4751  049B                     	;# 
  4752  049C                     	;# 
  4753  049D                     	;# 
  4754  049E                     	;# 
  4755  049F                     	;# 
  4756  0617                     	;# 
  4757  0618                     	;# 
  4758  0619                     	;# 
  4759  0619                     	;# 
  4760  061A                     	;# 
  4761  061B                     	;# 
  4762  061C                     	;# 
  4763  061C                     	;# 
  4764  061F                     	;# 
  4765  0691                     	;# 
  4766  0692                     	;# 
  4767  0693                     	;# 
  4768  0694                     	;# 
  4769  0695                     	;# 
  4770  0696                     	;# 
  4771  0697                     	;# 
  4772  0698                     	;# 
  4773  0699                     	;# 
  4774  0711                     	;# 
  4775  0712                     	;# 
  4776  0713                     	;# 
  4777  0714                     	;# 
  4778  0715                     	;# 
  4779  0716                     	;# 
  4780  0717                     	;# 
  4781  0718                     	;# 
  4782  0719                     	;# 
  4783  0891                     	;# 
  4784  0891                     	;# 
  4785  0891                     	;# 
  4786  0891                     	;# 
  4787  0891                     	;# 
  4788  0891                     	;# 
  4789  0892                     	;# 
  4790  0892                     	;# 
  4791  0892                     	;# 
  4792  0893                     	;# 
  4793  0893                     	;# 
  4794  0893                     	;# 
  4795  0893                     	;# 
  4796  0893                     	;# 
  4797  0893                     	;# 
  4798  0894                     	;# 
  4799  0894                     	;# 
  4800  0894                     	;# 
  4801  0895                     	;# 
  4802  0895                     	;# 
  4803  0895                     	;# 
  4804  0896                     	;# 
  4805  0896                     	;# 
  4806  0896                     	;# 
  4807  089B                     	;# 
  4808  0911                     	;# 
  4809  0912                     	;# 
  4810  0913                     	;# 
  4811  0914                     	;# 
  4812  0915                     	;# 
  4813  0916                     	;# 
  4814  0918                     	;# 
  4815  0919                     	;# 
  4816  091A                     	;# 
  4817  091B                     	;# 
  4818  091C                     	;# 
  4819  091D                     	;# 
  4820  091E                     	;# 
  4821  091F                     	;# 
  4822  0E0F                     	;# 
  4823  0E10                     	;# 
  4824  0E11                     	;# 
  4825  0E12                     	;# 
  4826  0E13                     	;# 
  4827  0E14                     	;# 
  4828  0E15                     	;# 
  4829  0E16                     	;# 
  4830  0E17                     	;# 
  4831  0E18                     	;# 
  4832  0E19                     	;# 
  4833  0E1A                     	;# 
  4834  0E1B                     	;# 
  4835  0E1C                     	;# 
  4836  0E1D                     	;# 
  4837  0E1E                     	;# 
  4838  0E1F                     	;# 
  4839  0E20                     	;# 
  4840  0E21                     	;# 
  4841  0E22                     	;# 
  4842  0E24                     	;# 
  4843  0E25                     	;# 
  4844  0E28                     	;# 
  4845  0E29                     	;# 
  4846  0E2A                     	;# 
  4847  0E2B                     	;# 
  4848  0E2C                     	;# 
  4849  0E2D                     	;# 
  4850  0E2E                     	;# 
  4851  0E2F                     	;# 
  4852  0E90                     	;# 
  4853  0E91                     	;# 
  4854  0E92                     	;# 
  4855  0E94                     	;# 
  4856  0E95                     	;# 
  4857  0EA0                     	;# 
  4858  0EA1                     	;# 
  4859  0EA2                     	;# 
  4860  0EA3                     	;# 
  4861  0EA4                     	;# 
  4862  0EA5                     	;# 
  4863  0F0F                     	;# 
  4864  0F10                     	;# 
  4865  0F11                     	;# 
  4866  0F12                     	;# 
  4867  0F13                     	;# 
  4868  0F14                     	;# 
  4869  0F15                     	;# 
  4870  0F16                     	;# 
  4871  0F17                     	;# 
  4872  0F18                     	;# 
  4873  0F19                     	;# 
  4874  0F1A                     	;# 
  4875  0F1B                     	;# 
  4876  0F1C                     	;# 
  4877  0F1D                     	;# 
  4878  0F1E                     	;# 
  4879  0F1F                     	;# 
  4880  0F20                     	;# 
  4881  0F21                     	;# 
  4882  0F22                     	;# 
  4883  0F23                     	;# 
  4884  0F24                     	;# 
  4885  0F25                     	;# 
  4886  0F26                     	;# 
  4887  0F27                     	;# 
  4888  0F28                     	;# 
  4889  0F29                     	;# 
  4890  0F2A                     	;# 
  4891  0F2B                     	;# 
  4892  0F2C                     	;# 
  4893  0F2D                     	;# 
  4894  0F2E                     	;# 
  4895  0F2F                     	;# 
  4896  0F30                     	;# 
  4897  0F31                     	;# 
  4898  0F32                     	;# 
  4899  0F33                     	;# 
  4900  0F34                     	;# 
  4901  0F35                     	;# 
  4902  0F36                     	;# 
  4903  0F37                     	;# 
  4904  0FE4                     	;# 
  4905  0FE5                     	;# 
  4906  0FE6                     	;# 
  4907  0FE7                     	;# 
  4908  0FE8                     	;# 
  4909  0FE9                     	;# 
  4910  0FEA                     	;# 
  4911  0FEB                     	;# 
  4912  0FED                     	;# 
  4913  0FEE                     	;# 
  4914  0FEF                     	;# 
  4915  0000                     	;# 
  4916  0001                     	;# 
  4917  0002                     	;# 
  4918  0003                     	;# 
  4919  0004                     	;# 
  4920  0005                     	;# 
  4921  0006                     	;# 
  4922  0007                     	;# 
  4923  0008                     	;# 
  4924  0009                     	;# 
  4925  000A                     	;# 
  4926  000B                     	;# 
  4927  000C                     	;# 
  4928  000E                     	;# 
  4929  0010                     	;# 
  4930  0011                     	;# 
  4931  0012                     	;# 
  4932  0013                     	;# 
  4933  0014                     	;# 
  4934  0015                     	;# 
  4935  0015                     	;# 
  4936  0016                     	;# 
  4937  0016                     	;# 
  4938  0017                     	;# 
  4939  0018                     	;# 
  4940  0019                     	;# 
  4941  0019                     	;# 
  4942  001A                     	;# 
  4943  001B                     	;# 
  4944  001C                     	;# 
  4945  001D                     	;# 
  4946  001E                     	;# 
  4947  001F                     	;# 
  4948  008C                     	;# 
  4949  008E                     	;# 
  4950  0090                     	;# 
  4951  0091                     	;# 
  4952  0092                     	;# 
  4953  0093                     	;# 
  4954  0094                     	;# 
  4955  0097                     	;# 
  4956  009B                     	;# 
  4957  009B                     	;# 
  4958  009C                     	;# 
  4959  009D                     	;# 
  4960  009E                     	;# 
  4961  009F                     	;# 
  4962  010C                     	;# 
  4963  010E                     	;# 
  4964  0111                     	;# 
  4965  0112                     	;# 
  4966  0113                     	;# 
  4967  0114                     	;# 
  4968  0115                     	;# 
  4969  0116                     	;# 
  4970  0117                     	;# 
  4971  0118                     	;# 
  4972  0119                     	;# 
  4973  018C                     	;# 
  4974  018E                     	;# 
  4975  0197                     	;# 
  4976  0199                     	;# 
  4977  0199                     	;# 
  4978  0199                     	;# 
  4979  019A                     	;# 
  4980  019A                     	;# 
  4981  019A                     	;# 
  4982  019B                     	;# 
  4983  019B                     	;# 
  4984  019B                     	;# 
  4985  019B                     	;# 
  4986  019B                     	;# 
  4987  019C                     	;# 
  4988  019C                     	;# 
  4989  019C                     	;# 
  4990  019D                     	;# 
  4991  019D                     	;# 
  4992  019D                     	;# 
  4993  019E                     	;# 
  4994  019E                     	;# 
  4995  019E                     	;# 
  4996  019F                     	;# 
  4997  019F                     	;# 
  4998  019F                     	;# 
  4999  019F                     	;# 
  5000  019F                     	;# 
  5001  020C                     	;# 
  5002  020E                     	;# 
  5003  0211                     	;# 
  5004  0211                     	;# 
  5005  0212                     	;# 
  5006  0212                     	;# 
  5007  0213                     	;# 
  5008  0213                     	;# 
  5009  0214                     	;# 
  5010  0214                     	;# 
  5011  0215                     	;# 
  5012  0215                     	;# 
  5013  0215                     	;# 
  5014  0215                     	;# 
  5015  0216                     	;# 
  5016  0216                     	;# 
  5017  0217                     	;# 
  5018  0217                     	;# 
  5019  0219                     	;# 
  5020  021A                     	;# 
  5021  021B                     	;# 
  5022  021C                     	;# 
  5023  021D                     	;# 
  5024  021D                     	;# 
  5025  021E                     	;# 
  5026  021F                     	;# 
  5027  028C                     	;# 
  5028  028E                     	;# 
  5029  0291                     	;# 
  5030  0291                     	;# 
  5031  0292                     	;# 
  5032  0293                     	;# 
  5033  0294                     	;# 
  5034  0295                     	;# 
  5035  0295                     	;# 
  5036  0296                     	;# 
  5037  0297                     	;# 
  5038  0298                     	;# 
  5039  029F                     	;# 
  5040  030C                     	;# 
  5041  030E                     	;# 
  5042  0311                     	;# 
  5043  0311                     	;# 
  5044  0312                     	;# 
  5045  0313                     	;# 
  5046  0314                     	;# 
  5047  0315                     	;# 
  5048  0315                     	;# 
  5049  0316                     	;# 
  5050  0317                     	;# 
  5051  0318                     	;# 
  5052  038C                     	;# 
  5053  038E                     	;# 
  5054  0391                     	;# 
  5055  0392                     	;# 
  5056  0393                     	;# 
  5057  0397                     	;# 
  5058  0398                     	;# 
  5059  0399                     	;# 
  5060  039A                     	;# 
  5061  039C                     	;# 
  5062  039D                     	;# 
  5063  039E                     	;# 
  5064  039F                     	;# 
  5065  0411                     	;# 
  5066  0411                     	;# 
  5067  0412                     	;# 
  5068  0413                     	;# 
  5069  0414                     	;# 
  5070  0415                     	;# 
  5071  0416                     	;# 
  5072  0417                     	;# 
  5073  0418                     	;# 
  5074  0418                     	;# 
  5075  0419                     	;# 
  5076  041A                     	;# 
  5077  041B                     	;# 
  5078  041C                     	;# 
  5079  041D                     	;# 
  5080  041E                     	;# 
  5081  041F                     	;# 
  5082  0498                     	;# 
  5083  0498                     	;# 
  5084  0499                     	;# 
  5085  049A                     	;# 
  5086  049B                     	;# 
  5087  049B                     	;# 
  5088  049C                     	;# 
  5089  049D                     	;# 
  5090  049E                     	;# 
  5091  049F                     	;# 
  5092  0617                     	;# 
  5093  0618                     	;# 
  5094  0619                     	;# 
  5095  0619                     	;# 
  5096  061A                     	;# 
  5097  061B                     	;# 
  5098  061C                     	;# 
  5099  061C                     	;# 
  5100  061F                     	;# 
  5101  0691                     	;# 
  5102  0692                     	;# 
  5103  0693                     	;# 
  5104  0694                     	;# 
  5105  0695                     	;# 
  5106  0696                     	;# 
  5107  0697                     	;# 
  5108  0698                     	;# 
  5109  0699                     	;# 
  5110  0711                     	;# 
  5111  0712                     	;# 
  5112  0713                     	;# 
  5113  0714                     	;# 
  5114  0715                     	;# 
  5115  0716                     	;# 
  5116  0717                     	;# 
  5117  0718                     	;# 
  5118  0719                     	;# 
  5119  0891                     	;# 
  5120  0891                     	;# 
  5121  0891                     	;# 
  5122  0891                     	;# 
  5123  0891                     	;# 
  5124  0891                     	;# 
  5125  0892                     	;# 
  5126  0892                     	;# 
  5127  0892                     	;# 
  5128  0893                     	;# 
  5129  0893                     	;# 
  5130  0893                     	;# 
  5131  0893                     	;# 
  5132  0893                     	;# 
  5133  0893                     	;# 
  5134  0894                     	;# 
  5135  0894                     	;# 
  5136  0894                     	;# 
  5137  0895                     	;# 
  5138  0895                     	;# 
  5139  0895                     	;# 
  5140  0896                     	;# 
  5141  0896                     	;# 
  5142  0896                     	;# 
  5143  089B                     	;# 
  5144  0911                     	;# 
  5145  0912                     	;# 
  5146  0913                     	;# 
  5147  0914                     	;# 
  5148  0915                     	;# 
  5149  0916                     	;# 
  5150  0918                     	;# 
  5151  0919                     	;# 
  5152  091A                     	;# 
  5153  091B                     	;# 
  5154  091C                     	;# 
  5155  091D                     	;# 
  5156  091E                     	;# 
  5157  091F                     	;# 
  5158  0E0F                     	;# 
  5159  0E10                     	;# 
  5160  0E11                     	;# 
  5161  0E12                     	;# 
  5162  0E13                     	;# 
  5163  0E14                     	;# 
  5164  0E15                     	;# 
  5165  0E16                     	;# 
  5166  0E17                     	;# 
  5167  0E18                     	;# 
  5168  0E19                     	;# 
  5169  0E1A                     	;# 
  5170  0E1B                     	;# 
  5171  0E1C                     	;# 
  5172  0E1D                     	;# 
  5173  0E1E                     	;# 
  5174  0E1F                     	;# 
  5175  0E20                     	;# 
  5176  0E21                     	;# 
  5177  0E22                     	;# 
  5178  0E24                     	;# 
  5179  0E25                     	;# 
  5180  0E28                     	;# 
  5181  0E29                     	;# 
  5182  0E2A                     	;# 
  5183  0E2B                     	;# 
  5184  0E2C                     	;# 
  5185  0E2D                     	;# 
  5186  0E2E                     	;# 
  5187  0E2F                     	;# 
  5188  0E90                     	;# 
  5189  0E91                     	;# 
  5190  0E92                     	;# 
  5191  0E94                     	;# 
  5192  0E95                     	;# 
  5193  0EA0                     	;# 
  5194  0EA1                     	;# 
  5195  0EA2                     	;# 
  5196  0EA3                     	;# 
  5197  0EA4                     	;# 
  5198  0EA5                     	;# 
  5199  0F0F                     	;# 
  5200  0F10                     	;# 
  5201  0F11                     	;# 
  5202  0F12                     	;# 
  5203  0F13                     	;# 
  5204  0F14                     	;# 
  5205  0F15                     	;# 
  5206  0F16                     	;# 
  5207  0F17                     	;# 
  5208  0F18                     	;# 
  5209  0F19                     	;# 
  5210  0F1A                     	;# 
  5211  0F1B                     	;# 
  5212  0F1C                     	;# 
  5213  0F1D                     	;# 
  5214  0F1E                     	;# 
  5215  0F1F                     	;# 
  5216  0F20                     	;# 
  5217  0F21                     	;# 
  5218  0F22                     	;# 
  5219  0F23                     	;# 
  5220  0F24                     	;# 
  5221  0F25                     	;# 
  5222  0F26                     	;# 
  5223  0F27                     	;# 
  5224  0F28                     	;# 
  5225  0F29                     	;# 
  5226  0F2A                     	;# 
  5227  0F2B                     	;# 
  5228  0F2C                     	;# 
  5229  0F2D                     	;# 
  5230  0F2E                     	;# 
  5231  0F2F                     	;# 
  5232  0F30                     	;# 
  5233  0F31                     	;# 
  5234  0F32                     	;# 
  5235  0F33                     	;# 
  5236  0F34                     	;# 
  5237  0F35                     	;# 
  5238  0F36                     	;# 
  5239  0F37                     	;# 
  5240  0FE4                     	;# 
  5241  0FE5                     	;# 
  5242  0FE6                     	;# 
  5243  0FE7                     	;# 
  5244  0FE8                     	;# 
  5245  0FE9                     	;# 
  5246  0FEA                     	;# 
  5247  0FEB                     	;# 
  5248  0FED                     	;# 
  5249  0FEE                     	;# 
  5250  0FEF                     	;# 
  5251  0000                     	;# 
  5252  0001                     	;# 
  5253  0002                     	;# 
  5254  0003                     	;# 
  5255  0004                     	;# 
  5256  0005                     	;# 
  5257  0006                     	;# 
  5258  0007                     	;# 
  5259  0008                     	;# 
  5260  0009                     	;# 
  5261  000A                     	;# 
  5262  000B                     	;# 
  5263  000C                     	;# 
  5264  000E                     	;# 
  5265  0010                     	;# 
  5266  0011                     	;# 
  5267  0012                     	;# 
  5268  0013                     	;# 
  5269  0014                     	;# 
  5270  0015                     	;# 
  5271  0015                     	;# 
  5272  0016                     	;# 
  5273  0016                     	;# 
  5274  0017                     	;# 
  5275  0018                     	;# 
  5276  0019                     	;# 
  5277  0019                     	;# 
  5278  001A                     	;# 
  5279  001B                     	;# 
  5280  001C                     	;# 
  5281  001D                     	;# 
  5282  001E                     	;# 
  5283  001F                     	;# 
  5284  008C                     	;# 
  5285  008E                     	;# 
  5286  0090                     	;# 
  5287  0091                     	;# 
  5288  0092                     	;# 
  5289  0093                     	;# 
  5290  0094                     	;# 
  5291  0097                     	;# 
  5292  009B                     	;# 
  5293  009B                     	;# 
  5294  009C                     	;# 
  5295  009D                     	;# 
  5296  009E                     	;# 
  5297  009F                     	;# 
  5298  010C                     	;# 
  5299  010E                     	;# 
  5300  0111                     	;# 
  5301  0112                     	;# 
  5302  0113                     	;# 
  5303  0114                     	;# 
  5304  0115                     	;# 
  5305  0116                     	;# 
  5306  0117                     	;# 
  5307  0118                     	;# 
  5308  0119                     	;# 
  5309  018C                     	;# 
  5310  018E                     	;# 
  5311  0197                     	;# 
  5312  0199                     	;# 
  5313  0199                     	;# 
  5314  0199                     	;# 
  5315  019A                     	;# 
  5316  019A                     	;# 
  5317  019A                     	;# 
  5318  019B                     	;# 
  5319  019B                     	;# 
  5320  019B                     	;# 
  5321  019B                     	;# 
  5322  019B                     	;# 
  5323  019C                     	;# 
  5324  019C                     	;# 
  5325  019C                     	;# 
  5326  019D                     	;# 
  5327  019D                     	;# 
  5328  019D                     	;# 
  5329  019E                     	;# 
  5330  019E                     	;# 
  5331  019E                     	;# 
  5332  019F                     	;# 
  5333  019F                     	;# 
  5334  019F                     	;# 
  5335  019F                     	;# 
  5336  019F                     	;# 
  5337  020C                     	;# 
  5338  020E                     	;# 
  5339  0211                     	;# 
  5340  0211                     	;# 
  5341  0212                     	;# 
  5342  0212                     	;# 
  5343  0213                     	;# 
  5344  0213                     	;# 
  5345  0214                     	;# 
  5346  0214                     	;# 
  5347  0215                     	;# 
  5348  0215                     	;# 
  5349  0215                     	;# 
  5350  0215                     	;# 
  5351  0216                     	;# 
  5352  0216                     	;# 
  5353  0217                     	;# 
  5354  0217                     	;# 
  5355  0219                     	;# 
  5356  021A                     	;# 
  5357  021B                     	;# 
  5358  021C                     	;# 
  5359  021D                     	;# 
  5360  021D                     	;# 
  5361  021E                     	;# 
  5362  021F                     	;# 
  5363  028C                     	;# 
  5364  028E                     	;# 
  5365  0291                     	;# 
  5366  0291                     	;# 
  5367  0292                     	;# 
  5368  0293                     	;# 
  5369  0294                     	;# 
  5370  0295                     	;# 
  5371  0295                     	;# 
  5372  0296                     	;# 
  5373  0297                     	;# 
  5374  0298                     	;# 
  5375  029F                     	;# 
  5376  030C                     	;# 
  5377  030E                     	;# 
  5378  0311                     	;# 
  5379  0311                     	;# 
  5380  0312                     	;# 
  5381  0313                     	;# 
  5382  0314                     	;# 
  5383  0315                     	;# 
  5384  0315                     	;# 
  5385  0316                     	;# 
  5386  0317                     	;# 
  5387  0318                     	;# 
  5388  038C                     	;# 
  5389  038E                     	;# 
  5390  0391                     	;# 
  5391  0392                     	;# 
  5392  0393                     	;# 
  5393  0397                     	;# 
  5394  0398                     	;# 
  5395  0399                     	;# 
  5396  039A                     	;# 
  5397  039C                     	;# 
  5398  039D                     	;# 
  5399  039E                     	;# 
  5400  039F                     	;# 
  5401  0411                     	;# 
  5402  0411                     	;# 
  5403  0412                     	;# 
  5404  0413                     	;# 
  5405  0414                     	;# 
  5406  0415                     	;# 
  5407  0416                     	;# 
  5408  0417                     	;# 
  5409  0418                     	;# 
  5410  0418                     	;# 
  5411  0419                     	;# 
  5412  041A                     	;# 
  5413  041B                     	;# 
  5414  041C                     	;# 
  5415  041D                     	;# 
  5416  041E                     	;# 
  5417  041F                     	;# 
  5418  0498                     	;# 
  5419  0498                     	;# 
  5420  0499                     	;# 
  5421  049A                     	;# 
  5422  049B                     	;# 
  5423  049B                     	;# 
  5424  049C                     	;# 
  5425  049D                     	;# 
  5426  049E                     	;# 
  5427  049F                     	;# 
  5428  0617                     	;# 
  5429  0618                     	;# 
  5430  0619                     	;# 
  5431  0619                     	;# 
  5432  061A                     	;# 
  5433  061B                     	;# 
  5434  061C                     	;# 
  5435  061C                     	;# 
  5436  061F                     	;# 
  5437  0691                     	;# 
  5438  0692                     	;# 
  5439  0693                     	;# 
  5440  0694                     	;# 
  5441  0695                     	;# 
  5442  0696                     	;# 
  5443  0697                     	;# 
  5444  0698                     	;# 
  5445  0699                     	;# 
  5446  0711                     	;# 
  5447  0712                     	;# 
  5448  0713                     	;# 
  5449  0714                     	;# 
  5450  0715                     	;# 
  5451  0716                     	;# 
  5452  0717                     	;# 
  5453  0718                     	;# 
  5454  0719                     	;# 
  5455  0891                     	;# 
  5456  0891                     	;# 
  5457  0891                     	;# 
  5458  0891                     	;# 
  5459  0891                     	;# 
  5460  0891                     	;# 
  5461  0892                     	;# 
  5462  0892                     	;# 
  5463  0892                     	;# 
  5464  0893                     	;# 
  5465  0893                     	;# 
  5466  0893                     	;# 
  5467  0893                     	;# 
  5468  0893                     	;# 
  5469  0893                     	;# 
  5470  0894                     	;# 
  5471  0894                     	;# 
  5472  0894                     	;# 
  5473  0895                     	;# 
  5474  0895                     	;# 
  5475  0895                     	;# 
  5476  0896                     	;# 
  5477  0896                     	;# 
  5478  0896                     	;# 
  5479  089B                     	;# 
  5480  0911                     	;# 
  5481  0912                     	;# 
  5482  0913                     	;# 
  5483  0914                     	;# 
  5484  0915                     	;# 
  5485  0916                     	;# 
  5486  0918                     	;# 
  5487  0919                     	;# 
  5488  091A                     	;# 
  5489  091B                     	;# 
  5490  091C                     	;# 
  5491  091D                     	;# 
  5492  091E                     	;# 
  5493  091F                     	;# 
  5494  0E0F                     	;# 
  5495  0E10                     	;# 
  5496  0E11                     	;# 
  5497  0E12                     	;# 
  5498  0E13                     	;# 
  5499  0E14                     	;# 
  5500  0E15                     	;# 
  5501  0E16                     	;# 
  5502  0E17                     	;# 
  5503  0E18                     	;# 
  5504  0E19                     	;# 
  5505  0E1A                     	;# 
  5506  0E1B                     	;# 
  5507  0E1C                     	;# 
  5508  0E1D                     	;# 
  5509  0E1E                     	;# 
  5510  0E1F                     	;# 
  5511  0E20                     	;# 
  5512  0E21                     	;# 
  5513  0E22                     	;# 
  5514  0E24                     	;# 
  5515  0E25                     	;# 
  5516  0E28                     	;# 
  5517  0E29                     	;# 
  5518  0E2A                     	;# 
  5519  0E2B                     	;# 
  5520  0E2C                     	;# 
  5521  0E2D                     	;# 
  5522  0E2E                     	;# 
  5523  0E2F                     	;# 
  5524  0E90                     	;# 
  5525  0E91                     	;# 
  5526  0E92                     	;# 
  5527  0E94                     	;# 
  5528  0E95                     	;# 
  5529  0EA0                     	;# 
  5530  0EA1                     	;# 
  5531  0EA2                     	;# 
  5532  0EA3                     	;# 
  5533  0EA4                     	;# 
  5534  0EA5                     	;# 
  5535  0F0F                     	;# 
  5536  0F10                     	;# 
  5537  0F11                     	;# 
  5538  0F12                     	;# 
  5539  0F13                     	;# 
  5540  0F14                     	;# 
  5541  0F15                     	;# 
  5542  0F16                     	;# 
  5543  0F17                     	;# 
  5544  0F18                     	;# 
  5545  0F19                     	;# 
  5546  0F1A                     	;# 
  5547  0F1B                     	;# 
  5548  0F1C                     	;# 
  5549  0F1D                     	;# 
  5550  0F1E                     	;# 
  5551  0F1F                     	;# 
  5552  0F20                     	;# 
  5553  0F21                     	;# 
  5554  0F22                     	;# 
  5555  0F23                     	;# 
  5556  0F24                     	;# 
  5557  0F25                     	;# 
  5558  0F26                     	;# 
  5559  0F27                     	;# 
  5560  0F28                     	;# 
  5561  0F29                     	;# 
  5562  0F2A                     	;# 
  5563  0F2B                     	;# 
  5564  0F2C                     	;# 
  5565  0F2D                     	;# 
  5566  0F2E                     	;# 
  5567  0F2F                     	;# 
  5568  0F30                     	;# 
  5569  0F31                     	;# 
  5570  0F32                     	;# 
  5571  0F33                     	;# 
  5572  0F34                     	;# 
  5573  0F35                     	;# 
  5574  0F36                     	;# 
  5575  0F37                     	;# 
  5576  0FE4                     	;# 
  5577  0FE5                     	;# 
  5578  0FE6                     	;# 
  5579  0FE7                     	;# 
  5580  0FE8                     	;# 
  5581  0FE9                     	;# 
  5582  0FEA                     	;# 
  5583  0FEB                     	;# 
  5584  0FED                     	;# 
  5585  0FEE                     	;# 
  5586  0FEF                     	;# 
  5587  0000                     	;# 
  5588  0001                     	;# 
  5589  0002                     	;# 
  5590  0003                     	;# 
  5591  0004                     	;# 
  5592  0005                     	;# 
  5593  0006                     	;# 
  5594  0007                     	;# 
  5595  0008                     	;# 
  5596  0009                     	;# 
  5597  000A                     	;# 
  5598  000B                     	;# 
  5599  000C                     	;# 
  5600  000E                     	;# 
  5601  0010                     	;# 
  5602  0011                     	;# 
  5603  0012                     	;# 
  5604  0013                     	;# 
  5605  0014                     	;# 
  5606  0015                     	;# 
  5607  0015                     	;# 
  5608  0016                     	;# 
  5609  0016                     	;# 
  5610  0017                     	;# 
  5611  0018                     	;# 
  5612  0019                     	;# 
  5613  0019                     	;# 
  5614  001A                     	;# 
  5615  001B                     	;# 
  5616  001C                     	;# 
  5617  001D                     	;# 
  5618  001E                     	;# 
  5619  001F                     	;# 
  5620  008C                     	;# 
  5621  008E                     	;# 
  5622  0090                     	;# 
  5623  0091                     	;# 
  5624  0092                     	;# 
  5625  0093                     	;# 
  5626  0094                     	;# 
  5627  0097                     	;# 
  5628  009B                     	;# 
  5629  009B                     	;# 
  5630  009C                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  009F                     	;# 
  5634  010C                     	;# 
  5635  010E                     	;# 
  5636  0111                     	;# 
  5637  0112                     	;# 
  5638  0113                     	;# 
  5639  0114                     	;# 
  5640  0115                     	;# 
  5641  0116                     	;# 
  5642  0117                     	;# 
  5643  0118                     	;# 
  5644  0119                     	;# 
  5645  018C                     	;# 
  5646  018E                     	;# 
  5647  0197                     	;# 
  5648  0199                     	;# 
  5649  0199                     	;# 
  5650  0199                     	;# 
  5651  019A                     	;# 
  5652  019A                     	;# 
  5653  019A                     	;# 
  5654  019B                     	;# 
  5655  019B                     	;# 
  5656  019B                     	;# 
  5657  019B                     	;# 
  5658  019B                     	;# 
  5659  019C                     	;# 
  5660  019C                     	;# 
  5661  019C                     	;# 
  5662  019D                     	;# 
  5663  019D                     	;# 
  5664  019D                     	;# 
  5665  019E                     	;# 
  5666  019E                     	;# 
  5667  019E                     	;# 
  5668  019F                     	;# 
  5669  019F                     	;# 
  5670  019F                     	;# 
  5671  019F                     	;# 
  5672  019F                     	;# 
  5673  020C                     	;# 
  5674  020E                     	;# 
  5675  0211                     	;# 
  5676  0211                     	;# 
  5677  0212                     	;# 
  5678  0212                     	;# 
  5679  0213                     	;# 
  5680  0213                     	;# 
  5681  0214                     	;# 
  5682  0214                     	;# 
  5683  0215                     	;# 
  5684  0215                     	;# 
  5685  0215                     	;# 
  5686  0215                     	;# 
  5687  0216                     	;# 
  5688  0216                     	;# 
  5689  0217                     	;# 
  5690  0217                     	;# 
  5691  0219                     	;# 
  5692  021A                     	;# 
  5693  021B                     	;# 
  5694  021C                     	;# 
  5695  021D                     	;# 
  5696  021D                     	;# 
  5697  021E                     	;# 
  5698  021F                     	;# 
  5699  028C                     	;# 
  5700  028E                     	;# 
  5701  0291                     	;# 
  5702  0291                     	;# 
  5703  0292                     	;# 
  5704  0293                     	;# 
  5705  0294                     	;# 
  5706  0295                     	;# 
  5707  0295                     	;# 
  5708  0296                     	;# 
  5709  0297                     	;# 
  5710  0298                     	;# 
  5711  029F                     	;# 
  5712  030C                     	;# 
  5713  030E                     	;# 
  5714  0311                     	;# 
  5715  0311                     	;# 
  5716  0312                     	;# 
  5717  0313                     	;# 
  5718  0314                     	;# 
  5719  0315                     	;# 
  5720  0315                     	;# 
  5721  0316                     	;# 
  5722  0317                     	;# 
  5723  0318                     	;# 
  5724  038C                     	;# 
  5725  038E                     	;# 
  5726  0391                     	;# 
  5727  0392                     	;# 
  5728  0393                     	;# 
  5729  0397                     	;# 
  5730  0398                     	;# 
  5731  0399                     	;# 
  5732  039A                     	;# 
  5733  039C                     	;# 
  5734  039D                     	;# 
  5735  039E                     	;# 
  5736  039F                     	;# 
  5737  0411                     	;# 
  5738  0411                     	;# 
  5739  0412                     	;# 
  5740  0413                     	;# 
  5741  0414                     	;# 
  5742  0415                     	;# 
  5743  0416                     	;# 
  5744  0417                     	;# 
  5745  0418                     	;# 
  5746  0418                     	;# 
  5747  0419                     	;# 
  5748  041A                     	;# 
  5749  041B                     	;# 
  5750  041C                     	;# 
  5751  041D                     	;# 
  5752  041E                     	;# 
  5753  041F                     	;# 
  5754  0498                     	;# 
  5755  0498                     	;# 
  5756  0499                     	;# 
  5757  049A                     	;# 
  5758  049B                     	;# 
  5759  049B                     	;# 
  5760  049C                     	;# 
  5761  049D                     	;# 
  5762  049E                     	;# 
  5763  049F                     	;# 
  5764  0617                     	;# 
  5765  0618                     	;# 
  5766  0619                     	;# 
  5767  0619                     	;# 
  5768  061A                     	;# 
  5769  061B                     	;# 
  5770  061C                     	;# 
  5771  061C                     	;# 
  5772  061F                     	;# 
  5773  0691                     	;# 
  5774  0692                     	;# 
  5775  0693                     	;# 
  5776  0694                     	;# 
  5777  0695                     	;# 
  5778  0696                     	;# 
  5779  0697                     	;# 
  5780  0698                     	;# 
  5781  0699                     	;# 
  5782  0711                     	;# 
  5783  0712                     	;# 
  5784  0713                     	;# 
  5785  0714                     	;# 
  5786  0715                     	;# 
  5787  0716                     	;# 
  5788  0717                     	;# 
  5789  0718                     	;# 
  5790  0719                     	;# 
  5791  0891                     	;# 
  5792  0891                     	;# 
  5793  0891                     	;# 
  5794  0891                     	;# 
  5795  0891                     	;# 
  5796  0891                     	;# 
  5797  0892                     	;# 
  5798  0892                     	;# 
  5799  0892                     	;# 
  5800  0893                     	;# 
  5801  0893                     	;# 
  5802  0893                     	;# 
  5803  0893                     	;# 
  5804  0893                     	;# 
  5805  0893                     	;# 
  5806  0894                     	;# 
  5807  0894                     	;# 
  5808  0894                     	;# 
  5809  0895                     	;# 
  5810  0895                     	;# 
  5811  0895                     	;# 
  5812  0896                     	;# 
  5813  0896                     	;# 
  5814  0896                     	;# 
  5815  089B                     	;# 
  5816  0911                     	;# 
  5817  0912                     	;# 
  5818  0913                     	;# 
  5819  0914                     	;# 
  5820  0915                     	;# 
  5821  0916                     	;# 
  5822  0918                     	;# 
  5823  0919                     	;# 
  5824  091A                     	;# 
  5825  091B                     	;# 
  5826  091C                     	;# 
  5827  091D                     	;# 
  5828  091E                     	;# 
  5829  091F                     	;# 
  5830  0E0F                     	;# 
  5831  0E10                     	;# 
  5832  0E11                     	;# 
  5833  0E12                     	;# 
  5834  0E13                     	;# 
  5835  0E14                     	;# 
  5836  0E15                     	;# 
  5837  0E16                     	;# 
  5838  0E17                     	;# 
  5839  0E18                     	;# 
  5840  0E19                     	;# 
  5841  0E1A                     	;# 
  5842  0E1B                     	;# 
  5843  0E1C                     	;# 
  5844  0E1D                     	;# 
  5845  0E1E                     	;# 
  5846  0E1F                     	;# 
  5847  0E20                     	;# 
  5848  0E21                     	;# 
  5849  0E22                     	;# 
  5850  0E24                     	;# 
  5851  0E25                     	;# 
  5852  0E28                     	;# 
  5853  0E29                     	;# 
  5854  0E2A                     	;# 
  5855  0E2B                     	;# 
  5856  0E2C                     	;# 
  5857  0E2D                     	;# 
  5858  0E2E                     	;# 
  5859  0E2F                     	;# 
  5860  0E90                     	;# 
  5861  0E91                     	;# 
  5862  0E92                     	;# 
  5863  0E94                     	;# 
  5864  0E95                     	;# 
  5865  0EA0                     	;# 
  5866  0EA1                     	;# 
  5867  0EA2                     	;# 
  5868  0EA3                     	;# 
  5869  0EA4                     	;# 
  5870  0EA5                     	;# 
  5871  0F0F                     	;# 
  5872  0F10                     	;# 
  5873  0F11                     	;# 
  5874  0F12                     	;# 
  5875  0F13                     	;# 
  5876  0F14                     	;# 
  5877  0F15                     	;# 
  5878  0F16                     	;# 
  5879  0F17                     	;# 
  5880  0F18                     	;# 
  5881  0F19                     	;# 
  5882  0F1A                     	;# 
  5883  0F1B                     	;# 
  5884  0F1C                     	;# 
  5885  0F1D                     	;# 
  5886  0F1E                     	;# 
  5887  0F1F                     	;# 
  5888  0F20                     	;# 
  5889  0F21                     	;# 
  5890  0F22                     	;# 
  5891  0F23                     	;# 
  5892  0F24                     	;# 
  5893  0F25                     	;# 
  5894  0F26                     	;# 
  5895  0F27                     	;# 
  5896  0F28                     	;# 
  5897  0F29                     	;# 
  5898  0F2A                     	;# 
  5899  0F2B                     	;# 
  5900  0F2C                     	;# 
  5901  0F2D                     	;# 
  5902  0F2E                     	;# 
  5903  0F2F                     	;# 
  5904  0F30                     	;# 
  5905  0F31                     	;# 
  5906  0F32                     	;# 
  5907  0F33                     	;# 
  5908  0F34                     	;# 
  5909  0F35                     	;# 
  5910  0F36                     	;# 
  5911  0F37                     	;# 
  5912  0FE4                     	;# 
  5913  0FE5                     	;# 
  5914  0FE6                     	;# 
  5915  0FE7                     	;# 
  5916  0FE8                     	;# 
  5917  0FE9                     	;# 
  5918  0FEA                     	;# 
  5919  0FEB                     	;# 
  5920  0FED                     	;# 
  5921  0FEE                     	;# 
  5922  0FEF                     	;# 
  5923  0000                     	;# 
  5924  0001                     	;# 
  5925  0002                     	;# 
  5926  0003                     	;# 
  5927  0004                     	;# 
  5928  0005                     	;# 
  5929  0006                     	;# 
  5930  0007                     	;# 
  5931  0008                     	;# 
  5932  0009                     	;# 
  5933  000A                     	;# 
  5934  000B                     	;# 
  5935  000C                     	;# 
  5936  000E                     	;# 
  5937  0010                     	;# 
  5938  0011                     	;# 
  5939  0012                     	;# 
  5940  0013                     	;# 
  5941  0014                     	;# 
  5942  0015                     	;# 
  5943  0015                     	;# 
  5944  0016                     	;# 
  5945  0016                     	;# 
  5946  0017                     	;# 
  5947  0018                     	;# 
  5948  0019                     	;# 
  5949  0019                     	;# 
  5950  001A                     	;# 
  5951  001B                     	;# 
  5952  001C                     	;# 
  5953  001D                     	;# 
  5954  001E                     	;# 
  5955  001F                     	;# 
  5956  008C                     	;# 
  5957  008E                     	;# 
  5958  0090                     	;# 
  5959  0091                     	;# 
  5960  0092                     	;# 
  5961  0093                     	;# 
  5962  0094                     	;# 
  5963  0097                     	;# 
  5964  009B                     	;# 
  5965  009B                     	;# 
  5966  009C                     	;# 
  5967  009D                     	;# 
  5968  009E                     	;# 
  5969  009F                     	;# 
  5970  010C                     	;# 
  5971  010E                     	;# 
  5972  0111                     	;# 
  5973  0112                     	;# 
  5974  0113                     	;# 
  5975  0114                     	;# 
  5976  0115                     	;# 
  5977  0116                     	;# 
  5978  0117                     	;# 
  5979  0118                     	;# 
  5980  0119                     	;# 
  5981  018C                     	;# 
  5982  018E                     	;# 
  5983  0197                     	;# 
  5984  0199                     	;# 
  5985  0199                     	;# 
  5986  0199                     	;# 
  5987  019A                     	;# 
  5988  019A                     	;# 
  5989  019A                     	;# 
  5990  019B                     	;# 
  5991  019B                     	;# 
  5992  019B                     	;# 
  5993  019B                     	;# 
  5994  019B                     	;# 
  5995  019C                     	;# 
  5996  019C                     	;# 
  5997  019C                     	;# 
  5998  019D                     	;# 
  5999  019D                     	;# 
  6000  019D                     	;# 
  6001  019E                     	;# 
  6002  019E                     	;# 
  6003  019E                     	;# 
  6004  019F                     	;# 
  6005  019F                     	;# 
  6006  019F                     	;# 
  6007  019F                     	;# 
  6008  019F                     	;# 
  6009  020C                     	;# 
  6010  020E                     	;# 
  6011  0211                     	;# 
  6012  0211                     	;# 
  6013  0212                     	;# 
  6014  0212                     	;# 
  6015  0213                     	;# 
  6016  0213                     	;# 
  6017  0214                     	;# 
  6018  0214                     	;# 
  6019  0215                     	;# 
  6020  0215                     	;# 
  6021  0215                     	;# 
  6022  0215                     	;# 
  6023  0216                     	;# 
  6024  0216                     	;# 
  6025  0217                     	;# 
  6026  0217                     	;# 
  6027  0219                     	;# 
  6028  021A                     	;# 
  6029  021B                     	;# 
  6030  021C                     	;# 
  6031  021D                     	;# 
  6032  021D                     	;# 
  6033  021E                     	;# 
  6034  021F                     	;# 
  6035  028C                     	;# 
  6036  028E                     	;# 
  6037  0291                     	;# 
  6038  0291                     	;# 
  6039  0292                     	;# 
  6040  0293                     	;# 
  6041  0294                     	;# 
  6042  0295                     	;# 
  6043  0295                     	;# 
  6044  0296                     	;# 
  6045  0297                     	;# 
  6046  0298                     	;# 
  6047  029F                     	;# 
  6048  030C                     	;# 
  6049  030E                     	;# 
  6050  0311                     	;# 
  6051  0311                     	;# 
  6052  0312                     	;# 
  6053  0313                     	;# 
  6054  0314                     	;# 
  6055  0315                     	;# 
  6056  0315                     	;# 
  6057  0316                     	;# 
  6058  0317                     	;# 
  6059  0318                     	;# 
  6060  038C                     	;# 
  6061  038E                     	;# 
  6062  0391                     	;# 
  6063  0392                     	;# 
  6064  0393                     	;# 
  6065  0397                     	;# 
  6066  0398                     	;# 
  6067  0399                     	;# 
  6068  039A                     	;# 
  6069  039C                     	;# 
  6070  039D                     	;# 
  6071  039E                     	;# 
  6072  039F                     	;# 
  6073  0411                     	;# 
  6074  0411                     	;# 
  6075  0412                     	;# 
  6076  0413                     	;# 
  6077  0414                     	;# 
  6078  0415                     	;# 
  6079  0416                     	;# 
  6080  0417                     	;# 
  6081  0418                     	;# 
  6082  0418                     	;# 
  6083  0419                     	;# 
  6084  041A                     	;# 
  6085  041B                     	;# 
  6086  041C                     	;# 
  6087  041D                     	;# 
  6088  041E                     	;# 
  6089  041F                     	;# 
  6090  0498                     	;# 
  6091  0498                     	;# 
  6092  0499                     	;# 
  6093  049A                     	;# 
  6094  049B                     	;# 
  6095  049B                     	;# 
  6096  049C                     	;# 
  6097  049D                     	;# 
  6098  049E                     	;# 
  6099  049F                     	;# 
  6100  0617                     	;# 
  6101  0618                     	;# 
  6102  0619                     	;# 
  6103  0619                     	;# 
  6104  061A                     	;# 
  6105  061B                     	;# 
  6106  061C                     	;# 
  6107  061C                     	;# 
  6108  061F                     	;# 
  6109  0691                     	;# 
  6110  0692                     	;# 
  6111  0693                     	;# 
  6112  0694                     	;# 
  6113  0695                     	;# 
  6114  0696                     	;# 
  6115  0697                     	;# 
  6116  0698                     	;# 
  6117  0699                     	;# 
  6118  0711                     	;# 
  6119  0712                     	;# 
  6120  0713                     	;# 
  6121  0714                     	;# 
  6122  0715                     	;# 
  6123  0716                     	;# 
  6124  0717                     	;# 
  6125  0718                     	;# 
  6126  0719                     	;# 
  6127  0891                     	;# 
  6128  0891                     	;# 
  6129  0891                     	;# 
  6130  0891                     	;# 
  6131  0891                     	;# 
  6132  0891                     	;# 
  6133  0892                     	;# 
  6134  0892                     	;# 
  6135  0892                     	;# 
  6136  0893                     	;# 
  6137  0893                     	;# 
  6138  0893                     	;# 
  6139  0893                     	;# 
  6140  0893                     	;# 
  6141  0893                     	;# 
  6142  0894                     	;# 
  6143  0894                     	;# 
  6144  0894                     	;# 
  6145  0895                     	;# 
  6146  0895                     	;# 
  6147  0895                     	;# 
  6148  0896                     	;# 
  6149  0896                     	;# 
  6150  0896                     	;# 
  6151  089B                     	;# 
  6152  0911                     	;# 
  6153  0912                     	;# 
  6154  0913                     	;# 
  6155  0914                     	;# 
  6156  0915                     	;# 
  6157  0916                     	;# 
  6158  0918                     	;# 
  6159  0919                     	;# 
  6160  091A                     	;# 
  6161  091B                     	;# 
  6162  091C                     	;# 
  6163  091D                     	;# 
  6164  091E                     	;# 
  6165  091F                     	;# 
  6166  0E0F                     	;# 
  6167  0E10                     	;# 
  6168  0E11                     	;# 
  6169  0E12                     	;# 
  6170  0E13                     	;# 
  6171  0E14                     	;# 
  6172  0E15                     	;# 
  6173  0E16                     	;# 
  6174  0E17                     	;# 
  6175  0E18                     	;# 
  6176  0E19                     	;# 
  6177  0E1A                     	;# 
  6178  0E1B                     	;# 
  6179  0E1C                     	;# 
  6180  0E1D                     	;# 
  6181  0E1E                     	;# 
  6182  0E1F                     	;# 
  6183  0E20                     	;# 
  6184  0E21                     	;# 
  6185  0E22                     	;# 
  6186  0E24                     	;# 
  6187  0E25                     	;# 
  6188  0E28                     	;# 
  6189  0E29                     	;# 
  6190  0E2A                     	;# 
  6191  0E2B                     	;# 
  6192  0E2C                     	;# 
  6193  0E2D                     	;# 
  6194  0E2E                     	;# 
  6195  0E2F                     	;# 
  6196  0E90                     	;# 
  6197  0E91                     	;# 
  6198  0E92                     	;# 
  6199  0E94                     	;# 
  6200  0E95                     	;# 
  6201  0EA0                     	;# 
  6202  0EA1                     	;# 
  6203  0EA2                     	;# 
  6204  0EA3                     	;# 
  6205  0EA4                     	;# 
  6206  0EA5                     	;# 
  6207  0F0F                     	;# 
  6208  0F10                     	;# 
  6209  0F11                     	;# 
  6210  0F12                     	;# 
  6211  0F13                     	;# 
  6212  0F14                     	;# 
  6213  0F15                     	;# 
  6214  0F16                     	;# 
  6215  0F17                     	;# 
  6216  0F18                     	;# 
  6217  0F19                     	;# 
  6218  0F1A                     	;# 
  6219  0F1B                     	;# 
  6220  0F1C                     	;# 
  6221  0F1D                     	;# 
  6222  0F1E                     	;# 
  6223  0F1F                     	;# 
  6224  0F20                     	;# 
  6225  0F21                     	;# 
  6226  0F22                     	;# 
  6227  0F23                     	;# 
  6228  0F24                     	;# 
  6229  0F25                     	;# 
  6230  0F26                     	;# 
  6231  0F27                     	;# 
  6232  0F28                     	;# 
  6233  0F29                     	;# 
  6234  0F2A                     	;# 
  6235  0F2B                     	;# 
  6236  0F2C                     	;# 
  6237  0F2D                     	;# 
  6238  0F2E                     	;# 
  6239  0F2F                     	;# 
  6240  0F30                     	;# 
  6241  0F31                     	;# 
  6242  0F32                     	;# 
  6243  0F33                     	;# 
  6244  0F34                     	;# 
  6245  0F35                     	;# 
  6246  0F36                     	;# 
  6247  0F37                     	;# 
  6248  0FE4                     	;# 
  6249  0FE5                     	;# 
  6250  0FE6                     	;# 
  6251  0FE7                     	;# 
  6252  0FE8                     	;# 
  6253  0FE9                     	;# 
  6254  0FEA                     	;# 
  6255  0FEB                     	;# 
  6256  0FED                     	;# 
  6257  0FEE                     	;# 
  6258  0FEF                     	;# 
  6259  0000                     	;# 
  6260  0001                     	;# 
  6261  0002                     	;# 
  6262  0003                     	;# 
  6263  0004                     	;# 
  6264  0005                     	;# 
  6265  0006                     	;# 
  6266  0007                     	;# 
  6267  0008                     	;# 
  6268  0009                     	;# 
  6269  000A                     	;# 
  6270  000B                     	;# 
  6271  000C                     	;# 
  6272  000E                     	;# 
  6273  0010                     	;# 
  6274  0011                     	;# 
  6275  0012                     	;# 
  6276  0013                     	;# 
  6277  0014                     	;# 
  6278  0015                     	;# 
  6279  0015                     	;# 
  6280  0016                     	;# 
  6281  0016                     	;# 
  6282  0017                     	;# 
  6283  0018                     	;# 
  6284  0019                     	;# 
  6285  0019                     	;# 
  6286  001A                     	;# 
  6287  001B                     	;# 
  6288  001C                     	;# 
  6289  001D                     	;# 
  6290  001E                     	;# 
  6291  001F                     	;# 
  6292  008C                     	;# 
  6293  008E                     	;# 
  6294  0090                     	;# 
  6295  0091                     	;# 
  6296  0092                     	;# 
  6297  0093                     	;# 
  6298  0094                     	;# 
  6299  0097                     	;# 
  6300  009B                     	;# 
  6301  009B                     	;# 
  6302  009C                     	;# 
  6303  009D                     	;# 
  6304  009E                     	;# 
  6305  009F                     	;# 
  6306  010C                     	;# 
  6307  010E                     	;# 
  6308  0111                     	;# 
  6309  0112                     	;# 
  6310  0113                     	;# 
  6311  0114                     	;# 
  6312  0115                     	;# 
  6313  0116                     	;# 
  6314  0117                     	;# 
  6315  0118                     	;# 
  6316  0119                     	;# 
  6317  018C                     	;# 
  6318  018E                     	;# 
  6319  0197                     	;# 
  6320  0199                     	;# 
  6321  0199                     	;# 
  6322  0199                     	;# 
  6323  019A                     	;# 
  6324  019A                     	;# 
  6325  019A                     	;# 
  6326  019B                     	;# 
  6327  019B                     	;# 
  6328  019B                     	;# 
  6329  019B                     	;# 
  6330  019B                     	;# 
  6331  019C                     	;# 
  6332  019C                     	;# 
  6333  019C                     	;# 
  6334  019D                     	;# 
  6335  019D                     	;# 
  6336  019D                     	;# 
  6337  019E                     	;# 
  6338  019E                     	;# 
  6339  019E                     	;# 
  6340  019F                     	;# 
  6341  019F                     	;# 
  6342  019F                     	;# 
  6343  019F                     	;# 
  6344  019F                     	;# 
  6345  020C                     	;# 
  6346  020E                     	;# 
  6347  0211                     	;# 
  6348  0211                     	;# 
  6349  0212                     	;# 
  6350  0212                     	;# 
  6351  0213                     	;# 
  6352  0213                     	;# 
  6353  0214                     	;# 
  6354  0214                     	;# 
  6355  0215                     	;# 
  6356  0215                     	;# 
  6357  0215                     	;# 
  6358  0215                     	;# 
  6359  0216                     	;# 
  6360  0216                     	;# 
  6361  0217                     	;# 
  6362  0217                     	;# 
  6363  0219                     	;# 
  6364  021A                     	;# 
  6365  021B                     	;# 
  6366  021C                     	;# 
  6367  021D                     	;# 
  6368  021D                     	;# 
  6369  021E                     	;# 
  6370  021F                     	;# 
  6371  028C                     	;# 
  6372  028E                     	;# 
  6373  0291                     	;# 
  6374  0291                     	;# 
  6375  0292                     	;# 
  6376  0293                     	;# 
  6377  0294                     	;# 
  6378  0295                     	;# 
  6379  0295                     	;# 
  6380  0296                     	;# 
  6381  0297                     	;# 
  6382  0298                     	;# 
  6383  029F                     	;# 
  6384  030C                     	;# 
  6385  030E                     	;# 
  6386  0311                     	;# 
  6387  0311                     	;# 
  6388  0312                     	;# 
  6389  0313                     	;# 
  6390  0314                     	;# 
  6391  0315                     	;# 
  6392  0315                     	;# 
  6393  0316                     	;# 
  6394  0317                     	;# 
  6395  0318                     	;# 
  6396  038C                     	;# 
  6397  038E                     	;# 
  6398  0391                     	;# 
  6399  0392                     	;# 
  6400  0393                     	;# 
  6401  0397                     	;# 
  6402  0398                     	;# 
  6403  0399                     	;# 
  6404  039A                     	;# 
  6405  039C                     	;# 
  6406  039D                     	;# 
  6407  039E                     	;# 
  6408  039F                     	;# 
  6409  0411                     	;# 
  6410  0411                     	;# 
  6411  0412                     	;# 
  6412  0413                     	;# 
  6413  0414                     	;# 
  6414  0415                     	;# 
  6415  0416                     	;# 
  6416  0417                     	;# 
  6417  0418                     	;# 
  6418  0418                     	;# 
  6419  0419                     	;# 
  6420  041A                     	;# 
  6421  041B                     	;# 
  6422  041C                     	;# 
  6423  041D                     	;# 
  6424  041E                     	;# 
  6425  041F                     	;# 
  6426  0498                     	;# 
  6427  0498                     	;# 
  6428  0499                     	;# 
  6429  049A                     	;# 
  6430  049B                     	;# 
  6431  049B                     	;# 
  6432  049C                     	;# 
  6433  049D                     	;# 
  6434  049E                     	;# 
  6435  049F                     	;# 
  6436  0617                     	;# 
  6437  0618                     	;# 
  6438  0619                     	;# 
  6439  0619                     	;# 
  6440  061A                     	;# 
  6441  061B                     	;# 
  6442  061C                     	;# 
  6443  061C                     	;# 
  6444  061F                     	;# 
  6445  0691                     	;# 
  6446  0692                     	;# 
  6447  0693                     	;# 
  6448  0694                     	;# 
  6449  0695                     	;# 
  6450  0696                     	;# 
  6451  0697                     	;# 
  6452  0698                     	;# 
  6453  0699                     	;# 
  6454  0711                     	;# 
  6455  0712                     	;# 
  6456  0713                     	;# 
  6457  0714                     	;# 
  6458  0715                     	;# 
  6459  0716                     	;# 
  6460  0717                     	;# 
  6461  0718                     	;# 
  6462  0719                     	;# 
  6463  0891                     	;# 
  6464  0891                     	;# 
  6465  0891                     	;# 
  6466  0891                     	;# 
  6467  0891                     	;# 
  6468  0891                     	;# 
  6469  0892                     	;# 
  6470  0892                     	;# 
  6471  0892                     	;# 
  6472  0893                     	;# 
  6473  0893                     	;# 
  6474  0893                     	;# 
  6475  0893                     	;# 
  6476  0893                     	;# 
  6477  0893                     	;# 
  6478  0894                     	;# 
  6479  0894                     	;# 
  6480  0894                     	;# 
  6481  0895                     	;# 
  6482  0895                     	;# 
  6483  0895                     	;# 
  6484  0896                     	;# 
  6485  0896                     	;# 
  6486  0896                     	;# 
  6487  089B                     	;# 
  6488  0911                     	;# 
  6489  0912                     	;# 
  6490  0913                     	;# 
  6491  0914                     	;# 
  6492  0915                     	;# 
  6493  0916                     	;# 
  6494  0918                     	;# 
  6495  0919                     	;# 
  6496  091A                     	;# 
  6497  091B                     	;# 
  6498  091C                     	;# 
  6499  091D                     	;# 
  6500  091E                     	;# 
  6501  091F                     	;# 
  6502  0E0F                     	;# 
  6503  0E10                     	;# 
  6504  0E11                     	;# 
  6505  0E12                     	;# 
  6506  0E13                     	;# 
  6507  0E14                     	;# 
  6508  0E15                     	;# 
  6509  0E16                     	;# 
  6510  0E17                     	;# 
  6511  0E18                     	;# 
  6512  0E19                     	;# 
  6513  0E1A                     	;# 
  6514  0E1B                     	;# 
  6515  0E1C                     	;# 
  6516  0E1D                     	;# 
  6517  0E1E                     	;# 
  6518  0E1F                     	;# 
  6519  0E20                     	;# 
  6520  0E21                     	;# 
  6521  0E22                     	;# 
  6522  0E24                     	;# 
  6523  0E25                     	;# 
  6524  0E28                     	;# 
  6525  0E29                     	;# 
  6526  0E2A                     	;# 
  6527  0E2B                     	;# 
  6528  0E2C                     	;# 
  6529  0E2D                     	;# 
  6530  0E2E                     	;# 
  6531  0E2F                     	;# 
  6532  0E90                     	;# 
  6533  0E91                     	;# 
  6534  0E92                     	;# 
  6535  0E94                     	;# 
  6536  0E95                     	;# 
  6537  0EA0                     	;# 
  6538  0EA1                     	;# 
  6539  0EA2                     	;# 
  6540  0EA3                     	;# 
  6541  0EA4                     	;# 
  6542  0EA5                     	;# 
  6543  0F0F                     	;# 
  6544  0F10                     	;# 
  6545  0F11                     	;# 
  6546  0F12                     	;# 
  6547  0F13                     	;# 
  6548  0F14                     	;# 
  6549  0F15                     	;# 
  6550  0F16                     	;# 
  6551  0F17                     	;# 
  6552  0F18                     	;# 
  6553  0F19                     	;# 
  6554  0F1A                     	;# 
  6555  0F1B                     	;# 
  6556  0F1C                     	;# 
  6557  0F1D                     	;# 
  6558  0F1E                     	;# 
  6559  0F1F                     	;# 
  6560  0F20                     	;# 
  6561  0F21                     	;# 
  6562  0F22                     	;# 
  6563  0F23                     	;# 
  6564  0F24                     	;# 
  6565  0F25                     	;# 
  6566  0F26                     	;# 
  6567  0F27                     	;# 
  6568  0F28                     	;# 
  6569  0F29                     	;# 
  6570  0F2A                     	;# 
  6571  0F2B                     	;# 
  6572  0F2C                     	;# 
  6573  0F2D                     	;# 
  6574  0F2E                     	;# 
  6575  0F2F                     	;# 
  6576  0F30                     	;# 
  6577  0F31                     	;# 
  6578  0F32                     	;# 
  6579  0F33                     	;# 
  6580  0F34                     	;# 
  6581  0F35                     	;# 
  6582  0F36                     	;# 
  6583  0F37                     	;# 
  6584  0FE4                     	;# 
  6585  0FE5                     	;# 
  6586  0FE6                     	;# 
  6587  0FE7                     	;# 
  6588  0FE8                     	;# 
  6589  0FE9                     	;# 
  6590  0FEA                     	;# 
  6591  0FEB                     	;# 
  6592  0FED                     	;# 
  6593  0FEE                     	;# 
  6594  0FEF                     	;# 
  6595  0000                     	;# 
  6596  0001                     	;# 
  6597  0002                     	;# 
  6598  0003                     	;# 
  6599  0004                     	;# 
  6600  0005                     	;# 
  6601  0006                     	;# 
  6602  0007                     	;# 
  6603  0008                     	;# 
  6604  0009                     	;# 
  6605  000A                     	;# 
  6606  000B                     	;# 
  6607  000C                     	;# 
  6608  000E                     	;# 
  6609  0010                     	;# 
  6610  0011                     	;# 
  6611  0012                     	;# 
  6612  0013                     	;# 
  6613  0014                     	;# 
  6614  0015                     	;# 
  6615  0015                     	;# 
  6616  0016                     	;# 
  6617  0016                     	;# 
  6618  0017                     	;# 
  6619  0018                     	;# 
  6620  0019                     	;# 
  6621  0019                     	;# 
  6622  001A                     	;# 
  6623  001B                     	;# 
  6624  001C                     	;# 
  6625  001D                     	;# 
  6626  001E                     	;# 
  6627  001F                     	;# 
  6628  008C                     	;# 
  6629  008E                     	;# 
  6630  0090                     	;# 
  6631  0091                     	;# 
  6632  0092                     	;# 
  6633  0093                     	;# 
  6634  0094                     	;# 
  6635  0097                     	;# 
  6636  009B                     	;# 
  6637  009B                     	;# 
  6638  009C                     	;# 
  6639  009D                     	;# 
  6640  009E                     	;# 
  6641  009F                     	;# 
  6642  010C                     	;# 
  6643  010E                     	;# 
  6644  0111                     	;# 
  6645  0112                     	;# 
  6646  0113                     	;# 
  6647  0114                     	;# 
  6648  0115                     	;# 
  6649  0116                     	;# 
  6650  0117                     	;# 
  6651  0118                     	;# 
  6652  0119                     	;# 
  6653  018C                     	;# 
  6654  018E                     	;# 
  6655  0197                     	;# 
  6656  0199                     	;# 
  6657  0199                     	;# 
  6658  0199                     	;# 
  6659  019A                     	;# 
  6660  019A                     	;# 
  6661  019A                     	;# 
  6662  019B                     	;# 
  6663  019B                     	;# 
  6664  019B                     	;# 
  6665  019B                     	;# 
  6666  019B                     	;# 
  6667  019C                     	;# 
  6668  019C                     	;# 
  6669  019C                     	;# 
  6670  019D                     	;# 
  6671  019D                     	;# 
  6672  019D                     	;# 
  6673  019E                     	;# 
  6674  019E                     	;# 
  6675  019E                     	;# 
  6676  019F                     	;# 
  6677  019F                     	;# 
  6678  019F                     	;# 
  6679  019F                     	;# 
  6680  019F                     	;# 
  6681  020C                     	;# 
  6682  020E                     	;# 
  6683  0211                     	;# 
  6684  0211                     	;# 
  6685  0212                     	;# 
  6686  0212                     	;# 
  6687  0213                     	;# 
  6688  0213                     	;# 
  6689  0214                     	;# 
  6690  0214                     	;# 
  6691  0215                     	;# 
  6692  0215                     	;# 
  6693  0215                     	;# 
  6694  0215                     	;# 
  6695  0216                     	;# 
  6696  0216                     	;# 
  6697  0217                     	;# 
  6698  0217                     	;# 
  6699  0219                     	;# 
  6700  021A                     	;# 
  6701  021B                     	;# 
  6702  021C                     	;# 
  6703  021D                     	;# 
  6704  021D                     	;# 
  6705  021E                     	;# 
  6706  021F                     	;# 
  6707  028C                     	;# 
  6708  028E                     	;# 
  6709  0291                     	;# 
  6710  0291                     	;# 
  6711  0292                     	;# 
  6712  0293                     	;# 
  6713  0294                     	;# 
  6714  0295                     	;# 
  6715  0295                     	;# 
  6716  0296                     	;# 
  6717  0297                     	;# 
  6718  0298                     	;# 
  6719  029F                     	;# 
  6720  030C                     	;# 
  6721  030E                     	;# 
  6722  0311                     	;# 
  6723  0311                     	;# 
  6724  0312                     	;# 
  6725  0313                     	;# 
  6726  0314                     	;# 
  6727  0315                     	;# 
  6728  0315                     	;# 
  6729  0316                     	;# 
  6730  0317                     	;# 
  6731  0318                     	;# 
  6732  038C                     	;# 
  6733  038E                     	;# 
  6734  0391                     	;# 
  6735  0392                     	;# 
  6736  0393                     	;# 
  6737  0397                     	;# 
  6738  0398                     	;# 
  6739  0399                     	;# 
  6740  039A                     	;# 
  6741  039C                     	;# 
  6742  039D                     	;# 
  6743  039E                     	;# 
  6744  039F                     	;# 
  6745  0411                     	;# 
  6746  0411                     	;# 
  6747  0412                     	;# 
  6748  0413                     	;# 
  6749  0414                     	;# 
  6750  0415                     	;# 
  6751  0416                     	;# 
  6752  0417                     	;# 
  6753  0418                     	;# 
  6754  0418                     	;# 
  6755  0419                     	;# 
  6756  041A                     	;# 
  6757  041B                     	;# 
  6758  041C                     	;# 
  6759  041D                     	;# 
  6760  041E                     	;# 
  6761  041F                     	;# 
  6762  0498                     	;# 
  6763  0498                     	;# 
  6764  0499                     	;# 
  6765  049A                     	;# 
  6766  049B                     	;# 
  6767  049B                     	;# 
  6768  049C                     	;# 
  6769  049D                     	;# 
  6770  049E                     	;# 
  6771  049F                     	;# 
  6772  0617                     	;# 
  6773  0618                     	;# 
  6774  0619                     	;# 
  6775  0619                     	;# 
  6776  061A                     	;# 
  6777  061B                     	;# 
  6778  061C                     	;# 
  6779  061C                     	;# 
  6780  061F                     	;# 
  6781  0691                     	;# 
  6782  0692                     	;# 
  6783  0693                     	;# 
  6784  0694                     	;# 
  6785  0695                     	;# 
  6786  0696                     	;# 
  6787  0697                     	;# 
  6788  0698                     	;# 
  6789  0699                     	;# 
  6790  0711                     	;# 
  6791  0712                     	;# 
  6792  0713                     	;# 
  6793  0714                     	;# 
  6794  0715                     	;# 
  6795  0716                     	;# 
  6796  0717                     	;# 
  6797  0718                     	;# 
  6798  0719                     	;# 
  6799  0891                     	;# 
  6800  0891                     	;# 
  6801  0891                     	;# 
  6802  0891                     	;# 
  6803  0891                     	;# 
  6804  0891                     	;# 
  6805  0892                     	;# 
  6806  0892                     	;# 
  6807  0892                     	;# 
  6808  0893                     	;# 
  6809  0893                     	;# 
  6810  0893                     	;# 
  6811  0893                     	;# 
  6812  0893                     	;# 
  6813  0893                     	;# 
  6814  0894                     	;# 
  6815  0894                     	;# 
  6816  0894                     	;# 
  6817  0895                     	;# 
  6818  0895                     	;# 
  6819  0895                     	;# 
  6820  0896                     	;# 
  6821  0896                     	;# 
  6822  0896                     	;# 
  6823  089B                     	;# 
  6824  0911                     	;# 
  6825  0912                     	;# 
  6826  0913                     	;# 
  6827  0914                     	;# 
  6828  0915                     	;# 
  6829  0916                     	;# 
  6830  0918                     	;# 
  6831  0919                     	;# 
  6832  091A                     	;# 
  6833  091B                     	;# 
  6834  091C                     	;# 
  6835  091D                     	;# 
  6836  091E                     	;# 
  6837  091F                     	;# 
  6838  0E0F                     	;# 
  6839  0E10                     	;# 
  6840  0E11                     	;# 
  6841  0E12                     	;# 
  6842  0E13                     	;# 
  6843  0E14                     	;# 
  6844  0E15                     	;# 
  6845  0E16                     	;# 
  6846  0E17                     	;# 
  6847  0E18                     	;# 
  6848  0E19                     	;# 
  6849  0E1A                     	;# 
  6850  0E1B                     	;# 
  6851  0E1C                     	;# 
  6852  0E1D                     	;# 
  6853  0E1E                     	;# 
  6854  0E1F                     	;# 
  6855  0E20                     	;# 
  6856  0E21                     	;# 
  6857  0E22                     	;# 
  6858  0E24                     	;# 
  6859  0E25                     	;# 
  6860  0E28                     	;# 
  6861  0E29                     	;# 
  6862  0E2A                     	;# 
  6863  0E2B                     	;# 
  6864  0E2C                     	;# 
  6865  0E2D                     	;# 
  6866  0E2E                     	;# 
  6867  0E2F                     	;# 
  6868  0E90                     	;# 
  6869  0E91                     	;# 
  6870  0E92                     	;# 
  6871  0E94                     	;# 
  6872  0E95                     	;# 
  6873  0EA0                     	;# 
  6874  0EA1                     	;# 
  6875  0EA2                     	;# 
  6876  0EA3                     	;# 
  6877  0EA4                     	;# 
  6878  0EA5                     	;# 
  6879  0F0F                     	;# 
  6880  0F10                     	;# 
  6881  0F11                     	;# 
  6882  0F12                     	;# 
  6883  0F13                     	;# 
  6884  0F14                     	;# 
  6885  0F15                     	;# 
  6886  0F16                     	;# 
  6887  0F17                     	;# 
  6888  0F18                     	;# 
  6889  0F19                     	;# 
  6890  0F1A                     	;# 
  6891  0F1B                     	;# 
  6892  0F1C                     	;# 
  6893  0F1D                     	;# 
  6894  0F1E                     	;# 
  6895  0F1F                     	;# 
  6896  0F20                     	;# 
  6897  0F21                     	;# 
  6898  0F22                     	;# 
  6899  0F23                     	;# 
  6900  0F24                     	;# 
  6901  0F25                     	;# 
  6902  0F26                     	;# 
  6903  0F27                     	;# 
  6904  0F28                     	;# 
  6905  0F29                     	;# 
  6906  0F2A                     	;# 
  6907  0F2B                     	;# 
  6908  0F2C                     	;# 
  6909  0F2D                     	;# 
  6910  0F2E                     	;# 
  6911  0F2F                     	;# 
  6912  0F30                     	;# 
  6913  0F31                     	;# 
  6914  0F32                     	;# 
  6915  0F33                     	;# 
  6916  0F34                     	;# 
  6917  0F35                     	;# 
  6918  0F36                     	;# 
  6919  0F37                     	;# 
  6920  0FE4                     	;# 
  6921  0FE5                     	;# 
  6922  0FE6                     	;# 
  6923  0FE7                     	;# 
  6924  0FE8                     	;# 
  6925  0FE9                     	;# 
  6926  0FEA                     	;# 
  6927  0FEB                     	;# 
  6928  0FED                     	;# 
  6929  0FEE                     	;# 
  6930  0FEF                     	;# 
  6931  0000                     	;# 
  6932  0001                     	;# 
  6933  0002                     	;# 
  6934  0003                     	;# 
  6935  0004                     	;# 
  6936  0005                     	;# 
  6937  0006                     	;# 
  6938  0007                     	;# 
  6939  0008                     	;# 
  6940  0009                     	;# 
  6941  000A                     	;# 
  6942  000B                     	;# 
  6943  000C                     	;# 
  6944  000E                     	;# 
  6945  0010                     	;# 
  6946  0011                     	;# 
  6947  0012                     	;# 
  6948  0013                     	;# 
  6949  0014                     	;# 
  6950  0015                     	;# 
  6951  0015                     	;# 
  6952  0016                     	;# 
  6953  0016                     	;# 
  6954  0017                     	;# 
  6955  0018                     	;# 
  6956  0019                     	;# 
  6957  0019                     	;# 
  6958  001A                     	;# 
  6959  001B                     	;# 
  6960  001C                     	;# 
  6961  001D                     	;# 
  6962  001E                     	;# 
  6963  001F                     	;# 
  6964  008C                     	;# 
  6965  008E                     	;# 
  6966  0090                     	;# 
  6967  0091                     	;# 
  6968  0092                     	;# 
  6969  0093                     	;# 
  6970  0094                     	;# 
  6971  0097                     	;# 
  6972  009B                     	;# 
  6973  009B                     	;# 
  6974  009C                     	;# 
  6975  009D                     	;# 
  6976  009E                     	;# 
  6977  009F                     	;# 
  6978  010C                     	;# 
  6979  010E                     	;# 
  6980  0111                     	;# 
  6981  0112                     	;# 
  6982  0113                     	;# 
  6983  0114                     	;# 
  6984  0115                     	;# 
  6985  0116                     	;# 
  6986  0117                     	;# 
  6987  0118                     	;# 
  6988  0119                     	;# 
  6989  018C                     	;# 
  6990  018E                     	;# 
  6991  0197                     	;# 
  6992  0199                     	;# 
  6993  0199                     	;# 
  6994  0199                     	;# 
  6995  019A                     	;# 
  6996  019A                     	;# 
  6997  019A                     	;# 
  6998  019B                     	;# 
  6999  019B                     	;# 
  7000  019B                     	;# 
  7001  019B                     	;# 
  7002  019B                     	;# 
  7003  019C                     	;# 
  7004  019C                     	;# 
  7005  019C                     	;# 
  7006  019D                     	;# 
  7007  019D                     	;# 
  7008  019D                     	;# 
  7009  019E                     	;# 
  7010  019E                     	;# 
  7011  019E                     	;# 
  7012  019F                     	;# 
  7013  019F                     	;# 
  7014  019F                     	;# 
  7015  019F                     	;# 
  7016  019F                     	;# 
  7017  020C                     	;# 
  7018  020E                     	;# 
  7019  0211                     	;# 
  7020  0211                     	;# 
  7021  0212                     	;# 
  7022  0212                     	;# 
  7023  0213                     	;# 
  7024  0213                     	;# 
  7025  0214                     	;# 
  7026  0214                     	;# 
  7027  0215                     	;# 
  7028  0215                     	;# 
  7029  0215                     	;# 
  7030  0215                     	;# 
  7031  0216                     	;# 
  7032  0216                     	;# 
  7033  0217                     	;# 
  7034  0217                     	;# 
  7035  0219                     	;# 
  7036  021A                     	;# 
  7037  021B                     	;# 
  7038  021C                     	;# 
  7039  021D                     	;# 
  7040  021D                     	;# 
  7041  021E                     	;# 
  7042  021F                     	;# 
  7043  028C                     	;# 
  7044  028E                     	;# 
  7045  0291                     	;# 
  7046  0291                     	;# 
  7047  0292                     	;# 
  7048  0293                     	;# 
  7049  0294                     	;# 
  7050  0295                     	;# 
  7051  0295                     	;# 
  7052  0296                     	;# 
  7053  0297                     	;# 
  7054  0298                     	;# 
  7055  029F                     	;# 
  7056  030C                     	;# 
  7057  030E                     	;# 
  7058  0311                     	;# 
  7059  0311                     	;# 
  7060  0312                     	;# 
  7061  0313                     	;# 
  7062  0314                     	;# 
  7063  0315                     	;# 
  7064  0315                     	;# 
  7065  0316                     	;# 
  7066  0317                     	;# 
  7067  0318                     	;# 
  7068  038C                     	;# 
  7069  038E                     	;# 
  7070  0391                     	;# 
  7071  0392                     	;# 
  7072  0393                     	;# 
  7073  0397                     	;# 
  7074  0398                     	;# 
  7075  0399                     	;# 
  7076  039A                     	;# 
  7077  039C                     	;# 
  7078  039D                     	;# 
  7079  039E                     	;# 
  7080  039F                     	;# 
  7081  0411                     	;# 
  7082  0411                     	;# 
  7083  0412                     	;# 
  7084  0413                     	;# 
  7085  0414                     	;# 
  7086  0415                     	;# 
  7087  0416                     	;# 
  7088  0417                     	;# 
  7089  0418                     	;# 
  7090  0418                     	;# 
  7091  0419                     	;# 
  7092  041A                     	;# 
  7093  041B                     	;# 
  7094  041C                     	;# 
  7095  041D                     	;# 
  7096  041E                     	;# 
  7097  041F                     	;# 
  7098  0498                     	;# 
  7099  0498                     	;# 
  7100  0499                     	;# 
  7101  049A                     	;# 
  7102  049B                     	;# 
  7103  049B                     	;# 
  7104  049C                     	;# 
  7105  049D                     	;# 
  7106  049E                     	;# 
  7107  049F                     	;# 
  7108  0617                     	;# 
  7109  0618                     	;# 
  7110  0619                     	;# 
  7111  0619                     	;# 
  7112  061A                     	;# 
  7113  061B                     	;# 
  7114  061C                     	;# 
  7115  061C                     	;# 
  7116  061F                     	;# 
  7117  0691                     	;# 
  7118  0692                     	;# 
  7119  0693                     	;# 
  7120  0694                     	;# 
  7121  0695                     	;# 
  7122  0696                     	;# 
  7123  0697                     	;# 
  7124  0698                     	;# 
  7125  0699                     	;# 
  7126  0711                     	;# 
  7127  0712                     	;# 
  7128  0713                     	;# 
  7129  0714                     	;# 
  7130  0715                     	;# 
  7131  0716                     	;# 
  7132  0717                     	;# 
  7133  0718                     	;# 
  7134  0719                     	;# 
  7135  0891                     	;# 
  7136  0891                     	;# 
  7137  0891                     	;# 
  7138  0891                     	;# 
  7139  0891                     	;# 
  7140  0891                     	;# 
  7141  0892                     	;# 
  7142  0892                     	;# 
  7143  0892                     	;# 
  7144  0893                     	;# 
  7145  0893                     	;# 
  7146  0893                     	;# 
  7147  0893                     	;# 
  7148  0893                     	;# 
  7149  0893                     	;# 
  7150  0894                     	;# 
  7151  0894                     	;# 
  7152  0894                     	;# 
  7153  0895                     	;# 
  7154  0895                     	;# 
  7155  0895                     	;# 
  7156  0896                     	;# 
  7157  0896                     	;# 
  7158  0896                     	;# 
  7159  089B                     	;# 
  7160  0911                     	;# 
  7161  0912                     	;# 
  7162  0913                     	;# 
  7163  0914                     	;# 
  7164  0915                     	;# 
  7165  0916                     	;# 
  7166  0918                     	;# 
  7167  0919                     	;# 
  7168  091A                     	;# 
  7169  091B                     	;# 
  7170  091C                     	;# 
  7171  091D                     	;# 
  7172  091E                     	;# 
  7173  091F                     	;# 
  7174  0E0F                     	;# 
  7175  0E10                     	;# 
  7176  0E11                     	;# 
  7177  0E12                     	;# 
  7178  0E13                     	;# 
  7179  0E14                     	;# 
  7180  0E15                     	;# 
  7181  0E16                     	;# 
  7182  0E17                     	;# 
  7183  0E18                     	;# 
  7184  0E19                     	;# 
  7185  0E1A                     	;# 
  7186  0E1B                     	;# 
  7187  0E1C                     	;# 
  7188  0E1D                     	;# 
  7189  0E1E                     	;# 
  7190  0E1F                     	;# 
  7191  0E20                     	;# 
  7192  0E21                     	;# 
  7193  0E22                     	;# 
  7194  0E24                     	;# 
  7195  0E25                     	;# 
  7196  0E28                     	;# 
  7197  0E29                     	;# 
  7198  0E2A                     	;# 
  7199  0E2B                     	;# 
  7200  0E2C                     	;# 
  7201  0E2D                     	;# 
  7202  0E2E                     	;# 
  7203  0E2F                     	;# 
  7204  0E90                     	;# 
  7205  0E91                     	;# 
  7206  0E92                     	;# 
  7207  0E94                     	;# 
  7208  0E95                     	;# 
  7209  0EA0                     	;# 
  7210  0EA1                     	;# 
  7211  0EA2                     	;# 
  7212  0EA3                     	;# 
  7213  0EA4                     	;# 
  7214  0EA5                     	;# 
  7215  0F0F                     	;# 
  7216  0F10                     	;# 
  7217  0F11                     	;# 
  7218  0F12                     	;# 
  7219  0F13                     	;# 
  7220  0F14                     	;# 
  7221  0F15                     	;# 
  7222  0F16                     	;# 
  7223  0F17                     	;# 
  7224  0F18                     	;# 
  7225  0F19                     	;# 
  7226  0F1A                     	;# 
  7227  0F1B                     	;# 
  7228  0F1C                     	;# 
  7229  0F1D                     	;# 
  7230  0F1E                     	;# 
  7231  0F1F                     	;# 
  7232  0F20                     	;# 
  7233  0F21                     	;# 
  7234  0F22                     	;# 
  7235  0F23                     	;# 
  7236  0F24                     	;# 
  7237  0F25                     	;# 
  7238  0F26                     	;# 
  7239  0F27                     	;# 
  7240  0F28                     	;# 
  7241  0F29                     	;# 
  7242  0F2A                     	;# 
  7243  0F2B                     	;# 
  7244  0F2C                     	;# 
  7245  0F2D                     	;# 
  7246  0F2E                     	;# 
  7247  0F2F                     	;# 
  7248  0F30                     	;# 
  7249  0F31                     	;# 
  7250  0F32                     	;# 
  7251  0F33                     	;# 
  7252  0F34                     	;# 
  7253  0F35                     	;# 
  7254  0F36                     	;# 
  7255  0F37                     	;# 
  7256  0FE4                     	;# 
  7257  0FE5                     	;# 
  7258  0FE6                     	;# 
  7259  0FE7                     	;# 
  7260  0FE8                     	;# 
  7261  0FE9                     	;# 
  7262  0FEA                     	;# 
  7263  0FEB                     	;# 
  7264  0FED                     	;# 
  7265  0FEE                     	;# 
  7266  0FEF                     	;# 
  7267                           
  7268 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  7269  0000                     
  7270 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  7271  0000                     
  7272 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  7273  0000                     
  7274                           	psect	idataBANK2
  7275  1000                     __pidataBANK2:
  7276                           
  7277                           ;initializer for spd_test_pwm@rising
  7278  1000  3401               	retlw	1
  7279                           
  7280                           	psect	nvBANK2
  7281  016D                     __pnvBANK2:
  7282  016D                     _timer0ReloadVal16bit:
  7283  016D                     	ds	2
  7284                           
  7285                           	psect	nvBANK3
  7286  01D8                     __pnvBANK3:
  7287  01D8                     _TMR2_InterruptHandler:
  7288  01D8                     	ds	2
  7289  01DA                     _timer3ReloadVal:
  7290  01DA                     	ds	2
  7291  01DC                     _TMR0_InterruptHandler:
  7292  01DC                     	ds	2
  7293  01DE                     _TMR1_InterruptHandler:
  7294  01DE                     	ds	2
  7295  01E0                     _timer1ReloadVal:
  7296  01E0                     	ds	2
  7297  01E2                     _EUSART_ErrorHandler:
  7298  01E2                     	ds	2
  7299  01E4                     _EUSART_OverrunErrorHandler:
  7300  01E4                     	ds	2
  7301  01E6                     _EUSART_FramingErrorHandler:
  7302  01E6                     	ds	2
  7303  000E                     _PORTCbits	set	14
  7304  0012                     _PIR2bits	set	18
  7305  001F                     _T2CONbits	set	31
  7306  001F                     _T2CON	set	31
  7307  001D                     _TMR2	set	29
  7308  001E                     _PR2	set	30
  7309  0013                     _PIR3bits	set	19
  7310  0017                     _T0CON0bits	set	23
  7311  0017                     _T0CON0	set	23
  7312  0015                     _TMR0L	set	21
  7313  0016                     _TMR0H	set	22
  7314  0018                     _T0CON1	set	24
  7315  001C                     _T1GCONbits	set	28
  7316  001B                     _T1CONbits	set	27
  7317  001B                     _T1CON	set	27
  7318  0019                     _TMR1L	set	25
  7319  001A                     _TMR1H	set	26
  7320  001C                     _T1GCON	set	28
  7321  000B                     _INTCONbits	set	11
  7322  0010                     _PIR0bits	set	16
  7323  0011                     _PIR1bits	set	17
  7324  0089                     _TMR2IF	set	137
  7325  008E                     _TRISC	set	142
  7326  008C                     _TRISA	set	140
  7327  0097                     _WDTCON	set	151
  7328  0091                     _PIE1bits	set	145
  7329  0090                     _PIE0bits	set	144
  7330  009D                     _ADCON0bits	set	157
  7331  009D                     _ADCON0	set	157
  7332  009C                     _ADRESH	set	156
  7333  009B                     _ADRESL	set	155
  7334  009F                     _ADACT	set	159
  7335  009E                     _ADCON1	set	158
  7336  0489                     _TMR2IE	set	1161
  7337  010E                     _LATCbits	set	270
  7338  010C                     _LATAbits	set	268
  7339  010E                     _LATC	set	270
  7340  010C                     _LATA	set	268
  7341  018C                     _ANSELA	set	396
  7342  018E                     _ANSELC	set	398
  7343  019A                     _TX1REG	set	410
  7344  0199                     _RC1REG	set	409
  7345  019D                     _RC1STAbits	set	413
  7346  019E                     _TX1STAbits	set	414
  7347  019C                     _SP1BRGH	set	412
  7348  019B                     _SP1BRGL	set	411
  7349  019E                     _TX1STA	set	414
  7350  019D                     _RC1STA	set	413
  7351  019F                     _BAUD1CON	set	415
  7352  020E                     _WPUC	set	526
  7353  020C                     _WPUA	set	524
  7354  028E                     _ODCONC	set	654
  7355  028C                     _ODCONA	set	652
  7356  030E                     _SLRCONC	set	782
  7357  030C                     _SLRCONA	set	780
  7358  038E                     _INLVLC	set	910
  7359  038C                     _INLVLA	set	908
  7360  041E                     _T6CONbits	set	1054
  7361  041E                     _T6CON	set	1054
  7362  041C                     _TMR6	set	1052
  7363  041D                     _PR6	set	1053
  7364  0417                     _T4CONbits	set	1047
  7365  0417                     _T4CON	set	1047
  7366  0415                     _TMR4	set	1045
  7367  0416                     _PR4	set	1046
  7368  0414                     _T3GCONbits	set	1044
  7369  0413                     _T3CONbits	set	1043
  7370  0413                     _T3CON	set	1043
  7371  0411                     _TMR3L	set	1041
  7372  0412                     _TMR3H	set	1042
  7373  0414                     _T3GCON	set	1044
  7374  0617                     _PWM5DCL	set	1559
  7375  0618                     _PWM5DCH	set	1560
  7376  0619                     _PWM5CON	set	1561
  7377  061F                     _PWMTMRSbits	set	1567
  7378  061A                     _PWM6DCL	set	1562
  7379  061B                     _PWM6DCH	set	1563
  7380  061C                     _PWM6CON	set	1564
  7381  0896                     _NVMCON2	set	2198
  7382  0893                     _NVMDATL	set	2195
  7383  0894                     _NVMDATH	set	2196
  7384  0895                     _NVMCON1bits	set	2197
  7385  0892                     _NVMADRH	set	2194
  7386  0891                     _NVMADRL	set	2193
  7387  0916                     _PMD5	set	2326
  7388  0915                     _PMD4	set	2325
  7389  0914                     _PMD3	set	2324
  7390  0913                     _PMD2	set	2323
  7391  0912                     _PMD1	set	2322
  7392  0911                     _PMD0	set	2321
  7393  091E                     _OSCTUNE	set	2334
  7394  091F                     _OSCFRQ	set	2335
  7395  091D                     _OSCEN	set	2333
  7396  091B                     _OSCCON3	set	2331
  7397  0919                     _OSCCON1	set	2329
  7398  0E11                     _T0CKIPPS	set	3601
  7399  0E25                     _TXPPS	set	3621
  7400  0E24                     _RXPPS	set	3620
  7401  0E90                     _RA0PPS	set	3728
  7402  0E92                     _RA2PPS	set	3730
  7403  0E91                     _RA1PPS	set	3729
  7404  0EA1                     _RC1PPS	set	3745
  7405                           
  7406                           	psect	stringtext1
  7407  2000                     __pstringtext1:
  7408  2000                     STR_17:
  7409  2000  3445               	retlw	69	;'E'
  7410  2001  3452               	retlw	82	;'R'
  7411  2002  3452               	retlw	82	;'R'
  7412  2003  344F               	retlw	79	;'O'
  7413  2004  3452               	retlw	82	;'R'
  7414  2005  343A               	retlw	58	;':'
  7415  2006  3420               	retlw	32	;' '
  7416  2007  3452               	retlw	82	;'R'
  7417  2008  3445               	retlw	69	;'E'
  7418  2009  3441               	retlw	65	;'A'
  7419  200A  3444               	retlw	68	;'D'
  7420  200B  345F               	retlw	95	;'_'
  7421  200C  3443               	retlw	67	;'C'
  7422  200D  344F               	retlw	79	;'O'
  7423  200E  3452               	retlw	82	;'R'
  7424  200F  3452               	retlw	82	;'R'
  7425  2010  3445               	retlw	69	;'E'
  7426  2011  3443               	retlw	67	;'C'
  7427  2012  3454               	retlw	84	;'T'
  7428  2013  3449               	retlw	73	;'I'
  7429  2014  344F               	retlw	79	;'O'
  7430  2015  344E               	retlw	78	;'N'
  7431  2016  3420               	retlw	32	;' '
  7432  2017  3455               	retlw	85	;'U'
  7433  2018  344E               	retlw	78	;'N'
  7434  2019  344B               	retlw	75	;'K'
  7435  201A  344E               	retlw	78	;'N'
  7436  201B  344F               	retlw	79	;'O'
  7437  201C  3457               	retlw	87	;'W'
  7438  201D  344E               	retlw	78	;'N'
  7439  201E  3420               	retlw	32	;' '
  7440  201F  3454               	retlw	84	;'T'
  7441  2020  3459               	retlw	89	;'Y'
  7442  2021  3450               	retlw	80	;'P'
  7443  2022  3445               	retlw	69	;'E'
  7444  2023  3420               	retlw	32	;' '
  7445  2024  3449               	retlw	73	;'I'
  7446  2025  3444               	retlw	68	;'D'
  7447  2026  3445               	retlw	69	;'E'
  7448  2027  344E               	retlw	78	;'N'
  7449  2028  3454               	retlw	84	;'T'
  7450  2029  3449               	retlw	73	;'I'
  7451  202A  3446               	retlw	70	;'F'
  7452  202B  3449               	retlw	73	;'I'
  7453  202C  3445               	retlw	69	;'E'
  7454  202D  3452               	retlw	82	;'R'
  7455  202E  3420               	retlw	32	;' '
  7456  202F  3400               	retlw	0
  7457                           
  7458                           	psect	stringtext2
  7459  2030                     __pstringtext2:
  7460  2030                     STR_13:
  7461  2030  3457               	retlw	87	;'W'
  7462  2031  3441               	retlw	65	;'A'
  7463  2032  3452               	retlw	82	;'R'
  7464  2033  344E               	retlw	78	;'N'
  7465  2034  3449               	retlw	73	;'I'
  7466  2035  344E               	retlw	78	;'N'
  7467  2036  3447               	retlw	71	;'G'
  7468  2037  3421               	retlw	33	;'!'
  7469  2038  3420               	retlw	32	;' '
  7470  2039  3455               	retlw	85	;'U'
  7471  203A  344E               	retlw	78	;'N'
  7472  203B  3443               	retlw	67	;'C'
  7473  203C  344F               	retlw	79	;'O'
  7474  203D  3452               	retlw	82	;'R'
  7475  203E  3452               	retlw	82	;'R'
  7476  203F  3445               	retlw	69	;'E'
  7477  2040  3443               	retlw	67	;'C'
  7478  2041  3454               	retlw	84	;'T'
  7479  2042  3420               	retlw	32	;' '
  7480  2043  3443               	retlw	67	;'C'
  7481  2044  344F               	retlw	79	;'O'
  7482  2045  3452               	retlw	82	;'R'
  7483  2046  3452               	retlw	82	;'R'
  7484  2047  3445               	retlw	69	;'E'
  7485  2048  3443               	retlw	67	;'C'
  7486  2049  3454               	retlw	84	;'T'
  7487  204A  3449               	retlw	73	;'I'
  7488  204B  344F               	retlw	79	;'O'
  7489  204C  344E               	retlw	78	;'N'
  7490  204D  3420               	retlw	32	;' '
  7491  204E  3444               	retlw	68	;'D'
  7492  204F  3441               	retlw	65	;'A'
  7493  2050  3454               	retlw	84	;'T'
  7494  2051  3441               	retlw	65	;'A'
  7495  2052  3420               	retlw	32	;' '
  7496  2053  3449               	retlw	73	;'I'
  7497  2054  344E               	retlw	78	;'N'
  7498  2055  3420               	retlw	32	;' '
  7499  2056  3445               	retlw	69	;'E'
  7500  2057  3445               	retlw	69	;'E'
  7501  2058  3450               	retlw	80	;'P'
  7502  2059  3452               	retlw	82	;'R'
  7503  205A  344F               	retlw	79	;'O'
  7504  205B  344D               	retlw	77	;'M'
  7505  205C  342E               	retlw	46	;'.'
  7506  205D  3400               	retlw	0
  7507                           
  7508                           	psect	stringtext3
  7509  205E                     __pstringtext3:
  7510  205E                     STR_22:
  7511  205E  3445               	retlw	69	;'E'
  7512  205F  3452               	retlw	82	;'R'
  7513  2060  3452               	retlw	82	;'R'
  7514  2061  344F               	retlw	79	;'O'
  7515  2062  3452               	retlw	82	;'R'
  7516  2063  343A               	retlw	58	;':'
  7517  2064  3420               	retlw	32	;' '
  7518  2065  3441               	retlw	65	;'A'
  7519  2066  3455               	retlw	85	;'U'
  7520  2067  3454               	retlw	84	;'T'
  7521  2068  344F               	retlw	79	;'O'
  7522  2069  345F               	retlw	95	;'_'
  7523  206A  3443               	retlw	67	;'C'
  7524  206B  344F               	retlw	79	;'O'
  7525  206C  344E               	retlw	78	;'N'
  7526  206D  3456               	retlw	86	;'V'
  7527  206E  3445               	retlw	69	;'E'
  7528  206F  3452               	retlw	82	;'R'
  7529  2070  3453               	retlw	83	;'S'
  7530  2071  3449               	retlw	73	;'I'
  7531  2072  344F               	retlw	79	;'O'
  7532  2073  344E               	retlw	78	;'N'
  7533  2074  3420               	retlw	32	;' '
  7534  2075  3455               	retlw	85	;'U'
  7535  2076  344E               	retlw	78	;'N'
  7536  2077  3444               	retlw	68	;'D'
  7537  2078  3449               	retlw	73	;'I'
  7538  2079  3446               	retlw	70	;'F'
  7539  207A  3449               	retlw	73	;'I'
  7540  207B  344E               	retlw	78	;'N'
  7541  207C  3445               	retlw	69	;'E'
  7542  207D  3444               	retlw	68	;'D'
  7543  207E  3420               	retlw	32	;' '
  7544  207F  3450               	retlw	80	;'P'
  7545  2080  3441               	retlw	65	;'A'
  7546  2081  3452               	retlw	82	;'R'
  7547  2082  3441               	retlw	65	;'A'
  7548  2083  344D               	retlw	77	;'M'
  7549  2084  3445               	retlw	69	;'E'
  7550  2085  3454               	retlw	84	;'T'
  7551  2086  3452               	retlw	82	;'R'
  7552  2087  342E               	retlw	46	;'.'
  7553  2088  3420               	retlw	32	;' '
  7554  2089  3400               	retlw	0
  7555                           
  7556                           	psect	stringtext4
  7557  208A                     __pstringtext4:
  7558  208A                     STR_19:
  7559  208A  3449               	retlw	73	;'I'
  7560  208B  344E               	retlw	78	;'N'
  7561  208C  3446               	retlw	70	;'F'
  7562  208D  344F               	retlw	79	;'O'
  7563  208E  343A               	retlw	58	;':'
  7564  208F  3420               	retlw	32	;' '
  7565  2090  3453               	retlw	83	;'S'
  7566  2091  3450               	retlw	80	;'P'
  7567  2092  3444               	retlw	68	;'D'
  7568  2093  345F               	retlw	95	;'_'
  7569  2094  3441               	retlw	65	;'A'
  7570  2095  3444               	retlw	68	;'D'
  7571  2096  3444               	retlw	68	;'D'
  7572  2097  345F               	retlw	95	;'_'
  7573  2098  3443               	retlw	67	;'C'
  7574  2099  344F               	retlw	79	;'O'
  7575  209A  3452               	retlw	82	;'R'
  7576  209B  3452               	retlw	82	;'R'
  7577  209C  3420               	retlw	32	;' '
  7578  209D  3452               	retlw	82	;'R'
  7579  209E  3445               	retlw	69	;'E'
  7580  209F  3441               	retlw	65	;'A'
  7581  20A0  3444               	retlw	68	;'D'
  7582  20A1  3445               	retlw	69	;'E'
  7583  20A2  3444               	retlw	68	;'D'
  7584  20A3  3420               	retlw	32	;' '
  7585  20A4  3446               	retlw	70	;'F'
  7586  20A5  3452               	retlw	82	;'R'
  7587  20A6  344F               	retlw	79	;'O'
  7588  20A7  344D               	retlw	77	;'M'
  7589  20A8  3420               	retlw	32	;' '
  7590  20A9  3445               	retlw	69	;'E'
  7591  20AA  3445               	retlw	69	;'E'
  7592  20AB  3450               	retlw	80	;'P'
  7593  20AC  3452               	retlw	82	;'R'
  7594  20AD  344F               	retlw	79	;'O'
  7595  20AE  344D               	retlw	77	;'M'
  7596  20AF  342E               	retlw	46	;'.'
  7597  20B0  3400               	retlw	0
  7598                           
  7599                           	psect	stringtext5
  7600  20B1                     __pstringtext5:
  7601  20B1                     STR_4:
  7602  20B1  3445               	retlw	69	;'E'
  7603  20B2  3452               	retlw	82	;'R'
  7604  20B3  3452               	retlw	82	;'R'
  7605  20B4  344F               	retlw	79	;'O'
  7606  20B5  3452               	retlw	82	;'R'
  7607  20B6  343A               	retlw	58	;':'
  7608  20B7  3420               	retlw	32	;' '
  7609  20B8  3457               	retlw	87	;'W'
  7610  20B9  3452               	retlw	82	;'R'
  7611  20BA  344F               	retlw	79	;'O'
  7612  20BB  344E               	retlw	78	;'N'
  7613  20BC  3447               	retlw	71	;'G'
  7614  20BD  3420               	retlw	32	;' '
  7615  20BE  344C               	retlw	76	;'L'
  7616  20BF  3445               	retlw	69	;'E'
  7617  20C0  3444               	retlw	68	;'D'
  7618  20C1  3420               	retlw	32	;' '
  7619  20C2  3454               	retlw	84	;'T'
  7620  20C3  3449               	retlw	73	;'I'
  7621  20C4  344D               	retlw	77	;'M'
  7622  20C5  3445               	retlw	69	;'E'
  7623  20C6  3452               	retlw	82	;'R'
  7624  20C7  3420               	retlw	32	;' '
  7625  20C8  3446               	retlw	70	;'F'
  7626  20C9  3455               	retlw	85	;'U'
  7627  20CA  344E               	retlw	78	;'N'
  7628  20CB  3443               	retlw	67	;'C'
  7629  20CC  3454               	retlw	84	;'T'
  7630  20CD  3449               	retlw	73	;'I'
  7631  20CE  344F               	retlw	79	;'O'
  7632  20CF  344E               	retlw	78	;'N'
  7633  20D0  3420               	retlw	32	;' '
  7634  20D1  3443               	retlw	67	;'C'
  7635  20D2  3441               	retlw	65	;'A'
  7636  20D3  344C               	retlw	76	;'L'
  7637  20D4  344C               	retlw	76	;'L'
  7638  20D5  342E               	retlw	46	;'.'
  7639  20D6  3400               	retlw	0
  7640                           
  7641                           	psect	stringtext6
  7642  20D7                     __pstringtext6:
  7643  20D7                     STR_18:
  7644  20D7  3449               	retlw	73	;'I'
  7645  20D8  344E               	retlw	78	;'N'
  7646  20D9  3446               	retlw	70	;'F'
  7647  20DA  344F               	retlw	79	;'O'
  7648  20DB  343A               	retlw	58	;':'
  7649  20DC  3420               	retlw	32	;' '
  7650  20DD  3453               	retlw	83	;'S'
  7651  20DE  3450               	retlw	80	;'P'
  7652  20DF  3444               	retlw	68	;'D'
  7653  20E0  345F               	retlw	95	;'_'
  7654  20E1  344D               	retlw	77	;'M'
  7655  20E2  3455               	retlw	85	;'U'
  7656  20E3  344C               	retlw	76	;'L'
  7657  20E4  345F               	retlw	95	;'_'
  7658  20E5  3443               	retlw	67	;'C'
  7659  20E6  344F               	retlw	79	;'O'
  7660  20E7  3452               	retlw	82	;'R'
  7661  20E8  3452               	retlw	82	;'R'
  7662  20E9  3420               	retlw	32	;' '
  7663  20EA  3453               	retlw	83	;'S'
  7664  20EB  3441               	retlw	65	;'A'
  7665  20EC  3456               	retlw	86	;'V'
  7666  20ED  3445               	retlw	69	;'E'
  7667  20EE  3444               	retlw	68	;'D'
  7668  20EF  3420               	retlw	32	;' '
  7669  20F0  3441               	retlw	65	;'A'
  7670  20F1  3454               	retlw	84	;'T'
  7671  20F2  3420               	retlw	32	;' '
  7672  20F3  3445               	retlw	69	;'E'
  7673  20F4  3445               	retlw	69	;'E'
  7674  20F5  3450               	retlw	80	;'P'
  7675  20F6  3452               	retlw	82	;'R'
  7676  20F7  344F               	retlw	79	;'O'
  7677  20F8  344D               	retlw	77	;'M'
  7678  20F9  342E               	retlw	46	;'.'
  7679  20FA  3400               	retlw	0
  7680                           
  7681                           	psect	stringtext7
  7682  20FB                     __pstringtext7:
  7683  20FB                     STR_8:
  7684  20FB  3457               	retlw	87	;'W'
  7685  20FC  3441               	retlw	65	;'A'
  7686  20FD  3452               	retlw	82	;'R'
  7687  20FE  344E               	retlw	78	;'N'
  7688  20FF  3449               	retlw	73	;'I'
  7689  2100  344E               	retlw	78	;'N'
  7690  2101  3447               	retlw	71	;'G'
  7691  2102  343A               	retlw	58	;':'
  7692  2103  3420               	retlw	32	;' '
  7693  2104  3442               	retlw	66	;'B'
  7694  2105  3455               	retlw	85	;'U'
  7695  2106  3454               	retlw	84	;'T'
  7696  2107  3454               	retlw	84	;'T'
  7697  2108  344F               	retlw	79	;'O'
  7698  2109  344E               	retlw	78	;'N'
  7699  210A  3420               	retlw	32	;' '
  7700  210B  3443               	retlw	67	;'C'
  7701  210C  344F               	retlw	79	;'O'
  7702  210D  3455               	retlw	85	;'U'
  7703  210E  344E               	retlw	78	;'N'
  7704  210F  3454               	retlw	84	;'T'
  7705  2110  3445               	retlw	69	;'E'
  7706  2111  3452               	retlw	82	;'R'
  7707  2112  3420               	retlw	32	;' '
  7708  2113  344F               	retlw	79	;'O'
  7709  2114  3456               	retlw	86	;'V'
  7710  2115  3445               	retlw	69	;'E'
  7711  2116  3452               	retlw	82	;'R'
  7712  2117  3446               	retlw	70	;'F'
  7713  2118  344C               	retlw	76	;'L'
  7714  2119  344F               	retlw	79	;'O'
  7715  211A  3457               	retlw	87	;'W'
  7716  211B  342E               	retlw	46	;'.'
  7717  211C  3400               	retlw	0
  7718                           
  7719                           	psect	stringtext8
  7720  211D                     __pstringtext8:
  7721  211D                     STR_20:
  7722  211D  3449               	retlw	73	;'I'
  7723  211E  344E               	retlw	78	;'N'
  7724  211F  3446               	retlw	70	;'F'
  7725  2120  344F               	retlw	79	;'O'
  7726  2121  343A               	retlw	58	;':'
  7727  2122  3420               	retlw	32	;' '
  7728  2123  3446               	retlw	70	;'F'
  7729  2124  3455               	retlw	85	;'U'
  7730  2125  3445               	retlw	69	;'E'
  7731  2126  344C               	retlw	76	;'L'
  7732  2127  345F               	retlw	95	;'_'
  7733  2128  3443               	retlw	67	;'C'
  7734  2129  344F               	retlw	79	;'O'
  7735  212A  3452               	retlw	82	;'R'
  7736  212B  3452               	retlw	82	;'R'
  7737  212C  3420               	retlw	32	;' '
  7738  212D  3453               	retlw	83	;'S'
  7739  212E  3441               	retlw	65	;'A'
  7740  212F  3456               	retlw	86	;'V'
  7741  2130  3445               	retlw	69	;'E'
  7742  2131  3444               	retlw	68	;'D'
  7743  2132  3420               	retlw	32	;' '
  7744  2133  3441               	retlw	65	;'A'
  7745  2134  3454               	retlw	84	;'T'
  7746  2135  3420               	retlw	32	;' '
  7747  2136  3445               	retlw	69	;'E'
  7748  2137  3445               	retlw	69	;'E'
  7749  2138  3450               	retlw	80	;'P'
  7750  2139  3452               	retlw	82	;'R'
  7751  213A  344F               	retlw	79	;'O'
  7752  213B  344D               	retlw	77	;'M'
  7753  213C  342E               	retlw	46	;'.'
  7754  213D  3400               	retlw	0
  7755                           
  7756                           	psect	stringtext9
  7757  213E                     __pstringtext9:
  7758  213E                     STR_15:
  7759  213E  3449               	retlw	73	;'I'
  7760  213F  344E               	retlw	78	;'N'
  7761  2140  3446               	retlw	70	;'F'
  7762  2141  344F               	retlw	79	;'O'
  7763  2142  343A               	retlw	58	;':'
  7764  2143  3420               	retlw	32	;' '
  7765  2144  3453               	retlw	83	;'S'
  7766  2145  3450               	retlw	80	;'P'
  7767  2146  3444               	retlw	68	;'D'
  7768  2147  345F               	retlw	95	;'_'
  7769  2148  3441               	retlw	65	;'A'
  7770  2149  3444               	retlw	68	;'D'
  7771  214A  3444               	retlw	68	;'D'
  7772  214B  345F               	retlw	95	;'_'
  7773  214C  3443               	retlw	67	;'C'
  7774  214D  344F               	retlw	79	;'O'
  7775  214E  3452               	retlw	82	;'R'
  7776  214F  3452               	retlw	82	;'R'
  7777  2150  3420               	retlw	32	;' '
  7778  2151  3452               	retlw	82	;'R'
  7779  2152  3445               	retlw	69	;'E'
  7780  2153  3441               	retlw	65	;'A'
  7781  2154  3444               	retlw	68	;'D'
  7782  2155  3420               	retlw	32	;' '
  7783  2156  3453               	retlw	83	;'S'
  7784  2157  3455               	retlw	85	;'U'
  7785  2158  3443               	retlw	67	;'C'
  7786  2159  3443               	retlw	67	;'C'
  7787  215A  3445               	retlw	69	;'E'
  7788  215B  3453               	retlw	83	;'S'
  7789  215C  3453               	retlw	83	;'S'
  7790  215D  342E               	retlw	46	;'.'
  7791  215E  3400               	retlw	0
  7792                           
  7793                           	psect	stringtext10
  7794  215F                     __pstringtext10:
  7795  215F                     STR_14:
  7796  215F  3449               	retlw	73	;'I'
  7797  2160  344E               	retlw	78	;'N'
  7798  2161  3446               	retlw	70	;'F'
  7799  2162  344F               	retlw	79	;'O'
  7800  2163  343A               	retlw	58	;':'
  7801  2164  3420               	retlw	32	;' '
  7802  2165  3453               	retlw	83	;'S'
  7803  2166  3450               	retlw	80	;'P'
  7804  2167  3444               	retlw	68	;'D'
  7805  2168  345F               	retlw	95	;'_'
  7806  2169  344D               	retlw	77	;'M'
  7807  216A  3455               	retlw	85	;'U'
  7808  216B  344C               	retlw	76	;'L'
  7809  216C  345F               	retlw	95	;'_'
  7810  216D  3443               	retlw	67	;'C'
  7811  216E  344F               	retlw	79	;'O'
  7812  216F  3452               	retlw	82	;'R'
  7813  2170  3452               	retlw	82	;'R'
  7814  2171  3420               	retlw	32	;' '
  7815  2172  3452               	retlw	82	;'R'
  7816  2173  3445               	retlw	69	;'E'
  7817  2174  3441               	retlw	65	;'A'
  7818  2175  3444               	retlw	68	;'D'
  7819  2176  3420               	retlw	32	;' '
  7820  2177  3453               	retlw	83	;'S'
  7821  2178  3455               	retlw	85	;'U'
  7822  2179  3443               	retlw	67	;'C'
  7823  217A  3443               	retlw	67	;'C'
  7824  217B  3445               	retlw	69	;'E'
  7825  217C  3453               	retlw	83	;'S'
  7826  217D  3453               	retlw	83	;'S'
  7827  217E  342E               	retlw	46	;'.'
  7828  217F  3400               	retlw	0
  7829                           
  7830                           	psect	stringtext11
  7831  2180                     __pstringtext11:
  7832  2180                     STR_10:
  7833  2180  3445               	retlw	69	;'E'
  7834  2181  3452               	retlw	82	;'R'
  7835  2182  3452               	retlw	82	;'R'
  7836  2183  344F               	retlw	79	;'O'
  7837  2184  3452               	retlw	82	;'R'
  7838  2185  343A               	retlw	58	;':'
  7839  2186  3420               	retlw	32	;' '
  7840  2187  3442               	retlw	66	;'B'
  7841  2188  3455               	retlw	85	;'U'
  7842  2189  3454               	retlw	84	;'T'
  7843  218A  3454               	retlw	84	;'T'
  7844  218B  344F               	retlw	79	;'O'
  7845  218C  344E               	retlw	78	;'N'
  7846  218D  3420               	retlw	32	;' '
  7847  218E  3455               	retlw	85	;'U'
  7848  218F  344E               	retlw	78	;'N'
  7849  2190  3444               	retlw	68	;'D'
  7850  2191  3449               	retlw	73	;'I'
  7851  2192  3446               	retlw	70	;'F'
  7852  2193  3449               	retlw	73	;'I'
  7853  2194  344E               	retlw	78	;'N'
  7854  2195  3445               	retlw	69	;'E'
  7855  2196  3444               	retlw	68	;'D'
  7856  2197  3420               	retlw	32	;' '
  7857  2198  3456               	retlw	86	;'V'
  7858  2199  3441               	retlw	65	;'A'
  7859  219A  344C               	retlw	76	;'L'
  7860  219B  3455               	retlw	85	;'U'
  7861  219C  3445               	retlw	69	;'E'
  7862  219D  342E               	retlw	46	;'.'
  7863  219E  3400               	retlw	0
  7864                           
  7865                           	psect	stringtext12
  7866  219F                     __pstringtext12:
  7867  219F                     STR_16:
  7868  219F  3449               	retlw	73	;'I'
  7869  21A0  344E               	retlw	78	;'N'
  7870  21A1  3446               	retlw	70	;'F'
  7871  21A2  344F               	retlw	79	;'O'
  7872  21A3  343A               	retlw	58	;':'
  7873  21A4  3420               	retlw	32	;' '
  7874  21A5  3446               	retlw	70	;'F'
  7875  21A6  3455               	retlw	85	;'U'
  7876  21A7  3445               	retlw	69	;'E'
  7877  21A8  344C               	retlw	76	;'L'
  7878  21A9  345F               	retlw	95	;'_'
  7879  21AA  3443               	retlw	67	;'C'
  7880  21AB  344F               	retlw	79	;'O'
  7881  21AC  3452               	retlw	82	;'R'
  7882  21AD  3452               	retlw	82	;'R'
  7883  21AE  3420               	retlw	32	;' '
  7884  21AF  3452               	retlw	82	;'R'
  7885  21B0  3445               	retlw	69	;'E'
  7886  21B1  3441               	retlw	65	;'A'
  7887  21B2  3444               	retlw	68	;'D'
  7888  21B3  3420               	retlw	32	;' '
  7889  21B4  3453               	retlw	83	;'S'
  7890  21B5  3455               	retlw	85	;'U'
  7891  21B6  3443               	retlw	67	;'C'
  7892  21B7  3443               	retlw	67	;'C'
  7893  21B8  3445               	retlw	69	;'E'
  7894  21B9  3453               	retlw	83	;'S'
  7895  21BA  3453               	retlw	83	;'S'
  7896  21BB  342E               	retlw	46	;'.'
  7897  21BC  3400               	retlw	0
  7898                           
  7899                           	psect	stringtext13
  7900  21BD                     __pstringtext13:
  7901  21BD                     STR_9:
  7902  21BD  3449               	retlw	73	;'I'
  7903  21BE  344E               	retlw	78	;'N'
  7904  21BF  3446               	retlw	70	;'F'
  7905  21C0  344F               	retlw	79	;'O'
  7906  21C1  343A               	retlw	58	;':'
  7907  21C2  3420               	retlw	32	;' '
  7908  21C3  3442               	retlw	66	;'B'
  7909  21C4  3455               	retlw	85	;'U'
  7910  21C5  3454               	retlw	84	;'T'
  7911  21C6  3454               	retlw	84	;'T'
  7912  21C7  344F               	retlw	79	;'O'
  7913  21C8  344E               	retlw	78	;'N'
  7914  21C9  3420               	retlw	32	;' '
  7915  21CA  3443               	retlw	67	;'C'
  7916  21CB  344F               	retlw	79	;'O'
  7917  21CC  3455               	retlw	85	;'U'
  7918  21CD  344E               	retlw	78	;'N'
  7919  21CE  3454               	retlw	84	;'T'
  7920  21CF  3445               	retlw	69	;'E'
  7921  21D0  3452               	retlw	82	;'R'
  7922  21D1  3420               	retlw	32	;' '
  7923  21D2  3449               	retlw	73	;'I'
  7924  21D3  3453               	retlw	83	;'S'
  7925  21D4  3420               	retlw	32	;' '
  7926  21D5  3425               	retlw	37	;'%'
  7927  21D6  3464               	retlw	100	;'d'
  7928  21D7  340A               	retlw	10
  7929  21D8  342E               	retlw	46	;'.'
  7930  21D9  3400               	retlw	0
  7931                           
  7932                           	psect	stringtext14
  7933  21DA                     __pstringtext14:
  7934  21DA                     STR_5:
  7935  21DA  3445               	retlw	69	;'E'
  7936  21DB  3452               	retlw	82	;'R'
  7937  21DC  3452               	retlw	82	;'R'
  7938  21DD  344F               	retlw	79	;'O'
  7939  21DE  3452               	retlw	82	;'R'
  7940  21DF  343A               	retlw	58	;':'
  7941  21E0  3420               	retlw	32	;' '
  7942  21E1  344C               	retlw	76	;'L'
  7943  21E2  3445               	retlw	69	;'E'
  7944  21E3  3444               	retlw	68	;'D'
  7945  21E4  3420               	retlw	32	;' '
  7946  21E5  3443               	retlw	67	;'C'
  7947  21E6  344F               	retlw	79	;'O'
  7948  21E7  3455               	retlw	85	;'U'
  7949  21E8  344E               	retlw	78	;'N'
  7950  21E9  3454               	retlw	84	;'T'
  7951  21EA  3445               	retlw	69	;'E'
  7952  21EB  3452               	retlw	82	;'R'
  7953  21EC  3420               	retlw	32	;' '
  7954  21ED  344F               	retlw	79	;'O'
  7955  21EE  3456               	retlw	86	;'V'
  7956  21EF  3445               	retlw	69	;'E'
  7957  21F0  3452               	retlw	82	;'R'
  7958  21F1  3446               	retlw	70	;'F'
  7959  21F2  344C               	retlw	76	;'L'
  7960  21F3  344F               	retlw	79	;'O'
  7961  21F4  3457               	retlw	87	;'W'
  7962  21F5  342E               	retlw	46	;'.'
  7963  21F6  3400               	retlw	0
  7964                           
  7965                           	psect	stringtext15
  7966  21F7                     __pstringtext15:
  7967  21F7                     STR_1:
  7968  21F7  3445               	retlw	69	;'E'
  7969  21F8  3472               	retlw	114	;'r'
  7970  21F9  3472               	retlw	114	;'r'
  7971  21FA  346F               	retlw	111	;'o'
  7972  21FB  3472               	retlw	114	;'r'
  7973  21FC  343A               	retlw	58	;':'
  7974  21FD  3420               	retlw	32	;' '
  7975  21FE  3453               	retlw	83	;'S'
  7976  21FF  3450               	retlw	80	;'P'
  7977  2200  3444               	retlw	68	;'D'
  7978  2201  3420               	retlw	32	;' '
  7979  2202  3463               	retlw	99	;'c'
  7980  2203  346F               	retlw	111	;'o'
  7981  2204  3475               	retlw	117	;'u'
  7982  2205  346E               	retlw	110	;'n'
  7983  2206  3474               	retlw	116	;'t'
  7984  2207  3465               	retlw	101	;'e'
  7985  2208  3472               	retlw	114	;'r'
  7986  2209  3420               	retlw	32	;' '
  7987  220A  346F               	retlw	111	;'o'
  7988  220B  3476               	retlw	118	;'v'
  7989  220C  3465               	retlw	101	;'e'
  7990  220D  3472               	retlw	114	;'r'
  7991  220E  3466               	retlw	102	;'f'
  7992  220F  346C               	retlw	108	;'l'
  7993  2210  346F               	retlw	111	;'o'
  7994  2211  3477               	retlw	119	;'w'
  7995  2212  3421               	retlw	33	;'!'
  7996  2213  3400               	retlw	0
  7997                           
  7998                           	psect	stringtext16
  7999  2214                     __pstringtext16:
  8000  2214                     STR_2:
  8001  2214  3449               	retlw	73	;'I'
  8002  2215  344E               	retlw	78	;'N'
  8003  2216  3446               	retlw	70	;'F'
  8004  2217  344F               	retlw	79	;'O'
  8005  2218  343A               	retlw	58	;':'
  8006  2219  3420               	retlw	32	;' '
  8007  221A  3452               	retlw	82	;'R'
  8008  221B  3465               	retlw	101	;'e'
  8009  221C  3476               	retlw	118	;'v'
  8010  221D  3449               	retlw	73	;'I'
  8011  221E  3444               	retlw	68	;'D'
  8012  221F  3420               	retlw	32	;' '
  8013  2220  3425               	retlw	37	;'%'
  8014  2221  3464               	retlw	100	;'d'
  8015  2222  340A               	retlw	10
  8016  2223  3444               	retlw	68	;'D'
  8017  2224  3465               	retlw	101	;'e'
  8018  2225  3476               	retlw	118	;'v'
  8019  2226  3469               	retlw	105	;'i'
  8020  2227  3463               	retlw	99	;'c'
  8021  2228  3465               	retlw	101	;'e'
  8022  2229  3449               	retlw	73	;'I'
  8023  222A  3444               	retlw	68	;'D'
  8024  222B  3420               	retlw	32	;' '
  8025  222C  3425               	retlw	37	;'%'
  8026  222D  3464               	retlw	100	;'d'
  8027  222E  340A               	retlw	10
  8028  222F  3400               	retlw	0
  8029                           
  8030                           	psect	stringtext17
  8031  2230                     __pstringtext17:
  8032  2230                     STR_3:
  8033  2230  3445               	retlw	69	;'E'
  8034  2231  3452               	retlw	82	;'R'
  8035  2232  3452               	retlw	82	;'R'
  8036  2233  344F               	retlw	79	;'O'
  8037  2234  3452               	retlw	82	;'R'
  8038  2235  343A               	retlw	58	;':'
  8039  2236  3420               	retlw	32	;' '
  8040  2237  344D               	retlw	77	;'M'
  8041  2238  3445               	retlw	69	;'E'
  8042  2239  344E               	retlw	78	;'N'
  8043  223A  3455               	retlw	85	;'U'
  8044  223B  3420               	retlw	32	;' '
  8045  223C  3455               	retlw	85	;'U'
  8046  223D  344E               	retlw	78	;'N'
  8047  223E  344B               	retlw	75	;'K'
  8048  223F  344E               	retlw	78	;'N'
  8049  2240  344F               	retlw	79	;'O'
  8050  2241  3457               	retlw	87	;'W'
  8051  2242  344E               	retlw	78	;'N'
  8052  2243  3420               	retlw	32	;' '
  8053  2244  3453               	retlw	83	;'S'
  8054  2245  3454               	retlw	84	;'T'
  8055  2246  3441               	retlw	65	;'A'
  8056  2247  3454               	retlw	84	;'T'
  8057  2248  3445               	retlw	69	;'E'
  8058  2249  342E               	retlw	46	;'.'
  8059  224A  3400               	retlw	0
  8060                           
  8061                           	psect	stringtext18
  8062  224B                     __pstringtext18:
  8063  224B                     STR_7:
  8064  224B  3449               	retlw	73	;'I'
  8065  224C  344E               	retlw	78	;'N'
  8066  224D  3446               	retlw	70	;'F'
  8067  224E  344F               	retlw	79	;'O'
  8068  224F  343A               	retlw	58	;':'
  8069  2250  3420               	retlw	32	;' '
  8070  2251  3442               	retlw	66	;'B'
  8071  2252  3455               	retlw	85	;'U'
  8072  2253  3454               	retlw	84	;'T'
  8073  2254  3454               	retlw	84	;'T'
  8074  2255  344F               	retlw	79	;'O'
  8075  2256  344E               	retlw	78	;'N'
  8076  2257  3420               	retlw	32	;' '
  8077  2258  3449               	retlw	73	;'I'
  8078  2259  3453               	retlw	83	;'S'
  8079  225A  3420               	retlw	32	;' '
  8080  225B  3450               	retlw	80	;'P'
  8081  225C  3452               	retlw	82	;'R'
  8082  225D  3445               	retlw	69	;'E'
  8083  225E  3453               	retlw	83	;'S'
  8084  225F  3453               	retlw	83	;'S'
  8085  2260  3445               	retlw	69	;'E'
  8086  2261  3444               	retlw	68	;'D'
  8087  2262  342E               	retlw	46	;'.'
  8088  2263  3400               	retlw	0
  8089                           
  8090                           	psect	stringtext19
  8091  2264                     __pstringtext19:
  8092  2264                     STR_6:
  8093  2264  3445               	retlw	69	;'E'
  8094  2265  3452               	retlw	82	;'R'
  8095  2266  3452               	retlw	82	;'R'
  8096  2267  344F               	retlw	79	;'O'
  8097  2268  3452               	retlw	82	;'R'
  8098  2269  343A               	retlw	58	;':'
  8099  226A  3420               	retlw	32	;' '
  8100  226B  3457               	retlw	87	;'W'
  8101  226C  3452               	retlw	82	;'R'
  8102  226D  344F               	retlw	79	;'O'
  8103  226E  344E               	retlw	78	;'N'
  8104  226F  3447               	retlw	71	;'G'
  8105  2270  3420               	retlw	32	;' '
  8106  2271  344C               	retlw	76	;'L'
  8107  2272  3445               	retlw	69	;'E'
  8108  2273  3444               	retlw	68	;'D'
  8109  2274  3420               	retlw	32	;' '
  8110  2275  344D               	retlw	77	;'M'
  8111  2276  344F               	retlw	79	;'O'
  8112  2277  3444               	retlw	68	;'D'
  8113  2278  3445               	retlw	69	;'E'
  8114  2279  342E               	retlw	46	;'.'
  8115  227A  3400               	retlw	0
  8116                           
  8117                           	psect	stringtext20
  8118  2800                     __pstringtext20:
  8119  2800                     STR_11:
  8120  2800  3453               	retlw	83	;'S'
  8121  2801  3450               	retlw	80	;'P'
  8122  2802  3444               	retlw	68	;'D'
  8123  2803  3420               	retlw	32	;' '
  8124  2804  3425               	retlw	37	;'%'
  8125  2805  3464               	retlw	100	;'d'
  8126  2806  3420               	retlw	32	;' '
  8127  2807  3450               	retlw	80	;'P'
  8128  2808  3452               	retlw	82	;'R'
  8129  2809  3420               	retlw	32	;' '
  8130  280A  3425               	retlw	37	;'%'
  8131  280B  3464               	retlw	100	;'d'
  8132  280C  3400               	retlw	0
  8133                           
  8134                           	psect	stringtext21
  8135  280D                     __pstringtext21:
  8136  280D                     STR_12:
  8137  280D  3453               	retlw	83	;'S'
  8138  280E  3450               	retlw	80	;'P'
  8139  280F  3444               	retlw	68	;'D'
  8140  2810  345F               	retlw	95	;'_'
  8141  2811  3444               	retlw	68	;'D'
  8142  2812  3455               	retlw	85	;'U'
  8143  2813  3454               	retlw	84	;'T'
  8144  2814  3459               	retlw	89	;'Y'
  8145  2815  3420               	retlw	32	;' '
  8146  2816  3425               	retlw	37	;'%'
  8147  2817  3464               	retlw	100	;'d'
  8148  2818  3400               	retlw	0
  8149                           
  8150                           	psect	stringtext22
  8151  0000                     __pstringtext22:
  8152  2000                     
  8153                           	psect	cinit
  8154  0046                     start_initialization:	
  8155                           ; #config settings
  8156                           
  8157  0046                     __initialization:
  8158                           
  8159                           ; Initialize objects allocated to BANK2
  8160  0046  0022               	movlb	2	; select bank2
  8161  0047  3190  2000  3180   	fcall	__pidataBANK2	;fetch initializer
  8162  004A  00EF               	movwf	__pdataBANK2& (0+127)
  8163                           
  8164                           ; Clear objects allocated to BITBANK0
  8165  004B  0020               	movlb	0	; select bank0
  8166  004C  01EE               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  8167  004D  01EF               	clrf	((__pbitbssBANK0/(0+8)+1))& (0+127)
  8168                           
  8169                           ; Clear objects allocated to BITBANK1
  8170  004E  30E4               	movlw	low (__pbitbssBANK1/(0+8))
  8171  004F  0084               	movwf	4
  8172  0050  3000               	movlw	high (__pbitbssBANK1/(0+8))
  8173  0051  0085               	movwf	5
  8174  0052  3008               	movlw	8
  8175  0053  3188  2000  3180   	fcall	clear_ram0
  8176                           
  8177                           ; Clear objects allocated to BANK1
  8178  0056  0021               	movlb	1	; select bank1
  8179  0057  01EC               	clrf	__pbssBANK1& (0+127)
  8180  0058  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  8181  0059  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  8182  005A  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  8183                           
  8184                           ; Clear objects allocated to BITBANK2
  8185  005B  3020               	movlw	low (__pbitbssBANK2/(0+8))
  8186  005C  0084               	movwf	4
  8187  005D  3001               	movlw	high (__pbitbssBANK2/(0+8))
  8188  005E  0085               	movwf	5
  8189  005F  3009               	movlw	9
  8190  0060  3188  2000  3180   	fcall	clear_ram0
  8191                           
  8192                           ; Clear objects allocated to BANK2
  8193  0063  3057               	movlw	low __pbssBANK2
  8194  0064  0084               	movwf	4
  8195  0065  3001               	movlw	high __pbssBANK2
  8196  0066  0085               	movwf	5
  8197  0067  3016               	movlw	22
  8198  0068  3188  2000  3180   	fcall	clear_ram0
  8199                           
  8200                           ; Clear objects allocated to BITBANK3
  8201  006B  0023               	movlb	3	; select bank3
  8202  006C  01D4               	clrf	(__pbitbssBANK3/(0+8))& (0+127)
  8203  006D  01D5               	clrf	((__pbitbssBANK3/(0+8)+1))& (0+127)
  8204  006E  01D6               	clrf	((__pbitbssBANK3/(0+8)+2))& (0+127)
  8205  006F  01D7               	clrf	((__pbitbssBANK3/(0+8)+3))& (0+127)
  8206                           
  8207                           ; Clear objects allocated to BANK3
  8208  0070  30A0               	movlw	low __pbssBANK3
  8209  0071  0084               	movwf	4
  8210  0072  3001               	movlw	high __pbssBANK3
  8211  0073  0085               	movwf	5
  8212  0074  3034               	movlw	52
  8213  0075  3188  2000  3180   	fcall	clear_ram0
  8214  0078                     end_of_initialization:	
  8215                           ;End of C runtime variable initialization code
  8216                           
  8217  0078                     __end_of__initialization:
  8218  0078  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8219  0079  0020               	movlb	0
  8220  007A  3185  2D2A         	ljmp	_main	;jump to C main() function
  8221                           
  8222                           	psect	bitbssBANK0
  8223  0370                     __pbitbssBANK0:
  8224  0370                     __ccovbit5_16:
  8225  0370                     	ds	1
  8226  0371                     __ccovbit3_15:
  8227  0371                     	ds	1
  8228  0372                     __ccovbit2_14:
  8229  0372                     	ds	1
  8230  0373                     __ccovbit1_13:
  8231  0373                     	ds	1
  8232  0374                     __ccovbit9_12:
  8233  0374                     	ds	1
  8234  0375                     __ccovbit5_11:
  8235  0375                     	ds	1
  8236  0376                     __ccovbit1_10:
  8237  0376                     	ds	1
  8238  0377                     __ccovbit1_9:
  8239  0377                     	ds	1
  8240  0378                     __ccovbit1_8:
  8241  0378                     	ds	1
  8242  0379                     __ccovbit1_7:
  8243  0379                     	ds	1
  8244  037A                     __ccovbit5_6:
  8245  037A                     	ds	1
  8246  037B                     __ccovbit6_5:
  8247  037B                     	ds	1
  8248  037C                     __ccovbit1_4:
  8249  037C                     	ds	1
  8250  037D                     __ccovbit4_3:
  8251  037D                     	ds	1
  8252  037E                     __ccovbit1_2:
  8253  037E                     	ds	1
  8254  037F                     __ccovbit2_1:
  8255  037F                     	ds	1
  8256                           
  8257                           	psect	bitbssBANK1
  8258  0720                     __pbitbssBANK1:
  8259  0720                     __ccovbit11_80:
  8260  0720                     	ds	1
  8261  0721                     __ccovbit9_79:
  8262  0721                     	ds	1
  8263  0722                     __ccovbit6_78:
  8264  0722                     	ds	1
  8265  0723                     __ccovbit3_77:
  8266  0723                     	ds	1
  8267  0724                     __ccovbit2_76:
  8268  0724                     	ds	1
  8269  0725                     __ccovbit4_75:
  8270  0725                     	ds	1
  8271  0726                     __ccovbit3_74:
  8272  0726                     	ds	1
  8273  0727                     __ccovbit2_73:
  8274  0727                     	ds	1
  8275  0728                     __ccovbit1_72:
  8276  0728                     	ds	1
  8277  0729                     __ccovbit7_71:
  8278  0729                     	ds	1
  8279  072A                     __ccovbit1_70:
  8280  072A                     	ds	1
  8281  072B                     __ccovbit81_69:
  8282  072B                     	ds	1
  8283  072C                     __ccovbit80_68:
  8284  072C                     	ds	1
  8285  072D                     __ccovbit76_67:
  8286  072D                     	ds	1
  8287  072E                     __ccovbit72_66:
  8288  072E                     	ds	1
  8289  072F                     __ccovbit70_65:
  8290  072F                     	ds	1
  8291  0730                     __ccovbit67_64:
  8292  0730                     	ds	1
  8293  0731                     __ccovbit58_63:
  8294  0731                     	ds	1
  8295  0732                     __ccovbit56_62:
  8296  0732                     	ds	1
  8297  0733                     __ccovbit53_61:
  8298  0733                     	ds	1
  8299  0734                     __ccovbit45_60:
  8300  0734                     	ds	1
  8301  0735                     __ccovbit43_59:
  8302  0735                     	ds	1
  8303  0736                     __ccovbit40_58:
  8304  0736                     	ds	1
  8305  0737                     __ccovbit32_57:
  8306  0737                     	ds	1
  8307  0738                     __ccovbit25_56:
  8308  0738                     	ds	1
  8309  0739                     __ccovbit22_55:
  8310  0739                     	ds	1
  8311  073A                     __ccovbit14_54:
  8312  073A                     	ds	1
  8313  073B                     __ccovbit12_53:
  8314  073B                     	ds	1
  8315  073C                     __ccovbit1_52:
  8316  073C                     	ds	1
  8317  073D                     __ccovbit4_51:
  8318  073D                     	ds	1
  8319  073E                     __ccovbit4_50:
  8320  073E                     	ds	1
  8321  073F                     __ccovbit0_49:
  8322  073F                     	ds	1
  8323  0740                     __ccovbit1_48:
  8324  0740                     	ds	1
  8325  0741                     __ccovbit4_47:
  8326  0741                     	ds	1
  8327  0742                     __ccovbit2_46:
  8328  0742                     	ds	1
  8329  0743                     __ccovbit6_45:
  8330  0743                     	ds	1
  8331  0744                     __ccovbit4_44:
  8332  0744                     	ds	1
  8333  0745                     __ccovbit1_43:
  8334  0745                     	ds	1
  8335  0746                     __ccovbit1_42:
  8336  0746                     	ds	1
  8337  0747                     __ccovbit6_41:
  8338  0747                     	ds	1
  8339  0748                     __ccovbit4_40:
  8340  0748                     	ds	1
  8341  0749                     __ccovbit2_39:
  8342  0749                     	ds	1
  8343  074A                     __ccovbit7_38:
  8344  074A                     	ds	1
  8345  074B                     __ccovbit0_37:
  8346  074B                     	ds	1
  8347  074C                     __ccovbit1_36:
  8348  074C                     	ds	1
  8349  074D                     __ccovbit5_35:
  8350  074D                     	ds	1
  8351  074E                     __ccovbit3_34:
  8352  074E                     	ds	1
  8353  074F                     __ccovbit9_33:
  8354  074F                     	ds	1
  8355  0750                     __ccovbit7_32:
  8356  0750                     	ds	1
  8357  0751                     __ccovbit4_31:
  8358  0751                     	ds	1
  8359  0752                     __ccovbit6_30:
  8360  0752                     	ds	1
  8361  0753                     __ccovbit14_29:
  8362  0753                     	ds	1
  8363  0754                     __ccovbit8_28:
  8364  0754                     	ds	1
  8365  0755                     __ccovbit13_27:
  8366  0755                     	ds	1
  8367  0756                     __ccovbit11_26:
  8368  0756                     	ds	1
  8369  0757                     __ccovbit1_25:
  8370  0757                     	ds	1
  8371  0758                     __ccovbit1_24:
  8372  0758                     	ds	1
  8373  0759                     __ccovbit4_23:
  8374  0759                     	ds	1
  8375  075A                     __ccovbit1_22:
  8376  075A                     	ds	1
  8377  075B                     __ccovbit16_21:
  8378  075B                     	ds	1
  8379  075C                     __ccovbit14_20:
  8380  075C                     	ds	1
  8381  075D                     __ccovbit9_19:
  8382  075D                     	ds	1
  8383  075E                     __ccovbit8_18:
  8384  075E                     	ds	1
  8385  075F                     __ccovbit6_17:
  8386  075F                     	ds	1
  8387                           
  8388                           	psect	bssBANK1
  8389  00EC                     __pbssBANK1:
  8390  00EC                     _flags:
  8391  00EC                     	ds	2
  8392  00EE                     spd_test_pwm@spd_count:
  8393  00EE                     	ds	1
  8394  00EF                     led_indicate@count:
  8395  00EF                     	ds	1
  8396                           
  8397                           	psect	bitbssBANK2
  8398  0900                     __pbitbssBANK2:
  8399  0900                     __ccovbit2_152:
  8400  0900                     	ds	1
  8401  0901                     __ccovbit42_151:
  8402  0901                     	ds	1
  8403  0902                     __ccovbit38_150:
  8404  0902                     	ds	1
  8405  0903                     __ccovbit36_149:
  8406  0903                     	ds	1
  8407  0904                     __ccovbit34_148:
  8408  0904                     	ds	1
  8409  0905                     __ccovbit24_147:
  8410  0905                     	ds	1
  8411  0906                     __ccovbit22_146:
  8412  0906                     	ds	1
  8413  0907                     __ccovbit12_145:
  8414  0907                     	ds	1
  8415  0908                     __ccovbit10_144:
  8416  0908                     	ds	1
  8417  0909                     __ccovbit83_143:
  8418  0909                     	ds	1
  8419  090A                     __ccovbit77_142:
  8420  090A                     	ds	1
  8421  090B                     __ccovbit73_141:
  8422  090B                     	ds	1
  8423  090C                     __ccovbit70_140:
  8424  090C                     	ds	1
  8425  090D                     __ccovbit68_139:
  8426  090D                     	ds	1
  8427  090E                     __ccovbit59_138:
  8428  090E                     	ds	1
  8429  090F                     __ccovbit48_137:
  8430  090F                     	ds	1
  8431  0910                     __ccovbit45_136:
  8432  0910                     	ds	1
  8433  0911                     __ccovbit43_135:
  8434  0911                     	ds	1
  8435  0912                     __ccovbit34_134:
  8436  0912                     	ds	1
  8437  0913                     __ccovbit24_133:
  8438  0913                     	ds	1
  8439  0914                     __ccovbit23_132:
  8440  0914                     	ds	1
  8441  0915                     __ccovbit21_131:
  8442  0915                     	ds	1
  8443  0916                     __ccovbit20_130:
  8444  0916                     	ds	1
  8445  0917                     __ccovbit18_129:
  8446  0917                     	ds	1
  8447  0918                     __ccovbit9_128:
  8448  0918                     	ds	1
  8449  0919                     __ccovbit1_127:
  8450  0919                     	ds	1
  8451  091A                     __ccovbit3_126:
  8452  091A                     	ds	1
  8453  091B                     __ccovbit3_125:
  8454  091B                     	ds	1
  8455  091C                     __ccovbit18_124:
  8456  091C                     	ds	1
  8457  091D                     __ccovbit16_123:
  8458  091D                     	ds	1
  8459  091E                     __ccovbit14_122:
  8460  091E                     	ds	1
  8461  091F                     __ccovbit9_121:
  8462  091F                     	ds	1
  8463  0920                     __ccovbit8_120:
  8464  0920                     	ds	1
  8465  0921                     __ccovbit6_119:
  8466  0921                     	ds	1
  8467  0922                     __ccovbit4_118:
  8468  0922                     	ds	1
  8469  0923                     __ccovbit2_117:
  8470  0923                     	ds	1
  8471  0924                     __ccovbit17_116:
  8472  0924                     	ds	1
  8473  0925                     __ccovbit14_115:
  8474  0925                     	ds	1
  8475  0926                     __ccovbit11_114:
  8476  0926                     	ds	1
  8477  0927                     __ccovbit9_113:
  8478  0927                     	ds	1
  8479  0928                     __ccovbit2_112:
  8480  0928                     	ds	1
  8481  0929                     __ccovbit2_111:
  8482  0929                     	ds	1
  8483  092A                     __ccovbit1_110:
  8484  092A                     	ds	1
  8485  092B                     __ccovbit2_109:
  8486  092B                     	ds	1
  8487  092C                     __ccovbit1_108:
  8488  092C                     	ds	1
  8489  092D                     __ccovbit2_107:
  8490  092D                     	ds	1
  8491  092E                     __ccovbit17_106:
  8492  092E                     	ds	1
  8493  092F                     __ccovbit11_105:
  8494  092F                     	ds	1
  8495  0930                     __ccovbit5_104:
  8496  0930                     	ds	1
  8497  0931                     __ccovbit2_103:
  8498  0931                     	ds	1
  8499  0932                     __ccovbit28_102:
  8500  0932                     	ds	1
  8501  0933                     __ccovbit23_101:
  8502  0933                     	ds	1
  8503  0934                     __ccovbit21_100:
  8504  0934                     	ds	1
  8505  0935                     __ccovbit17_99:
  8506  0935                     	ds	1
  8507  0936                     __ccovbit16_98:
  8508  0936                     	ds	1
  8509  0937                     __ccovbit14_97:
  8510  0937                     	ds	1
  8511  0938                     __ccovbit9_96:
  8512  0938                     	ds	1
  8513  0939                     __ccovbit7_95:
  8514  0939                     	ds	1
  8515  093A                     __ccovbit4_94:
  8516  093A                     	ds	1
  8517  093B                     __ccovbit2_93:
  8518  093B                     	ds	1
  8519  093C                     __ccovbit3_92:
  8520  093C                     	ds	1
  8521  093D                     __ccovbit46_91:
  8522  093D                     	ds	1
  8523  093E                     __ccovbit42_90:
  8524  093E                     	ds	1
  8525  093F                     __ccovbit37_89:
  8526  093F                     	ds	1
  8527  0940                     __ccovbit34_88:
  8528  0940                     	ds	1
  8529  0941                     __ccovbit32_87:
  8530  0941                     	ds	1
  8531  0942                     __ccovbit27_86:
  8532  0942                     	ds	1
  8533  0943                     __ccovbit25_85:
  8534  0943                     	ds	1
  8535  0944                     __ccovbit19_84:
  8536  0944                     	ds	1
  8537  0945                     __ccovbit18_83:
  8538  0945                     	ds	1
  8539  0946                     __ccovbit16_82:
  8540  0946                     	ds	1
  8541  0947                     __ccovbit14_81:
  8542  0947                     	ds	1
  8543                           
  8544                           	psect	bssBANK2
  8545  0157                     __pbssBANK2:
  8546  0157                     _button:
  8547  0157                     	ds	3
  8548  015A                     _prec:
  8549  015A                     	ds	2
  8550  015C                     fuel_low_check@low_count:
  8551  015C                     	ds	1
  8552  015D                     spd_test_pwm@func_count:
  8553  015D                     	ds	1
  8554  015E                     led_indicate@delay:
  8555  015E                     	ds	1
  8556  015F                     _menu:
  8557  015F                     	ds	1
  8558  0160                     _eusartRxLastError:
  8559  0160                     	ds	1
  8560  0161                     _spd:
  8561  0161                     	ds	12
  8562                           
  8563                           	psect	dataBANK2
  8564  016F                     __pdataBANK2:
  8565  016F                     spd_test_pwm@rising:
  8566  016F                     	ds	1
  8567                           
  8568                           	psect	bitbssBANK3
  8569  0EA0                     __pbitbssBANK3:
  8570  0EA0                     __ccovbit2_183:
  8571  0EA0                     	ds	1
  8572  0EA1                     __ccovbit1_182:
  8573  0EA1                     	ds	1
  8574  0EA2                     __ccovbit1_181:
  8575  0EA2                     	ds	1
  8576  0EA3                     __ccovbit1_180:
  8577  0EA3                     	ds	1
  8578  0EA4                     __ccovbit5_179:
  8579  0EA4                     	ds	1
  8580  0EA5                     __ccovbit1_178:
  8581  0EA5                     	ds	1
  8582  0EA6                     __ccovbit1_177:
  8583  0EA6                     	ds	1
  8584  0EA7                     __ccovbit2_176:
  8585  0EA7                     	ds	1
  8586  0EA8                     __ccovbit2_175:
  8587  0EA8                     	ds	1
  8588  0EA9                     __ccovbit8_174:
  8589  0EA9                     	ds	1
  8590  0EAA                     __ccovbit2_173:
  8591  0EAA                     	ds	1
  8592  0EAB                     __ccovbit13_172:
  8593  0EAB                     	ds	1
  8594  0EAC                     __ccovbit9_171:
  8595  0EAC                     	ds	1
  8596  0EAD                     __ccovbit4_170:
  8597  0EAD                     	ds	1
  8598  0EAE                     __ccovbit2_169:
  8599  0EAE                     	ds	1
  8600  0EAF                     __ccovbit1_168:
  8601  0EAF                     	ds	1
  8602  0EB0                     __ccovbit4_167:
  8603  0EB0                     	ds	1
  8604  0EB1                     __ccovbit21_166:
  8605  0EB1                     	ds	1
  8606  0EB2                     __ccovbit13_165:
  8607  0EB2                     	ds	1
  8608  0EB3                     __ccovbit12_164:
  8609  0EB3                     	ds	1
  8610  0EB4                     __ccovbit11_163:
  8611  0EB4                     	ds	1
  8612  0EB5                     __ccovbit8_162:
  8613  0EB5                     	ds	1
  8614  0EB6                     __ccovbit5_161:
  8615  0EB6                     	ds	1
  8616  0EB7                     __ccovbit3_160:
  8617  0EB7                     	ds	1
  8618  0EB8                     __ccovbit2_159:
  8619  0EB8                     	ds	1
  8620  0EB9                     __ccovbit1_158:
  8621  0EB9                     	ds	1
  8622  0EBA                     __ccovbit2_157:
  8623  0EBA                     	ds	1
  8624  0EBB                     __ccovbit3_156:
  8625  0EBB                     	ds	1
  8626  0EBC                     __ccovbit3_155:
  8627  0EBC                     	ds	1
  8628  0EBD                     __ccovbit8_154:
  8629  0EBD                     	ds	1
  8630  0EBE                     __ccovbit5_153:
  8631  0EBE                     	ds	1
  8632                           
  8633                           	psect	bssBANK3
  8634  01A0                     __pbssBANK3:
  8635  01A0                     _led:
  8636  01A0                     	ds	4
  8637  01A4                     _nout:
  8638  01A4                     	ds	2
  8639  01A6                     _width:
  8640  01A6                     	ds	2
  8641  01A8                     _ADC_InterruptHandler:
  8642  01A8                     	ds	2
  8643  01AA                     _dbuf:
  8644  01AA                     	ds	32
  8645  01CA                     _fuel:
  8646  01CA                     	ds	10
  8647                           
  8648                           	psect	clrtext
  8649  0800                     clear_ram0:	
  8650                           ;	Called with FSR0 containing the base address, and
  8651                           ;	WREG with the size to clear
  8652                           
  8653  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  8654  0801                     clrloop0:
  8655  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  8656  0802  3101               	addfsr 0,1
  8657  0803  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8658  0804  2801               	goto	clrloop0	;have we reached the end yet?
  8659  0805  3400               	retlw	0	;all done for this memory range, return
  8660                           
  8661                           	psect	cstackBANK4
  8662  0220                     __pcstackBANK4:
  8663  0220                     	ds	2
  8664  0222                     main@stored_spd_k:
  8665                           
  8666                           ; 4 bytes @ 0x2
  8667  0222                     	ds	4
  8668  0226                     main@stored_fuel:
  8669                           
  8670                           ; 4 bytes @ 0x6
  8671  0226                     	ds	4
  8672  022A                     main@stored_spd_a:
  8673                           
  8674                           ; 1 bytes @ 0xA
  8675  022A                     	ds	1
  8676  022B                     main@i:
  8677                           
  8678                           ; 4 bytes @ 0xB
  8679  022B                     	ds	4
  8680  022F                     main@tmp:
  8681                           
  8682                           ; 4 bytes @ 0xF
  8683  022F                     	ds	4
  8684  0233                     main@button:
  8685                           
  8686                           ; 1 bytes @ 0x13
  8687  0233                     	ds	1
  8688                           
  8689                           	psect	cstackBANK2
  8690  0129                     __pcstackBANK2:
  8691  0129                     ?_vfpfcnvrt:
  8692  0129                     vfpfcnvrt@fp:	
  8693                           ; 2 bytes @ 0x0
  8694                           
  8695                           
  8696                           ; 1 bytes @ 0x0
  8697  0129                     	ds	1
  8698  012A                     vfpfcnvrt@fmt:
  8699                           
  8700                           ; 1 bytes @ 0x1
  8701  012A                     	ds	1
  8702  012B                     vfpfcnvrt@ap:
  8703                           
  8704                           ; 1 bytes @ 0x2
  8705  012B                     	ds	2
  8706  012D                     ??_vfpfcnvrt:
  8707                           
  8708                           ; 1 bytes @ 0x4
  8709  012D                     	ds	5
  8710  0132                     vfpfcnvrt@ll:
  8711                           
  8712                           ; 8 bytes @ 0x9
  8713  0132                     	ds	8
  8714  013A                     ?_vfprintf:
  8715  013A                     vfprintf@fp:	
  8716                           ; 2 bytes @ 0x11
  8717                           
  8718                           
  8719                           ; 1 bytes @ 0x11
  8720  013A                     	ds	1
  8721  013B                     vfprintf@fmt:
  8722                           
  8723                           ; 2 bytes @ 0x12
  8724  013B                     	ds	2
  8725  013D                     vfprintf@ap:
  8726                           
  8727                           ; 1 bytes @ 0x14
  8728  013D                     	ds	2
  8729  013F                     ??_vfprintf:
  8730                           
  8731                           ; 1 bytes @ 0x16
  8732  013F                     	ds	3
  8733  0142                     vfprintf@cfmt:
  8734                           
  8735                           ; 2 bytes @ 0x19
  8736  0142                     	ds	2
  8737  0144                     ?_printf:
  8738  0144                     printf@fmt:	
  8739                           ; 2 bytes @ 0x1B
  8740                           
  8741                           
  8742                           ; 2 bytes @ 0x1B
  8743  0144                     	ds	7
  8744  014B                     ??_printf:
  8745                           
  8746                           ; 1 bytes @ 0x22
  8747  014B                     	ds	3
  8748  014E                     printf@ap:
  8749                           
  8750                           ; 1 bytes @ 0x25
  8751  014E                     	ds	1
  8752  014F                     ?_button_check:
  8753                           
  8754                           ; 1 bytes @ 0x26
  8755  014F                     	ds	2
  8756  0151                     ??_button_check:
  8757                           
  8758                           ; 1 bytes @ 0x28
  8759  0151                     	ds	2
  8760  0153                     ??_main:
  8761                           
  8762                           ; 1 bytes @ 0x2A
  8763  0153                     	ds	4
  8764                           
  8765                           	psect	cstackBANK1
  8766  00A0                     __pcstackBANK1:
  8767  00A0                     	ds	2
  8768  00A2                     i1printf@ap:
  8769                           
  8770                           ; 2 bytes @ 0x2
  8771  00A2                     	ds	2
  8772  00A4                     ??_frequency_calculation:
  8773                           
  8774                           ; 1 bytes @ 0x4
  8775  00A4                     	ds	4
  8776  00A8                     ?___fleq:
  8777  00A8                     ?_EUSART_SetFramingErrorHandler:	
  8778                           ; 1 bit 
  8779                           
  8780  00A8                     ?_EUSART_SetOverrunErrorHandler:	
  8781                           ; 1 bytes @ 0x8
  8782                           
  8783  00A8                     ?_EUSART_SetErrorHandler:	
  8784                           ; 1 bytes @ 0x8
  8785                           
  8786  00A8                     ??_PMD_Initialize:	
  8787                           ; 1 bytes @ 0x8
  8788                           
  8789  00A8                     ??_PIN_MANAGER_Initialize:	
  8790                           ; 1 bytes @ 0x8
  8791                           
  8792  00A8                     ??_OSCILLATOR_Initialize:	
  8793                           ; 1 bytes @ 0x8
  8794                           
  8795  00A8                     ??_WDT_Initialize:	
  8796                           ; 1 bytes @ 0x8
  8797                           
  8798  00A8                     ??_TMR4_Initialize:	
  8799                           ; 1 bytes @ 0x8
  8800                           
  8801  00A8                     ??_TMR6_Initialize:	
  8802                           ; 1 bytes @ 0x8
  8803                           
  8804  00A8                     ??_TMR3_Initialize:	
  8805                           ; 1 bytes @ 0x8
  8806                           
  8807  00A8                     ?_TMR1_SetInterruptHandler:	
  8808                           ; 1 bytes @ 0x8
  8809                           
  8810  00A8                     ?_TMR0_SetInterruptHandler:	
  8811                           ; 1 bytes @ 0x8
  8812                           
  8813  00A8                     ?_TMR2_SetInterruptHandler:	
  8814                           ; 1 bytes @ 0x8
  8815                           
  8816  00A8                     ??_led_init:	
  8817                           ; 1 bytes @ 0x8
  8818                           
  8819  00A8                     ??_is_moving:	
  8820                           ; 1 bytes @ 0x8
  8821                           
  8822  00A8                     ??_led_set_mode:	
  8823                           ; 1 bytes @ 0x8
  8824                           
  8825  00A8                     ?_spd_set_k_corr:	
  8826                           ; 1 bytes @ 0x8
  8827                           
  8828  00A8                     ?_fuel_set_corr:	
  8829                           ; 1 bytes @ 0x8
  8830                           
  8831  00A8                     ??_spd_get_a_corr:	
  8832                           ; 1 bytes @ 0x8
  8833                           
  8834  00A8                     ??_spd_set_a_corr:	
  8835                           ; 1 bytes @ 0x8
  8836                           
  8837  00A8                     ??_menu_change:	
  8838                           ; 1 bytes @ 0x8
  8839                           
  8840  00A8                     ??_button_is_pressed:	
  8841                           ; 1 bytes @ 0x8
  8842                           
  8843  00A8                     ??_is_fuel_low:	
  8844                           ; 1 bytes @ 0x8
  8845                           
  8846  00A8                     ??_PWM6_Initialize:	
  8847                           ; 1 bytes @ 0x8
  8848                           
  8849  00A8                     ?_PWM6_LoadDutyValue:	
  8850                           ; 1 bytes @ 0x8
  8851                           
  8852  00A8                     ??_PWM5_Initialize:	
  8853                           ; 1 bytes @ 0x8
  8854                           
  8855  00A8                     ?_PWM5_LoadDutyValue:	
  8856                           ; 1 bytes @ 0x8
  8857                           
  8858  00A8                     ??_EUSART_Write:	
  8859                           ; 1 bytes @ 0x8
  8860                           
  8861  00A8                     ??_ADC_Initialize:	
  8862                           ; 1 bytes @ 0x8
  8863                           
  8864  00A8                     ?_DATAEE_WriteByte:	
  8865                           ; 1 bytes @ 0x8
  8866                           
  8867  00A8                     ?_DATAEE_ReadByte:	
  8868                           ; 1 bytes @ 0x8
  8869                           
  8870  00A8                     ??_TMR6_LoadPeriodRegister:	
  8871                           ; 1 bytes @ 0x8
  8872                           
  8873  00A8                     ?_spd_adc_to_u8:	
  8874                           ; 1 bytes @ 0x8
  8875                           
  8876  00A8                     ??_fuel_set_low:	
  8877                           ; 1 bytes @ 0x8
  8878                           
  8879  00A8                     ?__Umul8_16:	
  8880                           ; 1 bytes @ 0x8
  8881                           
  8882  00A8                     ?_strlen:	
  8883                           ; 2 bytes @ 0x8
  8884                           
  8885  00A8                     ?_ADC_GetConversion:	
  8886                           ; 2 bytes @ 0x8
  8887                           
  8888  00A8                     ?_FLASH_ReadWord:	
  8889                           ; 2 bytes @ 0x8
  8890                           
  8891  00A8                     ?_spd_get_k_corr:	
  8892                           ; 2 bytes @ 0x8
  8893                           
  8894  00A8                     ?_fuel_get_corr:	
  8895                           ; 4 bytes @ 0x8
  8896                           
  8897  00A8                     ?___xxtofl:	
  8898                           ; 4 bytes @ 0x8
  8899                           
  8900  00A8                     ?___aodiv:	
  8901                           ; 4 bytes @ 0x8
  8902                           
  8903  00A8                     ?___aomod:	
  8904                           ; 8 bytes @ 0x8
  8905                           
  8906  00A8                     EUSART_Write@txData:	
  8907                           ; 8 bytes @ 0x8
  8908                           
  8909  00A8                     TMR6_LoadPeriodRegister@periodVal:	
  8910                           ; 1 bytes @ 0x8
  8911                           
  8912  00A8                     __Umul8_16@multiplicand:	
  8913                           ; 1 bytes @ 0x8
  8914                           
  8915  00A8                     PWM6_LoadDutyValue@dutyValue:	
  8916                           ; 1 bytes @ 0x8
  8917                           
  8918  00A8                     PWM5_LoadDutyValue@dutyValue:	
  8919                           ; 2 bytes @ 0x8
  8920                           
  8921  00A8                     EUSART_SetFramingErrorHandler@interruptHandler:	
  8922                           ; 2 bytes @ 0x8
  8923                           
  8924  00A8                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  8925                           ; 2 bytes @ 0x8
  8926                           
  8927  00A8                     EUSART_SetErrorHandler@interruptHandler:	
  8928                           ; 2 bytes @ 0x8
  8929                           
  8930  00A8                     FLASH_ReadWord@flashAddr:	
  8931                           ; 2 bytes @ 0x8
  8932                           
  8933  00A8                     DATAEE_WriteByte@bAdd:	
  8934                           ; 2 bytes @ 0x8
  8935                           
  8936  00A8                     DATAEE_ReadByte@bAdd:	
  8937                           ; 2 bytes @ 0x8
  8938                           
  8939  00A8                     TMR1_SetInterruptHandler@InterruptHandler:	
  8940                           ; 2 bytes @ 0x8
  8941                           
  8942  00A8                     TMR0_SetInterruptHandler@InterruptHandler:	
  8943                           ; 2 bytes @ 0x8
  8944                           
  8945  00A8                     TMR2_SetInterruptHandler@InterruptHandler:	
  8946                           ; 2 bytes @ 0x8
  8947                           
  8948  00A8                     spd_adc_to_u8@value:	
  8949                           ; 2 bytes @ 0x8
  8950                           
  8951  00A8                     spd_set_k_corr@value:	
  8952                           ; 2 bytes @ 0x8
  8953                           
  8954  00A8                     fuel_set_corr@value:	
  8955                           ; 4 bytes @ 0x8
  8956                           
  8957  00A8                     ___fleq@ff1:	
  8958                           ; 4 bytes @ 0x8
  8959                           
  8960  00A8                     ___xxtofl@val:	
  8961                           ; 4 bytes @ 0x8
  8962                           
  8963  00A8                     ___aodiv@divisor:	
  8964                           ; 4 bytes @ 0x8
  8965                           
  8966  00A8                     ___aomod@divisor:	
  8967                           ; 8 bytes @ 0x8
  8968                           
  8969                           
  8970                           ; 8 bytes @ 0x8
  8971  00A8                     	ds	1
  8972  00A9                     ??_button_init:
  8973  00A9                     ??_putch:	
  8974                           ; 1 bytes @ 0x9
  8975                           
  8976  00A9                     putch@txData:	
  8977                           ; 1 bytes @ 0x9
  8978                           
  8979  00A9                     led_set_mode@newmode:	
  8980                           ; 1 bytes @ 0x9
  8981                           
  8982  00A9                     spd_set_a_corr@value:	
  8983                           ; 1 bytes @ 0x9
  8984                           
  8985  00A9                     fuel_set_low@var:	
  8986                           ; 1 bytes @ 0x9
  8987                           
  8988                           
  8989                           ; 1 bytes @ 0x9
  8990  00A9                     	ds	1
  8991  00AA                     ??_EUSART_SetFramingErrorHandler:
  8992  00AA                     ??_EUSART_SetOverrunErrorHandler:	
  8993                           ; 1 bytes @ 0xA
  8994                           
  8995  00AA                     ??_EUSART_SetErrorHandler:	
  8996                           ; 1 bytes @ 0xA
  8997                           
  8998  00AA                     ??_TMR2_Initialize:	
  8999                           ; 1 bytes @ 0xA
  9000                           
  9001  00AA                     ??_TMR0_Initialize:	
  9002                           ; 1 bytes @ 0xA
  9003                           
  9004  00AA                     ??_TMR1_Initialize:	
  9005                           ; 1 bytes @ 0xA
  9006                           
  9007  00AA                     ??_TMR1_SetInterruptHandler:	
  9008                           ; 1 bytes @ 0xA
  9009                           
  9010  00AA                     ??_TMR0_SetInterruptHandler:	
  9011                           ; 1 bytes @ 0xA
  9012                           
  9013  00AA                     ??_TMR2_SetInterruptHandler:	
  9014                           ; 1 bytes @ 0xA
  9015                           
  9016  00AA                     ??__Umul8_16:	
  9017                           ; 1 bytes @ 0xA
  9018                           
  9019  00AA                     ??_strlen:	
  9020                           ; 1 bytes @ 0xA
  9021                           
  9022  00AA                     ??_PWM6_LoadDutyValue:	
  9023                           ; 1 bytes @ 0xA
  9024                           
  9025  00AA                     ??_PWM5_LoadDutyValue:	
  9026                           ; 1 bytes @ 0xA
  9027                           
  9028  00AA                     ??_EUSART_Initialize:	
  9029                           ; 1 bytes @ 0xA
  9030                           
  9031  00AA                     ??_ADC_GetConversion:	
  9032                           ; 1 bytes @ 0xA
  9033                           
  9034  00AA                     ??_SYSTEM_Initialize:	
  9035                           ; 1 bytes @ 0xA
  9036                           
  9037  00AA                     ??_FLASH_ReadWord:	
  9038                           ; 1 bytes @ 0xA
  9039                           
  9040  00AA                     ??_DATAEE_ReadByte:	
  9041                           ; 1 bytes @ 0xA
  9042                           
  9043  00AA                     ??_spd_adc_to_u8:	
  9044                           ; 1 bytes @ 0xA
  9045                           
  9046  00AA                     ??_fuel_low_check:	
  9047                           ; 1 bytes @ 0xA
  9048                           
  9049  00AA                     ?_fputc:	
  9050                           ; 1 bytes @ 0xA
  9051                           
  9052  00AA                     FLASH_ReadWord@GIEBitValue:	
  9053                           ; 2 bytes @ 0xA
  9054                           
  9055  00AA                     DATAEE_WriteByte@bData:	
  9056                           ; 1 bytes @ 0xA
  9057                           
  9058  00AA                     fputc@c:	
  9059                           ; 1 bytes @ 0xA
  9060                           
  9061                           
  9062                           ; 2 bytes @ 0xA
  9063  00AA                     	ds	1
  9064  00AB                     ??_DATAEE_WriteByte:
  9065  00AB                     ADC_GetConversion@channel:	
  9066                           ; 1 bytes @ 0xB
  9067                           
  9068  00AB                     DATAEE_WriteByte@GIEBitValue:	
  9069                           ; 1 bytes @ 0xB
  9070                           
  9071  00AB                     strlen@a:	
  9072                           ; 1 bytes @ 0xB
  9073                           
  9074                           
  9075                           ; 1 bytes @ 0xB
  9076  00AB                     	ds	1
  9077  00AC                     ??_spd_test_pwm:
  9078  00AC                     ??_spd_get_k_corr:	
  9079                           ; 1 bytes @ 0xC
  9080                           
  9081  00AC                     ??_spd_set_k_corr:	
  9082                           ; 1 bytes @ 0xC
  9083                           
  9084  00AC                     ??_fuel_get_corr:	
  9085                           ; 1 bytes @ 0xC
  9086                           
  9087  00AC                     ??_fuel_set_corr:	
  9088                           ; 1 bytes @ 0xC
  9089                           
  9090  00AC                     ??_spd_a_calibration:	
  9091                           ; 1 bytes @ 0xC
  9092                           
  9093  00AC                     ??___xxtofl:	
  9094                           ; 1 bytes @ 0xC
  9095                           
  9096  00AC                     fputc@fp:	
  9097                           ; 1 bytes @ 0xC
  9098                           
  9099  00AC                     strlen@s:	
  9100                           ; 1 bytes @ 0xC
  9101                           
  9102  00AC                     __Umul8_16@product:	
  9103                           ; 1 bytes @ 0xC
  9104                           
  9105  00AC                     ___fleq@ff2:	
  9106                           ; 2 bytes @ 0xC
  9107                           
  9108                           
  9109                           ; 4 bytes @ 0xC
  9110  00AC                     	ds	1
  9111  00AD                     ??_fputc:
  9112  00AD                     spd_a_calibration@tmp:	
  9113                           ; 1 bytes @ 0xD
  9114                           
  9115                           
  9116                           ; 2 bytes @ 0xD
  9117  00AD                     	ds	1
  9118  00AE                     __Umul8_16@word_mpld:
  9119                           
  9120                           ; 2 bytes @ 0xE
  9121  00AE                     	ds	1
  9122  00AF                     spd_a_calibration@stored_ch:
  9123                           
  9124                           ; 1 bytes @ 0xF
  9125  00AF                     	ds	1
  9126  00B0                     ??___fleq:
  9127  00B0                     __Umul8_16@multiplier:	
  9128                           ; 1 bytes @ 0x10
  9129                           
  9130  00B0                     ___xxtofl@sign:	
  9131                           ; 1 bytes @ 0x10
  9132                           
  9133  00B0                     ___aodiv@dividend:	
  9134                           ; 1 bytes @ 0x10
  9135                           
  9136  00B0                     ___aomod@dividend:	
  9137                           ; 8 bytes @ 0x10
  9138                           
  9139                           
  9140                           ; 8 bytes @ 0x10
  9141  00B0                     	ds	1
  9142  00B1                     ___xxtofl@exp:
  9143                           
  9144                           ; 1 bytes @ 0x11
  9145  00B1                     	ds	1
  9146  00B2                     ?_fputs:
  9147  00B2                     fputs@s:	
  9148                           ; 2 bytes @ 0x12
  9149                           
  9150  00B2                     ___xxtofl@arg:	
  9151                           ; 2 bytes @ 0x12
  9152                           
  9153                           
  9154                           ; 4 bytes @ 0x12
  9155  00B2                     	ds	2
  9156  00B4                     fputs@fp:
  9157                           
  9158                           ; 1 bytes @ 0x14
  9159  00B4                     	ds	1
  9160  00B5                     ??_fputs:
  9161                           
  9162                           ; 1 bytes @ 0x15
  9163  00B5                     	ds	1
  9164  00B6                     ?___flmul:
  9165  00B6                     ___flmul@b:	
  9166                           ; 4 bytes @ 0x16
  9167                           
  9168                           
  9169                           ; 4 bytes @ 0x16
  9170  00B6                     	ds	2
  9171  00B8                     ??___aodiv:
  9172  00B8                     ??___aomod:	
  9173                           ; 1 bytes @ 0x18
  9174                           
  9175  00B8                     fputs@c:	
  9176                           ; 1 bytes @ 0x18
  9177                           
  9178                           
  9179                           ; 1 bytes @ 0x18
  9180  00B8                     	ds	1
  9181  00B9                     ___aodiv@counter:
  9182  00B9                     ___aomod@counter:	
  9183                           ; 1 bytes @ 0x19
  9184                           
  9185  00B9                     fputs@i:	
  9186                           ; 1 bytes @ 0x19
  9187                           
  9188                           
  9189                           ; 2 bytes @ 0x19
  9190  00B9                     	ds	1
  9191  00BA                     ___aodiv@sign:
  9192  00BA                     ___aomod@sign:	
  9193                           ; 1 bytes @ 0x1A
  9194                           
  9195  00BA                     ___flmul@a:	
  9196                           ; 1 bytes @ 0x1A
  9197                           
  9198                           
  9199                           ; 4 bytes @ 0x1A
  9200  00BA                     	ds	1
  9201  00BB                     ?_puts:
  9202  00BB                     ?_abs:	
  9203                           ; 2 bytes @ 0x1B
  9204                           
  9205  00BB                     ?_pad:	
  9206                           ; 2 bytes @ 0x1B
  9207                           
  9208  00BB                     pad@fp:	
  9209                           ; 2 bytes @ 0x1B
  9210                           
  9211  00BB                     abs@a:	
  9212                           ; 1 bytes @ 0x1B
  9213                           
  9214  00BB                     puts@s:	
  9215                           ; 2 bytes @ 0x1B
  9216                           
  9217  00BB                     ___aodiv@quotient:	
  9218                           ; 2 bytes @ 0x1B
  9219                           
  9220                           
  9221                           ; 8 bytes @ 0x1B
  9222  00BB                     	ds	1
  9223  00BC                     pad@buf:
  9224                           
  9225                           ; 1 bytes @ 0x1C
  9226  00BC                     	ds	1
  9227  00BD                     ??_abs:
  9228  00BD                     pad@p:	
  9229                           ; 1 bytes @ 0x1D
  9230                           
  9231                           
  9232                           ; 2 bytes @ 0x1D
  9233  00BD                     	ds	1
  9234  00BE                     ??_puts:
  9235  00BE                     ??___flmul:	
  9236                           ; 1 bytes @ 0x1E
  9237                           
  9238                           
  9239                           ; 1 bytes @ 0x1E
  9240  00BE                     	ds	2
  9241  00C0                     ??_pad:
  9242  00C0                     _puts$2235:	
  9243                           ; 1 bytes @ 0x20
  9244                           
  9245                           
  9246                           ; 1 bytes @ 0x20
  9247  00C0                     	ds	1
  9248  00C1                     ?_write_correction:
  9249  00C1                     ?_eeprom_read_error_handler:	
  9250                           ; 1 bytes @ 0x21
  9251                           
  9252  00C1                     write_correction@type:	
  9253                           ; 1 bytes @ 0x21
  9254                           
  9255  00C1                     pad@i:	
  9256                           ; 1 bytes @ 0x21
  9257                           
  9258                           
  9259                           ; 2 bytes @ 0x21
  9260  00C1                     	ds	1
  9261  00C2                     ?_read_correction:
  9262  00C2                     ??_eeprom_read_error_handler:	
  9263                           ; 1 bytes @ 0x22
  9264                           
  9265  00C2                     read_correction@type:	
  9266                           ; 1 bytes @ 0x22
  9267                           
  9268  00C2                     write_correction@value:	
  9269                           ; 1 bytes @ 0x22
  9270                           
  9271                           
  9272                           ; 2 bytes @ 0x22
  9273  00C2                     	ds	1
  9274  00C3                     ___flmul@sign:
  9275  00C3                     pad@w:	
  9276                           ; 1 bytes @ 0x23
  9277                           
  9278                           
  9279                           ; 2 bytes @ 0x23
  9280  00C3                     	ds	1
  9281  00C4                     ??_read_correction:
  9282  00C4                     ___flmul@aexp:	
  9283                           ; 1 bytes @ 0x24
  9284                           
  9285                           
  9286                           ; 1 bytes @ 0x24
  9287  00C4                     	ds	1
  9288  00C5                     ??_write_correction:
  9289  00C5                     ?_dtoa:	
  9290                           ; 1 bytes @ 0x25
  9291                           
  9292  00C5                     dtoa@fp:	
  9293                           ; 2 bytes @ 0x25
  9294                           
  9295  00C5                     ___flmul@grs:	
  9296                           ; 1 bytes @ 0x25
  9297                           
  9298                           
  9299                           ; 4 bytes @ 0x25
  9300  00C5                     	ds	1
  9301  00C6                     dtoa@d:
  9302                           
  9303                           ; 8 bytes @ 0x26
  9304  00C6                     	ds	1
  9305  00C7                     read_correction@s_tmp:
  9306                           
  9307                           ; 2 bytes @ 0x27
  9308  00C7                     	ds	1
  9309  00C8                     write_correction@i:
  9310                           
  9311                           ; 1 bytes @ 0x28
  9312  00C8                     	ds	1
  9313  00C9                     read_correction@return_ptr:
  9314  00C9                     write_correction@i_1585:	
  9315                           ; 1 bytes @ 0x29
  9316                           
  9317  00C9                     ___flmul@bexp:	
  9318                           ; 1 bytes @ 0x29
  9319                           
  9320                           
  9321                           ; 1 bytes @ 0x29
  9322  00C9                     	ds	1
  9323  00CA                     write_correction@i_1587:
  9324  00CA                     read_correction@tmp:	
  9325                           ; 1 bytes @ 0x2A
  9326                           
  9327  00CA                     ___flmul@prod:	
  9328                           ; 4 bytes @ 0x2A
  9329                           
  9330                           
  9331                           ; 4 bytes @ 0x2A
  9332  00CA                     	ds	1
  9333  00CB                     write_correction@address:
  9334                           
  9335                           ; 2 bytes @ 0x2B
  9336  00CB                     	ds	2
  9337  00CD                     write_correction@buffer:
  9338                           
  9339                           ; 4 bytes @ 0x2D
  9340  00CD                     	ds	1
  9341  00CE                     read_correction@i:
  9342  00CE                     ___flmul@temp:	
  9343                           ; 1 bytes @ 0x2E
  9344                           
  9345                           
  9346                           ; 2 bytes @ 0x2E
  9347  00CE                     	ds	1
  9348  00CF                     ??_dtoa:
  9349  00CF                     read_correction@i_1564:	
  9350                           ; 1 bytes @ 0x2F
  9351                           
  9352                           
  9353                           ; 1 bytes @ 0x2F
  9354  00CF                     	ds	1
  9355  00D0                     ?_spd_uint_to_float:
  9356  00D0                     ?_fuel_uint_to_float:	
  9357                           ; 4 bytes @ 0x30
  9358                           
  9359  00D0                     ?___fltol:	
  9360                           ; 4 bytes @ 0x30
  9361                           
  9362  00D0                     read_correction@i_1567:	
  9363                           ; 4 bytes @ 0x30
  9364                           
  9365  00D0                     spd_uint_to_float@value:	
  9366                           ; 1 bytes @ 0x30
  9367                           
  9368  00D0                     fuel_uint_to_float@value:	
  9369                           ; 2 bytes @ 0x30
  9370                           
  9371  00D0                     ___fltol@f1:	
  9372                           ; 2 bytes @ 0x30
  9373                           
  9374                           
  9375                           ; 4 bytes @ 0x30
  9376  00D0                     	ds	1
  9377  00D1                     read_correction@i_1568:
  9378                           
  9379                           ; 1 bytes @ 0x31
  9380  00D1                     	ds	1
  9381  00D2                     read_correction@i_1570:
  9382  00D2                     _dtoa$2180:	
  9383                           ; 1 bytes @ 0x32
  9384                           
  9385                           
  9386                           ; 2 bytes @ 0x32
  9387  00D2                     	ds	1
  9388  00D3                     read_correction@i_1571:
  9389                           
  9390                           ; 1 bytes @ 0x33
  9391  00D3                     	ds	1
  9392  00D4                     ??_spd_k_calibration:
  9393  00D4                     ??_spd_uint_to_float:	
  9394                           ; 1 bytes @ 0x34
  9395                           
  9396  00D4                     ??_fuel_uint_to_float:	
  9397                           ; 1 bytes @ 0x34
  9398                           
  9399  00D4                     ??___fltol:	
  9400                           ; 1 bytes @ 0x34
  9401                           
  9402  00D4                     read_correction@address:	
  9403                           ; 1 bytes @ 0x34
  9404                           
  9405  00D4                     dtoa@p:	
  9406                           ; 2 bytes @ 0x34
  9407                           
  9408                           
  9409                           ; 2 bytes @ 0x34
  9410  00D4                     	ds	1
  9411  00D5                     spd_k_calibration@tmp:
  9412                           
  9413                           ; 2 bytes @ 0x35
  9414  00D5                     	ds	1
  9415  00D6                     dtoa@w:
  9416  00D6                     read_correction@buffer:	
  9417                           ; 2 bytes @ 0x36
  9418                           
  9419                           
  9420                           ; 4 bytes @ 0x36
  9421  00D6                     	ds	1
  9422  00D7                     spd_k_calibration@stored_ch:
  9423                           
  9424                           ; 1 bytes @ 0x37
  9425  00D7                     	ds	1
  9426  00D8                     dtoa@s:
  9427                           
  9428                           ; 2 bytes @ 0x38
  9429  00D8                     	ds	1
  9430  00D9                     ___fltol@sign1:
  9431                           
  9432                           ; 1 bytes @ 0x39
  9433  00D9                     	ds	1
  9434  00DA                     ?_spd_init:
  9435  00DA                     ___fltol@exp1:	
  9436                           ; 1 bytes @ 0x3A
  9437                           
  9438  00DA                     dtoa@n:	
  9439                           ; 1 bytes @ 0x3A
  9440                           
  9441                           
  9442                           ; 8 bytes @ 0x3A
  9443  00DA                     	ds	1
  9444  00DB                     ??_spd_init:
  9445  00DB                     ??_fuel_percent_calculate:	
  9446                           ; 1 bytes @ 0x3B
  9447                           
  9448  00DB                     ?_fuel_pwm_calculate:	
  9449                           ; 1 bytes @ 0x3B
  9450                           
  9451                           
  9452                           ; 2 bytes @ 0x3B
  9453  00DB                     	ds	1
  9454  00DC                     spd_init@tmp:
  9455                           
  9456                           ; 1 bytes @ 0x3C
  9457  00DC                     	ds	1
  9458  00DD                     ??_fuel_init:
  9459  00DD                     ??_fuel_get:	
  9460                           ; 1 bytes @ 0x3D
  9461                           
  9462  00DD                     ??_fuel_calibration:	
  9463                           ; 1 bytes @ 0x3D
  9464                           
  9465  00DD                     ??_fuel_pwm_calculate:	
  9466                           ; 1 bytes @ 0x3D
  9467                           
  9468  00DD                     fuel_get@tmp:	
  9469                           ; 1 bytes @ 0x3D
  9470                           
  9471  00DD                     fuel_calibration@tmp:	
  9472                           ; 2 bytes @ 0x3D
  9473                           
  9474                           
  9475                           ; 2 bytes @ 0x3D
  9476  00DD                     	ds	5
  9477  00E2                     dtoa@i:
  9478                           
  9479                           ; 2 bytes @ 0x42
  9480  00E2                     	ds	2
  9481                           
  9482                           	psect	cstackCOMMON
  9483  0070                     __pcstackCOMMON:
  9484  0070                     ?_TMR0_ISR:
  9485  0070                     ?_TMR1_ISR:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ?_TMR2_ISR:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ?_PMD_Initialize:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ?_PIN_MANAGER_Initialize:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ?_OSCILLATOR_Initialize:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ?_WDT_Initialize:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ?_TMR4_Initialize:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ?_TMR2_Initialize:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ?_TMR0_Initialize:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ?_TMR6_Initialize:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?_TMR3_Initialize:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     ?_TMR1_Initialize:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     ?_TMR1_DefaultInterruptHandler:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     ??_TMR1_DefaultInterruptHandler:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0070                     ?_TMR0_DefaultInterruptHandler:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0070                     ?_TMR2_DefaultInterruptHandler:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0070                     ??_TMR2_DefaultInterruptHandler:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0070                     ?_led_init:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0070                     ?_button_init:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0070                     ?_fuel_init:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0070                     ?_frequency_calculation:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0070                     ?_led_indicate:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0070                     ?_is_moving:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0070                     ?_led_set_mode:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0070                     ?_fuel_get:	
  9558                           ; 1 bytes @ 0x0
  9559                           
  9560  0070                     ?_spd_test_pwm:	
  9561                           ; 1 bytes @ 0x0
  9562                           
  9563  0070                     ?_spd_k_calibration:	
  9564                           ; 1 bytes @ 0x0
  9565                           
  9566  0070                     ?_fuel_calibration:	
  9567                           ; 1 bytes @ 0x0
  9568                           
  9569  0070                     ?_spd_get_a_corr:	
  9570                           ; 1 bytes @ 0x0
  9571                           
  9572  0070                     ?_spd_a_calibration:	
  9573                           ; 1 bytes @ 0x0
  9574                           
  9575  0070                     ?_spd_set_a_corr:	
  9576                           ; 1 bytes @ 0x0
  9577                           
  9578  0070                     ?_menu_change:	
  9579                           ; 1 bytes @ 0x0
  9580                           
  9581  0070                     ?_button_is_pressed:	
  9582                           ; 1 bytes @ 0x0
  9583                           
  9584  0070                     ?_is_fuel_low:	
  9585                           ; 1 bytes @ 0x0
  9586                           
  9587  0070                     ?_PWM6_Initialize:	
  9588                           ; 1 bytes @ 0x0
  9589                           
  9590  0070                     ?_PWM5_Initialize:	
  9591                           ; 1 bytes @ 0x0
  9592                           
  9593  0070                     ?_EUSART_Initialize:	
  9594                           ; 1 bytes @ 0x0
  9595                           
  9596  0070                     ?_EUSART_Write:	
  9597                           ; 1 bytes @ 0x0
  9598                           
  9599  0070                     ?_putch:	
  9600                           ; 1 bytes @ 0x0
  9601                           
  9602  0070                     ?_ADC_Initialize:	
  9603                           ; 1 bytes @ 0x0
  9604                           
  9605  0070                     ?_INTERRUPT_InterruptManager:	
  9606                           ; 1 bytes @ 0x0
  9607                           
  9608  0070                     ?_SYSTEM_Initialize:	
  9609                           ; 1 bytes @ 0x0
  9610                           
  9611  0070                     ?_TMR1_WriteTimer:	
  9612                           ; 1 bytes @ 0x0
  9613                           
  9614  0070                     ?_TMR0_Reload:	
  9615                           ; 1 bytes @ 0x0
  9616                           
  9617  0070                     ??_TMR0_Reload:	
  9618                           ; 1 bytes @ 0x0
  9619                           
  9620  0070                     ?_TMR6_LoadPeriodRegister:	
  9621                           ; 1 bytes @ 0x0
  9622                           
  9623  0070                     ?_main:	
  9624                           ; 1 bytes @ 0x0
  9625                           
  9626  0070                     ?_led_on:	
  9627                           ; 1 bytes @ 0x0
  9628                           
  9629  0070                     ??_led_on:	
  9630                           ; 1 bytes @ 0x0
  9631                           
  9632  0070                     ?_led_off:	
  9633                           ; 1 bytes @ 0x0
  9634                           
  9635  0070                     ??_led_off:	
  9636                           ; 1 bytes @ 0x0
  9637                           
  9638  0070                     ?_led_toggle:	
  9639                           ; 1 bytes @ 0x0
  9640                           
  9641  0070                     ??_led_toggle:	
  9642                           ; 1 bytes @ 0x0
  9643                           
  9644  0070                     ?_fuel_set_low:	
  9645                           ; 1 bytes @ 0x0
  9646                           
  9647  0070                     ?_fuel_percent_calculate:	
  9648                           ; 1 bytes @ 0x0
  9649                           
  9650  0070                     ?_fuel_low_check:	
  9651                           ; 1 bytes @ 0x0
  9652                           
  9653  0070                     ?i1_PWM6_LoadDutyValue:	
  9654                           ; 1 bytes @ 0x0
  9655                           
  9656  0070                     ?i1_EUSART_Write:	
  9657                           ; 1 bytes @ 0x0
  9658                           
  9659  0070                     ??i1_EUSART_Write:	
  9660                           ; 1 bytes @ 0x0
  9661                           
  9662  0070                     ?i1_putch:	
  9663                           ; 1 bytes @ 0x0
  9664                           
  9665  0070                     ?i1_TMR6_LoadPeriodRegister:	
  9666                           ; 1 bytes @ 0x0
  9667                           
  9668  0070                     ??i1_TMR6_LoadPeriodRegister:	
  9669                           ; 1 bytes @ 0x0
  9670                           
  9671  0070                     ?i1_led_set_mode:	
  9672                           ; 1 bytes @ 0x0
  9673                           
  9674  0070                     ??i1_led_set_mode:	
  9675                           ; 1 bytes @ 0x0
  9676                           
  9677  0070                     ?i1_is_moving:	
  9678                           ; 1 bytes @ 0x0
  9679                           
  9680  0070                     ??i1_is_moving:	
  9681                           ; 1 bytes @ 0x0
  9682                           
  9683  0070                     ??i1___aodiv:	
  9684                           ; 1 bytes @ 0x0
  9685                           
  9686  0070                     ??i1___aomod:	
  9687                           ; 1 bytes @ 0x0
  9688                           
  9689  0070                     ?i1__Umul8_16:	
  9690                           ; 1 bytes @ 0x0
  9691                           
  9692  0070                     ?i1_strlen:	
  9693                           ; 2 bytes @ 0x0
  9694                           
  9695  0070                     ?i1___xxtofl:	
  9696                           ; 2 bytes @ 0x0
  9697                           
  9698  0070                     i1EUSART_Write@txData:	
  9699                           ; 4 bytes @ 0x0
  9700                           
  9701  0070                     i1TMR6_LoadPeriodRegister@periodVal:	
  9702                           ; 1 bytes @ 0x0
  9703                           
  9704  0070                     i1__Umul8_16@multiplicand:	
  9705                           ; 1 bytes @ 0x0
  9706                           
  9707  0070                     TMR1_WriteTimer@timerVal:	
  9708                           ; 1 bytes @ 0x0
  9709                           
  9710  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9711                           ; 2 bytes @ 0x0
  9712                           
  9713  0070                     i1___xxtofl@val:	
  9714                           ; 2 bytes @ 0x0
  9715                           
  9716                           
  9717                           ; 4 bytes @ 0x0
  9718  0070                     	ds	1
  9719  0071                     ??i1_putch:
  9720  0071                     i1putch@txData:	
  9721                           ; 1 bytes @ 0x1
  9722                           
  9723  0071                     i1led_set_mode@newmode:	
  9724                           ; 1 bytes @ 0x1
  9725                           
  9726  0071                     i1___aodiv@counter:	
  9727                           ; 1 bytes @ 0x1
  9728                           
  9729  0071                     i1___aomod@counter:	
  9730                           ; 1 bytes @ 0x1
  9731                           
  9732                           
  9733                           ; 1 bytes @ 0x1
  9734  0071                     	ds	1
  9735  0072                     ??_TMR1_WriteTimer:
  9736  0072                     ??i1_PWM6_LoadDutyValue:	
  9737                           ; 1 bytes @ 0x2
  9738                           
  9739  0072                     ??i1__Umul8_16:	
  9740                           ; 1 bytes @ 0x2
  9741                           
  9742  0072                     ??i1_strlen:	
  9743                           ; 1 bytes @ 0x2
  9744                           
  9745  0072                     ?i1_fputc:	
  9746                           ; 1 bytes @ 0x2
  9747                           
  9748  0072                     i1___aodiv@sign:	
  9749                           ; 2 bytes @ 0x2
  9750                           
  9751  0072                     i1___aomod@sign:	
  9752                           ; 1 bytes @ 0x2
  9753                           
  9754  0072                     i1fputc@c:	
  9755                           ; 1 bytes @ 0x2
  9756                           
  9757                           
  9758                           ; 2 bytes @ 0x2
  9759  0072                     	ds	1
  9760  0073                     ?i1_abs:
  9761  0073                     i1strlen@a:	
  9762                           ; 2 bytes @ 0x3
  9763                           
  9764  0073                     i1abs@a:	
  9765                           ; 1 bytes @ 0x3
  9766                           
  9767  0073                     i1___aodiv@quotient:	
  9768                           ; 2 bytes @ 0x3
  9769                           
  9770                           
  9771                           ; 8 bytes @ 0x3
  9772  0073                     	ds	1
  9773  0074                     ??i1___xxtofl:
  9774  0074                     i1fputc@fp:	
  9775                           ; 1 bytes @ 0x4
  9776                           
  9777  0074                     i1strlen@s:	
  9778                           ; 1 bytes @ 0x4
  9779                           
  9780  0074                     i1__Umul8_16@product:	
  9781                           ; 1 bytes @ 0x4
  9782                           
  9783                           
  9784                           ; 2 bytes @ 0x4
  9785  0074                     	ds	1
  9786  0075                     ??i1_abs:
  9787  0075                     ??i1_fputc:	
  9788                           ; 1 bytes @ 0x5
  9789                           
  9790                           
  9791                           ; 1 bytes @ 0x5
  9792  0075                     	ds	1
  9793  0076                     i1__Umul8_16@word_mpld:
  9794                           
  9795                           ; 2 bytes @ 0x6
  9796  0076                     	ds	2
  9797  0078                     i1__Umul8_16@multiplier:
  9798  0078                     i1___xxtofl@sign:	
  9799                           ; 1 bytes @ 0x8
  9800                           
  9801                           
  9802                           ; 1 bytes @ 0x8
  9803  0078                     	ds	1
  9804  0079                     i1___xxtofl@exp:
  9805                           
  9806                           ; 1 bytes @ 0x9
  9807  0079                     	ds	1
  9808  007A                     ?i1_fputs:
  9809  007A                     i1fputs@s:	
  9810                           ; 2 bytes @ 0xA
  9811                           
  9812  007A                     i1___xxtofl@arg:	
  9813                           ; 2 bytes @ 0xA
  9814                           
  9815                           
  9816                           ; 4 bytes @ 0xA
  9817  007A                     	ds	2
  9818  007C                     i1fputs@fp:
  9819                           
  9820                           ; 1 bytes @ 0xC
  9821  007C                     	ds	1
  9822  007D                     ??_TMR0_ISR:
  9823  007D                     ??_TMR2_ISR:	
  9824                           ; 1 bytes @ 0xD
  9825                           
  9826  007D                     ??_TMR0_DefaultInterruptHandler:	
  9827                           ; 1 bytes @ 0xD
  9828                           
  9829  007D                     ??i1_pad:	
  9830                           ; 1 bytes @ 0xD
  9831                           
  9832  007D                     ??i1_puts:	
  9833                           ; 1 bytes @ 0xD
  9834                           
  9835                           
  9836                           ; 1 bytes @ 0xD
  9837  007D                     	ds	1
  9838  007E                     ??_TMR1_ISR:
  9839  007E                     ??_INTERRUPT_InterruptManager:	
  9840                           ; 1 bytes @ 0xE
  9841                           
  9842  007E                     ??i1_printf:	
  9843                           ; 1 bytes @ 0xE
  9844                           
  9845                           
  9846                           	psect	cstackBANK0
  9847  0020                     __pcstackBANK0:	
  9848                           ; 1 bytes @ 0xE
  9849                           
  9850  0020                     ??i1_fputs:
  9851  0020                     ?i1___flmul:	
  9852                           ; 1 bytes @ 0x0
  9853                           
  9854  0020                     ?i1___aodiv:	
  9855                           ; 4 bytes @ 0x0
  9856                           
  9857  0020                     ?i1___aomod:	
  9858                           ; 8 bytes @ 0x0
  9859                           
  9860  0020                     i1___flmul@b:	
  9861                           ; 8 bytes @ 0x0
  9862                           
  9863  0020                     i1___aodiv@divisor:	
  9864                           ; 4 bytes @ 0x0
  9865                           
  9866  0020                     i1___aomod@divisor:	
  9867                           ; 8 bytes @ 0x0
  9868                           
  9869                           
  9870                           ; 8 bytes @ 0x0
  9871  0020                     	ds	3
  9872  0023                     i1fputs@c:
  9873                           
  9874                           ; 1 bytes @ 0x3
  9875  0023                     	ds	1
  9876  0024                     i1fputs@i:
  9877  0024                     i1___flmul@a:	
  9878                           ; 2 bytes @ 0x4
  9879                           
  9880                           
  9881                           ; 4 bytes @ 0x4
  9882  0024                     	ds	2
  9883  0026                     ?i1_pad:
  9884  0026                     ?i1_puts:	
  9885                           ; 2 bytes @ 0x6
  9886                           
  9887  0026                     i1pad@buf:	
  9888                           ; 2 bytes @ 0x6
  9889                           
  9890  0026                     i1puts@s:	
  9891                           ; 1 bytes @ 0x6
  9892                           
  9893                           
  9894                           ; 2 bytes @ 0x6
  9895  0026                     	ds	1
  9896  0027                     i1pad@p:
  9897                           
  9898                           ; 2 bytes @ 0x7
  9899  0027                     	ds	1
  9900  0028                     ??i1___flmul:
  9901  0028                     i1___aodiv@dividend:	
  9902                           ; 1 bytes @ 0x8
  9903                           
  9904  0028                     i1___aomod@dividend:	
  9905                           ; 8 bytes @ 0x8
  9906                           
  9907                           
  9908                           ; 8 bytes @ 0x8
  9909  0028                     	ds	1
  9910  0029                     i1pad@i:
  9911                           
  9912                           ; 2 bytes @ 0x9
  9913  0029                     	ds	1
  9914  002A                     i1_puts$2235:
  9915                           
  9916                           ; 1 bytes @ 0xA
  9917  002A                     	ds	1
  9918  002B                     ??_led_indicate:
  9919  002B                     i1pad@w:	
  9920                           ; 1 bytes @ 0xB
  9921                           
  9922                           
  9923                           ; 2 bytes @ 0xB
  9924  002B                     	ds	2
  9925  002D                     i1___flmul@sign:
  9926  002D                     i1pad@fp:	
  9927                           ; 1 bytes @ 0xD
  9928                           
  9929                           
  9930                           ; 1 bytes @ 0xD
  9931  002D                     	ds	1
  9932  002E                     i1___flmul@grs:
  9933                           
  9934                           ; 4 bytes @ 0xE
  9935  002E                     	ds	2
  9936  0030                     ?i1_dtoa:
  9937  0030                     i1dtoa@d:	
  9938                           ; 2 bytes @ 0x10
  9939                           
  9940                           
  9941                           ; 8 bytes @ 0x10
  9942  0030                     	ds	2
  9943  0032                     i1___flmul@aexp:
  9944                           
  9945                           ; 1 bytes @ 0x12
  9946  0032                     	ds	1
  9947  0033                     i1___flmul@bexp:
  9948                           
  9949                           ; 1 bytes @ 0x13
  9950  0033                     	ds	1
  9951  0034                     i1___flmul@prod:
  9952                           
  9953                           ; 4 bytes @ 0x14
  9954  0034                     	ds	4
  9955  0038                     ??i1_dtoa:
  9956  0038                     i1___flmul@temp:	
  9957                           ; 1 bytes @ 0x18
  9958                           
  9959                           
  9960                           ; 2 bytes @ 0x18
  9961  0038                     	ds	2
  9962  003A                     ?i1___fltol:
  9963  003A                     i1___fltol@f1:	
  9964                           ; 4 bytes @ 0x1A
  9965                           
  9966                           
  9967                           ; 4 bytes @ 0x1A
  9968  003A                     	ds	1
  9969  003B                     i1dtoa@fp:
  9970                           
  9971                           ; 1 bytes @ 0x1B
  9972  003B                     	ds	1
  9973  003C                     i1_dtoa$2180:
  9974                           
  9975                           ; 2 bytes @ 0x1C
  9976  003C                     	ds	2
  9977  003E                     ??i1___fltol:
  9978  003E                     i1dtoa@p:	
  9979                           ; 1 bytes @ 0x1E
  9980                           
  9981                           
  9982                           ; 2 bytes @ 0x1E
  9983  003E                     	ds	2
  9984  0040                     i1dtoa@w:
  9985                           
  9986                           ; 2 bytes @ 0x20
  9987  0040                     	ds	2
  9988  0042                     i1dtoa@s:
  9989                           
  9990                           ; 2 bytes @ 0x22
  9991  0042                     	ds	1
  9992  0043                     i1___fltol@sign1:
  9993                           
  9994                           ; 1 bytes @ 0x23
  9995  0043                     	ds	1
  9996  0044                     i1___fltol@exp1:
  9997  0044                     i1dtoa@n:	
  9998                           ; 1 bytes @ 0x24
  9999                           
 10000                           
 10001                           ; 8 bytes @ 0x24
 10002  0044                     	ds	8
 10003  004C                     i1dtoa@i:
 10004                           
 10005                           ; 2 bytes @ 0x2C
 10006  004C                     	ds	2
 10007  004E                     ?i1_vfpfcnvrt:
 10008  004E                     i1vfpfcnvrt@fmt:	
 10009                           ; 2 bytes @ 0x2E
 10010                           
 10011                           
 10012                           ; 2 bytes @ 0x2E
 10013  004E                     	ds	2
 10014  0050                     i1vfpfcnvrt@ap:
 10015                           
 10016                           ; 2 bytes @ 0x30
 10017  0050                     	ds	2
 10018  0052                     ??i1_vfpfcnvrt:
 10019                           
 10020                           ; 1 bytes @ 0x32
 10021  0052                     	ds	5
 10022  0057                     i1vfpfcnvrt@ll:
 10023                           
 10024                           ; 8 bytes @ 0x37
 10025  0057                     	ds	8
 10026  005F                     i1vfpfcnvrt@fp:
 10027                           
 10028                           ; 1 bytes @ 0x3F
 10029  005F                     	ds	1
 10030  0060                     ?i1_vfprintf:
 10031  0060                     i1vfprintf@fmt:	
 10032                           ; 2 bytes @ 0x40
 10033                           
 10034                           
 10035                           ; 2 bytes @ 0x40
 10036  0060                     	ds	2
 10037  0062                     i1vfprintf@ap:
 10038                           
 10039                           ; 2 bytes @ 0x42
 10040  0062                     	ds	2
 10041  0064                     ??i1_vfprintf:
 10042                           
 10043                           ; 1 bytes @ 0x44
 10044  0064                     	ds	1
 10045  0065                     i1vfprintf@fp:
 10046                           
 10047                           ; 1 bytes @ 0x45
 10048  0065                     	ds	1
 10049  0066                     i1vfprintf@cfmt:
 10050                           
 10051                           ; 2 bytes @ 0x46
 10052  0066                     	ds	2
 10053  0068                     ?i1_printf:
 10054  0068                     i1printf@fmt:	
 10055                           ; 2 bytes @ 0x48
 10056                           
 10057                           
 10058                           ; 2 bytes @ 0x48
 10059  0068                     	ds	6
 10060                           
 10061                           	psect	maintext
 10062  052A                     __pmaintext:	
 10063 ;;
 10064 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
 10065 ;;
 10066 ;; *************** function _main *****************
 10067 ;; Defined at:
 10068 ;;		line 81 in file "main.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;		None
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  stored_spd_a    1   10[BANK4 ] unsigned char 
 10073 ;;  stored_fuel     4    6[BANK4 ] float 
 10074 ;;  stored_spd_k    4    2[BANK4 ] float 
 10075 ;;  i               4   11[BANK4 ] unsigned long 
 10076 ;;  button          1   19[BANK4 ] enum E6836
 10077 ;;  tmp             4   15[BANK4 ] float 
 10078 ;;  s_tmp           2    0        unsigned short 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : B1F/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10089 ;;      Locals:         0       0       0       0       0      20       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10090 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10091 ;;      Totals:         0       0       0       4       0      20       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10092 ;;Total ram usage:       24 bytes
 10093 ;; Hardware stack levels required when called:   16
 10094 ;; This function calls:
 10095 ;;		_FLASH_ReadWord
 10096 ;;		_SYSTEM_Initialize
 10097 ;;		_TMR1_SetInterruptHandler
 10098 ;;		_TMR2_SetInterruptHandler
 10099 ;;		_button_check
 10100 ;;		_button_init
 10101 ;;		_fuel_calibration
 10102 ;;		_fuel_get
 10103 ;;		_fuel_get_corr
 10104 ;;		_fuel_init
 10105 ;;		_fuel_set_corr
 10106 ;;		_is_moving
 10107 ;;		_led_init
 10108 ;;		_led_set_mode
 10109 ;;		_menu_change
 10110 ;;		_printf
 10111 ;;		_puts
 10112 ;;		_spd_a_calibration
 10113 ;;		_spd_get_a_corr
 10114 ;;		_spd_get_k_corr
 10115 ;;		_spd_init
 10116 ;;		_spd_k_calibration
 10117 ;;		_spd_set_a_corr
 10118 ;;		_spd_set_k_corr
 10119 ;;		_spd_test_pwm
 10120 ;;		_write_correction
 10121 ;; This function is called by:
 10122 ;;		Startup code after reset
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           
 10127                           ;psect for function _main
 10128  052A                     _main:
 10129                           
 10130                           ;incstack = 0
 10131                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10132  052A                     l7890:
 10133                           
 10134                           ;main.c: 84:     SYSTEM_Initialize();
 10135  052A  319C  2444  3185   	fcall	_SYSTEM_Initialize
 10136                           
 10137                           ;main.c: 86:     float tmp;;main.c: 87:     u16 s_tmp;;main.c: 90:     FLASH_ReadWord(0x
      +                          0005);
 10138  052D  3005               	movlw	5
 10139  052E  0021               	movlb	1	; select bank1
 10140  052F  00A8               	movwf	FLASH_ReadWord@flashAddr^(0+128)
 10141  0530  3000               	movlw	0
 10142  0531  00A9               	movwf	(FLASH_ReadWord@flashAddr^(0+128)+1)
 10143  0532  319A  2278  3185   	fcall	_FLASH_ReadWord
 10144  0535                     __ccov356_end_blk0:
 10145  0535                     __ccov357_start_blk1:
 10146  0535                     l7892:
 10147                           
 10148                           ;main.c: 91:     printf ("INFO: RevID %d\nDeviceID %d\n", NVMDATH, NVMDATL);
 10149  0535  3014               	movlw	low (STR_2| (0+32768))
 10150  0536  0022               	movlb	2	; select bank2
 10151  0537  00C4               	movwf	printf@fmt^(0+256)
 10152  0538  30A2               	movlw	high (STR_2| (0+32768))
 10153  0539  00C5               	movwf	(printf@fmt^(0+256)+1)
 10154  053A  0031               	movlb	17	; select bank17
 10155  053B  0814               	movf	20,w	;volatile
 10156  053C  0022               	movlb	2	; select bank2
 10157  053D  00D3               	movwf	??_main^(0+256)
 10158  053E  01D4               	clrf	(??_main^(0+256)+1)
 10159  053F  0853               	movf	??_main^(0+256),w
 10160  0540  00C6               	movwf	(?_printf^(0+256)+2)
 10161  0541  0854               	movf	(??_main+1)^(0+256),w
 10162  0542  00C7               	movwf	((?_printf+1)^(0+256)+2)
 10163  0543  0031               	movlb	17	; select bank17
 10164  0544  0813               	movf	19,w	;volatile
 10165  0545  0022               	movlb	2	; select bank2
 10166  0546  00D5               	movwf	(??_main+2)^(0+256)
 10167  0547  01D6               	clrf	((??_main+2)^(0+256)+1)
 10168  0548  0855               	movf	(??_main+2)^(0+256),w
 10169  0549  00C8               	movwf	(?_printf^(0+256)+4)
 10170  054A  0856               	movf	(??_main+3)^(0+256),w
 10171  054B  00C9               	movwf	((?_printf+1)^(0+256)+4)
 10172  054C  3085               	movlw	low u9457jt
 10173  054D  3198  28CF         	ljmp	_printf
 10174  054F                     __ccov357_end_blk1:
 10175  054F                     u9457jf:
 10176  054F                     __ccov358_start_blk2:
 10177  054F                     l7894:
 10178                           
 10179                           ;main.c: 94:     led_init ();
 10180  054F  31A7  27EF  3185   	fcall	_led_init
 10181  0552                     __ccov358_end_blk2:
 10182  0552                     __ccov359_start_blk3:
 10183  0552                     l7896:
 10184                           
 10185                           ;main.c: 95:     button_init ();
 10186  0552  31A7  277C  3185   	fcall	_button_init
 10187  0555                     __ccov359_end_blk3:
 10188  0555                     __ccov360_start_blk4:
 10189  0555                     l7898:
 10190  0555  3002               	movlw	low u9467jt
 10191  0556  3191  29A4         	ljmp	_spd_init
 10192  0558                     __ccov360_end_blk4:
 10193  0558                     u9467jf:
 10194  0558                     __ccov361_start_blk5:
 10195  0558                     l7900:
 10196                           
 10197                           ;main.c: 97:     fuel_init ();
 10198  0558  319A  22DE  3185   	fcall	_fuel_init
 10199  055B                     __ccov361_end_blk5:
 10200  055B                     __ccov362_start_blk6:
 10201  055B                     l7902:
 10202                           
 10203                           ;main.c: 99:     TMR1_SetInterruptHandler (frequency_calculation);
 10204  055B  3051               	movlw	low _frequency_calculation
 10205  055C  0021               	movlb	1	; select bank1
 10206  055D  00A8               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10207  055E  3014               	movlw	high _frequency_calculation
 10208  055F  00A9               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10209  0560  31A7  271F  3185   	fcall	_TMR1_SetInterruptHandler
 10210  0563                     __ccov362_end_blk6:
 10211  0563                     __ccov363_start_blk7:
 10212  0563                     l7904:
 10213                           
 10214                           ;main.c: 100:     TMR2_SetInterruptHandler (led_indicate);
 10215  0563  308F               	movlw	low _led_indicate
 10216  0564  0021               	movlb	1	; select bank1
 10217  0565  00A8               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
 10218  0566  3013               	movlw	high _led_indicate
 10219  0567  00A9               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10220  0568  31A7  272A  3185   	fcall	_TMR2_SetInterruptHandler
 10221  056B                     __ccov363_end_blk7:
 10222  056B                     __ccov364_start_blk9:
 10223  056B                     l7906:
 10224  056B  3089               	movlw	low u9477jt
 10225  056C  3190  2847         	ljmp	_button_check
 10226  056E                     u9477jf:
 10227  056E  0022               	movlb	2	; select bank2
 10228  056F  084F               	movf	?_button_check^(0+256),w
 10229  0570  00D3               	movwf	??_main^(0+256)
 10230  0571  0853               	movf	??_main^(0+256),w
 10231  0572  0024               	movlb	4	; select bank4
 10232  0573  00B3               	movwf	main@button^(0+512)
 10233                           
 10234                           ;main.c: 107:         switch (menu) {
 10235  0574  2EE2               	goto	l7992
 10236  0575                     __ccov364_end_blk9:
 10237  0575                     __ccov365_start_blk11:
 10238  0575                     l7908:
 10239                           
 10240                           ;main.c: 123:                 if (is_moving()) {
 10241  0575  31A7  2735  3185   	fcall	_is_moving
 10242  0578  3A00               	xorlw	0
 10243  0579  1903               	skipnz
 10244  057A  2D7C               	goto	u9481
 10245  057B  2D7D               	goto	u9480
 10246  057C                     u9481:
 10247  057C  2D84               	goto	l7912
 10248  057D                     __ccov365_end_blk11:
 10249  057D                     u9480:
 10250  057D                     __ccov366_start_blk12:
 10251  057D                     l7910:
 10252  057D  0021               	movlb	1	; select bank1
 10253  057E  15E7               	bsf	(__ccovbit12_53/(0+8))^(0+128),__ccovbit12_53& (0+7)	;volatile
 10254                           
 10255                           ;main.c: 124:                     led_set_mode (BLINK);
 10256  057F  3000               	movlw	0
 10257  0580  31A6  26BD  3185   	fcall	_led_set_mode
 10258                           
 10259                           ;main.c: 125:                 } else {
 10260  0583  2D8A               	goto	l7914
 10261  0584                     __ccov366_end_blk12:
 10262  0584                     __ccov367_start_blk14:
 10263  0584                     l7912:
 10264  0584  0021               	movlb	1	; select bank1
 10265  0585  1567               	bsf	(__ccovbit14_54/(0+8))^(0+128),__ccovbit14_54& (0+7)	;volatile
 10266                           
 10267                           ;main.c: 126:                     led_set_mode (NUMBER);
 10268  0586  3001               	movlw	1
 10269  0587  31A6  26BD  3185   	fcall	_led_set_mode
 10270  058A                     __ccov367_end_blk14:
 10271  058A                     __ccov368_start_blk16:
 10272  058A                     l7914:
 10273                           
 10274                           ;main.c: 129:                 fuel_get();
 10275  058A  319E  269A  3185   	fcall	_fuel_get
 10276  058D                     __ccov368_end_blk16:
 10277  058D                     __ccov369_start_blk17:
 10278  058D                     l7916:
 10279                           
 10280                           ;main.c: 131:                 if (button == LONG_PRESSED) {
 10281  058D  3002               	movlw	2
 10282  058E  0024               	movlb	4	; select bank4
 10283  058F  0633               	xorwf	main@button^(0+512),w
 10284  0590  1D03               	btfss	3,2
 10285  0591  2D93               	goto	u9491
 10286  0592  2D94               	goto	u9490
 10287  0593                     u9491:
 10288  0593  2DB2               	goto	l7928
 10289  0594                     __ccov369_end_blk17:
 10290  0594                     u9490:
 10291  0594                     __ccov370_start_blk18:
 10292  0594                     l7918:
 10293                           
 10294                           ;main.c: 132:                     led_set_mode (ALWAYS_ON);
 10295  0594  3002               	movlw	2
 10296  0595  31A6  26BD  3185   	fcall	_led_set_mode
 10297  0598                     __ccov370_end_blk18:
 10298  0598                     __ccov371_start_blk19:
 10299  0598                     l7920:
 10300                           
 10301                           ;main.c: 133:                     PIE1bits.TMR1IE = 0;
 10302  0598  0021               	movlb	1	; select bank1
 10303  0599  1011               	bcf	17,0	;volatile
 10304                           
 10305                           ;main.c: 134:                     while (button != SHORT_PRESSED) {
 10306  059A  2DA9               	goto	l7926
 10307  059B                     __ccov371_end_blk19:
 10308  059B                     __ccov372_start_blk21:
 10309  059B                     l7922:
 10310                           
 10311                           ;main.c: 135:                         spd_test_pwm();
 10312  059B  3188  2006  3185   	fcall	_spd_test_pwm
 10313  059E                     __ccov372_end_blk21:
 10314  059E                     __ccov373_start_blk22:
 10315  059E                     l7924:
 10316  059E  0021               	movlb	1	; select bank1
 10317  059F  14E7               	bsf	(__ccovbit22_55/(0+8))^(0+128),__ccovbit22_55& (0+7)	;volatile
 10318  05A0  308B               	movlw	low u9507jt
 10319  05A1  3190  2847         	ljmp	_button_check
 10320  05A3                     u9507jf:
 10321  05A3  0022               	movlb	2	; select bank2
 10322  05A4  084F               	movf	?_button_check^(0+256),w
 10323  05A5  00D3               	movwf	??_main^(0+256)
 10324  05A6  0853               	movf	??_main^(0+256),w
 10325  05A7  0024               	movlb	4	; select bank4
 10326  05A8  00B3               	movwf	main@button^(0+512)
 10327  05A9                     __ccov373_end_blk22:
 10328  05A9                     __ccov374_start_blk24:
 10329  05A9                     l7926:
 10330                           
 10331                           ;main.c: 134:                     while (button != SHORT_PRESSED) {
 10332  05A9  0024               	movlb	4	; select bank4
 10333  05AA  0333               	decf	main@button^(0+512),w
 10334  05AB  1D03               	btfss	3,2
 10335  05AC  2DAE               	goto	u9511
 10336  05AD  2DAF               	goto	u9510
 10337  05AE                     u9511:
 10338  05AE  2D9B               	goto	l7922
 10339  05AF                     __ccov374_end_blk24:
 10340  05AF                     u9510:
 10341  05AF                     __ccov375_start_blk25:
 10342  05AF                     l696:
 10343  05AF  0021               	movlb	1	; select bank1
 10344  05B0  1467               	bsf	(__ccovbit25_56/(0+8))^(0+128),__ccovbit25_56& (0+7)	;volatile
 10345                           
 10346                           ;main.c: 138:                     PIE1bits.TMR1IE = 1;
 10347  05B1  1411               	bsf	17,0	;volatile
 10348  05B2                     __ccov375_end_blk25:
 10349  05B2                     __ccov376_start_blk27:
 10350  05B2                     l7928:
 10351                           
 10352                           ;main.c: 141:                 for (u32 i = 0; i < 10000UL; i++);
 10353  05B2  3000               	movlw	0
 10354  05B3  0024               	movlb	4	; select bank4
 10355  05B4  00AE               	movwf	(main@i+3)^(0+512)
 10356  05B5  3000               	movlw	0
 10357  05B6  00AD               	movwf	(main@i+2)^(0+512)
 10358  05B7  3000               	movlw	0
 10359  05B8  00AC               	movwf	(main@i+1)^(0+512)
 10360  05B9  3000               	movlw	0
 10361  05BA  00AB               	movwf	main@i^(0+512)
 10362  05BB                     __ccov376_end_blk27:
 10363  05BB                     __ccov377_start_blk31:
 10364  05BB                     l7934:
 10365  05BB  3001               	movlw	1
 10366  05BC  0024               	movlb	4	; select bank4
 10367  05BD  07AB               	addwf	main@i^(0+512),f
 10368  05BE  3000               	movlw	0
 10369  05BF  3DAC               	addwfc	(main@i+1)^(0+512),f
 10370  05C0  3000               	movlw	0
 10371  05C1  3DAD               	addwfc	(main@i+2)^(0+512),f
 10372  05C2  3000               	movlw	0
 10373  05C3  3DAE               	addwfc	(main@i+3)^(0+512),f
 10374  05C4                     __ccov377_end_blk31:
 10375  05C4                     __ccov378_start_blk32:
 10376  05C4                     l7936:
 10377  05C4  0021               	movlb	1	; select bank1
 10378  05C5  17E6               	bsf	(__ccovbit32_57/(0+8))^(0+128),__ccovbit32_57& (0+7)	;volatile
 10379  05C6  0024               	movlb	4	; select bank4
 10380  05C7  082E               	movf	(main@i+3)^(0+512),w
 10381  05C8  1D03               	btfss	3,2
 10382  05C9  2DD5               	goto	u9520
 10383  05CA  082D               	movf	(main@i+2)^(0+512),w
 10384  05CB  1D03               	btfss	3,2
 10385  05CC  2DD5               	goto	u9520
 10386  05CD  3010               	movlw	16
 10387  05CE  022B               	subwf	main@i^(0+512),w
 10388  05CF  3027               	movlw	39
 10389  05D0  3B2C               	subwfb	(main@i+1)^(0+512),w
 10390  05D1  1C03               	btfss	3,0
 10391  05D2  2DD4               	goto	u9521
 10392  05D3  2DD5               	goto	u9520
 10393  05D4                     u9521:
 10394  05D4  2DBB               	goto	l7934
 10395  05D5                     u9520:
 10396  05D5  2EF9               	goto	l7994
 10397  05D6                     __ccov378_end_blk32:
 10398  05D6                     __ccov379_start_blk35:
 10399  05D6                     l7938:
 10400                           
 10401                           ;main.c: 145:                 float stored_spd_k;;main.c: 146:                 stored_sp
      +                          d_k = spd_get_k_corr();
 10402  05D6  3198  2069  3185   	fcall	_spd_get_k_corr
 10403  05D9  0021               	movlb	1	; select bank1
 10404  05DA  082B               	movf	(?_spd_get_k_corr+3)^(0+128),w
 10405  05DB  0024               	movlb	4	; select bank4
 10406  05DC  00A5               	movwf	(main@stored_spd_k+3)^(0+512)
 10407  05DD  0021               	movlb	1	; select bank1
 10408  05DE  082A               	movf	(?_spd_get_k_corr+2)^(0+128),w
 10409  05DF  0024               	movlb	4	; select bank4
 10410  05E0  00A4               	movwf	(main@stored_spd_k+2)^(0+512)
 10411  05E1  0021               	movlb	1	; select bank1
 10412  05E2  0829               	movf	(?_spd_get_k_corr+1)^(0+128),w
 10413  05E3  0024               	movlb	4	; select bank4
 10414  05E4  00A3               	movwf	(main@stored_spd_k+1)^(0+512)
 10415  05E5  0021               	movlb	1	; select bank1
 10416  05E6  0828               	movf	?_spd_get_k_corr^(0+128),w
 10417  05E7  0024               	movlb	4	; select bank4
 10418  05E8  00A2               	movwf	main@stored_spd_k^(0+512)
 10419  05E9                     __ccov379_end_blk35:
 10420  05E9                     __ccov380_start_blk36:
 10421  05E9                     l7940:
 10422                           
 10423                           ;main.c: 147:                 spd_k_calibration ();
 10424  05E9  319C  24A2  3185   	fcall	_spd_k_calibration
 10425  05EC                     __ccov380_end_blk36:
 10426  05EC                     __ccov381_start_blk37:
 10427  05EC                     l7942:
 10428                           
 10429                           ;main.c: 149:                 if (button == LONG_PRESSED) {
 10430  05EC  3002               	movlw	2
 10431  05ED  0024               	movlb	4	; select bank4
 10432  05EE  0633               	xorwf	main@button^(0+512),w
 10433  05EF  1D03               	btfss	3,2
 10434  05F0  2DF2               	goto	u9531
 10435  05F1  2DF3               	goto	u9530
 10436  05F2                     u9531:
 10437  05F2  2E16               	goto	l7950
 10438  05F3                     __ccov381_end_blk37:
 10439  05F3                     u9530:
 10440  05F3                     __ccov382_start_blk38:
 10441  05F3                     l7944:
 10442                           
 10443                           ;main.c: 150:                     tmp = spd_get_k_corr();
 10444  05F3  3198  2069  3185   	fcall	_spd_get_k_corr
 10445  05F6  0021               	movlb	1	; select bank1
 10446  05F7  082B               	movf	(?_spd_get_k_corr+3)^(0+128),w
 10447  05F8  0024               	movlb	4	; select bank4
 10448  05F9  00B2               	movwf	(main@tmp+3)^(0+512)
 10449  05FA  0021               	movlb	1	; select bank1
 10450  05FB  082A               	movf	(?_spd_get_k_corr+2)^(0+128),w
 10451  05FC  0024               	movlb	4	; select bank4
 10452  05FD  00B1               	movwf	(main@tmp+2)^(0+512)
 10453  05FE  0021               	movlb	1	; select bank1
 10454  05FF  0829               	movf	(?_spd_get_k_corr+1)^(0+128),w
 10455  0600  0024               	movlb	4	; select bank4
 10456  0601  00B0               	movwf	(main@tmp+1)^(0+512)
 10457  0602  0021               	movlb	1	; select bank1
 10458  0603  0828               	movf	?_spd_get_k_corr^(0+128),w
 10459  0604  0024               	movlb	4	; select bank4
 10460  0605  00AF               	movwf	main@tmp^(0+512)
 10461  0606                     __ccov382_end_blk38:
 10462  0606                     __ccov383_start_blk39:
 10463  0606                     l7946:
 10464                           
 10465                           ;main.c: 151:                     write_correction (SPD_MUL_CORR, (void*)&tmp);
 10466  0606  0021               	movlb	1	; select bank1
 10467  0607  01C1               	clrf	write_correction@type^(0+128)
 10468  0608  302F               	movlw	low main@tmp
 10469  0609  00C2               	movwf	write_correction@value^(0+128)
 10470  060A  3002               	movlw	high main@tmp
 10471  060B  00C3               	movwf	(write_correction@value+1)^(0+128)
 10472  060C  307B               	movlw	low u9547jt
 10473  060D  318A  2A6B         	ljmp	_write_correction
 10474  060F                     __ccov383_end_blk39:
 10475  060F                     u9547jf:
 10476  060F                     __ccov384_start_blk40:
 10477  060F                     l7948:
 10478  060F  0021               	movlb	1	; select bank1
 10479  0610  1766               	bsf	(__ccovbit40_58/(0+8))^(0+128),__ccovbit40_58& (0+7)	;volatile
 10480                           
 10481                           ;main.c: 152:                     led_set_mode (ALWAYS_ON);
 10482  0611  3002               	movlw	2
 10483  0612  31A6  26BD  3185   	fcall	_led_set_mode
 10484                           
 10485                           ;main.c: 153:                 } else if (button == SHORT_PRESSED) {
 10486  0615  2EF9               	goto	l7994
 10487  0616                     __ccov384_end_blk40:
 10488  0616                     __ccov385_start_blk42:
 10489  0616                     l7950:
 10490  0616  0333               	decf	main@button^(0+512),w
 10491  0617  1D03               	btfss	3,2
 10492  0618  2E1A               	goto	u9551
 10493  0619  2E1B               	goto	u9550
 10494  061A                     u9551:
 10495  061A  2E31               	goto	l7954
 10496  061B                     __ccov385_end_blk42:
 10497  061B                     u9550:
 10498  061B                     __ccov386_start_blk43:
 10499  061B                     l7952:
 10500  061B  0021               	movlb	1	; select bank1
 10501  061C  16E6               	bsf	(__ccovbit43_59/(0+8))^(0+128),__ccovbit43_59& (0+7)	;volatile
 10502                           
 10503                           ;main.c: 154:                     spd_set_k_corr (stored_spd_k);
 10504  061D  0024               	movlb	4	; select bank4
 10505  061E  0825               	movf	(main@stored_spd_k+3)^(0+512),w
 10506  061F  0021               	movlb	1	; select bank1
 10507  0620  00AB               	movwf	(spd_set_k_corr@value+3)^(0+128)
 10508  0621  0024               	movlb	4	; select bank4
 10509  0622  0824               	movf	(main@stored_spd_k+2)^(0+512),w
 10510  0623  0021               	movlb	1	; select bank1
 10511  0624  00AA               	movwf	(spd_set_k_corr@value+2)^(0+128)
 10512  0625  0024               	movlb	4	; select bank4
 10513  0626  0823               	movf	(main@stored_spd_k+1)^(0+512),w
 10514  0627  0021               	movlb	1	; select bank1
 10515  0628  00A9               	movwf	(spd_set_k_corr@value+1)^(0+128)
 10516  0629  0024               	movlb	4	; select bank4
 10517  062A  0822               	movf	main@stored_spd_k^(0+512),w
 10518  062B  0021               	movlb	1	; select bank1
 10519  062C  00A8               	movwf	spd_set_k_corr@value^(0+128)
 10520  062D  3198  2044  3185   	fcall	_spd_set_k_corr
 10521                           
 10522                           ;main.c: 155:                 } else {
 10523  0630  2EF9               	goto	l7994
 10524  0631                     __ccov386_end_blk43:
 10525  0631                     __ccov387_start_blk45:
 10526  0631                     l7954:
 10527  0631  0021               	movlb	1	; select bank1
 10528  0632  1666               	bsf	(__ccovbit45_60/(0+8))^(0+128),__ccovbit45_60& (0+7)	;volatile
 10529                           
 10530                           ;main.c: 156:                     led_set_mode (NUMBER);
 10531  0633  3001               	movlw	1
 10532  0634  31A6  26BD  3185   	fcall	_led_set_mode
 10533  0637  2EF9               	goto	l7994
 10534  0638                     __ccov387_end_blk45:
 10535  0638                     __ccov388_start_blk49:
 10536  0638                     l7956:
 10537                           
 10538                           ;main.c: 161:                 float stored_fuel;;main.c: 162:                 stored_fue
      +                          l = fuel_get_corr();
 10539  0638  31A7  27DE  3185   	fcall	_fuel_get_corr
 10540  063B  0021               	movlb	1	; select bank1
 10541  063C  082B               	movf	(?_fuel_get_corr+3)^(0+128),w
 10542  063D  0024               	movlb	4	; select bank4
 10543  063E  00A9               	movwf	(main@stored_fuel+3)^(0+512)
 10544  063F  0021               	movlb	1	; select bank1
 10545  0640  082A               	movf	(?_fuel_get_corr+2)^(0+128),w
 10546  0641  0024               	movlb	4	; select bank4
 10547  0642  00A8               	movwf	(main@stored_fuel+2)^(0+512)
 10548  0643  0021               	movlb	1	; select bank1
 10549  0644  0829               	movf	(?_fuel_get_corr+1)^(0+128),w
 10550  0645  0024               	movlb	4	; select bank4
 10551  0646  00A7               	movwf	(main@stored_fuel+1)^(0+512)
 10552  0647  0021               	movlb	1	; select bank1
 10553  0648  0828               	movf	?_fuel_get_corr^(0+128),w
 10554  0649  0024               	movlb	4	; select bank4
 10555  064A  00A6               	movwf	main@stored_fuel^(0+512)
 10556                           
 10557                           ;main.c: 163:                 fuel_calibration ();
 10558  064B  319E  26ED  3185   	fcall	_fuel_calibration
 10559  064E                     __ccov388_end_blk49:
 10560  064E                     __ccov389_start_blk50:
 10561  064E                     l7958:
 10562                           
 10563                           ;main.c: 165:                 if (button == LONG_PRESSED) {
 10564  064E  3002               	movlw	2
 10565  064F  0024               	movlb	4	; select bank4
 10566  0650  0633               	xorwf	main@button^(0+512),w
 10567  0651  1D03               	btfss	3,2
 10568  0652  2E54               	goto	u9561
 10569  0653  2E55               	goto	u9560
 10570  0654                     u9561:
 10571  0654  2E7C               	goto	l7966
 10572  0655                     __ccov389_end_blk50:
 10573  0655                     u9560:
 10574  0655                     __ccov390_start_blk51:
 10575  0655                     l7960:
 10576                           
 10577                           ;main.c: 166:                     tmp = fuel_get_corr();
 10578  0655  31A7  27DE  3185   	fcall	_fuel_get_corr
 10579  0658  0021               	movlb	1	; select bank1
 10580  0659  082B               	movf	(?_fuel_get_corr+3)^(0+128),w
 10581  065A  0024               	movlb	4	; select bank4
 10582  065B  00B2               	movwf	(main@tmp+3)^(0+512)
 10583  065C  0021               	movlb	1	; select bank1
 10584  065D  082A               	movf	(?_fuel_get_corr+2)^(0+128),w
 10585  065E  0024               	movlb	4	; select bank4
 10586  065F  00B1               	movwf	(main@tmp+2)^(0+512)
 10587  0660  0021               	movlb	1	; select bank1
 10588  0661  0829               	movf	(?_fuel_get_corr+1)^(0+128),w
 10589  0662  0024               	movlb	4	; select bank4
 10590  0663  00B0               	movwf	(main@tmp+1)^(0+512)
 10591  0664  0021               	movlb	1	; select bank1
 10592  0665  0828               	movf	?_fuel_get_corr^(0+128),w
 10593  0666  0024               	movlb	4	; select bank4
 10594  0667  00AF               	movwf	main@tmp^(0+512)
 10595  0668                     __ccov390_end_blk51:
 10596  0668                     __ccov391_start_blk52:
 10597  0668                     l7962:
 10598                           
 10599                           ;main.c: 167:                     write_correction (FUEL_CORR, (void*)&tmp);
 10600  0668  3002               	movlw	2
 10601  0669  0022               	movlb	2	; select bank2
 10602  066A  00D3               	movwf	??_main^(0+256)
 10603  066B  0853               	movf	??_main^(0+256),w
 10604  066C  0021               	movlb	1	; select bank1
 10605  066D  00C1               	movwf	write_correction@type^(0+128)
 10606  066E  302F               	movlw	low main@tmp
 10607  066F  00C2               	movwf	write_correction@value^(0+128)
 10608  0670  3002               	movlw	high main@tmp
 10609  0671  00C3               	movwf	(write_correction@value+1)^(0+128)
 10610  0672  307D               	movlw	low u9577jt
 10611  0673  318A  2A6B         	ljmp	_write_correction
 10612  0675                     __ccov391_end_blk52:
 10613  0675                     u9577jf:
 10614  0675                     __ccov392_start_blk53:
 10615  0675                     l7964:
 10616  0675  0021               	movlb	1	; select bank1
 10617  0676  15E6               	bsf	(__ccovbit53_61/(0+8))^(0+128),__ccovbit53_61& (0+7)	;volatile
 10618                           
 10619                           ;main.c: 168:                     led_set_mode (ALWAYS_ON);
 10620  0677  3002               	movlw	2
 10621  0678  31A6  26BD  3185   	fcall	_led_set_mode
 10622                           
 10623                           ;main.c: 169:                 } else if (button == SHORT_PRESSED) {
 10624  067B  2EF9               	goto	l7994
 10625  067C                     __ccov392_end_blk53:
 10626  067C                     __ccov393_start_blk55:
 10627  067C                     l7966:
 10628  067C  0333               	decf	main@button^(0+512),w
 10629  067D  1D03               	btfss	3,2
 10630  067E  2E80               	goto	u9581
 10631  067F  2E81               	goto	u9580
 10632  0680                     u9581:
 10633  0680  2E97               	goto	l7970
 10634  0681                     __ccov393_end_blk55:
 10635  0681                     u9580:
 10636  0681                     __ccov394_start_blk56:
 10637  0681                     l7968:
 10638  0681  0021               	movlb	1	; select bank1
 10639  0682  1566               	bsf	(__ccovbit56_62/(0+8))^(0+128),__ccovbit56_62& (0+7)	;volatile
 10640                           
 10641                           ;main.c: 170:                     fuel_set_corr (stored_fuel);
 10642  0683  0024               	movlb	4	; select bank4
 10643  0684  0829               	movf	(main@stored_fuel+3)^(0+512),w
 10644  0685  0021               	movlb	1	; select bank1
 10645  0686  00AB               	movwf	(fuel_set_corr@value+3)^(0+128)
 10646  0687  0024               	movlb	4	; select bank4
 10647  0688  0828               	movf	(main@stored_fuel+2)^(0+512),w
 10648  0689  0021               	movlb	1	; select bank1
 10649  068A  00AA               	movwf	(fuel_set_corr@value+2)^(0+128)
 10650  068B  0024               	movlb	4	; select bank4
 10651  068C  0827               	movf	(main@stored_fuel+1)^(0+512),w
 10652  068D  0021               	movlb	1	; select bank1
 10653  068E  00A9               	movwf	(fuel_set_corr@value+1)^(0+128)
 10654  068F  0024               	movlb	4	; select bank4
 10655  0690  0826               	movf	main@stored_fuel^(0+512),w
 10656  0691  0021               	movlb	1	; select bank1
 10657  0692  00A8               	movwf	fuel_set_corr@value^(0+128)
 10658  0693  3198  2032  3185   	fcall	_fuel_set_corr
 10659                           
 10660                           ;main.c: 171:                 } else {
 10661  0696  2EF9               	goto	l7994
 10662  0697                     __ccov394_end_blk56:
 10663  0697                     __ccov395_start_blk58:
 10664  0697                     l7970:
 10665  0697  0021               	movlb	1	; select bank1
 10666  0698  14E6               	bsf	(__ccovbit58_63/(0+8))^(0+128),__ccovbit58_63& (0+7)	;volatile
 10667                           
 10668                           ;main.c: 172:                     led_set_mode (NUMBER);
 10669  0699  3001               	movlw	1
 10670  069A  31A6  26BD  3185   	fcall	_led_set_mode
 10671  069D  2EF9               	goto	l7994
 10672  069E                     __ccov395_end_blk58:
 10673  069E                     __ccov396_start_blk62:
 10674  069E                     l7972:
 10675                           
 10676                           ;main.c: 177:                 u8 stored_spd_a;;main.c: 178:                 stored_spd_a
      +                           = spd_get_a_corr ();
 10677  069E  31A6  2676  3185   	fcall	_spd_get_a_corr
 10678  06A1  0022               	movlb	2	; select bank2
 10679  06A2  00D3               	movwf	??_main^(0+256)
 10680  06A3  0853               	movf	??_main^(0+256),w
 10681  06A4  0024               	movlb	4	; select bank4
 10682  06A5  00AA               	movwf	main@stored_spd_a^(0+512)
 10683  06A6                     __ccov396_end_blk62:
 10684  06A6                     __ccov397_start_blk63:
 10685  06A6                     l7974:
 10686                           
 10687                           ;main.c: 179:                 spd_a_calibration ();
 10688  06A6  319B  2371  3185   	fcall	_spd_a_calibration
 10689  06A9                     __ccov397_end_blk63:
 10690  06A9                     __ccov398_start_blk64:
 10691  06A9                     l7976:
 10692                           
 10693                           ;main.c: 181:                 if (button == LONG_PRESSED) {
 10694  06A9  3002               	movlw	2
 10695  06AA  0024               	movlb	4	; select bank4
 10696  06AB  0633               	xorwf	main@button^(0+512),w
 10697  06AC  1D03               	btfss	3,2
 10698  06AD  2EAF               	goto	u9591
 10699  06AE  2EB0               	goto	u9590
 10700  06AF                     u9591:
 10701  06AF  2EC4               	goto	l7984
 10702  06B0                     __ccov398_end_blk64:
 10703  06B0                     u9590:
 10704  06B0                     __ccov399_start_blk65:
 10705  06B0                     l7978:
 10706  06B0  31A6  2676  3185   	fcall	_spd_get_a_corr
 10707  06B3                     __ccov399_end_blk65:
 10708  06B3                     __ccov400_start_blk66:
 10709  06B3                     l7980:
 10710                           
 10711                           ;main.c: 183:                     write_correction (SPD_ADD_CORR, (void*)&tmp);
 10712  06B3  0021               	movlb	1	; select bank1
 10713  06B4  01C1               	clrf	write_correction@type^(0+128)
 10714  06B5  0AC1               	incf	write_correction@type^(0+128),f
 10715  06B6  302F               	movlw	low main@tmp
 10716  06B7  00C2               	movwf	write_correction@value^(0+128)
 10717  06B8  3002               	movlw	high main@tmp
 10718  06B9  00C3               	movwf	(write_correction@value+1)^(0+128)
 10719  06BA  307F               	movlw	low u9607jt
 10720  06BB  318A  2A6B         	ljmp	_write_correction
 10721  06BD                     __ccov400_end_blk66:
 10722  06BD                     u9607jf:
 10723  06BD                     __ccov401_start_blk67:
 10724  06BD                     l7982:
 10725  06BD  0021               	movlb	1	; select bank1
 10726  06BE  1466               	bsf	(__ccovbit67_64/(0+8))^(0+128),__ccovbit67_64& (0+7)	;volatile
 10727                           
 10728                           ;main.c: 184:                     led_set_mode (ALWAYS_ON);
 10729  06BF  3002               	movlw	2
 10730  06C0  31A6  26BD  3185   	fcall	_led_set_mode
 10731                           
 10732                           ;main.c: 185:                 } else if (button == SHORT_PRESSED) {
 10733  06C3  2EF9               	goto	l7994
 10734  06C4                     __ccov401_end_blk67:
 10735  06C4                     __ccov402_start_blk69:
 10736  06C4                     l7984:
 10737  06C4  0333               	decf	main@button^(0+512),w
 10738  06C5  1D03               	btfss	3,2
 10739  06C6  2EC8               	goto	u9611
 10740  06C7  2EC9               	goto	u9610
 10741  06C8                     u9611:
 10742  06C8  2ED1               	goto	l7988
 10743  06C9                     __ccov402_end_blk69:
 10744  06C9                     u9610:
 10745  06C9                     __ccov403_start_blk70:
 10746  06C9                     l7986:
 10747  06C9  0021               	movlb	1	; select bank1
 10748  06CA  17E5               	bsf	(__ccovbit70_65/(0+8))^(0+128),__ccovbit70_65& (0+7)	;volatile
 10749                           
 10750                           ;main.c: 186:                     spd_set_a_corr (stored_spd_a);
 10751  06CB  0024               	movlb	4	; select bank4
 10752  06CC  082A               	movf	main@stored_spd_a^(0+512),w
 10753  06CD  31A6  26AA  3185   	fcall	_spd_set_a_corr
 10754                           
 10755                           ;main.c: 187:                 } else {
 10756  06D0  2EF9               	goto	l7994
 10757  06D1                     __ccov403_end_blk70:
 10758  06D1                     __ccov404_start_blk72:
 10759  06D1                     l7988:
 10760  06D1  0021               	movlb	1	; select bank1
 10761  06D2  1765               	bsf	(__ccovbit72_66/(0+8))^(0+128),__ccovbit72_66& (0+7)	;volatile
 10762                           
 10763                           ;main.c: 188:                     led_set_mode (NUMBER);
 10764  06D3  3001               	movlw	1
 10765  06D4  31A6  26BD  3185   	fcall	_led_set_mode
 10766  06D7  2EF9               	goto	l7994
 10767  06D8                     __ccov404_end_blk72:
 10768  06D8                     __ccov405_start_blk76:
 10769  06D8                     l7990:
 10770  06D8  0021               	movlb	1	; select bank1
 10771  06D9  16E5               	bsf	(__ccovbit76_67/(0+8))^(0+128),__ccovbit76_67& (0+7)	;volatile
 10772                           
 10773                           ;main.c: 194:                 puts ("ERROR: MENU UNKNOWN STATE.");
 10774  06DA  3030               	movlw	low (STR_3| (0+32768))
 10775  06DB  00BB               	movwf	puts@s^(0+128)
 10776  06DC  30A2               	movlw	high (STR_3| (0+32768))
 10777  06DD  00BC               	movwf	(puts@s^(0+128)+1)
 10778  06DE  3000               	movlw	low u9627jt
 10779  06DF  319A  2A99         	ljmp	_puts
 10780  06E1                     u9627jf:
 10781                           
 10782                           ;main.c: 195:             };main.c: 196:         }
 10783  06E1  2EF9               	goto	l7994
 10784  06E2                     __ccov405_end_blk76:
 10785  06E2                     __ccov406_start_blk78:
 10786  06E2                     l7992:
 10787  06E2  0022               	movlb	2	; select bank2
 10788  06E3  085F               	movf	_menu^(0+256),w
 10789  06E4  00D3               	movwf	??_main^(0+256)
 10790  06E5  01D4               	clrf	(??_main^(0+256)+1)
 10791                           
 10792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10793                           ; Switch size 1, requested type "simple"
 10794                           ; Number of cases is 1, Range of values is 0 to 0
 10795                           ; switch strategies available:
 10796                           ; Name         Instructions Cycles
 10797                           ; simple_byte            4     3 (average)
 10798                           ; direct_byte            8     6 (fixed)
 10799                           ; jumptable            260     6 (fixed)
 10800                           ;	Chosen strategy is simple_byte
 10801  06E6  0854               	movf	(??_main+1)^(0+256),w
 10802  06E7  3A00               	xorlw	0	; case 0
 10803  06E8  1903               	skipnz
 10804  06E9  2EEB               	goto	l8232
 10805  06EA  2ED8               	goto	l7990
 10806  06EB                     l8232:
 10807                           
 10808                           ; Switch size 1, requested type "simple"
 10809                           ; Number of cases is 4, Range of values is 0 to 3
 10810                           ; switch strategies available:
 10811                           ; Name         Instructions Cycles
 10812                           ; simple_byte           13     7 (average)
 10813                           ; direct_byte           14     6 (fixed)
 10814                           ; jumptable            260     6 (fixed)
 10815                           ;	Chosen strategy is simple_byte
 10816  06EB  0853               	movf	??_main^(0+256),w
 10817  06EC  3A00               	xorlw	0	; case 0
 10818  06ED  1903               	skipnz
 10819  06EE  2D75               	goto	l7908
 10820  06EF  3A01               	xorlw	1	; case 1
 10821  06F0  1903               	skipnz
 10822  06F1  2DD6               	goto	l7938
 10823  06F2  3A03               	xorlw	3	; case 2
 10824  06F3  1903               	skipnz
 10825  06F4  2E38               	goto	l7956
 10826  06F5  3A01               	xorlw	1	; case 3
 10827  06F6  1903               	skipnz
 10828  06F7  2E9E               	goto	l7972
 10829  06F8  2ED8               	goto	l7990
 10830  06F9                     __ccov406_end_blk78:
 10831  06F9                     __ccov407_start_blk80:
 10832  06F9                     l7994:
 10833  06F9  0021               	movlb	1	; select bank1
 10834  06FA  1665               	bsf	(__ccovbit80_68/(0+8))^(0+128),__ccovbit80_68& (0+7)	;volatile
 10835                           
 10836                           ;main.c: 198:         if (button == SHORT_PRESSED) {
 10837  06FB  0024               	movlb	4	; select bank4
 10838  06FC  0333               	decf	main@button^(0+512),w
 10839  06FD  1D03               	btfss	3,2
 10840  06FE  2F00               	goto	u9631
 10841  06FF  2F01               	goto	u9630
 10842  0700                     u9631:
 10843  0700  2D6B               	goto	l7906
 10844  0701                     __ccov407_end_blk80:
 10845  0701                     u9630:
 10846  0701                     __ccov408_start_blk81:
 10847  0701                     l7996:
 10848  0701  0021               	movlb	1	; select bank1
 10849  0702  15E5               	bsf	(__ccovbit81_69/(0+8))^(0+128),__ccovbit81_69& (0+7)	;volatile
 10850                           
 10851                           ;main.c: 199:             menu_change();
 10852  0703  31A7  2788  3185   	fcall	_menu_change
 10853  0706  2D6B               	goto	l7906
 10854  0707                     __ccov408_end_blk81:
 10855  0707  3180  2844         	ljmp	start
 10856  0709                     __end_of_main:
 10857                           
 10858                           	psect	jmp_tab__printf
 10859  2285                     __pjmp_tab__printf:
 10860  2285                     u9457jt:
 10861  2285  3185  2D4F         	ljmp	u9457jf
 10862  2287                     u9257jt:
 10863  2287  3190  28A4         	ljmp	u9257jf
 10864                           
 10865                           	psect	jmp_tab__spd_init
 10866  0002                     __pjmp_tab__spd_init:	
 10867                           ;main.c: 96:     spd_init ();
 10868                           
 10869  0002                     u9467jt:
 10870  0002  3185  2D58         	ljmp	u9467jf
 10871                           
 10872                           	psect	jmp_tab__button_check
 10873  2289                     __pjmp_tab__button_check:	
 10874                           ;main.c: 103:     {;main.c: 104:         enum e_buttonstate button;;main.c: 105:        
      +                           button = button_check();
 10875                           
 10876  2289                     u9477jt:
 10877  2289  3185  2D6E         	ljmp	u9477jf
 10878  228B                     u9507jt:	
 10879                           ;main.c: 136:                         button = button_check();
 10880                           
 10881  228B  3185  2DA3         	ljmp	u9507jf
 10882                           
 10883                           	psect	jmp_tab__write_correction
 10884  227B                     __pjmp_tab__write_correction:
 10885  227B                     u9547jt:
 10886  227B  3186  2E0F         	ljmp	u9547jf
 10887  227D                     u9577jt:
 10888  227D  3186  2E75         	ljmp	u9577jf
 10889  227F                     u9607jt:
 10890  227F  3186  2EBD         	ljmp	u9607jf
 10891  2281                     u9137jt:
 10892  2281  3191  29FB         	ljmp	u9137jf
 10893  2283                     u9167jt:
 10894  2283  3192  2A29         	ljmp	u9167jf
 10895                           
 10896                           	psect	jmp_tab__puts
 10897  1800                     __pjmp_tab__puts:
 10898  1800                     u9627jt:
 10899  1800  3186  2EE1         	ljmp	u9627jf
 10900  1802                     u8717jt:
 10901  1802  318A  2AC2         	ljmp	u8717jf
 10902  1804                     u8737jt:
 10903  1804  318B  2B13         	ljmp	u8737jf
 10904  1806                     u8757jt:
 10905  1806  318B  2B68         	ljmp	u8757jf
 10906  1808                     u8767jt:
 10907  1808  318B  2B73         	ljmp	u8767jf
 10908  180A                     u8907jt:
 10909  180A  318E  2EF0         	ljmp	u8907jf
 10910  180C                     u8947jt:
 10911  180C  318F  2F5E         	ljmp	u8947jf
 10912  180E                     u8987jt:
 10913  180E  318F  2FD6         	ljmp	u8987jf
 10914  1810                     u8997jt:
 10915  1810  318F  2FE1         	ljmp	u8997jf
 10916  1812                     u8077jt:
 10917  1812  31A7  2FB7         	ljmp	u8077jf
 10918  1814                     u9187jt:
 10919  1814  3190  285D         	ljmp	u9187jf
 10920  1816                     u9207jt:
 10921  1816  3190  286C         	ljmp	u9207jf
 10922  1818                     u9267jt:
 10923  1818  3190  28B1         	ljmp	u9267jf
 10924                           
 10925                           	psect	text1
 10926  0806                     __ptext1:	
 10927 ;; *************** function _spd_test_pwm *****************
 10928 ;; Defined at:
 10929 ;;		line 128 in file "spd.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;		None
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;		None
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      void 
 10936 ;; Registers used:
 10937 ;;		wreg, status,2, status,0, pclath, cstack
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10946 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10947 ;;Total ram usage:        4 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:   13
 10950 ;; This function calls:
 10951 ;;		_PWM6_LoadDutyValue
 10952 ;;		_TMR6_LoadPeriodRegister
 10953 ;; This function is called by:
 10954 ;;		_main
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _spd_test_pwm
 10960  0806                     _spd_test_pwm:
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _spd_test_pwm: [wreg+status,2+status,0+pclath+cstack]
 10964  0806                     l7790:
 10965                           
 10966                           ;spd.c: 130:     static u8 spd_count = 0;;spd.c: 131:     static u8 func_count = 0;;spd.
      +                          c: 132:     static u8 rising = 1;;spd.c: 134:     if(func_count > 100U) {
 10967  0806  3065               	movlw	101
 10968  0807  0022               	movlb	2	; select bank2
 10969  0808  025D               	subwf	spd_test_pwm@func_count^(0+256),w
 10970  0809  1C03               	skipc
 10971  080A  280C               	goto	u9321
 10972  080B  280D               	goto	u9320
 10973  080C                     u9321:
 10974  080C  2853               	goto	l7810
 10975  080D                     __ccov548_end_blk0:
 10976  080D                     u9320:
 10977  080D                     __ccov549_start_blk1:
 10978  080D                     l7792:
 10979                           
 10980                           ;spd.c: 135:         if(rising) {
 10981  080D  086F               	movf	spd_test_pwm@rising^(0+256),w
 10982  080E  1903               	btfsc	3,2
 10983  080F  2811               	goto	u9331
 10984  0810  2812               	goto	u9330
 10985  0811                     u9331:
 10986  0811  2819               	goto	l7796
 10987  0812                     __ccov549_end_blk1:
 10988  0812                     u9330:
 10989  0812                     __ccov550_start_blk2:
 10990  0812                     l7794:
 10991  0812  15A4               	bsf	(__ccovbit2_117/(0+8))^(0+256),__ccovbit2_117& (0+7)	;volatile
 10992                           
 10993                           ;spd.c: 136:             spd_count++;
 10994  0813  3001               	movlw	1
 10995  0814  0021               	movlb	1	; select bank1
 10996  0815  00AC               	movwf	??_spd_test_pwm^(0+128)
 10997  0816  082C               	movf	??_spd_test_pwm^(0+128),w
 10998  0817  07EE               	addwf	spd_test_pwm@spd_count^(0+128),f
 10999                           
 11000                           ;spd.c: 137:         } else {
 11001  0818  281D               	goto	l899
 11002  0819                     __ccov550_end_blk2:
 11003  0819                     __ccov551_start_blk4:
 11004  0819                     l7796:
 11005  0819  1524               	bsf	(__ccovbit4_118/(0+8))^(0+256),__ccovbit4_118& (0+7)	;volatile
 11006                           
 11007                           ;spd.c: 138:             spd_count--;
 11008  081A  3001               	movlw	1
 11009  081B  0021               	movlb	1	; select bank1
 11010  081C  02EE               	subwf	spd_test_pwm@spd_count^(0+128),f
 11011  081D                     __ccov551_end_blk4:
 11012  081D                     __ccov552_start_blk5:
 11013  081D                     l899:	
 11014                           ;spd.c: 139:         }
 11015                           
 11016                           
 11017                           ;spd.c: 140:         if (spd_count == (0xff)) {
 11018  081D  0A6E               	incf	spd_test_pwm@spd_count^(0+128),w
 11019  081E  1D03               	btfss	3,2
 11020  081F  2821               	goto	u9341
 11021  0820  2822               	goto	u9340
 11022  0821                     u9341:
 11023  0821  2826               	goto	l7800
 11024  0822                     __ccov552_end_blk5:
 11025  0822                     u9340:
 11026  0822                     __ccov553_start_blk6:
 11027  0822                     l7798:
 11028  0822  0022               	movlb	2	; select bank2
 11029  0823  14A4               	bsf	(__ccovbit6_119/(0+8))^(0+256),__ccovbit6_119& (0+7)	;volatile
 11030                           
 11031                           ;spd.c: 141:             rising = 0;
 11032  0824  01EF               	clrf	spd_test_pwm@rising^(0+256)
 11033                           
 11034                           ;spd.c: 142:         } else if (spd_count == 0) {
 11035  0825  2832               	goto	l7804
 11036  0826                     __ccov553_end_blk6:
 11037  0826                     __ccov554_start_blk8:
 11038  0826                     l7800:
 11039  0826  0022               	movlb	2	; select bank2
 11040  0827  1424               	bsf	(__ccovbit8_120/(0+8))^(0+256),__ccovbit8_120& (0+7)	;volatile
 11041  0828  0021               	movlb	1	; select bank1
 11042  0829  086E               	movf	spd_test_pwm@spd_count^(0+128),w
 11043  082A  1D03               	btfss	3,2
 11044  082B  282D               	goto	u9351
 11045  082C  282E               	goto	u9350
 11046  082D                     u9351:
 11047  082D  2832               	goto	l7804
 11048  082E                     __ccov554_end_blk8:
 11049  082E                     u9350:
 11050  082E                     __ccov555_start_blk9:
 11051  082E                     l7802:
 11052  082E  0022               	movlb	2	; select bank2
 11053  082F  17A3               	bsf	(__ccovbit9_121/(0+8))^(0+256),__ccovbit9_121& (0+7)	;volatile
 11054                           
 11055                           ;spd.c: 143:             rising = 1;
 11056  0830  01EF               	clrf	spd_test_pwm@rising^(0+256)
 11057  0831  0AEF               	incf	spd_test_pwm@rising^(0+256),f
 11058  0832                     __ccov555_end_blk9:
 11059  0832                     __ccov556_start_blk12:
 11060  0832                     l7804:
 11061                           
 11062                           ;spd.c: 145:         func_count = 0;
 11063  0832  0022               	movlb	2	; select bank2
 11064  0833  01DD               	clrf	spd_test_pwm@func_count^(0+256)
 11065  0834                     __ccov556_end_blk12:
 11066  0834                     __ccov557_start_blk13:
 11067  0834                     l7806:
 11068                           
 11069                           ;spd.c: 146:         TMR6_LoadPeriodRegister (spd_count);
 11070  0834  0021               	movlb	1	; select bank1
 11071  0835  086E               	movf	spd_test_pwm@spd_count^(0+128),w
 11072  0836  31A6  2699  3188   	fcall	_TMR6_LoadPeriodRegister
 11073  0839                     __ccov557_end_blk13:
 11074  0839                     __ccov558_start_blk14:
 11075  0839                     l7808:
 11076  0839  0022               	movlb	2	; select bank2
 11077  083A  1723               	bsf	(__ccovbit14_122/(0+8))^(0+256),__ccovbit14_122& (0+7)	;volatile
 11078                           
 11079                           ;spd.c: 147:         PWM6_LoadDutyValue ((4 * (u16)spd_count + 1) / 2);
 11080  083B  0021               	movlb	1	; select bank1
 11081  083C  086E               	movf	spd_test_pwm@spd_count^(0+128),w
 11082  083D  00AC               	movwf	??_spd_test_pwm^(0+128)
 11083  083E  01AD               	clrf	(??_spd_test_pwm^(0+128)+1)
 11084  083F  35AC               	lslf	??_spd_test_pwm^(0+128),f
 11085  0840  0DAD               	rlf	(??_spd_test_pwm^(0+128)+1),f
 11086  0841  35AC               	lslf	??_spd_test_pwm^(0+128),f
 11087  0842  0DAD               	rlf	(??_spd_test_pwm^(0+128)+1),f
 11088  0843  082C               	movf	??_spd_test_pwm^(0+128),w
 11089  0844  3E01               	addlw	1
 11090  0845  00AE               	movwf	(??_spd_test_pwm+2)^(0+128)
 11091  0846  3000               	movlw	0
 11092  0847  3D2D               	addwfc	(??_spd_test_pwm+1)^(0+128),w
 11093  0848  00AF               	movwf	(??_spd_test_pwm+3)^(0+128)
 11094  0849  36AF               	lsrf	((??_spd_test_pwm+2)^(0+128)+1),f
 11095  084A  0CAE               	rrf	(??_spd_test_pwm+2)^(0+128),f
 11096  084B  082E               	movf	(??_spd_test_pwm+2)^(0+128),w
 11097  084C  00A8               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
 11098  084D  082F               	movf	(??_spd_test_pwm+3)^(0+128),w
 11099  084E  00A9               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
 11100  084F  3199  21B1  3188   	fcall	_PWM6_LoadDutyValue
 11101                           
 11102                           ;spd.c: 148:     } else {
 11103  0852  285A               	goto	l904
 11104  0853                     __ccov558_end_blk14:
 11105  0853                     __ccov559_start_blk16:
 11106  0853                     l7810:
 11107  0853  16A3               	bsf	(__ccovbit16_123/(0+8))^(0+256),__ccovbit16_123& (0+7)	;volatile
 11108                           
 11109                           ;spd.c: 149:         func_count++;
 11110  0854  3001               	movlw	1
 11111  0855  0021               	movlb	1	; select bank1
 11112  0856  00AC               	movwf	??_spd_test_pwm^(0+128)
 11113  0857  082C               	movf	??_spd_test_pwm^(0+128),w
 11114  0858  0022               	movlb	2	; select bank2
 11115  0859  07DD               	addwf	spd_test_pwm@func_count^(0+256),f
 11116  085A                     __ccov559_end_blk16:
 11117  085A                     __ccov560_start_blk18:
 11118  085A                     l904:
 11119  085A  0022               	movlb	2	; select bank2
 11120  085B  1623               	bsf	(__ccovbit18_124/(0+8))^(0+256),__ccovbit18_124& (0+7)	;volatile
 11121  085C  0008               	return
 11122  085D                     __end_of_spd_test_pwm:
 11123  085D                     
 11124                           	psect	text2
 11125  2699                     __ptext2:	
 11126 ;; *************** function _TMR6_LoadPeriodRegister *****************
 11127 ;; Defined at:
 11128 ;;		line 106 in file "mcc_generated_files/tmr6.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  periodVal       1    wreg     unsigned char 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  periodVal       1    8[BANK1 ] unsigned char 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11143 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11145 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11146 ;;Total ram usage:        1 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:   12
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_spd_test_pwm
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           
 11157                           ;psect for function _TMR6_LoadPeriodRegister
 11158  2699                     _TMR6_LoadPeriodRegister:
 11159                           
 11160                           ;incstack = 0
 11161                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
 11162                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
 11163  2699  0021               	movlb	1	; select bank1
 11164  269A  00A8               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
 11165  269B                     l7286:
 11166                           
 11167                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
 11168  269B  0828               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
 11169  269C  0028               	movlb	8	; select bank8
 11170  269D  009D               	movwf	29	;volatile
 11171  269E                     __ccov350_end_blk0:
 11172  269E                     __ccov351_start_blk1:
 11173  269E                     l615:
 11174  269E  0021               	movlb	1	; select bank1
 11175  269F  1667               	bsf	(__ccovbit1_52/(0+8))^(0+128),__ccovbit1_52& (0+7)	;volatile
 11176  26A0  0008               	return
 11177  26A1                     __end_of_TMR6_LoadPeriodRegister:
 11178  26A1                     
 11179                           	psect	text3
 11180  19B1                     __ptext3:	
 11181 ;; *************** function _PWM6_LoadDutyValue *****************
 11182 ;; Defined at:
 11183 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  dutyValue       2    8[BANK1 ] unsigned short 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2, status,0
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11200 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;Total ram usage:        4 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:   12
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_spd_test_pwm
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function _PWM6_LoadDutyValue
 11213  19B1                     _PWM6_LoadDutyValue:
 11214                           
 11215                           ;incstack = 0
 11216                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11217  19B1                     l7136:
 11218                           
 11219                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11220  19B1  0021               	movlb	1	; select bank1
 11221  19B2  0829               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 11222  19B3  00AB               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 11223  19B4  0828               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11224  19B5  00AA               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11225  19B6  36AB               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11226  19B7  0CAA               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11227  19B8  36AB               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11228  19B9  0CAA               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11229  19BA  082A               	movf	??_PWM6_LoadDutyValue^(0+128),w
 11230  19BB  002C               	movlb	12	; select bank12
 11231  19BC  009B               	movwf	27	;volatile
 11232                           
 11233                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 11234  19BD  0021               	movlb	1	; select bank1
 11235  19BE  0828               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11236  19BF  3903               	andlw	3
 11237  19C0  00AA               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11238  19C1  3005               	movlw	5
 11239  19C2                     u8665:
 11240  19C2  35AA               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 11241  19C3  3EFF               	addlw	-1
 11242  19C4  1D03               	skipz
 11243  19C5  29C2               	goto	u8665
 11244  19C6  352A               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 11245  19C7  002C               	movlb	12	; select bank12
 11246  19C8  009A               	movwf	26	;volatile
 11247  19C9                     __ccov4_end_blk0:
 11248  19C9                     __ccov5_start_blk1:
 11249  19C9                     l14:
 11250  19C9  0020               	movlb	0	; select bank0
 11251  19CA  176F               	bsf	__ccovbit1_2/(0+8),__ccovbit1_2& (0+7)	;volatile
 11252  19CB  0008               	return
 11253  19CC                     __end_of_PWM6_LoadDutyValue:
 11254  19CC                     
 11255                           	psect	text4
 11256  1844                     __ptext4:	
 11257 ;; *************** function _spd_set_k_corr *****************
 11258 ;; Defined at:
 11259 ;;		line 65 in file "spd.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  value           4    8[BANK1 ] float 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11273 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11276 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11277 ;;Total ram usage:        4 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:   12
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_main
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           
 11288                           ;psect for function _spd_set_k_corr
 11289  1844                     _spd_set_k_corr:
 11290                           
 11291                           ;incstack = 0
 11292                           ; Regs used in _spd_set_k_corr: [wreg]
 11293  1844                     l7822:
 11294                           
 11295                           ;spd.c: 65: void spd_set_k_corr (float value);spd.c: 66: {;spd.c: 67:     spd.k = value;
 11296  1844  0021               	movlb	1	; select bank1
 11297  1845  082B               	movf	(spd_set_k_corr@value+3)^(0+128),w
 11298  1846  0022               	movlb	2	; select bank2
 11299  1847  00E4               	movwf	(_spd+3)^(0+256)
 11300  1848  0021               	movlb	1	; select bank1
 11301  1849  082A               	movf	(spd_set_k_corr@value+2)^(0+128),w
 11302  184A  0022               	movlb	2	; select bank2
 11303  184B  00E3               	movwf	(_spd+2)^(0+256)
 11304  184C  0021               	movlb	1	; select bank1
 11305  184D  0829               	movf	(spd_set_k_corr@value+1)^(0+128),w
 11306  184E  0022               	movlb	2	; select bank2
 11307  184F  00E2               	movwf	(_spd+1)^(0+256)
 11308  1850  0021               	movlb	1	; select bank1
 11309  1851  0828               	movf	spd_set_k_corr@value^(0+128),w
 11310  1852  0022               	movlb	2	; select bank2
 11311  1853  00E1               	movwf	_spd^(0+256)
 11312  1854                     __ccov523_end_blk0:
 11313  1854                     __ccov524_start_blk1:
 11314  1854                     l870:
 11315  1854  1625               	bsf	(__ccovbit1_108/(0+8))^(0+256),__ccovbit1_108& (0+7)	;volatile
 11316  1855  0008               	return
 11317  1856                     __end_of_spd_set_k_corr:
 11318  1856                     
 11319                           	psect	text5
 11320  26AA                     __ptext5:	
 11321 ;; *************** function _spd_set_a_corr *****************
 11322 ;; Defined at:
 11323 ;;		line 75 in file "spd.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  value           1    wreg     unsigned char 
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;  value           1    9[BANK1 ] unsigned char 
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11338 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11339 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11340 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11341 ;;Total ram usage:        2 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:   12
 11344 ;; This function calls:
 11345 ;;		Nothing
 11346 ;; This function is called by:
 11347 ;;		_main
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           
 11352                           ;psect for function _spd_set_a_corr
 11353  26AA                     _spd_set_a_corr:
 11354                           
 11355                           ;incstack = 0
 11356                           ; Regs used in _spd_set_a_corr: [wreg]
 11357                           ;spd_set_a_corr@value stored from wreg
 11358  26AA  0021               	movlb	1	; select bank1
 11359  26AB  00A9               	movwf	spd_set_a_corr@value^(0+128)
 11360  26AC                     l7854:
 11361                           
 11362                           ;spd.c: 75: void spd_set_a_corr (u8 value);spd.c: 76: {;spd.c: 77:     spd.a = value;
 11363  26AC  0829               	movf	spd_set_a_corr@value^(0+128),w
 11364  26AD  00A8               	movwf	??_spd_set_a_corr^(0+128)
 11365  26AE  0828               	movf	??_spd_set_a_corr^(0+128),w
 11366  26AF  0022               	movlb	2	; select bank2
 11367  26B0  00E5               	movwf	(_spd^(0+256)+4)
 11368  26B1                     __ccov527_end_blk0:
 11369  26B1                     __ccov528_start_blk1:
 11370  26B1                     l876:
 11371  26B1  1525               	bsf	(__ccovbit1_110/(0+8))^(0+256),__ccovbit1_110& (0+7)	;volatile
 11372  26B2  0008               	return
 11373  26B3                     __end_of_spd_set_a_corr:
 11374  26B3                     
 11375                           	psect	text6
 11376  1CA2                     __ptext6:	
 11377 ;; *************** function _spd_k_calibration *****************
 11378 ;; Defined at:
 11379 ;;		line 157 in file "spd.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;		None
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  tmp             2   53[BANK1 ] unsigned short 
 11384 ;;  stored_ch       1   55[BANK1 ] enum E6440
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0, pclath, cstack
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11395 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11396 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;Total ram usage:        4 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:   15
 11401 ;; This function calls:
 11402 ;;		_ADC_GetConversion
 11403 ;;		_spd_uint_to_float
 11404 ;; This function is called by:
 11405 ;;		_main
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           
 11410                           ;psect for function _spd_k_calibration
 11411  1CA2                     _spd_k_calibration:
 11412                           
 11413                           ;incstack = 0
 11414                           ; Regs used in _spd_k_calibration: [wreg+status,2+status,0+pclath+cstack]
 11415  1CA2                     l7816:
 11416                           
 11417                           ;spd.c: 159:     adc_result_t tmp;;spd.c: 160:     adc_channel_t stored_ch = ADCON0bits.
      +                          CHS;
 11418  1CA2  0021               	movlb	1	; select bank1
 11419  1CA3  0C1D               	rrf	29,w	;volatile
 11420  1CA4  0C89               	rrf	9,f
 11421  1CA5  393F               	andlw	63
 11422  1CA6  00D4               	movwf	??_spd_k_calibration^(0+128)
 11423  1CA7  0854               	movf	??_spd_k_calibration^(0+128),w
 11424  1CA8  00D7               	movwf	spd_k_calibration@stored_ch^(0+128)
 11425  1CA9                     __ccov561_end_blk0:
 11426  1CA9                     __ccov562_start_blk1:
 11427  1CA9                     l7818:
 11428                           
 11429                           ;spd.c: 162:     tmp = ADC_GetConversion (VARIABLE_R);
 11430  1CA9  3015               	movlw	21
 11431  1CAA  319A  223D  319C   	fcall	_ADC_GetConversion
 11432  1CAD  0021               	movlb	1	; select bank1
 11433  1CAE  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 11434  1CAF  00D6               	movwf	(spd_k_calibration@tmp+1)^(0+128)
 11435  1CB0  0828               	movf	?_ADC_GetConversion^(0+128),w
 11436  1CB1  00D5               	movwf	spd_k_calibration@tmp^(0+128)
 11437  1CB2                     __ccov562_end_blk1:
 11438  1CB2                     __ccov563_start_blk2:
 11439  1CB2                     l7820:
 11440                           
 11441                           ;spd.c: 163:     ADCON0bits.CHS = stored_ch;
 11442  1CB2  0857               	movf	spd_k_calibration@stored_ch^(0+128),w
 11443  1CB3  00D4               	movwf	??_spd_k_calibration^(0+128)
 11444  1CB4  0DD4               	rlf	??_spd_k_calibration^(0+128),f
 11445  1CB5  0DD4               	rlf	??_spd_k_calibration^(0+128),f
 11446  1CB6  081D               	movf	29,w	;volatile
 11447  1CB7  0654               	xorwf	??_spd_k_calibration^(0+128),w
 11448  1CB8  3903               	andlw	-253
 11449  1CB9  0654               	xorwf	??_spd_k_calibration^(0+128),w
 11450  1CBA  009D               	movwf	29	;volatile
 11451                           
 11452                           ;spd.c: 165:     spd.k = spd_uint_to_float (tmp);
 11453  1CBB  0856               	movf	(spd_k_calibration@tmp+1)^(0+128),w
 11454  1CBC  00D1               	movwf	(spd_uint_to_float@value+1)^(0+128)
 11455  1CBD  0855               	movf	spd_k_calibration@tmp^(0+128),w
 11456  1CBE  00D0               	movwf	spd_uint_to_float@value^(0+128)
 11457  1CBF  319C  2419  319C   	fcall	_spd_uint_to_float
 11458  1CC2  0021               	movlb	1	; select bank1
 11459  1CC3  0853               	movf	(?_spd_uint_to_float+3)^(0+128),w
 11460  1CC4  0022               	movlb	2	; select bank2
 11461  1CC5  00E4               	movwf	(_spd+3)^(0+256)
 11462  1CC6  0021               	movlb	1	; select bank1
 11463  1CC7  0852               	movf	(?_spd_uint_to_float+2)^(0+128),w
 11464  1CC8  0022               	movlb	2	; select bank2
 11465  1CC9  00E3               	movwf	(_spd+2)^(0+256)
 11466  1CCA  0021               	movlb	1	; select bank1
 11467  1CCB  0851               	movf	(?_spd_uint_to_float+1)^(0+128),w
 11468  1CCC  0022               	movlb	2	; select bank2
 11469  1CCD  00E2               	movwf	(_spd+1)^(0+256)
 11470  1CCE  0021               	movlb	1	; select bank1
 11471  1CCF  0850               	movf	?_spd_uint_to_float^(0+128),w
 11472  1CD0  0022               	movlb	2	; select bank2
 11473  1CD1  00E1               	movwf	_spd^(0+256)
 11474  1CD2                     __ccov563_end_blk2:
 11475  1CD2                     __ccov564_start_blk3:
 11476  1CD2                     l907:
 11477  1CD2  15A3               	bsf	(__ccovbit3_125/(0+8))^(0+256),__ccovbit3_125& (0+7)	;volatile
 11478  1CD3  0008               	return
 11479  1CD4                     __end_of_spd_k_calibration:
 11480  1CD4                     
 11481                           	psect	text7
 11482  1C19                     __ptext7:	
 11483 ;; *************** function _spd_uint_to_float *****************
 11484 ;; Defined at:
 11485 ;;		line 80 in file "spd.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;  value           2   48[BANK1 ] unsigned short 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  4   48[BANK1 ] float 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0, pclath, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11499 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11502 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11503 ;;Total ram usage:        4 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:   14
 11506 ;; This function calls:
 11507 ;;		___flmul
 11508 ;;		___xxtofl
 11509 ;; This function is called by:
 11510 ;;		_spd_k_calibration
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _spd_uint_to_float
 11516  1C19                     _spd_uint_to_float:
 11517                           
 11518                           ;incstack = 0
 11519                           ; Regs used in _spd_uint_to_float: [wreg+status,2+status,0+pclath+cstack]
 11520  1C19                     l7552:
 11521                           
 11522                           ;spd.c: 80: static float spd_uint_to_float (u16 value);spd.c: 81: {;spd.c: 82:     retur
      +                          n ((2.0f/1023) * value);
 11523  1C19  303B               	movlw	59
 11524  1C1A  0021               	movlb	1	; select bank1
 11525  1C1B  00B9               	movwf	(___flmul@b+3)^(0+128)
 11526  1C1C  3000               	movlw	0
 11527  1C1D  00B8               	movwf	(___flmul@b+2)^(0+128)
 11528  1C1E  3020               	movlw	32
 11529  1C1F  00B7               	movwf	(___flmul@b+1)^(0+128)
 11530  1C20  3008               	movlw	8
 11531  1C21  00B6               	movwf	___flmul@b^(0+128)
 11532  1C22  0850               	movf	spd_uint_to_float@value^(0+128),w
 11533  1C23  00A8               	movwf	___xxtofl@val^(0+128)
 11534  1C24  0851               	movf	(spd_uint_to_float@value+1)^(0+128),w
 11535  1C25  00A9               	movwf	(___xxtofl@val^(0+128)+1)
 11536  1C26  01AA               	clrf	(___xxtofl@val^(0+128)+2)
 11537  1C27  01AB               	clrf	(___xxtofl@val^(0+128)+3)
 11538  1C28  3000               	movlw	0
 11539  1C29  3192  22E2  319C   	fcall	___xxtofl
 11540  1C2C  0021               	movlb	1	; select bank1
 11541  1C2D  082B               	movf	(?___xxtofl+3)^(0+128),w
 11542  1C2E  00BD               	movwf	(___flmul@a+3)^(0+128)
 11543  1C2F  082A               	movf	(?___xxtofl+2)^(0+128),w
 11544  1C30  00BC               	movwf	(___flmul@a+2)^(0+128)
 11545  1C31  0829               	movf	(?___xxtofl+1)^(0+128),w
 11546  1C32  00BB               	movwf	(___flmul@a+1)^(0+128)
 11547  1C33  0828               	movf	?___xxtofl^(0+128),w
 11548  1C34  00BA               	movwf	___flmul@a^(0+128)
 11549  1C35  3180  207C  319C   	fcall	___flmul
 11550  1C38  0021               	movlb	1	; select bank1
 11551  1C39  0839               	movf	(?___flmul+3)^(0+128),w
 11552  1C3A  00D3               	movwf	(?_spd_uint_to_float+3)^(0+128)
 11553  1C3B  0838               	movf	(?___flmul+2)^(0+128),w
 11554  1C3C  00D2               	movwf	(?_spd_uint_to_float+2)^(0+128)
 11555  1C3D  0837               	movf	(?___flmul+1)^(0+128),w
 11556  1C3E  00D1               	movwf	(?_spd_uint_to_float+1)^(0+128)
 11557  1C3F  0836               	movf	?___flmul^(0+128),w
 11558  1C40  00D0               	movwf	?_spd_uint_to_float^(0+128)
 11559  1C41                     __ccov529_end_blk0:
 11560  1C41                     __ccov530_start_blk2:
 11561  1C41                     l879:
 11562  1C41  0022               	movlb	2	; select bank2
 11563  1C42  14A5               	bsf	(__ccovbit2_111/(0+8))^(0+256),__ccovbit2_111& (0+7)	;volatile
 11564  1C43  0008               	return
 11565  1C44                     __end_of_spd_uint_to_float:
 11566  1C44                     
 11567                           	psect	text8
 11568  11A4                     __ptext8:	
 11569 ;; *************** function _spd_init *****************
 11570 ;; Defined at:
 11571 ;;		line 30 in file "spd.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  tmp             1   60[BANK1 ] PTR void 
 11576 ;;		 -> read_correction@buffer(4), NULL(0), 
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1   58[BANK1 ] void 
 11579 ;; Registers used:
 11580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11586 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11587 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11588 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11589 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11590 ;;Total ram usage:        3 bytes
 11591 ;; Hardware stack levels required when called:   16
 11592 ;; This function calls:
 11593 ;;		___fleq
 11594 ;;		_read_correction
 11595 ;;		_write_correction
 11596 ;; This function is called by:
 11597 ;;		_main
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           
 11602                           ;psect for function _spd_init
 11603  11A4                     _spd_init:
 11604                           
 11605                           ;incstack = 0
 11606                           ; Regs used in _spd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11607  11A4  0021               	movlb	1	; select bank1
 11608  11A5  00DA               	movwf	?_spd_init^(0+128)
 11609  11A6                     l7690:
 11610                           
 11611                           ;spd.c: 32:     void* tmp;;spd.c: 33:     tmp = read_correction (SPD_MUL_CORR);
 11612  11A6  01C2               	clrf	read_correction@type^(0+128)
 11613  11A7  308D               	movlw	low u9117jt
 11614  11A8  318E  2E70         	ljmp	_read_correction
 11615  11AA                     u9117jf:
 11616  11AA  0021               	movlb	1	; select bank1
 11617  11AB  0842               	movf	?_read_correction^(0+128),w
 11618  11AC  00DB               	movwf	??_spd_init^(0+128)
 11619  11AD  085B               	movf	??_spd_init^(0+128),w
 11620  11AE  00DC               	movwf	spd_init@tmp^(0+128)
 11621  11AF                     __ccov503_end_blk0:
 11622  11AF                     __ccov504_start_blk1:
 11623  11AF                     l7692:
 11624                           
 11625                           ;spd.c: 34:     spd.k = *(float*)tmp;
 11626  11AF  085C               	movf	spd_init@tmp^(0+128),w
 11627  11B0  0086               	movwf	6
 11628  11B1  0187               	clrf	7
 11629  11B2  3F40               	moviw [0]fsr1
 11630  11B3  0022               	movlb	2	; select bank2
 11631  11B4  00E1               	movwf	_spd^(0+256)
 11632  11B5  3F41               	moviw [1]fsr1
 11633  11B6  00E2               	movwf	(_spd+1)^(0+256)
 11634  11B7  3F42               	moviw [2]fsr1
 11635  11B8  00E3               	movwf	(_spd+2)^(0+256)
 11636  11B9  3F43               	moviw [3]fsr1
 11637  11BA  00E4               	movwf	(_spd+3)^(0+256)
 11638  11BB                     __ccov504_end_blk1:
 11639  11BB                     __ccov505_start_blk2:
 11640  11BB                     l7694:
 11641                           
 11642                           ;spd.c: 35:     if (spd.k != 0) {
 11643  11BB  0864               	movf	(_spd+3)^(0+256),w
 11644  11BC  0021               	movlb	1	; select bank1
 11645  11BD  00AB               	movwf	(___fleq@ff1+3)^(0+128)
 11646  11BE  0022               	movlb	2	; select bank2
 11647  11BF  0863               	movf	(_spd+2)^(0+256),w
 11648  11C0  0021               	movlb	1	; select bank1
 11649  11C1  00AA               	movwf	(___fleq@ff1+2)^(0+128)
 11650  11C2  0022               	movlb	2	; select bank2
 11651  11C3  0862               	movf	(_spd+1)^(0+256),w
 11652  11C4  0021               	movlb	1	; select bank1
 11653  11C5  00A9               	movwf	(___fleq@ff1+1)^(0+128)
 11654  11C6  0022               	movlb	2	; select bank2
 11655  11C7  0861               	movf	_spd^(0+256),w
 11656  11C8  0021               	movlb	1	; select bank1
 11657  11C9  00A8               	movwf	___fleq@ff1^(0+128)
 11658  11CA  3000               	movlw	0
 11659  11CB  00AF               	movwf	(___fleq@ff2+3)^(0+128)
 11660  11CC  3000               	movlw	0
 11661  11CD  00AE               	movwf	(___fleq@ff2+2)^(0+128)
 11662  11CE  3000               	movlw	0
 11663  11CF  00AD               	movwf	(___fleq@ff2+1)^(0+128)
 11664  11D0  3000               	movlw	0
 11665  11D1  00AC               	movwf	___fleq@ff2^(0+128)
 11666  11D2  319E  264B  3191   	fcall	___fleq
 11667  11D5  1803               	btfsc	3,0
 11668  11D6  29D8               	goto	u9121
 11669  11D7  29D9               	goto	u9120
 11670  11D8                     u9121:
 11671  11D8  29FB               	goto	l7702
 11672  11D9                     __ccov505_end_blk2:
 11673  11D9                     u9120:
 11674  11D9                     __ccov506_start_blk3:
 11675  11D9                     l7696:
 11676                           
 11677                           ;spd.c: 36:         spd.k = 1.0F;
 11678  11D9  303F               	movlw	63
 11679  11DA  0022               	movlb	2	; select bank2
 11680  11DB  00E4               	movwf	(_spd+3)^(0+256)
 11681  11DC  3080               	movlw	128
 11682  11DD  00E3               	movwf	(_spd+2)^(0+256)
 11683  11DE  3000               	movlw	0
 11684  11DF  00E2               	movwf	(_spd+1)^(0+256)
 11685  11E0  3000               	movlw	0
 11686  11E1  00E1               	movwf	_spd^(0+256)
 11687  11E2                     __ccov506_end_blk3:
 11688  11E2                     __ccov507_start_blk4:
 11689  11E2                     l7698:
 11690                           
 11691                           ;spd.c: 37:         *(float*) tmp = 1.0F;
 11692  11E2  0021               	movlb	1	; select bank1
 11693  11E3  085C               	movf	spd_init@tmp^(0+128),w
 11694  11E4  0086               	movwf	6
 11695  11E5  0187               	clrf	7
 11696  11E6  3000               	movlw	0
 11697  11E7  3FC0               	movwi [0]fsr1
 11698  11E8  3000               	movlw	0
 11699  11E9  3FC1               	movwi [1]fsr1
 11700  11EA  3080               	movlw	128
 11701  11EB  3FC2               	movwi [2]fsr1
 11702  11EC  303F               	movlw	63
 11703  11ED  3FC3               	movwi [3]fsr1
 11704  11EE                     __ccov507_end_blk4:
 11705  11EE                     __ccov508_start_blk5:
 11706  11EE                     l7700:
 11707  11EE  0022               	movlb	2	; select bank2
 11708  11EF  1426               	bsf	(__ccovbit5_104/(0+8))^(0+256),__ccovbit5_104& (0+7)	;volatile
 11709                           
 11710                           ;spd.c: 38:         write_correction (SPD_MUL_CORR, tmp);
 11711  11F0  0021               	movlb	1	; select bank1
 11712  11F1  01C1               	clrf	write_correction@type^(0+128)
 11713  11F2  085C               	movf	spd_init@tmp^(0+128),w
 11714  11F3  00C2               	movwf	write_correction@value^(0+128)
 11715  11F4  39FF               	andlw	255
 11716  11F5  1D03               	skipz
 11717  11F6  3000               	movlw	0
 11718  11F7  00C3               	movwf	(write_correction@value+1)^(0+128)
 11719  11F8  3081               	movlw	low u9137jt
 11720  11F9  318A  2A6B         	ljmp	_write_correction
 11721  11FB                     __ccov508_end_blk5:
 11722  11FB                     u9137jf:
 11723  11FB                     __ccov509_start_blk7:
 11724  11FB                     l7702:
 11725                           
 11726                           ;spd.c: 41:     tmp = read_correction (SPD_ADD_CORR);
 11727  11FB  0021               	movlb	1	; select bank1
 11728  11FC  01C2               	clrf	read_correction@type^(0+128)
 11729  11FD  0AC2               	incf	read_correction@type^(0+128),f
 11730  11FE  308F               	movlw	low u9147jt
 11731  11FF  318E  2E70         	ljmp	_read_correction
 11732  1201                     u9147jf:
 11733  1201  0021               	movlb	1	; select bank1
 11734  1202  0842               	movf	?_read_correction^(0+128),w
 11735  1203  00DB               	movwf	??_spd_init^(0+128)
 11736  1204  085B               	movf	??_spd_init^(0+128),w
 11737  1205  00DC               	movwf	spd_init@tmp^(0+128)
 11738  1206                     __ccov509_end_blk7:
 11739  1206                     __ccov510_start_blk8:
 11740  1206                     l7704:
 11741                           
 11742                           ;spd.c: 42:     spd.a = *(u8*)tmp;
 11743  1206  085C               	movf	spd_init@tmp^(0+128),w
 11744  1207  0086               	movwf	6
 11745  1208  0187               	clrf	7
 11746  1209  0801               	movf	1,w
 11747  120A  00DB               	movwf	??_spd_init^(0+128)
 11748  120B  085B               	movf	??_spd_init^(0+128),w
 11749  120C  0022               	movlb	2	; select bank2
 11750  120D  00E5               	movwf	(_spd^(0+256)+4)
 11751                           
 11752                           ;spd.c: 43:     if (spd.a != 0) {
 11753  120E  0865               	movf	(_spd^(0+256)+4),w
 11754  120F  1903               	btfsc	3,2
 11755  1210  2A12               	goto	u9151
 11756  1211  2A13               	goto	u9150
 11757  1212                     u9151:
 11758  1212  2A29               	goto	l7712
 11759  1213                     __ccov510_end_blk8:
 11760  1213                     u9150:
 11761  1213                     __ccov511_start_blk9:
 11762  1213                     l7706:
 11763                           
 11764                           ;spd.c: 44:         spd.a = 0U;
 11765  1213  01E5               	clrf	(_spd^(0+256)+4)
 11766  1214                     __ccov511_end_blk9:
 11767  1214                     __ccov512_start_blk10:
 11768  1214                     l7708:
 11769                           
 11770                           ;spd.c: 45:         *(u16*)tmp = 0U;
 11771  1214  0021               	movlb	1	; select bank1
 11772  1215  085C               	movf	spd_init@tmp^(0+128),w
 11773  1216  0086               	movwf	6
 11774  1217  0187               	clrf	7
 11775  1218  3000               	movlw	0
 11776  1219  3FC0               	movwi [0]fsr1
 11777  121A  3FC1               	movwi [1]fsr1
 11778  121B                     __ccov512_end_blk10:
 11779  121B                     __ccov513_start_blk11:
 11780  121B                     l7710:
 11781  121B  0022               	movlb	2	; select bank2
 11782  121C  17A5               	bsf	(__ccovbit11_105/(0+8))^(0+256),__ccovbit11_105& (0+7)	;volatile
 11783                           
 11784                           ;spd.c: 46:         write_correction (SPD_ADD_CORR, tmp);
 11785  121D  0021               	movlb	1	; select bank1
 11786  121E  01C1               	clrf	write_correction@type^(0+128)
 11787  121F  0AC1               	incf	write_correction@type^(0+128),f
 11788  1220  085C               	movf	spd_init@tmp^(0+128),w
 11789  1221  00C2               	movwf	write_correction@value^(0+128)
 11790  1222  39FF               	andlw	255
 11791  1223  1D03               	skipz
 11792  1224  3000               	movlw	0
 11793  1225  00C3               	movwf	(write_correction@value+1)^(0+128)
 11794  1226  3083               	movlw	low u9167jt
 11795  1227  318A  2A6B         	ljmp	_write_correction
 11796  1229                     __ccov513_end_blk11:
 11797  1229                     u9167jf:
 11798  1229                     __ccov514_start_blk13:
 11799  1229                     l7712:
 11800                           
 11801                           ;spd.c: 49:     spd.count = 0;
 11802  1229  0022               	movlb	2	; select bank2
 11803  122A  01E6               	clrf	(_spd^(0+256)+5)
 11804  122B  01E7               	clrf	((_spd+1)^(0+256)+5)
 11805  122C                     __ccov514_end_blk13:
 11806  122C                     __ccov515_start_blk14:
 11807  122C                     l7714:
 11808                           
 11809                           ;spd.c: 50:     spd.duty = 0;
 11810  122C  01E8               	clrf	(_spd^(0+256)+7)
 11811  122D  01E9               	clrf	((_spd+1)^(0+256)+7)
 11812  122E                     __ccov515_end_blk14:
 11813  122E                     __ccov516_start_blk15:
 11814  122E                     l7716:
 11815                           
 11816                           ;spd.c: 51:     spd.pr_value = 0;
 11817  122E  01EA               	clrf	(_spd^(0+256)+9)
 11818  122F                     __ccov516_end_blk15:
 11819  122F                     __ccov517_start_blk16:
 11820  122F                     l7718:
 11821                           
 11822                           ;spd.c: 52:     spd.speed = 0;
 11823  122F  01EB               	clrf	(_spd^(0+256)+10)
 11824  1230  01EC               	clrf	((_spd+1)^(0+256)+10)
 11825  1231                     __ccov517_end_blk16:
 11826  1231                     __ccov518_start_blk17:
 11827  1231                     l861:
 11828  1231  1725               	bsf	(__ccovbit17_106/(0+8))^(0+256),__ccovbit17_106& (0+7)	;volatile
 11829  1232  0021               	movlb	1	; select bank1
 11830  1233  3180               	movlp	high __pjmp_tab__spd_init
 11831  1234  085A               	movf	?_spd_init^(0+128),w
 11832  1235  0082               	movwf	2
 11833  1236                     __end_of_spd_init:
 11834  1236                     
 11835                           	psect	jmp_tab__read_correction
 11836  228D                     __pjmp_tab__read_correction:
 11837  228D                     u9117jt:
 11838  228D  3191  29AA         	ljmp	u9117jf
 11839  228F                     u9147jt:
 11840  228F  3192  2A01         	ljmp	u9147jf
 11841                           
 11842                           	psect	text9
 11843  0A6B                     __ptext9:	
 11844 ;; *************** function _write_correction *****************
 11845 ;; Defined at:
 11846 ;;		line 107 in file "eeprom.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;  type            1   33[BANK1 ] enum E6817
 11849 ;;  value           2   34[BANK1 ] PTR void 
 11850 ;;		 -> read_correction@buffer(4), NULL(0), main@tmp(4), 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  i               1   42[BANK1 ] unsigned char 
 11853 ;;  i               1   41[BANK1 ] unsigned char 
 11854 ;;  i               1   40[BANK1 ] unsigned char 
 11855 ;;  buffer          4   45[BANK1 ] struct .
 11856 ;;  address         2   43[BANK1 ] unsigned short 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1   33[BANK1 ] void 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11866 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11867 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11868 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11869 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11870 ;;Total ram usage:       16 bytes
 11871 ;; Hardware stack levels required when called:   16
 11872 ;; This function calls:
 11873 ;;		_DATAEE_WriteByte
 11874 ;;		_puts
 11875 ;; This function is called by:
 11876 ;;		_main
 11877 ;;		_spd_init
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           
 11882                           ;psect for function _write_correction
 11883  0A6B                     _write_correction:
 11884                           
 11885                           ;incstack = 0
 11886                           ; Regs used in _write_correction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11887  0A6B  0021               	movlb	1	; select bank1
 11888  0A6C  00C4               	movwf	(?_write_correction+3)^(0+128)
 11889  0A6D                     l7294:
 11890                           
 11891                           ;eeprom.c: 107: void write_correction (enum corr_t type, void* value);eeprom.c: 108: {;e
      +                          eprom.c: 113:     } buffer;;eeprom.c: 115:     u16 address;;eeprom.c: 117:     switch (t
      +                          ype) {
 11892  0A6D  2B74               	goto	l7352
 11893  0A6E                     __ccov614_end_blk0:
 11894  0A6E                     __ccov615_start_blk2:
 11895  0A6E                     l7296:
 11896                           
 11897                           ;eeprom.c: 119:             address = 0x7010 + 0x00;
 11898  0A6E  3010               	movlw	16
 11899  0A6F  00CB               	movwf	write_correction@address^(0+128)
 11900  0A70  3070               	movlw	112
 11901  0A71  00CC               	movwf	(write_correction@address^(0+128)+1)
 11902  0A72                     __ccov615_end_blk2:
 11903  0A72                     __ccov616_start_blk3:
 11904  0A72                     l7298:
 11905                           
 11906                           ;eeprom.c: 120:             buffer.f_num = *(float*) value;
 11907  0A72  0842               	movf	write_correction@value^(0+128),w
 11908  0A73  0086               	movwf	6
 11909  0A74  0843               	movf	(write_correction@value+1)^(0+128),w
 11910  0A75  0087               	movwf	7
 11911  0A76  3F40               	moviw [0]fsr1
 11912  0A77  00CD               	movwf	write_correction@buffer^(0+128)
 11913  0A78  3F41               	moviw [1]fsr1
 11914  0A79  00CE               	movwf	(write_correction@buffer+1)^(0+128)
 11915  0A7A  3F42               	moviw [2]fsr1
 11916  0A7B  00CF               	movwf	(write_correction@buffer+2)^(0+128)
 11917  0A7C  3F43               	moviw [3]fsr1
 11918  0A7D  00D0               	movwf	(write_correction@buffer+3)^(0+128)
 11919  0A7E                     __ccov616_end_blk3:
 11920  0A7E                     __ccov617_start_blk4:
 11921  0A7E                     l7300:
 11922                           
 11923                           ;eeprom.c: 121:             for (u8 i = 0; i < sizeof(buffer); i++) {
 11924  0A7E  01C8               	clrf	write_correction@i^(0+128)
 11925  0A7F                     __ccov617_end_blk4:
 11926  0A7F                     __ccov618_start_blk8:
 11927  0A7F                     l7306:
 11928                           
 11929                           ;eeprom.c: 122:                 DATAEE_WriteByte (address + i, buffer.byte[i]);
 11930  0A7F  0848               	movf	write_correction@i^(0+128),w
 11931  0A80  074B               	addwf	write_correction@address^(0+128),w
 11932  0A81  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 11933  0A82  084C               	movf	(write_correction@address+1)^(0+128),w
 11934  0A83  1803               	skipnc
 11935  0A84  0A4C               	incf	(write_correction@address+1)^(0+128),w
 11936  0A85  00A9               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 11937  0A86  0848               	movf	write_correction@i^(0+128),w
 11938  0A87  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 11939  0A88  0086               	movwf	6
 11940  0A89  0187               	clrf	7
 11941  0A8A  0801               	movf	1,w
 11942  0A8B  00C5               	movwf	??_write_correction^(0+128)
 11943  0A8C  0845               	movf	??_write_correction^(0+128),w
 11944  0A8D  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 11945  0A8E  319B  2325  318A   	fcall	_DATAEE_WriteByte
 11946                           
 11947                           ;eeprom.c: 123:                 DATAEE_WriteByte (address + i + 0xE0, buffer.byte[i]);
 11948  0A91  0021               	movlb	1	; select bank1
 11949  0A92  0848               	movf	write_correction@i^(0+128),w
 11950  0A93  074B               	addwf	write_correction@address^(0+128),w
 11951  0A94  00C5               	movwf	??_write_correction^(0+128)
 11952  0A95  084C               	movf	(write_correction@address+1)^(0+128),w
 11953  0A96  1803               	skipnc
 11954  0A97  0A4C               	incf	(write_correction@address+1)^(0+128),w
 11955  0A98  00C6               	movwf	(??_write_correction^(0+128)+1)
 11956  0A99  0845               	movf	??_write_correction^(0+128),w
 11957  0A9A  3EE0               	addlw	224
 11958  0A9B  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 11959  0A9C  3000               	movlw	0
 11960  0A9D  3D46               	addwfc	(??_write_correction+1)^(0+128),w
 11961  0A9E  00A9               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+128)
 11962  0A9F  0848               	movf	write_correction@i^(0+128),w
 11963  0AA0  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 11964  0AA1  0086               	movwf	6
 11965  0AA2  0187               	clrf	7
 11966  0AA3  0801               	movf	1,w
 11967  0AA4  00C7               	movwf	(??_write_correction+2)^(0+128)
 11968  0AA5  0847               	movf	(??_write_correction+2)^(0+128),w
 11969  0AA6  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 11970  0AA7  319B  2325  318A   	fcall	_DATAEE_WriteByte
 11971  0AAA                     __ccov618_end_blk8:
 11972  0AAA                     __ccov619_start_blk9:
 11973  0AAA                     l7308:
 11974                           
 11975                           ;eeprom.c: 124:             }
 11976  0AAA  3001               	movlw	1
 11977  0AAB  0021               	movlb	1	; select bank1
 11978  0AAC  00C5               	movwf	??_write_correction^(0+128)
 11979  0AAD  0845               	movf	??_write_correction^(0+128),w
 11980  0AAE  07C8               	addwf	write_correction@i^(0+128),f
 11981  0AAF                     __ccov619_end_blk9:
 11982  0AAF                     __ccov620_start_blk10:
 11983  0AAF                     l7310:
 11984  0AAF  0022               	movlb	2	; select bank2
 11985  0AB0  1421               	bsf	(__ccovbit10_144/(0+8))^(0+256),__ccovbit10_144& (0+7)	;volatile
 11986  0AB1  3004               	movlw	4
 11987  0AB2  0021               	movlb	1	; select bank1
 11988  0AB3  0248               	subwf	write_correction@i^(0+128),w
 11989  0AB4  1C03               	skipc
 11990  0AB5  2AB7               	goto	u8701
 11991  0AB6  2AB8               	goto	u8700
 11992  0AB7                     u8701:
 11993  0AB7  2A7F               	goto	l7306
 11994  0AB8                     __ccov620_end_blk10:
 11995  0AB8                     u8700:
 11996  0AB8                     __ccov621_start_blk12:
 11997  0AB8                     l7312:
 11998  0AB8  0022               	movlb	2	; select bank2
 11999  0AB9  17A0               	bsf	(__ccovbit12_145/(0+8))^(0+256),__ccovbit12_145& (0+7)	;volatile
 12000                           
 12001                           ;eeprom.c: 126:             puts ("INFO: SPD_MUL_CORR SAVED AT EEPROM.");
 12002  0ABA  30D7               	movlw	low (STR_18| (0+32768))
 12003  0ABB  0021               	movlb	1	; select bank1
 12004  0ABC  00BB               	movwf	puts@s^(0+128)
 12005  0ABD  30A0               	movlw	high (STR_18| (0+32768))
 12006  0ABE  00BC               	movwf	(puts@s^(0+128)+1)
 12007  0ABF  3002               	movlw	low u8717jt
 12008  0AC0  319A  2A99         	ljmp	_puts
 12009  0AC2                     u8717jf:
 12010                           
 12011                           ;eeprom.c: 128:             break;
 12012  0AC2  2B87               	goto	l961
 12013  0AC3                     __ccov621_end_blk12:
 12014  0AC3                     __ccov622_start_blk14:
 12015  0AC3                     l7314:
 12016                           
 12017                           ;eeprom.c: 131:             address = 0x7010 + 0x10;
 12018  0AC3  3020               	movlw	32
 12019  0AC4  00CB               	movwf	write_correction@address^(0+128)
 12020  0AC5  3070               	movlw	112
 12021  0AC6  00CC               	movwf	(write_correction@address^(0+128)+1)
 12022  0AC7                     __ccov622_end_blk14:
 12023  0AC7                     __ccov623_start_blk15:
 12024  0AC7                     l7316:
 12025                           
 12026                           ;eeprom.c: 132:             buffer.s_num = *(u16*) value;
 12027  0AC7  0842               	movf	write_correction@value^(0+128),w
 12028  0AC8  0086               	movwf	6
 12029  0AC9  0843               	movf	(write_correction@value+1)^(0+128),w
 12030  0ACA  0087               	movwf	7
 12031  0ACB  3F40               	moviw [0]fsr1
 12032  0ACC  00CD               	movwf	write_correction@buffer^(0+128)
 12033  0ACD  3F41               	moviw [1]fsr1
 12034  0ACE  00CE               	movwf	(write_correction@buffer+1)^(0+128)
 12035  0ACF                     __ccov623_end_blk15:
 12036  0ACF                     __ccov624_start_blk16:
 12037  0ACF                     l7318:
 12038                           
 12039                           ;eeprom.c: 133:             for (u8 i = 0; i < sizeof(buffer.s_num); i++) {
 12040  0ACF  01C9               	clrf	write_correction@i_1585^(0+128)
 12041  0AD0                     __ccov624_end_blk16:
 12042  0AD0                     __ccov625_start_blk20:
 12043  0AD0                     l7324:
 12044                           
 12045                           ;eeprom.c: 134:                 DATAEE_WriteByte (address + i, buffer.byte[i]);
 12046  0AD0  0849               	movf	write_correction@i_1585^(0+128),w
 12047  0AD1  074B               	addwf	write_correction@address^(0+128),w
 12048  0AD2  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 12049  0AD3  084C               	movf	(write_correction@address+1)^(0+128),w
 12050  0AD4  1803               	skipnc
 12051  0AD5  0A4C               	incf	(write_correction@address+1)^(0+128),w
 12052  0AD6  00A9               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 12053  0AD7  0849               	movf	write_correction@i_1585^(0+128),w
 12054  0AD8  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 12055  0AD9  0086               	movwf	6
 12056  0ADA  0187               	clrf	7
 12057  0ADB  0801               	movf	1,w
 12058  0ADC  00C5               	movwf	??_write_correction^(0+128)
 12059  0ADD  0845               	movf	??_write_correction^(0+128),w
 12060  0ADE  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 12061  0ADF  319B  2325  318A   	fcall	_DATAEE_WriteByte
 12062                           
 12063                           ;eeprom.c: 135:                 DATAEE_WriteByte (address + i + 0xE0, buffer.byte[i]);
 12064  0AE2  0021               	movlb	1	; select bank1
 12065  0AE3  0849               	movf	write_correction@i_1585^(0+128),w
 12066  0AE4  074B               	addwf	write_correction@address^(0+128),w
 12067  0AE5  00C5               	movwf	??_write_correction^(0+128)
 12068  0AE6  084C               	movf	(write_correction@address+1)^(0+128),w
 12069  0AE7  1803               	skipnc
 12070  0AE8  0A4C               	incf	(write_correction@address+1)^(0+128),w
 12071  0AE9  00C6               	movwf	(??_write_correction^(0+128)+1)
 12072  0AEA  0845               	movf	??_write_correction^(0+128),w
 12073  0AEB  3EE0               	addlw	224
 12074  0AEC  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 12075  0AED  3000               	movlw	0
 12076  0AEE  3D46               	addwfc	(??_write_correction+1)^(0+128),w
 12077  0AEF  00A9               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+128)
 12078  0AF0  0849               	movf	write_correction@i_1585^(0+128),w
 12079  0AF1  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 12080  0AF2  0086               	movwf	6
 12081  0AF3  0187               	clrf	7
 12082  0AF4  0801               	movf	1,w
 12083  0AF5  00C7               	movwf	(??_write_correction+2)^(0+128)
 12084  0AF6  0847               	movf	(??_write_correction+2)^(0+128),w
 12085  0AF7  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 12086  0AF8  319B  2325  318A   	fcall	_DATAEE_WriteByte
 12087  0AFB                     __ccov625_end_blk20:
 12088  0AFB                     __ccov626_start_blk21:
 12089  0AFB                     l7326:
 12090                           
 12091                           ;eeprom.c: 136:             }
 12092  0AFB  3001               	movlw	1
 12093  0AFC  0021               	movlb	1	; select bank1
 12094  0AFD  00C5               	movwf	??_write_correction^(0+128)
 12095  0AFE  0845               	movf	??_write_correction^(0+128),w
 12096  0AFF  07C9               	addwf	write_correction@i_1585^(0+128),f
 12097  0B00                     __ccov626_end_blk21:
 12098  0B00                     __ccov627_start_blk22:
 12099  0B00                     l7328:
 12100  0B00  0022               	movlb	2	; select bank2
 12101  0B01  1720               	bsf	(__ccovbit22_146/(0+8))^(0+256),__ccovbit22_146& (0+7)	;volatile
 12102  0B02  3002               	movlw	2
 12103  0B03  0021               	movlb	1	; select bank1
 12104  0B04  0249               	subwf	write_correction@i_1585^(0+128),w
 12105  0B05  1C03               	skipc
 12106  0B06  2B08               	goto	u8721
 12107  0B07  2B09               	goto	u8720
 12108  0B08                     u8721:
 12109  0B08  2AD0               	goto	l7324
 12110  0B09                     __ccov627_end_blk22:
 12111  0B09                     u8720:
 12112  0B09                     __ccov628_start_blk24:
 12113  0B09                     l7330:
 12114  0B09  0022               	movlb	2	; select bank2
 12115  0B0A  16A0               	bsf	(__ccovbit24_147/(0+8))^(0+256),__ccovbit24_147& (0+7)	;volatile
 12116                           
 12117                           ;eeprom.c: 138:             puts ("INFO: SPD_ADD_CORR READED FROM EEPROM.");
 12118  0B0B  308A               	movlw	low (STR_19| (0+32768))
 12119  0B0C  0021               	movlb	1	; select bank1
 12120  0B0D  00BB               	movwf	puts@s^(0+128)
 12121  0B0E  30A0               	movlw	high (STR_19| (0+32768))
 12122  0B0F  00BC               	movwf	(puts@s^(0+128)+1)
 12123  0B10  3004               	movlw	low u8737jt
 12124  0B11  319A  2A99         	ljmp	_puts
 12125  0B13                     u8737jf:
 12126                           
 12127                           ;eeprom.c: 140:             break;
 12128  0B13  2B87               	goto	l961
 12129  0B14                     __ccov628_end_blk24:
 12130  0B14                     __ccov629_start_blk26:
 12131  0B14                     l7332:
 12132                           
 12133                           ;eeprom.c: 143:             address = 0x7010 + 0x20;
 12134  0B14  3030               	movlw	48
 12135  0B15  00CB               	movwf	write_correction@address^(0+128)
 12136  0B16  3070               	movlw	112
 12137  0B17  00CC               	movwf	(write_correction@address^(0+128)+1)
 12138  0B18                     __ccov629_end_blk26:
 12139  0B18                     __ccov630_start_blk27:
 12140  0B18                     l7334:
 12141                           
 12142                           ;eeprom.c: 144:             buffer.f_num = *(float*) value;
 12143  0B18  0842               	movf	write_correction@value^(0+128),w
 12144  0B19  0086               	movwf	6
 12145  0B1A  0843               	movf	(write_correction@value+1)^(0+128),w
 12146  0B1B  0087               	movwf	7
 12147  0B1C  3F40               	moviw [0]fsr1
 12148  0B1D  00CD               	movwf	write_correction@buffer^(0+128)
 12149  0B1E  3F41               	moviw [1]fsr1
 12150  0B1F  00CE               	movwf	(write_correction@buffer+1)^(0+128)
 12151  0B20  3F42               	moviw [2]fsr1
 12152  0B21  00CF               	movwf	(write_correction@buffer+2)^(0+128)
 12153  0B22  3F43               	moviw [3]fsr1
 12154  0B23  00D0               	movwf	(write_correction@buffer+3)^(0+128)
 12155  0B24                     __ccov630_end_blk27:
 12156  0B24                     __ccov631_start_blk28:
 12157  0B24                     l7336:
 12158                           
 12159                           ;eeprom.c: 145:             for (u8 i = 0; i < sizeof(buffer); i++) {
 12160  0B24  01CA               	clrf	write_correction@i_1587^(0+128)
 12161  0B25                     __ccov631_end_blk28:
 12162  0B25                     __ccov632_start_blk32:
 12163  0B25                     l7342:
 12164                           
 12165                           ;eeprom.c: 146:                 DATAEE_WriteByte (address + i, buffer.byte[i]);
 12166  0B25  084A               	movf	write_correction@i_1587^(0+128),w
 12167  0B26  074B               	addwf	write_correction@address^(0+128),w
 12168  0B27  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 12169  0B28  084C               	movf	(write_correction@address+1)^(0+128),w
 12170  0B29  1803               	skipnc
 12171  0B2A  0A4C               	incf	(write_correction@address+1)^(0+128),w
 12172  0B2B  00A9               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 12173  0B2C  084A               	movf	write_correction@i_1587^(0+128),w
 12174  0B2D  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 12175  0B2E  0086               	movwf	6
 12176  0B2F  0187               	clrf	7
 12177  0B30  0801               	movf	1,w
 12178  0B31  00C5               	movwf	??_write_correction^(0+128)
 12179  0B32  0845               	movf	??_write_correction^(0+128),w
 12180  0B33  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 12181  0B34  319B  2325  318A   	fcall	_DATAEE_WriteByte
 12182                           
 12183                           ;eeprom.c: 147:                 DATAEE_WriteByte (address + i + 0xE0, buffer.byte[i]);
 12184  0B37  0021               	movlb	1	; select bank1
 12185  0B38  084A               	movf	write_correction@i_1587^(0+128),w
 12186  0B39  074B               	addwf	write_correction@address^(0+128),w
 12187  0B3A  00C5               	movwf	??_write_correction^(0+128)
 12188  0B3B  084C               	movf	(write_correction@address+1)^(0+128),w
 12189  0B3C  1803               	skipnc
 12190  0B3D  0A4C               	incf	(write_correction@address+1)^(0+128),w
 12191  0B3E  00C6               	movwf	(??_write_correction^(0+128)+1)
 12192  0B3F  0845               	movf	??_write_correction^(0+128),w
 12193  0B40  3EE0               	addlw	224
 12194  0B41  00A8               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 12195  0B42  3000               	movlw	0
 12196  0B43  3D46               	addwfc	(??_write_correction+1)^(0+128),w
 12197  0B44  00A9               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+128)
 12198  0B45  084A               	movf	write_correction@i_1587^(0+128),w
 12199  0B46  3ECD               	addlw	(low (write_correction@buffer| 0))& (0+255)
 12200  0B47  0086               	movwf	6
 12201  0B48  0187               	clrf	7
 12202  0B49  0801               	movf	1,w
 12203  0B4A  00C7               	movwf	(??_write_correction+2)^(0+128)
 12204  0B4B  0847               	movf	(??_write_correction+2)^(0+128),w
 12205  0B4C  00AA               	movwf	DATAEE_WriteByte@bData^(0+128)
 12206  0B4D  319B  2325  318A   	fcall	_DATAEE_WriteByte
 12207  0B50                     __ccov632_end_blk32:
 12208  0B50                     __ccov633_start_blk33:
 12209  0B50                     l7344:
 12210                           
 12211                           ;eeprom.c: 148:             }
 12212  0B50  3001               	movlw	1
 12213  0B51  0021               	movlb	1	; select bank1
 12214  0B52  00C5               	movwf	??_write_correction^(0+128)
 12215  0B53  0845               	movf	??_write_correction^(0+128),w
 12216  0B54  07CA               	addwf	write_correction@i_1587^(0+128),f
 12217  0B55                     __ccov633_end_blk33:
 12218  0B55                     __ccov634_start_blk34:
 12219  0B55                     l7346:
 12220  0B55  0022               	movlb	2	; select bank2
 12221  0B56  1620               	bsf	(__ccovbit34_148/(0+8))^(0+256),__ccovbit34_148& (0+7)	;volatile
 12222  0B57  3004               	movlw	4
 12223  0B58  0021               	movlb	1	; select bank1
 12224  0B59  024A               	subwf	write_correction@i_1587^(0+128),w
 12225  0B5A  1C03               	skipc
 12226  0B5B  2B5D               	goto	u8741
 12227  0B5C  2B5E               	goto	u8740
 12228  0B5D                     u8741:
 12229  0B5D  2B25               	goto	l7342
 12230  0B5E                     __ccov634_end_blk34:
 12231  0B5E                     u8740:
 12232  0B5E                     __ccov635_start_blk36:
 12233  0B5E                     l7348:
 12234  0B5E  0022               	movlb	2	; select bank2
 12235  0B5F  15A0               	bsf	(__ccovbit36_149/(0+8))^(0+256),__ccovbit36_149& (0+7)	;volatile
 12236                           
 12237                           ;eeprom.c: 150:             puts ("INFO: FUEL_CORR SAVED AT EEPROM.");
 12238  0B60  301D               	movlw	low (STR_20| (0+32768))
 12239  0B61  0021               	movlb	1	; select bank1
 12240  0B62  00BB               	movwf	puts@s^(0+128)
 12241  0B63  30A1               	movlw	high (STR_20| (0+32768))
 12242  0B64  00BC               	movwf	(puts@s^(0+128)+1)
 12243  0B65  3006               	movlw	low u8757jt
 12244  0B66  319A  2A99         	ljmp	_puts
 12245  0B68                     u8757jf:
 12246                           
 12247                           ;eeprom.c: 152:             break;
 12248  0B68  2B87               	goto	l961
 12249  0B69                     __ccov635_end_blk36:
 12250  0B69                     __ccov636_start_blk38:
 12251  0B69                     l7350:
 12252  0B69  0022               	movlb	2	; select bank2
 12253  0B6A  1520               	bsf	(__ccovbit38_150/(0+8))^(0+256),__ccovbit38_150& (0+7)	;volatile
 12254                           
 12255                           ;eeprom.c: 155:             puts ("ERROR: READ_CORRECTION UNKNOWN TYPE IDENTIFIER ");
 12256  0B6B  3000               	movlw	low (STR_17| (0+32768))
 12257  0B6C  0021               	movlb	1	; select bank1
 12258  0B6D  00BB               	movwf	puts@s^(0+128)
 12259  0B6E  30A0               	movlw	high (STR_17| (0+32768))
 12260  0B6F  00BC               	movwf	(puts@s^(0+128)+1)
 12261  0B70  3008               	movlw	low u8767jt
 12262  0B71  319A  2A99         	ljmp	_puts
 12263  0B73                     u8767jf:
 12264                           
 12265                           ;eeprom.c: 156:     }
 12266  0B73  2B87               	goto	l961
 12267  0B74                     __ccov636_end_blk38:
 12268  0B74                     __ccov637_start_blk40:
 12269  0B74                     l7352:
 12270  0B74  0841               	movf	write_correction@type^(0+128),w
 12271  0B75  00C5               	movwf	??_write_correction^(0+128)
 12272  0B76  01C6               	clrf	(??_write_correction^(0+128)+1)
 12273                           
 12274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12275                           ; Switch size 1, requested type "simple"
 12276                           ; Number of cases is 1, Range of values is 0 to 0
 12277                           ; switch strategies available:
 12278                           ; Name         Instructions Cycles
 12279                           ; simple_byte            4     3 (average)
 12280                           ; direct_byte            8     6 (fixed)
 12281                           ; jumptable            260     6 (fixed)
 12282                           ;	Chosen strategy is simple_byte
 12283  0B77  0846               	movf	(??_write_correction+1)^(0+128),w
 12284  0B78  3A00               	xorlw	0	; case 0
 12285  0B79  1903               	skipnz
 12286  0B7A  2B7C               	goto	l8234
 12287  0B7B  2B69               	goto	l7350
 12288  0B7C                     l8234:
 12289                           
 12290                           ; Switch size 1, requested type "simple"
 12291                           ; Number of cases is 3, Range of values is 0 to 2
 12292                           ; switch strategies available:
 12293                           ; Name         Instructions Cycles
 12294                           ; simple_byte           10     6 (average)
 12295                           ; direct_byte           12     6 (fixed)
 12296                           ; jumptable            260     6 (fixed)
 12297                           ;	Chosen strategy is simple_byte
 12298  0B7C  0845               	movf	??_write_correction^(0+128),w
 12299  0B7D  3A00               	xorlw	0	; case 0
 12300  0B7E  1903               	skipnz
 12301  0B7F  2A6E               	goto	l7296
 12302  0B80  3A01               	xorlw	1	; case 1
 12303  0B81  1903               	skipnz
 12304  0B82  2AC3               	goto	l7314
 12305  0B83  3A03               	xorlw	3	; case 2
 12306  0B84  1903               	skipnz
 12307  0B85  2B14               	goto	l7332
 12308  0B86  2B69               	goto	l7350
 12309  0B87                     __ccov637_end_blk40:
 12310  0B87                     __ccov638_start_blk42:
 12311  0B87                     l961:
 12312  0B87  0022               	movlb	2	; select bank2
 12313  0B88  14A0               	bsf	(__ccovbit42_151/(0+8))^(0+256),__ccovbit42_151& (0+7)	;volatile
 12314  0B89  0021               	movlb	1	; select bank1
 12315  0B8A  31A2               	movlp	high __pjmp_tab__write_correction
 12316  0B8B  0844               	movf	(?_write_correction+3)^(0+128),w
 12317  0B8C  0082               	movwf	2
 12318  0B8D                     __end_of_write_correction:
 12319  0B8D                     
 12320                           	psect	text10
 12321  1B25                     __ptext10:	
 12322 ;; *************** function _DATAEE_WriteByte *****************
 12323 ;; Defined at:
 12324 ;;		line 180 in file "mcc_generated_files/memory.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  bAdd            2    8[BANK1 ] unsigned short 
 12327 ;;  bData           1   10[BANK1 ] unsigned char 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;  GIEBitValue     1   11[BANK1 ] unsigned char 
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  1    wreg      void 
 12332 ;; Registers used:
 12333 ;;		wreg, status,2, status,0
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12339 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12343 ;;Total ram usage:        4 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:   12
 12346 ;; This function calls:
 12347 ;;		Nothing
 12348 ;; This function is called by:
 12349 ;;		_write_correction
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           
 12354                           ;psect for function _DATAEE_WriteByte
 12355  1B25                     _DATAEE_WriteByte:
 12356                           
 12357                           ;incstack = 0
 12358                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12359  1B25                     l6818:
 12360                           
 12361                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12362  1B25  3000               	movlw	0
 12363  1B26  1B8B               	btfsc	11,7	;volatile
 12364  1B27  3001               	movlw	1
 12365  1B28  0021               	movlb	1	; select bank1
 12366  1B29  00AB               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12367                           
 12368                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12369  1B2A  0829               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 12370  1B2B  0031               	movlb	17	; select bank17
 12371  1B2C  0092               	movwf	18	;volatile
 12372  1B2D                     __ccov164_end_blk0:
 12373  1B2D                     __ccov165_start_blk1:
 12374  1B2D                     l6820:
 12375                           
 12376                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12377  1B2D  0021               	movlb	1	; select bank1
 12378  1B2E  0828               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 12379  1B2F  0031               	movlb	17	; select bank17
 12380  1B30  0091               	movwf	17	;volatile
 12381  1B31                     __ccov165_end_blk1:
 12382  1B31                     __ccov166_start_blk2:
 12383  1B31                     l6822:
 12384                           
 12385                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12386  1B31  0021               	movlb	1	; select bank1
 12387  1B32  082A               	movf	DATAEE_WriteByte@bData^(0+128),w
 12388  1B33  0031               	movlb	17	; select bank17
 12389  1B34  0093               	movwf	19	;volatile
 12390  1B35                     __ccov166_end_blk2:
 12391  1B35                     __ccov167_start_blk3:
 12392  1B35                     l6824:
 12393                           
 12394                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12395  1B35  1715               	bsf	21,6	;volsfr
 12396  1B36                     __ccov167_end_blk3:
 12397  1B36                     __ccov168_start_blk4:
 12398  1B36                     l6826:
 12399                           
 12400                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12401  1B36  1515               	bsf	21,2	;volsfr
 12402  1B37                     __ccov168_end_blk4:
 12403  1B37                     __ccov169_start_blk5:
 12404  1B37                     l6828:
 12405                           
 12406                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12407  1B37  138B               	bcf	11,7	;volatile
 12408  1B38                     __ccov169_end_blk5:
 12409  1B38                     __ccov170_start_blk6:
 12410  1B38                     l6830:
 12411                           
 12412                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12413  1B38  3055               	movlw	85
 12414  1B39  0096               	movwf	22	;volsfr
 12415  1B3A                     __ccov170_end_blk6:
 12416  1B3A                     __ccov171_start_blk7:
 12417  1B3A                     l6832:
 12418                           
 12419                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12420  1B3A  30AA               	movlw	170
 12421  1B3B  0096               	movwf	22	;volsfr
 12422  1B3C                     __ccov171_end_blk7:
 12423  1B3C                     __ccov172_start_blk8:
 12424  1B3C                     l6834:
 12425                           
 12426                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12427  1B3C  1495               	bsf	21,1	;volsfr
 12428  1B3D                     __ccov172_end_blk8:
 12429  1B3D                     __ccov173_start_blk10:
 12430  1B3D                     l298:	
 12431                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12432                           
 12433                           
 12434                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12435  1B3D  1895               	btfsc	21,1	;volsfr
 12436  1B3E  2B40               	goto	u8061
 12437  1B3F  2B41               	goto	u8060
 12438  1B40                     u8061:
 12439  1B40  2B3D               	goto	l298
 12440  1B41                     __ccov173_end_blk10:
 12441  1B41                     u8060:
 12442  1B41                     __ccov174_start_blk11:
 12443  1B41                     l300:
 12444                           
 12445                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12446  1B41  1115               	bcf	21,2	;volsfr
 12447  1B42                     __ccov174_end_blk11:
 12448  1B42                     __ccov175_start_blk12:
 12449  1B42                     l6836:
 12450                           
 12451                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12452  1B42  0021               	movlb	1	; select bank1
 12453  1B43  0C2B               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 12454  1B44  1C03               	skipc
 12455  1B45  138B               	bcf	11,7	;volatile
 12456  1B46  1803               	skipnc
 12457  1B47  178B               	bsf	11,7	;volatile
 12458  1B48                     __ccov175_end_blk12:
 12459  1B48                     __ccov176_start_blk13:
 12460  1B48                     l301:
 12461  1B48  16EA               	bsf	(__ccovbit13_27/(0+8))^(0+128),__ccovbit13_27& (0+7)	;volatile
 12462  1B49  0008               	return
 12463  1B4A                     __end_of_DATAEE_WriteByte:
 12464  1B4A                     
 12465                           	psect	text11
 12466  0E70                     __ptext11:	
 12467 ;; *************** function _read_correction *****************
 12468 ;; Defined at:
 12469 ;;		line 25 in file "eeprom.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  type            1   34[BANK1 ] enum E6817
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;  i               1   51[BANK1 ] unsigned char 
 12474 ;;  i               1   50[BANK1 ] unsigned char 
 12475 ;;  i               1   49[BANK1 ] unsigned char 
 12476 ;;  i               1   48[BANK1 ] unsigned char 
 12477 ;;  i               1   47[BANK1 ] unsigned char 
 12478 ;;  i               1   46[BANK1 ] unsigned char 
 12479 ;;  buffer          4   54[BANK1 ] struct .
 12480 ;;  tmp             4   42[BANK1 ] float 
 12481 ;;  address         2   52[BANK1 ] unsigned short 
 12482 ;;  s_tmp           2   39[BANK1 ] unsigned short 
 12483 ;;  return_ptr      1   41[BANK1 ] PTR void 
 12484 ;;		 -> read_correction@buffer(4), NULL(0), 
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1   34[BANK1 ] PTR void 
 12487 ;; Registers used:
 12488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12494 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12495 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12496 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12498 ;;Total ram usage:       24 bytes
 12499 ;; Hardware stack levels required when called:   16
 12500 ;; This function calls:
 12501 ;;		_DATAEE_ReadByte
 12502 ;;		___fleq
 12503 ;;		_eeprom_read_error_handler
 12504 ;;		_puts
 12505 ;; This function is called by:
 12506 ;;		_spd_init
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           
 12511                           ;psect for function _read_correction
 12512  0E70                     _read_correction:
 12513                           
 12514                           ;incstack = 0
 12515                           ; Regs used in _read_correction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12516  0E70  0021               	movlb	1	; select bank1
 12517  0E71  00C3               	movwf	(?_read_correction+1)^(0+128)
 12518  0E72                     l7430:
 12519                           
 12520                           ;eeprom.c: 25: void* read_correction (enum corr_t type);eeprom.c: 26: {;eeprom.c: 31:   
      +                            } buffer;;eeprom.c: 33:     u16 address;;eeprom.c: 34:     void* return_ptr = ((void*)
      +                          0);
 12521  0E72  01C9               	clrf	read_correction@return_ptr^(0+128)
 12522                           
 12523                           ;eeprom.c: 35:     float tmp;;eeprom.c: 36:     u16 s_tmp;;eeprom.c: 38:     switch (typ
      +                          e) {
 12524  0E73  2FE2               	goto	l7542
 12525  0E74                     __ccov571_end_blk0:
 12526  0E74                     __ccov572_start_blk2:
 12527  0E74                     l7432:
 12528                           
 12529                           ;eeprom.c: 40:             address = 0x7010 + 0x00;
 12530  0E74  3010               	movlw	16
 12531  0E75  00D4               	movwf	read_correction@address^(0+128)
 12532  0E76  3070               	movlw	112
 12533  0E77  00D5               	movwf	(read_correction@address^(0+128)+1)
 12534  0E78                     __ccov572_end_blk2:
 12535  0E78                     __ccov573_start_blk3:
 12536  0E78                     l7434:
 12537                           
 12538                           ;eeprom.c: 42:             for (u8 i = 0; i < sizeof(buffer); i++) {
 12539  0E78  01CE               	clrf	read_correction@i^(0+128)
 12540  0E79                     __ccov573_end_blk3:
 12541  0E79                     __ccov574_start_blk7:
 12542  0E79                     l7440:
 12543                           
 12544                           ;eeprom.c: 43:                 buffer.byte[i] = DATAEE_ReadByte (address + i);
 12545  0E79  084E               	movf	read_correction@i^(0+128),w
 12546  0E7A  0754               	addwf	read_correction@address^(0+128),w
 12547  0E7B  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12548  0E7C  0855               	movf	(read_correction@address+1)^(0+128),w
 12549  0E7D  1803               	skipnc
 12550  0E7E  0A55               	incf	(read_correction@address+1)^(0+128),w
 12551  0E7F  00A9               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 12552  0E80  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12553  0E83  0021               	movlb	1	; select bank1
 12554  0E84  00C4               	movwf	??_read_correction^(0+128)
 12555  0E85  084E               	movf	read_correction@i^(0+128),w
 12556  0E86  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12557  0E87  0086               	movwf	6
 12558  0E88  0187               	clrf	7
 12559  0E89  0844               	movf	??_read_correction^(0+128),w
 12560  0E8A  0081               	movwf	1
 12561  0E8B                     __ccov574_end_blk7:
 12562  0E8B                     __ccov575_start_blk8:
 12563  0E8B                     l7442:
 12564                           
 12565                           ;eeprom.c: 44:             }
 12566  0E8B  3001               	movlw	1
 12567  0E8C  00C4               	movwf	??_read_correction^(0+128)
 12568  0E8D  0844               	movf	??_read_correction^(0+128),w
 12569  0E8E  07CE               	addwf	read_correction@i^(0+128),f
 12570  0E8F                     __ccov575_end_blk8:
 12571  0E8F                     __ccov576_start_blk9:
 12572  0E8F                     l7444:
 12573  0E8F  0022               	movlb	2	; select bank2
 12574  0E90  1423               	bsf	(__ccovbit9_128/(0+8))^(0+256),__ccovbit9_128& (0+7)	;volatile
 12575  0E91  3004               	movlw	4
 12576  0E92  0021               	movlb	1	; select bank1
 12577  0E93  024E               	subwf	read_correction@i^(0+128),w
 12578  0E94  1C03               	skipc
 12579  0E95  2E97               	goto	u8861
 12580  0E96  2E98               	goto	u8860
 12581  0E97                     u8861:
 12582  0E97  2E79               	goto	l7440
 12583  0E98                     __ccov576_end_blk9:
 12584  0E98                     u8860:
 12585  0E98                     __ccov577_start_blk11:
 12586  0E98                     l7446:
 12587                           
 12588                           ;eeprom.c: 45:             tmp = buffer.f_num;
 12589  0E98  0859               	movf	(read_correction@buffer+3)^(0+128),w
 12590  0E99  00CD               	movwf	(read_correction@tmp+3)^(0+128)
 12591  0E9A  0858               	movf	(read_correction@buffer+2)^(0+128),w
 12592  0E9B  00CC               	movwf	(read_correction@tmp+2)^(0+128)
 12593  0E9C  0857               	movf	(read_correction@buffer+1)^(0+128),w
 12594  0E9D  00CB               	movwf	(read_correction@tmp+1)^(0+128)
 12595  0E9E  0856               	movf	read_correction@buffer^(0+128),w
 12596  0E9F  00CA               	movwf	read_correction@tmp^(0+128)
 12597  0EA0                     __ccov577_end_blk11:
 12598  0EA0                     __ccov578_start_blk12:
 12599  0EA0                     l7448:
 12600                           
 12601                           ;eeprom.c: 46:             for (u8 i = 0; i < sizeof(buffer); i++) {
 12602  0EA0  01CF               	clrf	read_correction@i_1564^(0+128)
 12603  0EA1                     __ccov578_end_blk12:
 12604  0EA1                     __ccov579_start_blk16:
 12605  0EA1                     l7454:
 12606                           
 12607                           ;eeprom.c: 47:                 buffer.byte[i] = DATAEE_ReadByte (address + i + 0xE0);
 12608  0EA1  084F               	movf	read_correction@i_1564^(0+128),w
 12609  0EA2  0754               	addwf	read_correction@address^(0+128),w
 12610  0EA3  00C4               	movwf	??_read_correction^(0+128)
 12611  0EA4  0855               	movf	(read_correction@address+1)^(0+128),w
 12612  0EA5  1803               	skipnc
 12613  0EA6  0A55               	incf	(read_correction@address+1)^(0+128),w
 12614  0EA7  00C5               	movwf	(??_read_correction^(0+128)+1)
 12615  0EA8  0844               	movf	??_read_correction^(0+128),w
 12616  0EA9  3EE0               	addlw	224
 12617  0EAA  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12618  0EAB  3000               	movlw	0
 12619  0EAC  3D45               	addwfc	(??_read_correction+1)^(0+128),w
 12620  0EAD  00A9               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
 12621  0EAE  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12622  0EB1  0021               	movlb	1	; select bank1
 12623  0EB2  00C6               	movwf	(??_read_correction+2)^(0+128)
 12624  0EB3  084F               	movf	read_correction@i_1564^(0+128),w
 12625  0EB4  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12626  0EB5  0086               	movwf	6
 12627  0EB6  0187               	clrf	7
 12628  0EB7  0846               	movf	(??_read_correction+2)^(0+128),w
 12629  0EB8  0081               	movwf	1
 12630  0EB9                     __ccov579_end_blk16:
 12631  0EB9                     __ccov580_start_blk17:
 12632  0EB9                     l7456:
 12633                           
 12634                           ;eeprom.c: 48:             }
 12635  0EB9  3001               	movlw	1
 12636  0EBA  00C4               	movwf	??_read_correction^(0+128)
 12637  0EBB  0844               	movf	??_read_correction^(0+128),w
 12638  0EBC  07CF               	addwf	read_correction@i_1564^(0+128),f
 12639  0EBD                     __ccov580_end_blk17:
 12640  0EBD                     __ccov581_start_blk18:
 12641  0EBD                     l7458:
 12642  0EBD  0022               	movlb	2	; select bank2
 12643  0EBE  17A2               	bsf	(__ccovbit18_129/(0+8))^(0+256),__ccovbit18_129& (0+7)	;volatile
 12644  0EBF  3004               	movlw	4
 12645  0EC0  0021               	movlb	1	; select bank1
 12646  0EC1  024F               	subwf	read_correction@i_1564^(0+128),w
 12647  0EC2  1C03               	skipc
 12648  0EC3  2EC5               	goto	u8871
 12649  0EC4  2EC6               	goto	u8870
 12650  0EC5                     u8871:
 12651  0EC5  2EA1               	goto	l7454
 12652  0EC6                     __ccov581_end_blk18:
 12653  0EC6                     u8870:
 12654  0EC6                     __ccov582_start_blk20:
 12655  0EC6                     l7460:
 12656  0EC6  0022               	movlb	2	; select bank2
 12657  0EC7  1722               	bsf	(__ccovbit20_130/(0+8))^(0+256),__ccovbit20_130& (0+7)	;volatile
 12658                           
 12659                           ;eeprom.c: 49:             if (buffer.f_num != tmp) {
 12660  0EC8  0021               	movlb	1	; select bank1
 12661  0EC9  0859               	movf	(read_correction@buffer+3)^(0+128),w
 12662  0ECA  00AB               	movwf	(___fleq@ff1+3)^(0+128)
 12663  0ECB  0858               	movf	(read_correction@buffer+2)^(0+128),w
 12664  0ECC  00AA               	movwf	(___fleq@ff1+2)^(0+128)
 12665  0ECD  0857               	movf	(read_correction@buffer+1)^(0+128),w
 12666  0ECE  00A9               	movwf	(___fleq@ff1+1)^(0+128)
 12667  0ECF  0856               	movf	read_correction@buffer^(0+128),w
 12668  0ED0  00A8               	movwf	___fleq@ff1^(0+128)
 12669  0ED1  084D               	movf	(read_correction@tmp+3)^(0+128),w
 12670  0ED2  00AF               	movwf	(___fleq@ff2+3)^(0+128)
 12671  0ED3  084C               	movf	(read_correction@tmp+2)^(0+128),w
 12672  0ED4  00AE               	movwf	(___fleq@ff2+2)^(0+128)
 12673  0ED5  084B               	movf	(read_correction@tmp+1)^(0+128),w
 12674  0ED6  00AD               	movwf	(___fleq@ff2+1)^(0+128)
 12675  0ED7  084A               	movf	read_correction@tmp^(0+128),w
 12676  0ED8  00AC               	movwf	___fleq@ff2^(0+128)
 12677  0ED9  319E  264B  318E   	fcall	___fleq
 12678  0EDC  1803               	btfsc	3,0
 12679  0EDD  2EDF               	goto	u8881
 12680  0EDE  2EE0               	goto	u8880
 12681  0EDF                     u8881:
 12682  0EDF  2EE6               	goto	l7464
 12683  0EE0                     __ccov582_end_blk20:
 12684  0EE0                     u8880:
 12685  0EE0                     __ccov583_start_blk21:
 12686  0EE0                     l7462:
 12687  0EE0  0022               	movlb	2	; select bank2
 12688  0EE1  16A2               	bsf	(__ccovbit21_131/(0+8))^(0+256),__ccovbit21_131& (0+7)	;volatile
 12689  0EE2  3091               	movlw	low u8897jt
 12690  0EE3  31A7  2FAE         	ljmp	_eeprom_read_error_handler
 12691  0EE5                     u8897jf:
 12692                           
 12693                           ;eeprom.c: 51:             } else {
 12694  0EE5  2FF5               	goto	l7544
 12695  0EE6                     __ccov583_end_blk21:
 12696  0EE6                     __ccov584_start_blk23:
 12697  0EE6                     l7464:
 12698  0EE6  0022               	movlb	2	; select bank2
 12699  0EE7  1622               	bsf	(__ccovbit23_132/(0+8))^(0+256),__ccovbit23_132& (0+7)	;volatile
 12700                           
 12701                           ;eeprom.c: 53:             puts ("INFO: SPD_MUL_CORR READ SUCCESS.");
 12702  0EE8  305F               	movlw	low (STR_14| (0+32768))
 12703  0EE9  0021               	movlb	1	; select bank1
 12704  0EEA  00BB               	movwf	puts@s^(0+128)
 12705  0EEB  30A1               	movlw	high (STR_14| (0+32768))
 12706  0EEC  00BC               	movwf	(puts@s^(0+128)+1)
 12707  0EED  300A               	movlw	low u8907jt
 12708  0EEE  319A  2A99         	ljmp	_puts
 12709  0EF0                     __ccov584_end_blk23:
 12710  0EF0                     u8907jf:
 12711  0EF0                     __ccov585_start_blk24:
 12712  0EF0                     l7466:
 12713  0EF0  0022               	movlb	2	; select bank2
 12714  0EF1  15A2               	bsf	(__ccovbit24_133/(0+8))^(0+256),__ccovbit24_133& (0+7)	;volatile
 12715                           
 12716                           ;eeprom.c: 55:                 return_ptr = &buffer.f_num;
 12717  0EF2  30D6               	movlw	(low (read_correction@buffer| 0))& (0+255)
 12718  0EF3  0021               	movlb	1	; select bank1
 12719  0EF4  00C4               	movwf	??_read_correction^(0+128)
 12720  0EF5  0844               	movf	??_read_correction^(0+128),w
 12721  0EF6  00C9               	movwf	read_correction@return_ptr^(0+128)
 12722  0EF7  2FF5               	goto	l7544
 12723  0EF8                     __ccov585_end_blk24:
 12724  0EF8                     __ccov586_start_blk27:
 12725  0EF8                     l7468:
 12726                           
 12727                           ;eeprom.c: 60:             address = 0x7010 + 0x10;
 12728  0EF8  3020               	movlw	32
 12729  0EF9  00D4               	movwf	read_correction@address^(0+128)
 12730  0EFA  3070               	movlw	112
 12731  0EFB  00D5               	movwf	(read_correction@address^(0+128)+1)
 12732  0EFC                     __ccov586_end_blk27:
 12733  0EFC                     __ccov587_start_blk28:
 12734  0EFC                     l7470:
 12735                           
 12736                           ;eeprom.c: 62:             for (u8 i = 0; i < sizeof(buffer.s_num); i++) {
 12737  0EFC  01D0               	clrf	read_correction@i_1567^(0+128)
 12738  0EFD                     __ccov587_end_blk28:
 12739  0EFD                     __ccov588_start_blk32:
 12740  0EFD                     l7476:
 12741                           
 12742                           ;eeprom.c: 63:                 buffer.byte[i] = DATAEE_ReadByte (address + i);
 12743  0EFD  0850               	movf	read_correction@i_1567^(0+128),w
 12744  0EFE  0754               	addwf	read_correction@address^(0+128),w
 12745  0EFF  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12746  0F00  0855               	movf	(read_correction@address+1)^(0+128),w
 12747  0F01  1803               	skipnc
 12748  0F02  0A55               	incf	(read_correction@address+1)^(0+128),w
 12749  0F03  00A9               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 12750  0F04  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12751  0F07  0021               	movlb	1	; select bank1
 12752  0F08  00C4               	movwf	??_read_correction^(0+128)
 12753  0F09  0850               	movf	read_correction@i_1567^(0+128),w
 12754  0F0A  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12755  0F0B  0086               	movwf	6
 12756  0F0C  0187               	clrf	7
 12757  0F0D  0844               	movf	??_read_correction^(0+128),w
 12758  0F0E  0081               	movwf	1
 12759  0F0F                     __ccov588_end_blk32:
 12760  0F0F                     __ccov589_start_blk33:
 12761  0F0F                     l7478:
 12762                           
 12763                           ;eeprom.c: 64:             }
 12764  0F0F  3001               	movlw	1
 12765  0F10  00C4               	movwf	??_read_correction^(0+128)
 12766  0F11  0844               	movf	??_read_correction^(0+128),w
 12767  0F12  07D0               	addwf	read_correction@i_1567^(0+128),f
 12768  0F13                     __ccov589_end_blk33:
 12769  0F13                     __ccov590_start_blk34:
 12770  0F13                     l7480:
 12771  0F13  0022               	movlb	2	; select bank2
 12772  0F14  1522               	bsf	(__ccovbit34_134/(0+8))^(0+256),__ccovbit34_134& (0+7)	;volatile
 12773  0F15  3002               	movlw	2
 12774  0F16  0021               	movlb	1	; select bank1
 12775  0F17  0250               	subwf	read_correction@i_1567^(0+128),w
 12776  0F18  1C03               	skipc
 12777  0F19  2F1B               	goto	u8911
 12778  0F1A  2F1C               	goto	u8910
 12779  0F1B                     u8911:
 12780  0F1B  2EFD               	goto	l7476
 12781  0F1C                     __ccov590_end_blk34:
 12782  0F1C                     u8910:
 12783  0F1C                     __ccov591_start_blk36:
 12784  0F1C                     l7482:
 12785                           
 12786                           ;eeprom.c: 65:             s_tmp = buffer.s_num;
 12787  0F1C  0857               	movf	(read_correction@buffer+1)^(0+128),w
 12788  0F1D  00C8               	movwf	(read_correction@s_tmp+1)^(0+128)
 12789  0F1E  0856               	movf	read_correction@buffer^(0+128),w
 12790  0F1F  00C7               	movwf	read_correction@s_tmp^(0+128)
 12791  0F20                     __ccov591_end_blk36:
 12792  0F20                     __ccov592_start_blk37:
 12793  0F20                     l7484:
 12794                           
 12795                           ;eeprom.c: 66:             for (u8 i = 0; i < sizeof(buffer.s_num); i++) {
 12796  0F20  01D1               	clrf	read_correction@i_1568^(0+128)
 12797  0F21                     __ccov592_end_blk37:
 12798  0F21                     __ccov593_start_blk41:
 12799  0F21                     l7490:
 12800                           
 12801                           ;eeprom.c: 67:                 buffer.byte[i] = DATAEE_ReadByte (address + i + 0xE0);
 12802  0F21  0851               	movf	read_correction@i_1568^(0+128),w
 12803  0F22  0754               	addwf	read_correction@address^(0+128),w
 12804  0F23  00C4               	movwf	??_read_correction^(0+128)
 12805  0F24  0855               	movf	(read_correction@address+1)^(0+128),w
 12806  0F25  1803               	skipnc
 12807  0F26  0A55               	incf	(read_correction@address+1)^(0+128),w
 12808  0F27  00C5               	movwf	(??_read_correction^(0+128)+1)
 12809  0F28  0844               	movf	??_read_correction^(0+128),w
 12810  0F29  3EE0               	addlw	224
 12811  0F2A  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12812  0F2B  3000               	movlw	0
 12813  0F2C  3D45               	addwfc	(??_read_correction+1)^(0+128),w
 12814  0F2D  00A9               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
 12815  0F2E  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12816  0F31  0021               	movlb	1	; select bank1
 12817  0F32  00C6               	movwf	(??_read_correction+2)^(0+128)
 12818  0F33  0851               	movf	read_correction@i_1568^(0+128),w
 12819  0F34  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12820  0F35  0086               	movwf	6
 12821  0F36  0187               	clrf	7
 12822  0F37  0846               	movf	(??_read_correction+2)^(0+128),w
 12823  0F38  0081               	movwf	1
 12824  0F39                     __ccov593_end_blk41:
 12825  0F39                     __ccov594_start_blk42:
 12826  0F39                     l7492:
 12827                           
 12828                           ;eeprom.c: 68:             }
 12829  0F39  3001               	movlw	1
 12830  0F3A  00C4               	movwf	??_read_correction^(0+128)
 12831  0F3B  0844               	movf	??_read_correction^(0+128),w
 12832  0F3C  07D1               	addwf	read_correction@i_1568^(0+128),f
 12833  0F3D                     __ccov594_end_blk42:
 12834  0F3D                     __ccov595_start_blk43:
 12835  0F3D                     l7494:
 12836  0F3D  0022               	movlb	2	; select bank2
 12837  0F3E  14A2               	bsf	(__ccovbit43_135/(0+8))^(0+256),__ccovbit43_135& (0+7)	;volatile
 12838  0F3F  3002               	movlw	2
 12839  0F40  0021               	movlb	1	; select bank1
 12840  0F41  0251               	subwf	read_correction@i_1568^(0+128),w
 12841  0F42  1C03               	skipc
 12842  0F43  2F45               	goto	u8921
 12843  0F44  2F46               	goto	u8920
 12844  0F45                     u8921:
 12845  0F45  2F21               	goto	l7490
 12846  0F46                     __ccov595_end_blk43:
 12847  0F46                     u8920:
 12848  0F46                     __ccov596_start_blk45:
 12849  0F46                     l7496:
 12850  0F46  0022               	movlb	2	; select bank2
 12851  0F47  1422               	bsf	(__ccovbit45_136/(0+8))^(0+256),__ccovbit45_136& (0+7)	;volatile
 12852                           
 12853                           ;eeprom.c: 69:             if (buffer.s_num != s_tmp) {
 12854  0F48  0021               	movlb	1	; select bank1
 12855  0F49  0848               	movf	(read_correction@s_tmp+1)^(0+128),w
 12856  0F4A  0657               	xorwf	(read_correction@buffer+1)^(0+128),w
 12857  0F4B  1D03               	skipz
 12858  0F4C  2F4F               	goto	u8935
 12859  0F4D  0847               	movf	read_correction@s_tmp^(0+128),w
 12860  0F4E  0656               	xorwf	read_correction@buffer^(0+128),w
 12861  0F4F                     u8935:
 12862  0F4F  1903               	skipnz
 12863  0F50  2F52               	goto	u8931
 12864  0F51  2F53               	goto	u8930
 12865  0F52                     u8931:
 12866  0F52  2F54               	goto	l7500
 12867  0F53                     u8930:
 12868  0F53  2EE0               	goto	l7462
 12869  0F54                     __ccov596_end_blk45:
 12870  0F54                     __ccov597_start_blk48:
 12871  0F54                     l7500:
 12872  0F54  0022               	movlb	2	; select bank2
 12873  0F55  17A1               	bsf	(__ccovbit48_137/(0+8))^(0+256),__ccovbit48_137& (0+7)	;volatile
 12874                           
 12875                           ;eeprom.c: 73:             puts ("INFO: SPD_ADD_CORR READ SUCCESS.");
 12876  0F56  303E               	movlw	low (STR_15| (0+32768))
 12877  0F57  0021               	movlb	1	; select bank1
 12878  0F58  00BB               	movwf	puts@s^(0+128)
 12879  0F59  30A1               	movlw	high (STR_15| (0+32768))
 12880  0F5A  00BC               	movwf	(puts@s^(0+128)+1)
 12881  0F5B  300C               	movlw	low u8947jt
 12882  0F5C  319A  2A99         	ljmp	_puts
 12883  0F5E                     u8947jf:
 12884  0F5E  2EF0               	goto	l7466
 12885  0F5F                     __ccov597_end_blk48:
 12886  0F5F                     __ccov598_start_blk52:
 12887  0F5F                     l7504:
 12888                           
 12889                           ;eeprom.c: 80:             address = 0x7010 + 0x20;
 12890  0F5F  3030               	movlw	48
 12891  0F60  00D4               	movwf	read_correction@address^(0+128)
 12892  0F61  3070               	movlw	112
 12893  0F62  00D5               	movwf	(read_correction@address^(0+128)+1)
 12894  0F63                     __ccov598_end_blk52:
 12895  0F63                     __ccov599_start_blk53:
 12896  0F63                     l7506:
 12897                           
 12898                           ;eeprom.c: 82:             for (u8 i = 0; i < sizeof(buffer); i++) {
 12899  0F63  01D2               	clrf	read_correction@i_1570^(0+128)
 12900  0F64                     __ccov599_end_blk53:
 12901  0F64                     __ccov600_start_blk57:
 12902  0F64                     l7512:
 12903                           
 12904                           ;eeprom.c: 83:                 buffer.byte[i] = DATAEE_ReadByte (address + i);
 12905  0F64  0852               	movf	read_correction@i_1570^(0+128),w
 12906  0F65  0754               	addwf	read_correction@address^(0+128),w
 12907  0F66  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12908  0F67  0855               	movf	(read_correction@address+1)^(0+128),w
 12909  0F68  1803               	skipnc
 12910  0F69  0A55               	incf	(read_correction@address+1)^(0+128),w
 12911  0F6A  00A9               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 12912  0F6B  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12913  0F6E  0021               	movlb	1	; select bank1
 12914  0F6F  00C4               	movwf	??_read_correction^(0+128)
 12915  0F70  0852               	movf	read_correction@i_1570^(0+128),w
 12916  0F71  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12917  0F72  0086               	movwf	6
 12918  0F73  0187               	clrf	7
 12919  0F74  0844               	movf	??_read_correction^(0+128),w
 12920  0F75  0081               	movwf	1
 12921  0F76                     __ccov600_end_blk57:
 12922  0F76                     __ccov601_start_blk58:
 12923  0F76                     l7514:
 12924                           
 12925                           ;eeprom.c: 84:             }
 12926  0F76  3001               	movlw	1
 12927  0F77  00C4               	movwf	??_read_correction^(0+128)
 12928  0F78  0844               	movf	??_read_correction^(0+128),w
 12929  0F79  07D2               	addwf	read_correction@i_1570^(0+128),f
 12930  0F7A                     __ccov601_end_blk58:
 12931  0F7A                     __ccov602_start_blk59:
 12932  0F7A                     l7516:
 12933  0F7A  0022               	movlb	2	; select bank2
 12934  0F7B  1721               	bsf	(__ccovbit59_138/(0+8))^(0+256),__ccovbit59_138& (0+7)	;volatile
 12935  0F7C  3004               	movlw	4
 12936  0F7D  0021               	movlb	1	; select bank1
 12937  0F7E  0252               	subwf	read_correction@i_1570^(0+128),w
 12938  0F7F  1C03               	skipc
 12939  0F80  2F82               	goto	u8951
 12940  0F81  2F83               	goto	u8950
 12941  0F82                     u8951:
 12942  0F82  2F64               	goto	l7512
 12943  0F83                     __ccov602_end_blk59:
 12944  0F83                     u8950:
 12945  0F83                     __ccov603_start_blk61:
 12946  0F83                     l7518:
 12947                           
 12948                           ;eeprom.c: 85:             tmp = buffer.f_num;
 12949  0F83  0859               	movf	(read_correction@buffer+3)^(0+128),w
 12950  0F84  00CD               	movwf	(read_correction@tmp+3)^(0+128)
 12951  0F85  0858               	movf	(read_correction@buffer+2)^(0+128),w
 12952  0F86  00CC               	movwf	(read_correction@tmp+2)^(0+128)
 12953  0F87  0857               	movf	(read_correction@buffer+1)^(0+128),w
 12954  0F88  00CB               	movwf	(read_correction@tmp+1)^(0+128)
 12955  0F89  0856               	movf	read_correction@buffer^(0+128),w
 12956  0F8A  00CA               	movwf	read_correction@tmp^(0+128)
 12957  0F8B                     __ccov603_end_blk61:
 12958  0F8B                     __ccov604_start_blk62:
 12959  0F8B                     l7520:
 12960                           
 12961                           ;eeprom.c: 86:             for (u8 i = 0; i < sizeof(buffer); i++) {
 12962  0F8B  01D3               	clrf	read_correction@i_1571^(0+128)
 12963  0F8C                     __ccov604_end_blk62:
 12964  0F8C                     __ccov605_start_blk66:
 12965  0F8C                     l7526:
 12966                           
 12967                           ;eeprom.c: 87:                 buffer.byte[i] = DATAEE_ReadByte (address + i + 0xE0);
 12968  0F8C  0853               	movf	read_correction@i_1571^(0+128),w
 12969  0F8D  0754               	addwf	read_correction@address^(0+128),w
 12970  0F8E  00C4               	movwf	??_read_correction^(0+128)
 12971  0F8F  0855               	movf	(read_correction@address+1)^(0+128),w
 12972  0F90  1803               	skipnc
 12973  0F91  0A55               	incf	(read_correction@address+1)^(0+128),w
 12974  0F92  00C5               	movwf	(??_read_correction^(0+128)+1)
 12975  0F93  0844               	movf	??_read_correction^(0+128),w
 12976  0F94  3EE0               	addlw	224
 12977  0F95  00A8               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 12978  0F96  3000               	movlw	0
 12979  0F97  3D45               	addwfc	(??_read_correction+1)^(0+128),w
 12980  0F98  00A9               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
 12981  0F99  3198  2021  318E   	fcall	_DATAEE_ReadByte
 12982  0F9C  0021               	movlb	1	; select bank1
 12983  0F9D  00C6               	movwf	(??_read_correction+2)^(0+128)
 12984  0F9E  0853               	movf	read_correction@i_1571^(0+128),w
 12985  0F9F  3ED6               	addlw	(low (read_correction@buffer| 0))& (0+255)
 12986  0FA0  0086               	movwf	6
 12987  0FA1  0187               	clrf	7
 12988  0FA2  0846               	movf	(??_read_correction+2)^(0+128),w
 12989  0FA3  0081               	movwf	1
 12990  0FA4                     __ccov605_end_blk66:
 12991  0FA4                     __ccov606_start_blk67:
 12992  0FA4                     l7528:
 12993                           
 12994                           ;eeprom.c: 88:             }
 12995  0FA4  3001               	movlw	1
 12996  0FA5  00C4               	movwf	??_read_correction^(0+128)
 12997  0FA6  0844               	movf	??_read_correction^(0+128),w
 12998  0FA7  07D3               	addwf	read_correction@i_1571^(0+128),f
 12999  0FA8                     __ccov606_end_blk67:
 13000  0FA8                     __ccov607_start_blk68:
 13001  0FA8                     l7530:
 13002  0FA8  0022               	movlb	2	; select bank2
 13003  0FA9  16A1               	bsf	(__ccovbit68_139/(0+8))^(0+256),__ccovbit68_139& (0+7)	;volatile
 13004  0FAA  3004               	movlw	4
 13005  0FAB  0021               	movlb	1	; select bank1
 13006  0FAC  0253               	subwf	read_correction@i_1571^(0+128),w
 13007  0FAD  1C03               	skipc
 13008  0FAE  2FB0               	goto	u8961
 13009  0FAF  2FB1               	goto	u8960
 13010  0FB0                     u8961:
 13011  0FB0  2F8C               	goto	l7526
 13012  0FB1                     __ccov607_end_blk68:
 13013  0FB1                     u8960:
 13014  0FB1                     __ccov608_start_blk70:
 13015  0FB1                     l7532:
 13016  0FB1  0022               	movlb	2	; select bank2
 13017  0FB2  1621               	bsf	(__ccovbit70_140/(0+8))^(0+256),__ccovbit70_140& (0+7)	;volatile
 13018                           
 13019                           ;eeprom.c: 89:             if (buffer.f_num != tmp) {
 13020  0FB3  0021               	movlb	1	; select bank1
 13021  0FB4  0859               	movf	(read_correction@buffer+3)^(0+128),w
 13022  0FB5  00AB               	movwf	(___fleq@ff1+3)^(0+128)
 13023  0FB6  0858               	movf	(read_correction@buffer+2)^(0+128),w
 13024  0FB7  00AA               	movwf	(___fleq@ff1+2)^(0+128)
 13025  0FB8  0857               	movf	(read_correction@buffer+1)^(0+128),w
 13026  0FB9  00A9               	movwf	(___fleq@ff1+1)^(0+128)
 13027  0FBA  0856               	movf	read_correction@buffer^(0+128),w
 13028  0FBB  00A8               	movwf	___fleq@ff1^(0+128)
 13029  0FBC  084D               	movf	(read_correction@tmp+3)^(0+128),w
 13030  0FBD  00AF               	movwf	(___fleq@ff2+3)^(0+128)
 13031  0FBE  084C               	movf	(read_correction@tmp+2)^(0+128),w
 13032  0FBF  00AE               	movwf	(___fleq@ff2+2)^(0+128)
 13033  0FC0  084B               	movf	(read_correction@tmp+1)^(0+128),w
 13034  0FC1  00AD               	movwf	(___fleq@ff2+1)^(0+128)
 13035  0FC2  084A               	movf	read_correction@tmp^(0+128),w
 13036  0FC3  00AC               	movwf	___fleq@ff2^(0+128)
 13037  0FC4  319E  264B  318E   	fcall	___fleq
 13038  0FC7  1803               	btfsc	3,0
 13039  0FC8  2FCA               	goto	u8971
 13040  0FC9  2FCB               	goto	u8970
 13041  0FCA                     u8971:
 13042  0FCA  2FCC               	goto	l7536
 13043  0FCB                     u8970:
 13044  0FCB  2EE0               	goto	l7462
 13045  0FCC                     __ccov608_end_blk70:
 13046  0FCC                     __ccov609_start_blk73:
 13047  0FCC                     l7536:
 13048  0FCC  0022               	movlb	2	; select bank2
 13049  0FCD  15A1               	bsf	(__ccovbit73_141/(0+8))^(0+256),__ccovbit73_141& (0+7)	;volatile
 13050                           
 13051                           ;eeprom.c: 93:             puts ("INFO: FUEL_CORR READ SUCCESS.");
 13052  0FCE  309F               	movlw	low (STR_16| (0+32768))
 13053  0FCF  0021               	movlb	1	; select bank1
 13054  0FD0  00BB               	movwf	puts@s^(0+128)
 13055  0FD1  30A1               	movlw	high (STR_16| (0+32768))
 13056  0FD2  00BC               	movwf	(puts@s^(0+128)+1)
 13057  0FD3  300E               	movlw	low u8987jt
 13058  0FD4  319A  2A99         	ljmp	_puts
 13059  0FD6                     u8987jf:
 13060  0FD6  2EF0               	goto	l7466
 13061  0FD7                     __ccov609_end_blk73:
 13062  0FD7                     __ccov610_start_blk77:
 13063  0FD7                     l7540:
 13064  0FD7  0022               	movlb	2	; select bank2
 13065  0FD8  1521               	bsf	(__ccovbit77_142/(0+8))^(0+256),__ccovbit77_142& (0+7)	;volatile
 13066                           
 13067                           ;eeprom.c: 100:             puts ("ERROR: READ_CORRECTION UNKNOWN TYPE IDENTIFIER ");
 13068  0FD9  3000               	movlw	low (STR_17| (0+32768))
 13069  0FDA  0021               	movlb	1	; select bank1
 13070  0FDB  00BB               	movwf	puts@s^(0+128)
 13071  0FDC  30A0               	movlw	high (STR_17| (0+32768))
 13072  0FDD  00BC               	movwf	(puts@s^(0+128)+1)
 13073  0FDE  3010               	movlw	low u8997jt
 13074  0FDF  319A  2A99         	ljmp	_puts
 13075  0FE1                     u8997jf:
 13076                           
 13077                           ;eeprom.c: 101:     }
 13078  0FE1  2FF5               	goto	l7544
 13079  0FE2                     __ccov610_end_blk77:
 13080  0FE2                     __ccov611_start_blk79:
 13081  0FE2                     l7542:
 13082  0FE2  0842               	movf	read_correction@type^(0+128),w
 13083  0FE3  00C4               	movwf	??_read_correction^(0+128)
 13084  0FE4  01C5               	clrf	(??_read_correction^(0+128)+1)
 13085                           
 13086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13087                           ; Switch size 1, requested type "simple"
 13088                           ; Number of cases is 1, Range of values is 0 to 0
 13089                           ; switch strategies available:
 13090                           ; Name         Instructions Cycles
 13091                           ; simple_byte            4     3 (average)
 13092                           ; direct_byte            8     6 (fixed)
 13093                           ; jumptable            260     6 (fixed)
 13094                           ;	Chosen strategy is simple_byte
 13095  0FE5  0845               	movf	(??_read_correction+1)^(0+128),w
 13096  0FE6  3A00               	xorlw	0	; case 0
 13097  0FE7  1903               	skipnz
 13098  0FE8  2FEA               	goto	l8236
 13099  0FE9  2FD7               	goto	l7540
 13100  0FEA                     l8236:
 13101                           
 13102                           ; Switch size 1, requested type "simple"
 13103                           ; Number of cases is 3, Range of values is 0 to 2
 13104                           ; switch strategies available:
 13105                           ; Name         Instructions Cycles
 13106                           ; simple_byte           10     6 (average)
 13107                           ; direct_byte           12     6 (fixed)
 13108                           ; jumptable            260     6 (fixed)
 13109                           ;	Chosen strategy is simple_byte
 13110  0FEA  0844               	movf	??_read_correction^(0+128),w
 13111  0FEB  3A00               	xorlw	0	; case 0
 13112  0FEC  1903               	skipnz
 13113  0FED  2E74               	goto	l7432
 13114  0FEE  3A01               	xorlw	1	; case 1
 13115  0FEF  1903               	skipnz
 13116  0FF0  2EF8               	goto	l7468
 13117  0FF1  3A03               	xorlw	3	; case 2
 13118  0FF2  1903               	skipnz
 13119  0FF3  2F5F               	goto	l7504
 13120  0FF4  2FD7               	goto	l7540
 13121  0FF5                     __ccov611_end_blk79:
 13122  0FF5                     __ccov612_start_blk81:
 13123  0FF5                     l7544:
 13124                           
 13125                           ;eeprom.c: 103:     return return_ptr;
 13126  0FF5  0021               	movlb	1	; select bank1
 13127  0FF6  0849               	movf	read_correction@return_ptr^(0+128),w
 13128  0FF7  00C4               	movwf	??_read_correction^(0+128)
 13129  0FF8  0844               	movf	??_read_correction^(0+128),w
 13130  0FF9  00C2               	movwf	?_read_correction^(0+128)
 13131  0FFA                     __ccov612_end_blk81:
 13132  0FFA                     __ccov613_start_blk83:
 13133  0FFA                     l946:
 13134  0FFA  0022               	movlb	2	; select bank2
 13135  0FFB  14A1               	bsf	(__ccovbit83_143/(0+8))^(0+256),__ccovbit83_143& (0+7)	;volatile
 13136  0FFC  0021               	movlb	1	; select bank1
 13137  0FFD  31A2               	movlp	high __pjmp_tab__read_correction
 13138  0FFE  0843               	movf	(?_read_correction+1)^(0+128),w
 13139  0FFF  0082               	movwf	2
 13140  1000                     __end_of_read_correction:
 13141  1000                     
 13142                           	psect	jmp_tab__eeprom_read_error_handler
 13143  2291                     __pjmp_tab__eeprom_read_error_handler:	
 13144                           ;eeprom.c: 50:                 eeprom_read_error_handler();
 13145                           
 13146  2291                     u8897jt:
 13147  2291  318E  2EE5         	ljmp	u8897jf
 13148                           
 13149                           	psect	text12
 13150  27AE                     __ptext12:	
 13151 ;; *************** function _eeprom_read_error_handler *****************
 13152 ;; Defined at:
 13153 ;;		line 19 in file "eeprom.c"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;		None
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;		None
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1   33[BANK1 ] void 
 13160 ;; Registers used:
 13161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13167 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13170 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13171 ;;Total ram usage:        1 bytes
 13172 ;; Hardware stack levels required when called:   16
 13173 ;; This function calls:
 13174 ;;		_puts
 13175 ;; This function is called by:
 13176 ;;		_read_correction
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           
 13181                           ;psect for function _eeprom_read_error_handler
 13182  27AE                     _eeprom_read_error_handler:
 13183                           
 13184                           ;incstack = 0
 13185                           ; Regs used in _eeprom_read_error_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13186  27AE  0021               	movlb	1	; select bank1
 13187  27AF  00C1               	movwf	?_eeprom_read_error_handler^(0+128)
 13188  27B0                     l6860:
 13189                           
 13190                           ;eeprom.c: 20:     puts ("WARNING! UNCORRECT CORRECTION DATA IN EEPROM.");
 13191  27B0  3030               	movlw	low (STR_13| (0+32768))
 13192  27B1  00BB               	movwf	puts@s^(0+128)
 13193  27B2  30A0               	movlw	high (STR_13| (0+32768))
 13194  27B3  00BC               	movwf	(puts@s^(0+128)+1)
 13195  27B4  3012               	movlw	low u8077jt
 13196  27B5  319A  2A99         	ljmp	_puts
 13197  27B7                     __ccov569_end_blk0:
 13198  27B7                     u8077jf:
 13199  27B7                     __ccov570_start_blk1:
 13200  27B7                     l919:
 13201  27B7  0022               	movlb	2	; select bank2
 13202  27B8  14A3               	bsf	(__ccovbit1_127/(0+8))^(0+256),__ccovbit1_127& (0+7)	;volatile
 13203  27B9  0021               	movlb	1	; select bank1
 13204  27BA  31A2               	movlp	high __pjmp_tab__eeprom_read_error_handler
 13205  27BB  0841               	movf	?_eeprom_read_error_handler^(0+128),w
 13206  27BC  0082               	movwf	2
 13207  27BD                     __end_of_eeprom_read_error_handler:
 13208  27BD                     
 13209                           	psect	text13
 13210  1E4B                     __ptext13:	
 13211 ;; *************** function ___fleq *****************
 13212 ;; Defined at:
 13213 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fleq.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;  ff1             4    8[BANK1 ] void 
 13216 ;;  ff2             4   12[BANK1 ] void 
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;		None
 13219 ;; Return value:  Size  Location     Type
 13220 ;;		None               void
 13221 ;; Registers used:
 13222 ;;		wreg, status,2, status,0
 13223 ;; Tracked objects:
 13224 ;;		On entry : 0/0
 13225 ;;		On exit  : 0/0
 13226 ;;		Unchanged: 0/0
 13227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13228 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13230 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13231 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13232 ;;Total ram usage:       12 bytes
 13233 ;; Hardware stack levels used:    1
 13234 ;; Hardware stack levels required when called:   12
 13235 ;; This function calls:
 13236 ;;		Nothing
 13237 ;; This function is called by:
 13238 ;;		_spd_init
 13239 ;;		_read_correction
 13240 ;; This function uses a non-reentrant model
 13241 ;;
 13242                           
 13243                           
 13244                           ;psect for function ___fleq
 13245  1E4B                     ___fleq:
 13246  1E4B                     l6870:	
 13247                           ;incstack = 0
 13248                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13249                           
 13250  1E4B  3000               	movlw	0
 13251  1E4C  0021               	movlb	1	; select bank1
 13252  1E4D  0528               	andwf	___fleq@ff1^(0+128),w
 13253  1E4E  00B0               	movwf	??___fleq^(0+128)
 13254  1E4F  3000               	movlw	0
 13255  1E50  0529               	andwf	(___fleq@ff1+1)^(0+128),w
 13256  1E51  00B1               	movwf	(??___fleq^(0+128)+1)
 13257  1E52  3080               	movlw	128
 13258  1E53  052A               	andwf	(___fleq@ff1+2)^(0+128),w
 13259  1E54  00B2               	movwf	(??___fleq^(0+128)+2)
 13260  1E55  307F               	movlw	127
 13261  1E56  052B               	andwf	(___fleq@ff1+3)^(0+128),w
 13262  1E57  00B3               	movwf	(??___fleq^(0+128)+3)
 13263  1E58  0833               	movf	(??___fleq+3)^(0+128),w
 13264  1E59  0432               	iorwf	(??___fleq+2)^(0+128),w
 13265  1E5A  0431               	iorwf	(??___fleq+1)^(0+128),w
 13266  1E5B  0430               	iorwf	??___fleq^(0+128),w
 13267  1E5C  1D03               	skipz
 13268  1E5D  2E5F               	goto	u8091
 13269  1E5E  2E60               	goto	u8090
 13270  1E5F                     u8091:
 13271  1E5F  2E68               	goto	l1364
 13272  1E60                     u8090:
 13273  1E60                     l6872:
 13274  1E60  3000               	movlw	0
 13275  1E61  00AB               	movwf	(___fleq@ff1+3)^(0+128)
 13276  1E62  3000               	movlw	0
 13277  1E63  00AA               	movwf	(___fleq@ff1+2)^(0+128)
 13278  1E64  3000               	movlw	0
 13279  1E65  00A9               	movwf	(___fleq@ff1+1)^(0+128)
 13280  1E66  3000               	movlw	0
 13281  1E67  00A8               	movwf	___fleq@ff1^(0+128)
 13282  1E68                     l1364:
 13283  1E68  3000               	movlw	0
 13284  1E69  052C               	andwf	___fleq@ff2^(0+128),w
 13285  1E6A  00B0               	movwf	??___fleq^(0+128)
 13286  1E6B  3000               	movlw	0
 13287  1E6C  052D               	andwf	(___fleq@ff2+1)^(0+128),w
 13288  1E6D  00B1               	movwf	(??___fleq^(0+128)+1)
 13289  1E6E  3080               	movlw	128
 13290  1E6F  052E               	andwf	(___fleq@ff2+2)^(0+128),w
 13291  1E70  00B2               	movwf	(??___fleq^(0+128)+2)
 13292  1E71  307F               	movlw	127
 13293  1E72  052F               	andwf	(___fleq@ff2+3)^(0+128),w
 13294  1E73  00B3               	movwf	(??___fleq^(0+128)+3)
 13295  1E74  0833               	movf	(??___fleq+3)^(0+128),w
 13296  1E75  0432               	iorwf	(??___fleq+2)^(0+128),w
 13297  1E76  0431               	iorwf	(??___fleq+1)^(0+128),w
 13298  1E77  0430               	iorwf	??___fleq^(0+128),w
 13299  1E78  1D03               	skipz
 13300  1E79  2E7B               	goto	u8101
 13301  1E7A  2E7C               	goto	u8100
 13302  1E7B                     u8101:
 13303  1E7B  2E84               	goto	l1365
 13304  1E7C                     u8100:
 13305  1E7C                     l6874:
 13306  1E7C  3000               	movlw	0
 13307  1E7D  00AF               	movwf	(___fleq@ff2+3)^(0+128)
 13308  1E7E  3000               	movlw	0
 13309  1E7F  00AE               	movwf	(___fleq@ff2+2)^(0+128)
 13310  1E80  3000               	movlw	0
 13311  1E81  00AD               	movwf	(___fleq@ff2+1)^(0+128)
 13312  1E82  3000               	movlw	0
 13313  1E83  00AC               	movwf	___fleq@ff2^(0+128)
 13314  1E84                     l1365:
 13315  1E84  082F               	movf	(___fleq@ff2+3)^(0+128),w
 13316  1E85  062B               	xorwf	(___fleq@ff1+3)^(0+128),w
 13317  1E86  1D03               	skipz
 13318  1E87  2E92               	goto	u8115
 13319  1E88  082E               	movf	(___fleq@ff2+2)^(0+128),w
 13320  1E89  062A               	xorwf	(___fleq@ff1+2)^(0+128),w
 13321  1E8A  1D03               	skipz
 13322  1E8B  2E92               	goto	u8115
 13323  1E8C  082D               	movf	(___fleq@ff2+1)^(0+128),w
 13324  1E8D  0629               	xorwf	(___fleq@ff1+1)^(0+128),w
 13325  1E8E  1D03               	skipz
 13326  1E8F  2E92               	goto	u8115
 13327  1E90  082C               	movf	___fleq@ff2^(0+128),w
 13328  1E91  0628               	xorwf	___fleq@ff1^(0+128),w
 13329  1E92                     u8115:
 13330  1E92  1903               	skipnz
 13331  1E93  2E95               	goto	u8111
 13332  1E94  2E96               	goto	u8110
 13333  1E95                     u8111:
 13334  1E95  2E98               	goto	l6878
 13335  1E96                     u8110:
 13336  1E96                     l6876:
 13337  1E96  1003               	clrc
 13338  1E97  2E99               	goto	l1370
 13339  1E98                     l6878:
 13340  1E98  1403               	setc
 13341  1E99                     l1370:
 13342  1E99  0008               	return
 13343  1E9A                     __end_of___fleq:
 13344                           
 13345                           	psect	text14
 13346  1821                     __ptext14:	
 13347 ;; *************** function _DATAEE_ReadByte *****************
 13348 ;; Defined at:
 13349 ;;		line 202 in file "mcc_generated_files/memory.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  bAdd            2    8[BANK1 ] unsigned short 
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;		None
 13354 ;; Return value:  Size  Location     Type
 13355 ;;                  1    wreg      unsigned char 
 13356 ;; Registers used:
 13357 ;;		wreg, status,2
 13358 ;; Tracked objects:
 13359 ;;		On entry : 0/0
 13360 ;;		On exit  : 0/0
 13361 ;;		Unchanged: 0/0
 13362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13363 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13366 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13367 ;;Total ram usage:        2 bytes
 13368 ;; Hardware stack levels used:    1
 13369 ;; Hardware stack levels required when called:   12
 13370 ;; This function calls:
 13371 ;;		Nothing
 13372 ;; This function is called by:
 13373 ;;		_read_correction
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377                           
 13378                           ;psect for function _DATAEE_ReadByte
 13379  1821                     _DATAEE_ReadByte:
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13383  1821                     l6838:
 13384                           
 13385                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 13386  1821  0021               	movlb	1	; select bank1
 13387  1822  0829               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 13388  1823  0031               	movlb	17	; select bank17
 13389  1824  0092               	movwf	18	;volatile
 13390  1825                     __ccov177_end_blk0:
 13391  1825                     __ccov178_start_blk1:
 13392  1825                     l6840:
 13393                           
 13394                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 13395  1825  0021               	movlb	1	; select bank1
 13396  1826  0828               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 13397  1827  0031               	movlb	17	; select bank17
 13398  1828  0091               	movwf	17	;volatile
 13399  1829                     __ccov178_end_blk1:
 13400  1829                     __ccov179_start_blk2:
 13401  1829                     l6842:
 13402                           
 13403                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 13404  1829  1715               	bsf	21,6	;volsfr
 13405  182A                     __ccov179_end_blk2:
 13406  182A                     __ccov180_start_blk3:
 13407  182A                     l6844:
 13408                           
 13409                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 13410  182A  1415               	bsf	21,0	;volsfr
 13411  182B                     __ccov180_end_blk3:
 13412  182B                     __ccov181_start_blk4:
 13413  182B                     l6846:
 13414                           
 13415                           ;mcc_generated_files/memory.c: 208:     __nop();
 13416  182B  0000               	nop
 13417  182C                     __ccov181_end_blk4:
 13418  182C                     __ccov182_start_blk5:
 13419  182C                     l6848:
 13420                           
 13421                           ;mcc_generated_files/memory.c: 209:     __nop();
 13422  182C  0000               	nop
 13423  182D                     __ccov182_end_blk5:
 13424  182D                     __ccov183_start_blk6:
 13425  182D                     l6850:
 13426                           
 13427                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 13428  182D  0031               	movlb	17	; select bank17
 13429  182E  0813               	movf	19,w	;volatile
 13430  182F                     __ccov183_end_blk6:
 13431  182F                     __ccov184_start_blk8:
 13432  182F                     l304:
 13433  182F  0021               	movlb	1	; select bank1
 13434  1830  166A               	bsf	(__ccovbit8_28/(0+8))^(0+128),__ccovbit8_28& (0+7)	;volatile
 13435  1831  0008               	return
 13436  1832                     __end_of_DATAEE_ReadByte:
 13437  1832                     
 13438                           	psect	text15
 13439  1869                     __ptext15:	
 13440 ;; *************** function _spd_get_k_corr *****************
 13441 ;; Defined at:
 13442 ;;		line 60 in file "spd.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  4    8[BANK1 ] float 
 13449 ;; Registers used:
 13450 ;;		wreg
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13456 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13459 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13460 ;;Total ram usage:        4 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:   12
 13463 ;; This function calls:
 13464 ;;		Nothing
 13465 ;; This function is called by:
 13466 ;;		_main
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           
 13471                           ;psect for function _spd_get_k_corr
 13472  1869                     _spd_get_k_corr:
 13473                           
 13474                           ;incstack = 0
 13475                           ; Regs used in _spd_get_k_corr: [wreg]
 13476  1869                     l7812:
 13477                           
 13478                           ;spd.c: 62:     return spd.k;
 13479  1869  0022               	movlb	2	; select bank2
 13480  186A  0864               	movf	(_spd+3)^(0+256),w
 13481  186B  0021               	movlb	1	; select bank1
 13482  186C  00AB               	movwf	(?_spd_get_k_corr+3)^(0+128)
 13483  186D  0022               	movlb	2	; select bank2
 13484  186E  0863               	movf	(_spd+2)^(0+256),w
 13485  186F  0021               	movlb	1	; select bank1
 13486  1870  00AA               	movwf	(?_spd_get_k_corr+2)^(0+128)
 13487  1871  0022               	movlb	2	; select bank2
 13488  1872  0862               	movf	(_spd+1)^(0+256),w
 13489  1873  0021               	movlb	1	; select bank1
 13490  1874  00A9               	movwf	(?_spd_get_k_corr+1)^(0+128)
 13491  1875  0022               	movlb	2	; select bank2
 13492  1876  0861               	movf	_spd^(0+256),w
 13493  1877  0021               	movlb	1	; select bank1
 13494  1878  00A8               	movwf	?_spd_get_k_corr^(0+128)
 13495  1879                     __ccov521_end_blk0:
 13496  1879                     __ccov522_start_blk2:
 13497  1879                     l867:
 13498  1879  0022               	movlb	2	; select bank2
 13499  187A  16A5               	bsf	(__ccovbit2_107/(0+8))^(0+256),__ccovbit2_107& (0+7)	;volatile
 13500  187B  0008               	return
 13501  187C                     __end_of_spd_get_k_corr:
 13502  187C                     
 13503                           	psect	text16
 13504  2676                     __ptext16:	
 13505 ;; *************** function _spd_get_a_corr *****************
 13506 ;; Defined at:
 13507 ;;		line 70 in file "spd.c"
 13508 ;; Parameters:    Size  Location     Type
 13509 ;;		None
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;		None
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  1    wreg      unsigned char 
 13514 ;; Registers used:
 13515 ;;		wreg
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13525 ;;Total ram usage:        0 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:   12
 13528 ;; This function calls:
 13529 ;;		Nothing
 13530 ;; This function is called by:
 13531 ;;		_main
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           
 13536                           ;psect for function _spd_get_a_corr
 13537  2676                     _spd_get_a_corr:
 13538                           
 13539                           ;incstack = 0
 13540                           ; Regs used in _spd_get_a_corr: [wreg]
 13541  2676                     l7844:
 13542                           
 13543                           ;spd.c: 72:     return spd.a;
 13544  2676  0022               	movlb	2	; select bank2
 13545  2677  0865               	movf	(_spd^(0+256)+4),w
 13546  2678                     __ccov525_end_blk0:
 13547  2678                     __ccov526_start_blk2:
 13548  2678                     l873:
 13549  2678  15A5               	bsf	(__ccovbit2_109/(0+8))^(0+256),__ccovbit2_109& (0+7)	;volatile
 13550  2679  0008               	return
 13551  267A                     __end_of_spd_get_a_corr:
 13552  267A                     
 13553                           	psect	text17
 13554  1B71                     __ptext17:	
 13555 ;; *************** function _spd_a_calibration *****************
 13556 ;; Defined at:
 13557 ;;		line 171 in file "spd.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  tmp             2   13[BANK1 ] unsigned short 
 13562 ;;  stored_ch       1   15[BANK1 ] enum E6440
 13563 ;; Return value:  Size  Location     Type
 13564 ;;                  1    wreg      void 
 13565 ;; Registers used:
 13566 ;;		wreg, status,2, status,0, pclath, cstack
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13573 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;Total ram usage:        4 bytes
 13577 ;; Hardware stack levels used:    1
 13578 ;; Hardware stack levels required when called:   13
 13579 ;; This function calls:
 13580 ;;		_ADC_GetConversion
 13581 ;;		_spd_adc_to_u8
 13582 ;; This function is called by:
 13583 ;;		_main
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           
 13588                           ;psect for function _spd_a_calibration
 13589  1B71                     _spd_a_calibration:
 13590                           
 13591                           ;incstack = 0
 13592                           ; Regs used in _spd_a_calibration: [wreg+status,2+status,0+pclath+cstack]
 13593  1B71                     l7848:
 13594                           
 13595                           ;spd.c: 173:     adc_result_t tmp;;spd.c: 174:     adc_channel_t stored_ch = ADCON0bits.
      +                          CHS;
 13596  1B71  0021               	movlb	1	; select bank1
 13597  1B72  0C1D               	rrf	29,w	;volatile
 13598  1B73  0C89               	rrf	9,f
 13599  1B74  393F               	andlw	63
 13600  1B75  00AC               	movwf	??_spd_a_calibration^(0+128)
 13601  1B76  082C               	movf	??_spd_a_calibration^(0+128),w
 13602  1B77  00AF               	movwf	spd_a_calibration@stored_ch^(0+128)
 13603  1B78                     __ccov565_end_blk0:
 13604  1B78                     __ccov566_start_blk1:
 13605  1B78                     l7850:
 13606                           
 13607                           ;spd.c: 176:     tmp = ADC_GetConversion (VARIABLE_R);
 13608  1B78  3015               	movlw	21
 13609  1B79  319A  223D  319B   	fcall	_ADC_GetConversion
 13610  1B7C  0021               	movlb	1	; select bank1
 13611  1B7D  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 13612  1B7E  00AE               	movwf	(spd_a_calibration@tmp+1)^(0+128)
 13613  1B7F  0828               	movf	?_ADC_GetConversion^(0+128),w
 13614  1B80  00AD               	movwf	spd_a_calibration@tmp^(0+128)
 13615  1B81                     __ccov566_end_blk1:
 13616  1B81                     __ccov567_start_blk2:
 13617  1B81                     l7852:
 13618                           
 13619                           ;spd.c: 177:     ADCON0bits.CHS = stored_ch;
 13620  1B81  082F               	movf	spd_a_calibration@stored_ch^(0+128),w
 13621  1B82  00AC               	movwf	??_spd_a_calibration^(0+128)
 13622  1B83  0DAC               	rlf	??_spd_a_calibration^(0+128),f
 13623  1B84  0DAC               	rlf	??_spd_a_calibration^(0+128),f
 13624  1B85  081D               	movf	29,w	;volatile
 13625  1B86  062C               	xorwf	??_spd_a_calibration^(0+128),w
 13626  1B87  3903               	andlw	-253
 13627  1B88  062C               	xorwf	??_spd_a_calibration^(0+128),w
 13628  1B89  009D               	movwf	29	;volatile
 13629                           
 13630                           ;spd.c: 179:     spd.a = spd_adc_to_u8 (tmp);
 13631  1B8A  082E               	movf	(spd_a_calibration@tmp+1)^(0+128),w
 13632  1B8B  00A9               	movwf	(spd_adc_to_u8@value+1)^(0+128)
 13633  1B8C  082D               	movf	spd_a_calibration@tmp^(0+128),w
 13634  1B8D  00A8               	movwf	spd_adc_to_u8@value^(0+128)
 13635  1B8E  31A7  2794  319B   	fcall	_spd_adc_to_u8
 13636  1B91  0021               	movlb	1	; select bank1
 13637  1B92  00AC               	movwf	??_spd_a_calibration^(0+128)
 13638  1B93  082C               	movf	??_spd_a_calibration^(0+128),w
 13639  1B94  0022               	movlb	2	; select bank2
 13640  1B95  00E5               	movwf	(_spd^(0+256)+4)
 13641  1B96                     __ccov567_end_blk2:
 13642  1B96                     __ccov568_start_blk3:
 13643  1B96                     l910:
 13644  1B96  1523               	bsf	(__ccovbit3_126/(0+8))^(0+256),__ccovbit3_126& (0+7)	;volatile
 13645  1B97  0008               	return
 13646  1B98                     __end_of_spd_a_calibration:
 13647  1B98                     
 13648                           	psect	text18
 13649  2794                     __ptext18:	
 13650 ;; *************** function _spd_adc_to_u8 *****************
 13651 ;; Defined at:
 13652 ;;		line 85 in file "spd.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  value           2    8[BANK1 ] unsigned short 
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;		None
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  1    wreg      unsigned char 
 13659 ;; Registers used:
 13660 ;;		wreg, status,2, status,0
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13666 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13668 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13669 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13670 ;;Total ram usage:        3 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; Hardware stack levels required when called:   12
 13673 ;; This function calls:
 13674 ;;		Nothing
 13675 ;; This function is called by:
 13676 ;;		_spd_a_calibration
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           
 13681                           ;psect for function _spd_adc_to_u8
 13682  2794                     _spd_adc_to_u8:
 13683                           
 13684                           ;incstack = 0
 13685                           ; Regs used in _spd_adc_to_u8: [wreg+status,2+status,0]
 13686  2794                     l7556:
 13687                           
 13688                           ;spd.c: 85: static u8 spd_adc_to_u8 (adc_result_t value);spd.c: 86: {;spd.c: 87:     ret
      +                          urn (u8)(1023 / (0xff) * value);
 13689  2794  0021               	movlb	1	; select bank1
 13690  2795  0828               	movf	spd_adc_to_u8@value^(0+128),w
 13691  2796  00AA               	movwf	??_spd_adc_to_u8^(0+128)
 13692  2797  3001               	movlw	1
 13693  2798                     u9005:
 13694  2798  35AA               	lslf	??_spd_adc_to_u8^(0+128),f
 13695  2799  3EFF               	addlw	-1
 13696  279A  1D03               	skipz
 13697  279B  2F98               	goto	u9005
 13698  279C  352A               	lslf	??_spd_adc_to_u8^(0+128),w
 13699  279D                     __ccov531_end_blk0:
 13700  279D                     __ccov532_start_blk2:
 13701  279D                     l882:
 13702  279D  0022               	movlb	2	; select bank2
 13703  279E  1425               	bsf	(__ccovbit2_112/(0+8))^(0+256),__ccovbit2_112& (0+7)	;volatile
 13704  279F  0008               	return
 13705  27A0                     __end_of_spd_adc_to_u8:
 13706  27A0                     
 13707                           	psect	text19
 13708  2788                     __ptext19:	
 13709 ;; *************** function _menu_change *****************
 13710 ;; Defined at:
 13711 ;;		line 206 in file "main.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      void 
 13718 ;; Registers used:
 13719 ;;		wreg, status,2, status,0
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13728 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13729 ;;Total ram usage:        1 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:   12
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_main
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           
 13740                           ;psect for function _menu_change
 13741  2788                     _menu_change:
 13742                           
 13743                           ;incstack = 0
 13744                           ; Regs used in _menu_change: [wreg+status,2+status,0]
 13745  2788                     l7856:
 13746                           
 13747                           ;main.c: 208:     menu = (menu + 1) % 4;
 13748  2788  0022               	movlb	2	; select bank2
 13749  2789  085F               	movf	_menu^(0+256),w
 13750  278A  3E01               	addlw	1
 13751  278B  3903               	andlw	3
 13752  278C  0021               	movlb	1	; select bank1
 13753  278D  00A8               	movwf	??_menu_change^(0+128)
 13754  278E  0828               	movf	??_menu_change^(0+128),w
 13755  278F  0022               	movlb	2	; select bank2
 13756  2790  00DF               	movwf	_menu^(0+256)
 13757  2791                     __ccov409_end_blk0:
 13758  2791                     __ccov410_start_blk1:
 13759  2791                     l722:
 13760  2791  0021               	movlb	1	; select bank1
 13761  2792  1565               	bsf	(__ccovbit1_70/(0+8))^(0+128),__ccovbit1_70& (0+7)	;volatile
 13762  2793  0008               	return
 13763  2794                     __end_of_menu_change:
 13764  2794                     
 13765                           	psect	text20
 13766  26BD                     __ptext20:	
 13767 ;; *************** function _led_set_mode *****************
 13768 ;; Defined at:
 13769 ;;		line 34 in file "led.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;  newmode         1    wreg     enum E6821
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;  newmode         1    9[BANK1 ] enum E6821
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  1    wreg      void 
 13776 ;; Registers used:
 13777 ;;		wreg
 13778 ;; Tracked objects:
 13779 ;;		On entry : 0/0
 13780 ;;		On exit  : 0/0
 13781 ;;		Unchanged: 0/0
 13782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13785 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13786 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13787 ;;Total ram usage:        2 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; Hardware stack levels required when called:   12
 13790 ;; This function calls:
 13791 ;;		Nothing
 13792 ;; This function is called by:
 13793 ;;		_main
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797                           
 13798                           ;psect for function _led_set_mode
 13799  26BD                     _led_set_mode:
 13800                           
 13801                           ;incstack = 0
 13802                           ; Regs used in _led_set_mode: [wreg]
 13803                           ;led_set_mode@newmode stored from wreg
 13804  26BD  0021               	movlb	1	; select bank1
 13805  26BE  00A9               	movwf	led_set_mode@newmode^(0+128)
 13806  26BF                     l7768:
 13807                           
 13808                           ;led.c: 34: void led_set_mode (enum e_ledmode newmode);led.c: 35: {;led.c: 36:     led.m
      +                          ode = newmode;
 13809  26BF  0829               	movf	led_set_mode@newmode^(0+128),w
 13810  26C0  00A8               	movwf	??_led_set_mode^(0+128)
 13811  26C1  0828               	movf	??_led_set_mode^(0+128),w
 13812  26C2  0023               	movlb	3	; select bank3
 13813  26C3  00A0               	movwf	_led^(0+384)
 13814  26C4                     __ccov417_end_blk0:
 13815  26C4                     __ccov418_start_blk1:
 13816  26C4                     l746:
 13817  26C4  0021               	movlb	1	; select bank1
 13818  26C5  1465               	bsf	(__ccovbit1_72/(0+8))^(0+128),__ccovbit1_72& (0+7)	;volatile
 13819  26C6  0008               	return
 13820  26C7                     __end_of_led_set_mode:
 13821  26C7                     
 13822                           	psect	text21
 13823  27EF                     __ptext21:	
 13824 ;; *************** function _led_init *****************
 13825 ;; Defined at:
 13826 ;;		line 26 in file "led.c"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13842 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13843 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13844 ;;Total ram usage:        1 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:   12
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_main
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           
 13855                           ;psect for function _led_init
 13856  27EF                     _led_init:
 13857                           
 13858                           ;incstack = 0
 13859                           ; Regs used in _led_init: [wreg+status,2]
 13860  27EF                     l7674:
 13861                           
 13862                           ;led.c: 27:     led.mode = ALWAYS_ON;
 13863  27EF  3002               	movlw	2
 13864  27F0  0021               	movlb	1	; select bank1
 13865  27F1  00A8               	movwf	??_led_init^(0+128)
 13866  27F2  0828               	movf	??_led_init^(0+128),w
 13867  27F3  0023               	movlb	3	; select bank3
 13868  27F4  00A0               	movwf	_led^(0+384)
 13869  27F5                     __ccov411_end_blk0:
 13870  27F5                     __ccov412_start_blk2:
 13871  27F5                     l7676:
 13872  27F5  0022               	movlb	2	; select bank2
 13873  27F6  160C               	bsf	12,4	;volatile
 13874  27F7                     __ccov412_end_blk2:
 13875  27F7                     __ccov413_start_blk4:
 13876  27F7                     l7678:
 13877                           
 13878                           ;led.c: 29:     led.state = ON;
 13879  27F7  0023               	movlb	3	; select bank3
 13880  27F8  01A1               	clrf	(_led^(0+384)+1)
 13881  27F9  0AA1               	incf	(_led^(0+384)+1),f
 13882  27FA                     __ccov413_end_blk4:
 13883  27FA                     __ccov414_start_blk5:
 13884  27FA                     l7680:
 13885                           
 13886                           ;led.c: 30:     led.count = 0;
 13887  27FA  01A3               	clrf	(_led^(0+384)+3)
 13888  27FB                     __ccov414_end_blk5:
 13889  27FB                     __ccov415_start_blk6:
 13890  27FB                     l7682:
 13891                           
 13892                           ;led.c: 31:     led.number = 1;
 13893  27FB  01A2               	clrf	(_led^(0+384)+2)
 13894  27FC  0AA2               	incf	(_led^(0+384)+2),f
 13895  27FD                     __ccov415_end_blk6:
 13896  27FD                     __ccov416_start_blk7:
 13897  27FD                     l743:
 13898  27FD  0021               	movlb	1	; select bank1
 13899  27FE  14E5               	bsf	(__ccovbit7_71/(0+8))^(0+128),__ccovbit7_71& (0+7)	;volatile
 13900  27FF  0008               	return
 13901  2800                     __end_of_led_init:
 13902  2800                     
 13903                           	psect	text22
 13904  2735                     __ptext22:	
 13905 ;; *************** function _is_moving *****************
 13906 ;; Defined at:
 13907 ;;		line 26 in file "spd.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;		None
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;		None
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  1    wreg      _Bool 
 13914 ;; Registers used:
 13915 ;;		wreg, status,2, status,0
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/0
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13925 ;;Total ram usage:        0 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; Hardware stack levels required when called:   12
 13928 ;; This function calls:
 13929 ;;		Nothing
 13930 ;; This function is called by:
 13931 ;;		_main
 13932 ;; This function uses a non-reentrant model
 13933 ;;
 13934                           
 13935                           
 13936                           ;psect for function _is_moving
 13937  2735                     _is_moving:
 13938                           
 13939                           ;incstack = 0
 13940                           ; Regs used in _is_moving: [wreg+status,2+status,0]
 13941  2735                     l7764:
 13942                           
 13943                           ;spd.c: 27:     return spd.count == 0 ? 0 : 1;
 13944  2735  0022               	movlb	2	; select bank2
 13945  2736  0866               	movf	(_spd^(0+256)+5),w
 13946  2737  0467               	iorwf	((_spd+1)^(0+256)+5),w
 13947  2738  1D03               	btfss	3,2
 13948  2739  2F3B               	goto	u9271
 13949  273A  2F3D               	goto	u9270
 13950  273B                     u9271:
 13951  273B  3001               	movlw	1
 13952  273C  2F3E               	goto	u9280
 13953  273D                     u9270:
 13954  273D  3000               	movlw	0
 13955  273E                     __ccov501_end_blk0:
 13956  273E                     u9280:
 13957  273E                     __ccov502_start_blk2:
 13958  273E                     l856:
 13959  273E  14A6               	bsf	(__ccovbit2_103/(0+8))^(0+256),__ccovbit2_103& (0+7)	;volatile
 13960  273F  0008               	return
 13961  2740                     __end_of_is_moving:
 13962  2740                     
 13963                           	psect	text23
 13964  1832                     __ptext23:	
 13965 ;; *************** function _fuel_set_corr *****************
 13966 ;; Defined at:
 13967 ;;		line 147 in file "fuel.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  value           4    8[BANK1 ] float 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      void 
 13974 ;; Registers used:
 13975 ;;		wreg
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13984 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13985 ;;Total ram usage:        4 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:   12
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_main
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           
 13996                           ;psect for function _fuel_set_corr
 13997  1832                     _fuel_set_corr:
 13998                           
 13999                           ;incstack = 0
 14000                           ; Regs used in _fuel_set_corr: [wreg]
 14001  1832                     l7842:
 14002                           
 14003                           ;fuel.c: 147: void fuel_set_corr (float value);fuel.c: 148: {;fuel.c: 149:     fuel.corr
      +                           = value;
 14004  1832  0021               	movlb	1	; select bank1
 14005  1833  082B               	movf	(fuel_set_corr@value+3)^(0+128),w
 14006  1834  0023               	movlb	3	; select bank3
 14007  1835  00D1               	movwf	((_fuel+3)^(0+384)+4)
 14008  1836  0021               	movlb	1	; select bank1
 14009  1837  082A               	movf	(fuel_set_corr@value+2)^(0+128),w
 14010  1838  0023               	movlb	3	; select bank3
 14011  1839  00D0               	movwf	((_fuel+2)^(0+384)+4)
 14012  183A  0021               	movlb	1	; select bank1
 14013  183B  0829               	movf	(fuel_set_corr@value+1)^(0+128),w
 14014  183C  0023               	movlb	3	; select bank3
 14015  183D  00CF               	movwf	((_fuel+1)^(0+384)+4)
 14016  183E  0021               	movlb	1	; select bank1
 14017  183F  0828               	movf	fuel_set_corr@value^(0+128),w
 14018  1840  0023               	movlb	3	; select bank3
 14019  1841  00CE               	movwf	(_fuel^(0+384)+4)
 14020  1842                     __ccov696_end_blk0:
 14021  1842                     __ccov697_start_blk1:
 14022  1842                     l1043:
 14023  1842  1754               	bsf	(__ccovbit1_177/(0+8))^(0+384),__ccovbit1_177& (0+7)	;volatile
 14024  1843  0008               	return
 14025  1844                     __end_of_fuel_set_corr:
 14026  1844                     
 14027                           	psect	text24
 14028  1ADE                     __ptext24:	
 14029 ;; *************** function _fuel_init *****************
 14030 ;; Defined at:
 14031 ;;		line 78 in file "fuel.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;		None
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;		None
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  1    wreg      void 
 14038 ;; Registers used:
 14039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14047 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;Total ram usage:        1 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:   15
 14052 ;; This function calls:
 14053 ;;		_ADC_GetConversion
 14054 ;;		_fuel_percent_calculate
 14055 ;;		_fuel_pwm_calculate
 14056 ;; This function is called by:
 14057 ;;		_main
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           
 14062                           ;psect for function _fuel_init
 14063  1ADE                     _fuel_init:
 14064                           
 14065                           ;incstack = 0
 14066                           ; Regs used in _fuel_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14067  1ADE                     l7720:
 14068                           
 14069                           ;fuel.c: 80:     fuel.adc_value = ADC_GetConversion (FUEL);
 14070  1ADE  3012               	movlw	18
 14071  1ADF  319A  223D  319A   	fcall	_ADC_GetConversion
 14072  1AE2  0021               	movlb	1	; select bank1
 14073  1AE3  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 14074  1AE4  0023               	movlb	3	; select bank3
 14075  1AE5  00CB               	movwf	(_fuel+1)^(0+384)
 14076  1AE6  0021               	movlb	1	; select bank1
 14077  1AE7  0828               	movf	?_ADC_GetConversion^(0+128),w
 14078  1AE8  0023               	movlb	3	; select bank3
 14079  1AE9  00CA               	movwf	_fuel^(0+384)
 14080  1AEA                     __ccov662_end_blk0:
 14081  1AEA                     __ccov663_start_blk1:
 14082  1AEA                     l7722:
 14083                           
 14084                           ;fuel.c: 81:     fuel.pwm_value = fuel_pwm_calculate ();
 14085  1AEA  319D  2574  319A   	fcall	_fuel_pwm_calculate
 14086  1AED  0021               	movlb	1	; select bank1
 14087  1AEE  085C               	movf	(?_fuel_pwm_calculate+1)^(0+128),w
 14088  1AEF  0023               	movlb	3	; select bank3
 14089  1AF0  00CD               	movwf	((_fuel+1)^(0+384)+2)
 14090  1AF1  0021               	movlb	1	; select bank1
 14091  1AF2  085B               	movf	?_fuel_pwm_calculate^(0+128),w
 14092  1AF3  0023               	movlb	3	; select bank3
 14093  1AF4  00CC               	movwf	(_fuel^(0+384)+2)
 14094  1AF5                     __ccov663_end_blk1:
 14095  1AF5                     __ccov664_start_blk2:
 14096  1AF5                     l7724:
 14097                           
 14098                           ;fuel.c: 82:     fuel.percent = fuel_percent_calculate ();
 14099  1AF5  319D  253D  319A   	fcall	_fuel_percent_calculate
 14100  1AF8  0021               	movlb	1	; select bank1
 14101  1AF9  00DD               	movwf	??_fuel_init^(0+128)
 14102  1AFA  085D               	movf	??_fuel_init^(0+128),w
 14103  1AFB  0023               	movlb	3	; select bank3
 14104  1AFC  00D2               	movwf	(_fuel^(0+384)+8)
 14105  1AFD                     __ccov664_end_blk2:
 14106  1AFD                     __ccov665_start_blk3:
 14107  1AFD                     l7726:
 14108                           
 14109                           ;fuel.c: 83:     fuel.low = 1;
 14110  1AFD  01D3               	clrf	(_fuel^(0+384)+9)
 14111  1AFE  0AD3               	incf	(_fuel^(0+384)+9),f
 14112  1AFF                     __ccov665_end_blk3:
 14113  1AFF                     __ccov666_start_blk4:
 14114  1AFF                     l1017:
 14115  1AFF  1456               	bsf	(__ccovbit4_167/(0+8))^(0+384),__ccovbit4_167& (0+7)	;volatile
 14116  1B00  0008               	return
 14117  1B01                     __end_of_fuel_init:
 14118  1B01                     
 14119                           	psect	text25
 14120  27DE                     __ptext25:	
 14121 ;; *************** function _fuel_get_corr *****************
 14122 ;; Defined at:
 14123 ;;		line 142 in file "fuel.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  4    8[BANK1 ] float 
 14130 ;; Registers used:
 14131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14137 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14140 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14141 ;;Total ram usage:        4 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:   12
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_main
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           
 14152                           ;psect for function _fuel_get_corr
 14153  27DE                     _fuel_get_corr:
 14154                           
 14155                           ;incstack = 0
 14156                           ; Regs used in _fuel_get_corr: [wreg+fsr1l+fsr1h+status,2+status,0]
 14157  27DE                     l7824:
 14158                           
 14159                           ;fuel.c: 144:     return fuel.corr;
 14160  27DE  3004               	movlw	4
 14161  27DF  3ECA               	addlw	(low (_fuel| (0+256)))& (0+255)
 14162  27E0  0086               	movwf	6
 14163  27E1  3001               	movlw	1	; select bank3/4
 14164  27E2  0087               	movwf	7
 14165  27E3  3F40               	moviw [0]fsr1
 14166  27E4  0021               	movlb	1	; select bank1
 14167  27E5  00A8               	movwf	?_fuel_get_corr^(0+128)
 14168  27E6  3F41               	moviw [1]fsr1
 14169  27E7  00A9               	movwf	(?_fuel_get_corr+1)^(0+128)
 14170  27E8  3F42               	moviw [2]fsr1
 14171  27E9  00AA               	movwf	(?_fuel_get_corr+2)^(0+128)
 14172  27EA  3F43               	moviw [3]fsr1
 14173  27EB  00AB               	movwf	(?_fuel_get_corr+3)^(0+128)
 14174  27EC                     __ccov694_end_blk0:
 14175  27EC                     __ccov695_start_blk2:
 14176  27EC                     l1040:
 14177  27EC  0023               	movlb	3	; select bank3
 14178  27ED  17D4               	bsf	(__ccovbit2_176/(0+8))^(0+384),__ccovbit2_176& (0+7)	;volatile
 14179  27EE  0008               	return
 14180  27EF                     __end_of_fuel_get_corr:
 14181  27EF                     
 14182                           	psect	text26
 14183  1E9A                     __ptext26:	
 14184 ;; *************** function _fuel_get *****************
 14185 ;; Defined at:
 14186 ;;		line 87 in file "fuel.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;		None
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  tmp             2   61[BANK1 ] unsigned short 
 14191 ;; Return value:  Size  Location     Type
 14192 ;;                  1    wreg      void 
 14193 ;; Registers used:
 14194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14195 ;; Tracked objects:
 14196 ;;		On entry : 0/0
 14197 ;;		On exit  : 0/0
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14203 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14204 ;;Total ram usage:        2 bytes
 14205 ;; Hardware stack levels used:    1
 14206 ;; Hardware stack levels required when called:   15
 14207 ;; This function calls:
 14208 ;;		_ADC_GetConversion
 14209 ;;		_PWM5_LoadDutyValue
 14210 ;;		_fuel_low_check
 14211 ;;		_fuel_percent_calculate
 14212 ;;		_fuel_pwm_calculate
 14213 ;; This function is called by:
 14214 ;;		_main
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           
 14219                           ;psect for function _fuel_get
 14220  1E9A                     _fuel_get:
 14221                           
 14222                           ;incstack = 0
 14223                           ; Regs used in _fuel_get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14224  1E9A                     l7770:
 14225                           
 14226                           ;fuel.c: 89:     adc_result_t tmp;;fuel.c: 92:     if ((ADACT == 0x10) && (ADCON0bits.CH
      +                          S == FUEL)){
 14227  1E9A  3010               	movlw	16
 14228  1E9B  0021               	movlb	1	; select bank1
 14229  1E9C  061F               	xorwf	31,w	;volatile
 14230  1E9D  1D03               	btfss	3,2
 14231  1E9E  2EA0               	goto	u9291
 14232  1E9F  2EA1               	goto	u9290
 14233  1EA0                     u9291:
 14234  1EA0  2EB4               	goto	l7776
 14235  1EA1                     __ccov667_end_blk0:
 14236  1EA1                     u9290:
 14237  1EA1                     __ccov668_start_blk1:
 14238  1EA1                     l7772:
 14239  1EA1  0023               	movlb	3	; select bank3
 14240  1EA2  17D5               	bsf	(__ccovbit1_168/(0+8))^(0+384),__ccovbit1_168& (0+7)	;volatile
 14241  1EA3  0021               	movlb	1	; select bank1
 14242  1EA4  0C1D               	rrf	29,w	;volatile
 14243  1EA5  0C89               	rrf	9,f
 14244  1EA6  393F               	andlw	63
 14245  1EA7  3A12               	xorlw	18
 14246  1EA8  1D03               	skipz
 14247  1EA9  2EAB               	goto	u9301
 14248  1EAA  2EAC               	goto	u9300
 14249  1EAB                     u9301:
 14250  1EAB  2EB4               	goto	l7776
 14251  1EAC                     __ccov668_end_blk1:
 14252  1EAC                     u9300:
 14253  1EAC                     __ccov669_start_blk2:
 14254  1EAC                     l7774:
 14255  1EAC  0023               	movlb	3	; select bank3
 14256  1EAD  1755               	bsf	(__ccovbit2_169/(0+8))^(0+384),__ccovbit2_169& (0+7)	;volatile
 14257                           
 14258                           ;fuel.c: 93:         tmp = (adc_result_t)((ADRESH << 8) + ADRESL);
 14259  1EAE  0021               	movlb	1	; select bank1
 14260  1EAF  081C               	movf	28,w	;volatile
 14261  1EB0  00DE               	movwf	(fuel_get@tmp+1)^(0+128)
 14262  1EB1  081B               	movf	27,w	;volatile
 14263  1EB2  00DD               	movwf	fuel_get@tmp^(0+128)
 14264                           
 14265                           ;fuel.c: 94:     } else {
 14266  1EB3  2EBF               	goto	l7778
 14267  1EB4                     __ccov669_end_blk2:
 14268  1EB4                     __ccov670_start_blk4:
 14269  1EB4                     l7776:
 14270  1EB4  0023               	movlb	3	; select bank3
 14271  1EB5  16D5               	bsf	(__ccovbit4_170/(0+8))^(0+384),__ccovbit4_170& (0+7)	;volatile
 14272                           
 14273                           ;fuel.c: 95:         tmp = ADC_GetConversion (FUEL);
 14274  1EB6  3012               	movlw	18
 14275  1EB7  319A  223D  319E   	fcall	_ADC_GetConversion
 14276  1EBA  0021               	movlb	1	; select bank1
 14277  1EBB  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 14278  1EBC  00DE               	movwf	(fuel_get@tmp+1)^(0+128)
 14279  1EBD  0828               	movf	?_ADC_GetConversion^(0+128),w
 14280  1EBE  00DD               	movwf	fuel_get@tmp^(0+128)
 14281  1EBF                     __ccov670_end_blk4:
 14282  1EBF                     __ccov671_start_blk6:
 14283  1EBF                     l7778:
 14284                           
 14285                           ;fuel.c: 97:     if (fuel.adc_value != tmp) {
 14286  1EBF  085E               	movf	(fuel_get@tmp+1)^(0+128),w
 14287  1EC0  0023               	movlb	3	; select bank3
 14288  1EC1  064B               	xorwf	(_fuel+1)^(0+384),w
 14289  1EC2  1D03               	skipz
 14290  1EC3  2EC8               	goto	u9315
 14291  1EC4  0021               	movlb	1	; select bank1
 14292  1EC5  085D               	movf	fuel_get@tmp^(0+128),w
 14293  1EC6  0023               	movlb	3	; select bank3
 14294  1EC7  064A               	xorwf	_fuel^(0+384),w
 14295  1EC8                     u9315:
 14296  1EC8  1903               	skipnz
 14297  1EC9  2ECB               	goto	u9311
 14298  1ECA  2ECC               	goto	u9310
 14299  1ECB                     u9311:
 14300  1ECB  2EDC               	goto	l7786
 14301  1ECC                     __ccov671_end_blk6:
 14302  1ECC                     u9310:
 14303  1ECC                     __ccov672_start_blk7:
 14304  1ECC                     l7780:
 14305                           
 14306                           ;fuel.c: 98:         fuel.adc_value = tmp;
 14307  1ECC  0021               	movlb	1	; select bank1
 14308  1ECD  085E               	movf	(fuel_get@tmp+1)^(0+128),w
 14309  1ECE  0023               	movlb	3	; select bank3
 14310  1ECF  00CB               	movwf	(_fuel+1)^(0+384)
 14311  1ED0  0021               	movlb	1	; select bank1
 14312  1ED1  085D               	movf	fuel_get@tmp^(0+128),w
 14313  1ED2  0023               	movlb	3	; select bank3
 14314  1ED3  00CA               	movwf	_fuel^(0+384)
 14315  1ED4                     __ccov672_end_blk7:
 14316  1ED4                     __ccov673_start_blk8:
 14317  1ED4                     l7782:
 14318                           
 14319                           ;fuel.c: 99:         fuel_pwm_calculate ();
 14320  1ED4  319D  2574  319E   	fcall	_fuel_pwm_calculate
 14321  1ED7                     __ccov673_end_blk8:
 14322  1ED7                     __ccov674_start_blk9:
 14323  1ED7                     l7784:
 14324  1ED7  0023               	movlb	3	; select bank3
 14325  1ED8  1655               	bsf	(__ccovbit9_171/(0+8))^(0+384),__ccovbit9_171& (0+7)	;volatile
 14326                           
 14327                           ;fuel.c: 100:         fuel_percent_calculate ();
 14328  1ED9  319D  253D  319E   	fcall	_fuel_percent_calculate
 14329  1EDC                     __ccov674_end_blk9:
 14330  1EDC                     __ccov675_start_blk11:
 14331  1EDC                     l7786:
 14332                           
 14333                           ;fuel.c: 102:     PWM5_LoadDutyValue (fuel.pwm_value);
 14334  1EDC  0023               	movlb	3	; select bank3
 14335  1EDD  084D               	movf	((_fuel+1)^(0+384)+2),w
 14336  1EDE  0021               	movlb	1	; select bank1
 14337  1EDF  00A9               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128)
 14338  1EE0  0023               	movlb	3	; select bank3
 14339  1EE1  084C               	movf	(_fuel^(0+384)+2),w
 14340  1EE2  0021               	movlb	1	; select bank1
 14341  1EE3  00A8               	movwf	PWM5_LoadDutyValue@dutyValue^(0+128)
 14342  1EE4  3199  2196  319E   	fcall	_PWM5_LoadDutyValue
 14343  1EE7                     __ccov675_end_blk11:
 14344  1EE7                     __ccov676_start_blk12:
 14345  1EE7                     l7788:
 14346                           
 14347                           ;fuel.c: 103:     fuel_low_check();
 14348  1EE7  319E  2602  319E   	fcall	_fuel_low_check
 14349  1EEA                     __ccov676_end_blk12:
 14350  1EEA                     __ccov677_start_blk13:
 14351  1EEA                     l1023:
 14352  1EEA  0023               	movlb	3	; select bank3
 14353  1EEB  15D5               	bsf	(__ccovbit13_172/(0+8))^(0+384),__ccovbit13_172& (0+7)	;volatile
 14354  1EEC  0008               	return
 14355  1EED                     __end_of_fuel_get:
 14356  1EED                     
 14357                           	psect	text27
 14358  1EED                     __ptext27:	
 14359 ;; *************** function _fuel_calibration *****************
 14360 ;; Defined at:
 14361 ;;		line 118 in file "fuel.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;		None
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  tmp             2   61[BANK1 ] unsigned short 
 14366 ;; Return value:  Size  Location     Type
 14367 ;;                  1    wreg      void 
 14368 ;; Registers used:
 14369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14370 ;; Tracked objects:
 14371 ;;		On entry : 0/0
 14372 ;;		On exit  : 0/0
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14376 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14378 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14379 ;;Total ram usage:        2 bytes
 14380 ;; Hardware stack levels used:    1
 14381 ;; Hardware stack levels required when called:   15
 14382 ;; This function calls:
 14383 ;;		_ADC_GetConversion
 14384 ;;		_PWM5_LoadDutyValue
 14385 ;;		_fuel_low_check
 14386 ;;		_fuel_percent_calculate
 14387 ;;		_fuel_pwm_calculate
 14388 ;;		_fuel_uint_to_float
 14389 ;; This function is called by:
 14390 ;;		_main
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394                           
 14395                           ;psect for function _fuel_calibration
 14396  1EED                     _fuel_calibration:
 14397                           
 14398                           ;incstack = 0
 14399                           ; Regs used in _fuel_calibration: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14400  1EED                     l7828:
 14401                           
 14402                           ;fuel.c: 120:     adc_result_t tmp;;fuel.c: 122:     tmp = ADC_GetConversion (VARIABLE_R
      +                          );
 14403  1EED  3015               	movlw	21
 14404  1EEE  319A  223D  319E   	fcall	_ADC_GetConversion
 14405  1EF1  0021               	movlb	1	; select bank1
 14406  1EF2  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 14407  1EF3  00DE               	movwf	(fuel_calibration@tmp+1)^(0+128)
 14408  1EF4  0828               	movf	?_ADC_GetConversion^(0+128),w
 14409  1EF5  00DD               	movwf	fuel_calibration@tmp^(0+128)
 14410                           
 14411                           ;fuel.c: 123:     fuel.corr = fuel_uint_to_float (tmp);
 14412  1EF6  085E               	movf	(fuel_calibration@tmp+1)^(0+128),w
 14413  1EF7  00D1               	movwf	(fuel_uint_to_float@value+1)^(0+128)
 14414  1EF8  085D               	movf	fuel_calibration@tmp^(0+128),w
 14415  1EF9  00D0               	movwf	fuel_uint_to_float@value^(0+128)
 14416  1EFA  319B  23EE  319E   	fcall	_fuel_uint_to_float
 14417  1EFD  0021               	movlb	1	; select bank1
 14418  1EFE  0853               	movf	(?_fuel_uint_to_float+3)^(0+128),w
 14419  1EFF  0023               	movlb	3	; select bank3
 14420  1F00  00D1               	movwf	((_fuel+3)^(0+384)+4)
 14421  1F01  0021               	movlb	1	; select bank1
 14422  1F02  0852               	movf	(?_fuel_uint_to_float+2)^(0+128),w
 14423  1F03  0023               	movlb	3	; select bank3
 14424  1F04  00D0               	movwf	((_fuel+2)^(0+384)+4)
 14425  1F05  0021               	movlb	1	; select bank1
 14426  1F06  0851               	movf	(?_fuel_uint_to_float+1)^(0+128),w
 14427  1F07  0023               	movlb	3	; select bank3
 14428  1F08  00CF               	movwf	((_fuel+1)^(0+384)+4)
 14429  1F09  0021               	movlb	1	; select bank1
 14430  1F0A  0850               	movf	?_fuel_uint_to_float^(0+128),w
 14431  1F0B  0023               	movlb	3	; select bank3
 14432  1F0C  00CE               	movwf	(_fuel^(0+384)+4)
 14433                           
 14434                           ;fuel.c: 125:     tmp = ADC_GetConversion (FUEL);
 14435  1F0D  3012               	movlw	18
 14436  1F0E  319A  223D  319E   	fcall	_ADC_GetConversion
 14437  1F11  0021               	movlb	1	; select bank1
 14438  1F12  0829               	movf	(?_ADC_GetConversion+1)^(0+128),w
 14439  1F13  00DE               	movwf	(fuel_calibration@tmp+1)^(0+128)
 14440  1F14  0828               	movf	?_ADC_GetConversion^(0+128),w
 14441  1F15  00DD               	movwf	fuel_calibration@tmp^(0+128)
 14442  1F16                     __ccov684_end_blk0:
 14443  1F16                     __ccov685_start_blk1:
 14444  1F16                     l7830:
 14445                           
 14446                           ;fuel.c: 126:     if (fuel.adc_value != tmp) {
 14447  1F16  085E               	movf	(fuel_calibration@tmp+1)^(0+128),w
 14448  1F17  0023               	movlb	3	; select bank3
 14449  1F18  064B               	xorwf	(_fuel+1)^(0+384),w
 14450  1F19  1D03               	skipz
 14451  1F1A  2F1F               	goto	u9365
 14452  1F1B  0021               	movlb	1	; select bank1
 14453  1F1C  085D               	movf	fuel_calibration@tmp^(0+128),w
 14454  1F1D  0023               	movlb	3	; select bank3
 14455  1F1E  064A               	xorwf	_fuel^(0+384),w
 14456  1F1F                     u9365:
 14457  1F1F  1903               	skipnz
 14458  1F20  2F22               	goto	u9361
 14459  1F21  2F23               	goto	u9360
 14460  1F22                     u9361:
 14461  1F22  2F2C               	goto	l7834
 14462  1F23                     __ccov685_end_blk1:
 14463  1F23                     u9360:
 14464  1F23                     __ccov686_start_blk2:
 14465  1F23                     l7832:
 14466  1F23  1555               	bsf	(__ccovbit2_173/(0+8))^(0+384),__ccovbit2_173& (0+7)	;volatile
 14467                           
 14468                           ;fuel.c: 127:         fuel.adc_value = tmp;
 14469  1F24  0021               	movlb	1	; select bank1
 14470  1F25  085E               	movf	(fuel_calibration@tmp+1)^(0+128),w
 14471  1F26  0023               	movlb	3	; select bank3
 14472  1F27  00CB               	movwf	(_fuel+1)^(0+384)
 14473  1F28  0021               	movlb	1	; select bank1
 14474  1F29  085D               	movf	fuel_calibration@tmp^(0+128),w
 14475  1F2A  0023               	movlb	3	; select bank3
 14476  1F2B  00CA               	movwf	_fuel^(0+384)
 14477  1F2C                     __ccov686_end_blk2:
 14478  1F2C                     __ccov687_start_blk4:
 14479  1F2C                     l7834:
 14480                           
 14481                           ;fuel.c: 130:     fuel_pwm_calculate ();
 14482  1F2C  319D  2574  319E   	fcall	_fuel_pwm_calculate
 14483  1F2F                     __ccov687_end_blk4:
 14484  1F2F                     __ccov688_start_blk5:
 14485  1F2F                     l7836:
 14486                           
 14487                           ;fuel.c: 131:     PWM5_LoadDutyValue (fuel.pwm_value);
 14488  1F2F  0023               	movlb	3	; select bank3
 14489  1F30  084D               	movf	((_fuel+1)^(0+384)+2),w
 14490  1F31  0021               	movlb	1	; select bank1
 14491  1F32  00A9               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128)
 14492  1F33  0023               	movlb	3	; select bank3
 14493  1F34  084C               	movf	(_fuel^(0+384)+2),w
 14494  1F35  0021               	movlb	1	; select bank1
 14495  1F36  00A8               	movwf	PWM5_LoadDutyValue@dutyValue^(0+128)
 14496  1F37  3199  2196  319E   	fcall	_PWM5_LoadDutyValue
 14497  1F3A                     __ccov688_end_blk5:
 14498  1F3A                     __ccov689_start_blk6:
 14499  1F3A                     l7838:
 14500                           
 14501                           ;fuel.c: 133:     fuel_percent_calculate ();
 14502  1F3A  319D  253D  319E   	fcall	_fuel_percent_calculate
 14503  1F3D                     __ccov689_end_blk6:
 14504  1F3D                     __ccov690_start_blk7:
 14505  1F3D                     l7840:
 14506                           
 14507                           ;fuel.c: 134:     fuel_low_check();
 14508  1F3D  319E  2602  319E   	fcall	_fuel_low_check
 14509  1F40                     __ccov690_end_blk7:
 14510  1F40                     __ccov691_start_blk8:
 14511  1F40                     l1034:
 14512  1F40  0023               	movlb	3	; select bank3
 14513  1F41  14D5               	bsf	(__ccovbit8_174/(0+8))^(0+384),__ccovbit8_174& (0+7)	;volatile
 14514  1F42  0008               	return
 14515  1F43                     __end_of_fuel_calibration:
 14516  1F43                     
 14517                           	psect	text28
 14518  1BEE                     __ptext28:	
 14519 ;; *************** function _fuel_uint_to_float *****************
 14520 ;; Defined at:
 14521 ;;		line 46 in file "fuel.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;  value           2   48[BANK1 ] unsigned short 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;		None
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  4   48[BANK1 ] float 
 14528 ;; Registers used:
 14529 ;;		wreg, status,2, status,0, pclath, cstack
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/0
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14535 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14538 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14539 ;;Total ram usage:        4 bytes
 14540 ;; Hardware stack levels used:    1
 14541 ;; Hardware stack levels required when called:   14
 14542 ;; This function calls:
 14543 ;;		___flmul
 14544 ;;		___xxtofl
 14545 ;; This function is called by:
 14546 ;;		_fuel_calibration
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           
 14551                           ;psect for function _fuel_uint_to_float
 14552  1BEE                     _fuel_uint_to_float:
 14553                           
 14554                           ;incstack = 0
 14555                           ; Regs used in _fuel_uint_to_float: [wreg+status,2+status,0+pclath+cstack]
 14556  1BEE                     l7600:
 14557                           
 14558                           ;fuel.c: 46: static float fuel_uint_to_float (u16 value);fuel.c: 47: {;fuel.c: 48:     r
      +                          eturn ((2.0f/1023) * value);
 14559  1BEE  303B               	movlw	59
 14560  1BEF  0021               	movlb	1	; select bank1
 14561  1BF0  00B9               	movwf	(___flmul@b+3)^(0+128)
 14562  1BF1  3000               	movlw	0
 14563  1BF2  00B8               	movwf	(___flmul@b+2)^(0+128)
 14564  1BF3  3020               	movlw	32
 14565  1BF4  00B7               	movwf	(___flmul@b+1)^(0+128)
 14566  1BF5  3008               	movlw	8
 14567  1BF6  00B6               	movwf	___flmul@b^(0+128)
 14568  1BF7  0850               	movf	fuel_uint_to_float@value^(0+128),w
 14569  1BF8  00A8               	movwf	___xxtofl@val^(0+128)
 14570  1BF9  0851               	movf	(fuel_uint_to_float@value+1)^(0+128),w
 14571  1BFA  00A9               	movwf	(___xxtofl@val^(0+128)+1)
 14572  1BFB  01AA               	clrf	(___xxtofl@val^(0+128)+2)
 14573  1BFC  01AB               	clrf	(___xxtofl@val^(0+128)+3)
 14574  1BFD  3000               	movlw	0
 14575  1BFE  3192  22E2  319B   	fcall	___xxtofl
 14576  1C01  0021               	movlb	1	; select bank1
 14577  1C02  082B               	movf	(?___xxtofl+3)^(0+128),w
 14578  1C03  00BD               	movwf	(___flmul@a+3)^(0+128)
 14579  1C04  082A               	movf	(?___xxtofl+2)^(0+128),w
 14580  1C05  00BC               	movwf	(___flmul@a+2)^(0+128)
 14581  1C06  0829               	movf	(?___xxtofl+1)^(0+128),w
 14582  1C07  00BB               	movwf	(___flmul@a+1)^(0+128)
 14583  1C08  0828               	movf	?___xxtofl^(0+128),w
 14584  1C09  00BA               	movwf	___flmul@a^(0+128)
 14585  1C0A  3180  207C  319B   	fcall	___flmul
 14586  1C0D  0021               	movlb	1	; select bank1
 14587  1C0E  0839               	movf	(?___flmul+3)^(0+128),w
 14588  1C0F  00D3               	movwf	(?_fuel_uint_to_float+3)^(0+128)
 14589  1C10  0838               	movf	(?___flmul+2)^(0+128),w
 14590  1C11  00D2               	movwf	(?_fuel_uint_to_float+2)^(0+128)
 14591  1C12  0837               	movf	(?___flmul+1)^(0+128),w
 14592  1C13  00D1               	movwf	(?_fuel_uint_to_float+1)^(0+128)
 14593  1C14  0836               	movf	?___flmul^(0+128),w
 14594  1C15  00D0               	movwf	?_fuel_uint_to_float^(0+128)
 14595  1C16                     __ccov650_end_blk0:
 14596  1C16                     __ccov651_start_blk2:
 14597  1C16                     l999:
 14598  1C16  0023               	movlb	3	; select bank3
 14599  1C17  1557               	bsf	(__ccovbit2_157/(0+8))^(0+384),__ccovbit2_157& (0+7)	;volatile
 14600  1C18  0008               	return
 14601  1C19                     __end_of_fuel_uint_to_float:
 14602  1C19                     
 14603                           	psect	text29
 14604  1D74                     __ptext29:	
 14605 ;; *************** function _fuel_pwm_calculate *****************
 14606 ;; Defined at:
 14607 ;;		line 34 in file "fuel.c"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;		None
 14610 ;; Auto vars:     Size  Location     Type
 14611 ;;		None
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  2   59[BANK1 ] unsigned short 
 14614 ;; Registers used:
 14615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14621 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14624 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14625 ;;Total ram usage:        2 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:   14
 14628 ;; This function calls:
 14629 ;;		___flmul
 14630 ;;		___fltol
 14631 ;;		___xxtofl
 14632 ;; This function is called by:
 14633 ;;		_fuel_init
 14634 ;;		_fuel_get
 14635 ;;		_fuel_calibration
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           
 14640                           ;psect for function _fuel_pwm_calculate
 14641  1D74                     _fuel_pwm_calculate:
 14642                           
 14643                           ;incstack = 0
 14644                           ; Regs used in _fuel_pwm_calculate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14645  1D74                     l7588:
 14646                           
 14647                           ;fuel.c: 36:     fuel.pwm_value = (u16)(fuel.corr * (float)fuel.adc_value);
 14648  1D74  0023               	movlb	3	; select bank3
 14649  1D75  084A               	movf	_fuel^(0+384),w
 14650  1D76  0021               	movlb	1	; select bank1
 14651  1D77  00A8               	movwf	___xxtofl@val^(0+128)
 14652  1D78  0023               	movlb	3	; select bank3
 14653  1D79  084B               	movf	(_fuel+1)^(0+384),w
 14654  1D7A  0021               	movlb	1	; select bank1
 14655  1D7B  00A9               	movwf	(___xxtofl@val^(0+128)+1)
 14656  1D7C  01AA               	clrf	(___xxtofl@val^(0+128)+2)
 14657  1D7D  01AB               	clrf	(___xxtofl@val^(0+128)+3)
 14658  1D7E  3000               	movlw	0
 14659  1D7F  3192  22E2  319D   	fcall	___xxtofl
 14660  1D82  0021               	movlb	1	; select bank1
 14661  1D83  082B               	movf	(?___xxtofl+3)^(0+128),w
 14662  1D84  00BD               	movwf	(___flmul@a+3)^(0+128)
 14663  1D85  082A               	movf	(?___xxtofl+2)^(0+128),w
 14664  1D86  00BC               	movwf	(___flmul@a+2)^(0+128)
 14665  1D87  0829               	movf	(?___xxtofl+1)^(0+128),w
 14666  1D88  00BB               	movwf	(___flmul@a+1)^(0+128)
 14667  1D89  0828               	movf	?___xxtofl^(0+128),w
 14668  1D8A  00BA               	movwf	___flmul@a^(0+128)
 14669  1D8B  3004               	movlw	4
 14670  1D8C  3ECA               	addlw	(low (_fuel| (0+256)))& (0+255)
 14671  1D8D  0086               	movwf	6
 14672  1D8E  3001               	movlw	1	; select bank3/4
 14673  1D8F  0087               	movwf	7
 14674  1D90  3F40               	moviw [0]fsr1
 14675  1D91  00B6               	movwf	___flmul@b^(0+128)
 14676  1D92  3F41               	moviw [1]fsr1
 14677  1D93  00B7               	movwf	(___flmul@b+1)^(0+128)
 14678  1D94  3F42               	moviw [2]fsr1
 14679  1D95  00B8               	movwf	(___flmul@b+2)^(0+128)
 14680  1D96  3F43               	moviw [3]fsr1
 14681  1D97  00B9               	movwf	(___flmul@b+3)^(0+128)
 14682  1D98  3180  207C  319D   	fcall	___flmul
 14683  1D9B  0021               	movlb	1	; select bank1
 14684  1D9C  0839               	movf	(?___flmul+3)^(0+128),w
 14685  1D9D  00D3               	movwf	(___fltol@f1+3)^(0+128)
 14686  1D9E  0838               	movf	(?___flmul+2)^(0+128),w
 14687  1D9F  00D2               	movwf	(___fltol@f1+2)^(0+128)
 14688  1DA0  0837               	movf	(?___flmul+1)^(0+128),w
 14689  1DA1  00D1               	movwf	(___fltol@f1+1)^(0+128)
 14690  1DA2  0836               	movf	?___flmul^(0+128),w
 14691  1DA3  00D0               	movwf	___fltol@f1^(0+128)
 14692  1DA4  3191  212F  319D   	fcall	___fltol
 14693  1DA7  0021               	movlb	1	; select bank1
 14694  1DA8  0851               	movf	(?___fltol+1)^(0+128),w
 14695  1DA9  0023               	movlb	3	; select bank3
 14696  1DAA  00CD               	movwf	((_fuel+1)^(0+384)+2)
 14697  1DAB  0021               	movlb	1	; select bank1
 14698  1DAC  0850               	movf	?___fltol^(0+128),w
 14699  1DAD  0023               	movlb	3	; select bank3
 14700  1DAE  00CC               	movwf	(_fuel^(0+384)+2)
 14701  1DAF                     __ccov644_end_blk0:
 14702  1DAF                     __ccov645_start_blk1:
 14703  1DAF                     l7590:
 14704                           
 14705                           ;fuel.c: 37:     return fuel.pwm_value;
 14706  1DAF  084D               	movf	((_fuel+1)^(0+384)+2),w
 14707  1DB0  0021               	movlb	1	; select bank1
 14708  1DB1  00DC               	movwf	(?_fuel_pwm_calculate+1)^(0+128)
 14709  1DB2  0023               	movlb	3	; select bank3
 14710  1DB3  084C               	movf	(_fuel^(0+384)+2),w
 14711  1DB4  0021               	movlb	1	; select bank1
 14712  1DB5  00DB               	movwf	?_fuel_pwm_calculate^(0+128)
 14713  1DB6                     __ccov645_end_blk1:
 14714  1DB6                     __ccov646_start_blk3:
 14715  1DB6                     l993:
 14716  1DB6  0023               	movlb	3	; select bank3
 14717  1DB7  1657               	bsf	(__ccovbit3_155/(0+8))^(0+384),__ccovbit3_155& (0+7)	;volatile
 14718  1DB8  0008               	return
 14719  1DB9                     __end_of_fuel_pwm_calculate:
 14720  1DB9                     
 14721                           	psect	text30
 14722  1D3D                     __ptext30:	
 14723 ;; *************** function _fuel_percent_calculate *****************
 14724 ;; Defined at:
 14725 ;;		line 40 in file "fuel.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;		None
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;		None
 14730 ;; Return value:  Size  Location     Type
 14731 ;;                  1    wreg      unsigned char 
 14732 ;; Registers used:
 14733 ;;		wreg, status,2, status,0, pclath, cstack
 14734 ;; Tracked objects:
 14735 ;;		On entry : 0/0
 14736 ;;		On exit  : 0/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14741 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14742 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14743 ;;Total ram usage:        1 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:   14
 14746 ;; This function calls:
 14747 ;;		___flmul
 14748 ;;		___fltol
 14749 ;;		___xxtofl
 14750 ;; This function is called by:
 14751 ;;		_fuel_init
 14752 ;;		_fuel_get
 14753 ;;		_fuel_calibration
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757                           
 14758                           ;psect for function _fuel_percent_calculate
 14759  1D3D                     _fuel_percent_calculate:
 14760                           
 14761                           ;incstack = 0
 14762                           ; Regs used in _fuel_percent_calculate: [wreg+status,2+status,0+pclath+cstack]
 14763  1D3D                     l7594:
 14764                           
 14765                           ;fuel.c: 42:     fuel.percent = (u8)(0.5F * (float)fuel.adc_value);
 14766  1D3D  0023               	movlb	3	; select bank3
 14767  1D3E  084A               	movf	_fuel^(0+384),w
 14768  1D3F  0021               	movlb	1	; select bank1
 14769  1D40  00A8               	movwf	___xxtofl@val^(0+128)
 14770  1D41  0023               	movlb	3	; select bank3
 14771  1D42  084B               	movf	(_fuel+1)^(0+384),w
 14772  1D43  0021               	movlb	1	; select bank1
 14773  1D44  00A9               	movwf	(___xxtofl@val^(0+128)+1)
 14774  1D45  01AA               	clrf	(___xxtofl@val^(0+128)+2)
 14775  1D46  01AB               	clrf	(___xxtofl@val^(0+128)+3)
 14776  1D47  3000               	movlw	0
 14777  1D48  3192  22E2  319D   	fcall	___xxtofl
 14778  1D4B  0021               	movlb	1	; select bank1
 14779  1D4C  082B               	movf	(?___xxtofl+3)^(0+128),w
 14780  1D4D  00BD               	movwf	(___flmul@a+3)^(0+128)
 14781  1D4E  082A               	movf	(?___xxtofl+2)^(0+128),w
 14782  1D4F  00BC               	movwf	(___flmul@a+2)^(0+128)
 14783  1D50  0829               	movf	(?___xxtofl+1)^(0+128),w
 14784  1D51  00BB               	movwf	(___flmul@a+1)^(0+128)
 14785  1D52  0828               	movf	?___xxtofl^(0+128),w
 14786  1D53  00BA               	movwf	___flmul@a^(0+128)
 14787  1D54  303F               	movlw	63
 14788  1D55  00B9               	movwf	(___flmul@b+3)^(0+128)
 14789  1D56  3000               	movlw	0
 14790  1D57  00B8               	movwf	(___flmul@b+2)^(0+128)
 14791  1D58  3000               	movlw	0
 14792  1D59  00B7               	movwf	(___flmul@b+1)^(0+128)
 14793  1D5A  3000               	movlw	0
 14794  1D5B  00B6               	movwf	___flmul@b^(0+128)
 14795  1D5C  3180  207C  319D   	fcall	___flmul
 14796  1D5F  0021               	movlb	1	; select bank1
 14797  1D60  0839               	movf	(?___flmul+3)^(0+128),w
 14798  1D61  00D3               	movwf	(___fltol@f1+3)^(0+128)
 14799  1D62  0838               	movf	(?___flmul+2)^(0+128),w
 14800  1D63  00D2               	movwf	(___fltol@f1+2)^(0+128)
 14801  1D64  0837               	movf	(?___flmul+1)^(0+128),w
 14802  1D65  00D1               	movwf	(___fltol@f1+1)^(0+128)
 14803  1D66  0836               	movf	?___flmul^(0+128),w
 14804  1D67  00D0               	movwf	___fltol@f1^(0+128)
 14805  1D68  3191  212F  319D   	fcall	___fltol
 14806  1D6B  0021               	movlb	1	; select bank1
 14807  1D6C  0850               	movf	?___fltol^(0+128),w
 14808  1D6D  00DB               	movwf	??_fuel_percent_calculate^(0+128)
 14809  1D6E  085B               	movf	??_fuel_percent_calculate^(0+128),w
 14810  1D6F  0023               	movlb	3	; select bank3
 14811  1D70  00D2               	movwf	(_fuel^(0+384)+8)
 14812  1D71                     __ccov647_end_blk0:
 14813  1D71                     __ccov648_start_blk1:
 14814  1D71                     l7596:
 14815                           
 14816                           ;fuel.c: 43:     return fuel.percent;
 14817  1D71  0852               	movf	(_fuel^(0+384)+8),w
 14818  1D72                     __ccov648_end_blk1:
 14819  1D72                     __ccov649_start_blk3:
 14820  1D72                     l996:
 14821  1D72  15D7               	bsf	(__ccovbit3_156/(0+8))^(0+384),__ccovbit3_156& (0+7)	;volatile
 14822  1D73  0008               	return
 14823  1D74                     __end_of_fuel_percent_calculate:
 14824  1D74                     
 14825                           	psect	text31
 14826  12E2                     __ptext31:	
 14827 ;; *************** function ___xxtofl *****************
 14828 ;; Defined at:
 14829 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;  sign            1    wreg     unsigned char 
 14832 ;;  val             4    8[BANK1 ] long 
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;  sign            1   16[BANK1 ] unsigned char 
 14835 ;;  arg             4   18[BANK1 ] unsigned long 
 14836 ;;  exp             1   17[BANK1 ] unsigned char 
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  4    8[BANK1 ] unsigned char 
 14839 ;; Registers used:
 14840 ;;		wreg, status,2, status,0
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14846 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14847 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14848 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14849 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14850 ;;Total ram usage:       14 bytes
 14851 ;; Hardware stack levels used:    1
 14852 ;; Hardware stack levels required when called:   12
 14853 ;; This function calls:
 14854 ;;		Nothing
 14855 ;; This function is called by:
 14856 ;;		_spd_uint_to_float
 14857 ;;		_fuel_pwm_calculate
 14858 ;;		_fuel_percent_calculate
 14859 ;;		_fuel_uint_to_float
 14860 ;; This function uses a non-reentrant model
 14861 ;;
 14862                           
 14863                           
 14864                           ;psect for function ___xxtofl
 14865  12E2                     ___xxtofl:
 14866                           
 14867                           ;incstack = 0
 14868                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14869                           ;___xxtofl@sign stored from wreg
 14870  12E2  0021               	movlb	1	; select bank1
 14871  12E3  00B0               	movwf	___xxtofl@sign^(0+128)
 14872  12E4                     l7058:
 14873  12E4  0830               	movf	___xxtofl@sign^(0+128),w
 14874  12E5  1903               	btfsc	3,2
 14875  12E6  2AE8               	goto	u8481
 14876  12E7  2AE9               	goto	u8480
 14877  12E8                     u8481:
 14878  12E8  2AFD               	goto	l7064
 14879  12E9                     u8480:
 14880  12E9                     l7060:
 14881  12E9  1FAB               	btfss	(___xxtofl@val+3)^(0+128),7
 14882  12EA  2AEC               	goto	u8491
 14883  12EB  2AED               	goto	u8490
 14884  12EC                     u8491:
 14885  12EC  2AFD               	goto	l7064
 14886  12ED                     u8490:
 14887  12ED                     l7062:
 14888  12ED  0928               	comf	___xxtofl@val^(0+128),w
 14889  12EE  00B2               	movwf	___xxtofl@arg^(0+128)
 14890  12EF  0929               	comf	(___xxtofl@val^(0+128)+1),w
 14891  12F0  00B3               	movwf	(___xxtofl@arg+1)^(0+128)
 14892  12F1  092A               	comf	(___xxtofl@val^(0+128)+2),w
 14893  12F2  00B4               	movwf	(___xxtofl@arg+2)^(0+128)
 14894  12F3  092B               	comf	(___xxtofl@val^(0+128)+3),w
 14895  12F4  00B5               	movwf	(___xxtofl@arg+3)^(0+128)
 14896  12F5  0AB2               	incf	___xxtofl@arg^(0+128),f
 14897  12F6  1903               	skipnz
 14898  12F7  0AB3               	incf	(___xxtofl@arg+1)^(0+128),f
 14899  12F8  1903               	skipnz
 14900  12F9  0AB4               	incf	(___xxtofl@arg+2)^(0+128),f
 14901  12FA  1903               	skipnz
 14902  12FB  0AB5               	incf	(___xxtofl@arg+3)^(0+128),f
 14903  12FC  2B05               	goto	l1636
 14904  12FD                     l7064:
 14905  12FD  082B               	movf	(___xxtofl@val+3)^(0+128),w
 14906  12FE  00B5               	movwf	(___xxtofl@arg+3)^(0+128)
 14907  12FF  082A               	movf	(___xxtofl@val+2)^(0+128),w
 14908  1300  00B4               	movwf	(___xxtofl@arg+2)^(0+128)
 14909  1301  0829               	movf	(___xxtofl@val+1)^(0+128),w
 14910  1302  00B3               	movwf	(___xxtofl@arg+1)^(0+128)
 14911  1303  0828               	movf	___xxtofl@val^(0+128),w
 14912  1304  00B2               	movwf	___xxtofl@arg^(0+128)
 14913  1305                     l1636:
 14914  1305  082B               	movf	(___xxtofl@val+3)^(0+128),w
 14915  1306  042A               	iorwf	(___xxtofl@val+2)^(0+128),w
 14916  1307  0429               	iorwf	(___xxtofl@val+1)^(0+128),w
 14917  1308  0428               	iorwf	___xxtofl@val^(0+128),w
 14918  1309  1D03               	skipz
 14919  130A  2B0C               	goto	u8501
 14920  130B  2B0D               	goto	u8500
 14921  130C                     u8501:
 14922  130C  2B16               	goto	l7070
 14923  130D                     u8500:
 14924  130D                     l7066:
 14925  130D  3000               	movlw	0
 14926  130E  00AB               	movwf	(?___xxtofl+3)^(0+128)
 14927  130F  3000               	movlw	0
 14928  1310  00AA               	movwf	(?___xxtofl+2)^(0+128)
 14929  1311  3000               	movlw	0
 14930  1312  00A9               	movwf	(?___xxtofl+1)^(0+128)
 14931  1313  3000               	movlw	0
 14932  1314  00A8               	movwf	?___xxtofl^(0+128)
 14933  1315  2B8E               	goto	l1638
 14934  1316                     l7070:
 14935  1316  3096               	movlw	150
 14936  1317  00AC               	movwf	??___xxtofl^(0+128)
 14937  1318  082C               	movf	??___xxtofl^(0+128),w
 14938  1319  00B1               	movwf	___xxtofl@exp^(0+128)
 14939  131A  2B26               	goto	l7074
 14940  131B                     l7072:
 14941  131B  3001               	movlw	1
 14942  131C  00AC               	movwf	??___xxtofl^(0+128)
 14943  131D  082C               	movf	??___xxtofl^(0+128),w
 14944  131E  07B1               	addwf	___xxtofl@exp^(0+128),f
 14945  131F  3001               	movlw	1
 14946  1320                     u8515:
 14947  1320  36B5               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14948  1321  0CB4               	rrf	(___xxtofl@arg+2)^(0+128),f
 14949  1322  0CB3               	rrf	(___xxtofl@arg+1)^(0+128),f
 14950  1323  0CB2               	rrf	___xxtofl@arg^(0+128),f
 14951  1324  0B89               	decfsz	9,f
 14952  1325  2B20               	goto	u8515
 14953  1326                     l7074:
 14954  1326  30FE               	movlw	254
 14955  1327  0535               	andwf	(___xxtofl@arg+3)^(0+128),w
 14956  1328  1D03               	btfss	3,2
 14957  1329  2B2B               	goto	u8521
 14958  132A  2B2C               	goto	u8520
 14959  132B                     u8521:
 14960  132B  2B1B               	goto	l7072
 14961  132C                     u8520:
 14962  132C  2B40               	goto	l1642
 14963  132D                     l7076:
 14964  132D  3001               	movlw	1
 14965  132E  00AC               	movwf	??___xxtofl^(0+128)
 14966  132F  082C               	movf	??___xxtofl^(0+128),w
 14967  1330  07B1               	addwf	___xxtofl@exp^(0+128),f
 14968  1331                     l7078:
 14969  1331  3001               	movlw	1
 14970  1332  07B2               	addwf	___xxtofl@arg^(0+128),f
 14971  1333  3000               	movlw	0
 14972  1334  3DB3               	addwfc	(___xxtofl@arg+1)^(0+128),f
 14973  1335  3000               	movlw	0
 14974  1336  3DB4               	addwfc	(___xxtofl@arg+2)^(0+128),f
 14975  1337  3000               	movlw	0
 14976  1338  3DB5               	addwfc	(___xxtofl@arg+3)^(0+128),f
 14977  1339                     l7080:
 14978  1339  3001               	movlw	1
 14979  133A                     u8535:
 14980  133A  36B5               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14981  133B  0CB4               	rrf	(___xxtofl@arg+2)^(0+128),f
 14982  133C  0CB3               	rrf	(___xxtofl@arg+1)^(0+128),f
 14983  133D  0CB2               	rrf	___xxtofl@arg^(0+128),f
 14984  133E  0B89               	decfsz	9,f
 14985  133F  2B3A               	goto	u8535
 14986  1340                     l1642:
 14987  1340  30FF               	movlw	255
 14988  1341  0535               	andwf	(___xxtofl@arg+3)^(0+128),w
 14989  1342  1D03               	btfss	3,2
 14990  1343  2B45               	goto	u8541
 14991  1344  2B46               	goto	u8540
 14992  1345                     u8541:
 14993  1345  2B2D               	goto	l7076
 14994  1346                     u8540:
 14995  1346  2B50               	goto	l7084
 14996  1347                     l7082:
 14997  1347  3001               	movlw	1
 14998  1348  02B1               	subwf	___xxtofl@exp^(0+128),f
 14999  1349  3001               	movlw	1
 15000  134A                     u8555:
 15001  134A  35B2               	lslf	___xxtofl@arg^(0+128),f
 15002  134B  0DB3               	rlf	(___xxtofl@arg+1)^(0+128),f
 15003  134C  0DB4               	rlf	(___xxtofl@arg+2)^(0+128),f
 15004  134D  0DB5               	rlf	(___xxtofl@arg+3)^(0+128),f
 15005  134E  0B89               	decfsz	9,f
 15006  134F  2B4A               	goto	u8555
 15007  1350                     l7084:
 15008  1350  1BB4               	btfsc	(___xxtofl@arg+2)^(0+128),7
 15009  1351  2B53               	goto	u8561
 15010  1352  2B54               	goto	u8560
 15011  1353                     u8561:
 15012  1353  2B5A               	goto	l1649
 15013  1354                     u8560:
 15014  1354                     l7086:
 15015  1354  3002               	movlw	2
 15016  1355  0231               	subwf	___xxtofl@exp^(0+128),w
 15017  1356  1803               	skipnc
 15018  1357  2B59               	goto	u8571
 15019  1358  2B5A               	goto	u8570
 15020  1359                     u8571:
 15021  1359  2B47               	goto	l7082
 15022  135A                     u8570:
 15023  135A                     l1649:
 15024  135A  1831               	btfsc	___xxtofl@exp^(0+128),0
 15025  135B  2B5D               	goto	u8581
 15026  135C  2B5E               	goto	u8580
 15027  135D                     u8581:
 15028  135D  2B66               	goto	l1650
 15029  135E                     u8580:
 15030  135E                     l7088:
 15031  135E  30FF               	movlw	255
 15032  135F  05B2               	andwf	___xxtofl@arg^(0+128),f
 15033  1360  30FF               	movlw	255
 15034  1361  05B3               	andwf	(___xxtofl@arg+1)^(0+128),f
 15035  1362  307F               	movlw	127
 15036  1363  05B4               	andwf	(___xxtofl@arg+2)^(0+128),f
 15037  1364  30FF               	movlw	255
 15038  1365  05B5               	andwf	(___xxtofl@arg+3)^(0+128),f
 15039  1366                     l1650:
 15040  1366  1003               	clrc
 15041  1367  0CB1               	rrf	___xxtofl@exp^(0+128),f
 15042  1368                     l7090:
 15043  1368  0831               	movf	___xxtofl@exp^(0+128),w
 15044  1369  00AC               	movwf	??___xxtofl^(0+128)
 15045  136A  01AD               	clrf	(??___xxtofl^(0+128)+1)
 15046  136B  01AE               	clrf	(??___xxtofl^(0+128)+2)
 15047  136C  01AF               	clrf	(??___xxtofl^(0+128)+3)
 15048  136D  3018               	movlw	24
 15049  136E                     u8595:
 15050  136E  35AC               	lslf	??___xxtofl^(0+128),f
 15051  136F  0DAD               	rlf	(??___xxtofl^(0+128)+1),f
 15052  1370  0DAE               	rlf	(??___xxtofl^(0+128)+2),f
 15053  1371  0DAF               	rlf	(??___xxtofl^(0+128)+3),f
 15054  1372                     u8590:
 15055  1372  0B89               	decfsz	9,f
 15056  1373  2B6E               	goto	u8595
 15057  1374  082C               	movf	??___xxtofl^(0+128),w
 15058  1375  04B2               	iorwf	___xxtofl@arg^(0+128),f
 15059  1376  082D               	movf	(??___xxtofl+1)^(0+128),w
 15060  1377  04B3               	iorwf	(___xxtofl@arg+1)^(0+128),f
 15061  1378  082E               	movf	(??___xxtofl+2)^(0+128),w
 15062  1379  04B4               	iorwf	(___xxtofl@arg+2)^(0+128),f
 15063  137A  082F               	movf	(??___xxtofl+3)^(0+128),w
 15064  137B  04B5               	iorwf	(___xxtofl@arg+3)^(0+128),f
 15065  137C                     l7092:
 15066  137C  0830               	movf	___xxtofl@sign^(0+128),w
 15067  137D  1903               	btfsc	3,2
 15068  137E  2B80               	goto	u8601
 15069  137F  2B81               	goto	u8600
 15070  1380                     u8601:
 15071  1380  2B86               	goto	l7098
 15072  1381                     u8600:
 15073  1381                     l7094:
 15074  1381  1FAB               	btfss	(___xxtofl@val+3)^(0+128),7
 15075  1382  2B84               	goto	u8611
 15076  1383  2B85               	goto	u8610
 15077  1384                     u8611:
 15078  1384  2B86               	goto	l7098
 15079  1385                     u8610:
 15080  1385                     l7096:
 15081  1385  17B5               	bsf	(___xxtofl@arg^(0+128)+3),7
 15082  1386                     l7098:
 15083  1386  0835               	movf	(___xxtofl@arg+3)^(0+128),w
 15084  1387  00AB               	movwf	(?___xxtofl+3)^(0+128)
 15085  1388  0834               	movf	(___xxtofl@arg+2)^(0+128),w
 15086  1389  00AA               	movwf	(?___xxtofl+2)^(0+128)
 15087  138A  0833               	movf	(___xxtofl@arg+1)^(0+128),w
 15088  138B  00A9               	movwf	(?___xxtofl+1)^(0+128)
 15089  138C  0832               	movf	___xxtofl@arg^(0+128),w
 15090  138D  00A8               	movwf	?___xxtofl^(0+128)
 15091  138E                     l1638:
 15092  138E  0008               	return
 15093  138F                     __end_of___xxtofl:
 15094                           
 15095                           	psect	text32
 15096  112F                     __ptext32:	
 15097 ;; *************** function ___fltol *****************
 15098 ;; Defined at:
 15099 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;  f1              4   48[BANK1 ] unsigned char 
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;  exp1            1   58[BANK1 ] unsigned char 
 15104 ;;  sign1           1   57[BANK1 ] unsigned char 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  4   48[BANK1 ] long 
 15107 ;; Registers used:
 15108 ;;		wreg, status,2, status,0
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15114 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15115 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15116 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;Total ram usage:       11 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:   12
 15121 ;; This function calls:
 15122 ;;		Nothing
 15123 ;; This function is called by:
 15124 ;;		_fuel_pwm_calculate
 15125 ;;		_fuel_percent_calculate
 15126 ;; This function uses a non-reentrant model
 15127 ;;
 15128                           
 15129                           
 15130                           ;psect for function ___fltol
 15131  112F                     ___fltol:
 15132  112F                     l6882:	
 15133                           ;incstack = 0
 15134                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15135                           
 15136  112F  1003               	clrc
 15137  1130  0021               	movlb	1	; select bank1
 15138  1131  0D52               	rlf	(___fltol@f1+2)^(0+128),w
 15139  1132  0D53               	rlf	(___fltol@f1+3)^(0+128),w
 15140  1133  00D4               	movwf	??___fltol^(0+128)
 15141  1134  0854               	movf	??___fltol^(0+128),w
 15142  1135  00DA               	movwf	___fltol@exp1^(0+128)
 15143  1136  085A               	movf	___fltol@exp1^(0+128),w
 15144  1137  1D03               	btfss	3,2
 15145  1138  293A               	goto	u8121
 15146  1139  293B               	goto	u8120
 15147  113A                     u8121:
 15148  113A  2944               	goto	l6888
 15149  113B                     u8120:
 15150  113B                     l6884:
 15151  113B  3000               	movlw	0
 15152  113C  00D3               	movwf	(?___fltol+3)^(0+128)
 15153  113D  3000               	movlw	0
 15154  113E  00D2               	movwf	(?___fltol+2)^(0+128)
 15155  113F  3000               	movlw	0
 15156  1140  00D1               	movwf	(?___fltol+1)^(0+128)
 15157  1141  3000               	movlw	0
 15158  1142  00D0               	movwf	?___fltol^(0+128)
 15159  1143  29A3               	goto	l1389
 15160  1144                     l6888:
 15161  1144  0850               	movf	___fltol@f1^(0+128),w
 15162  1145  00D4               	movwf	??___fltol^(0+128)
 15163  1146  0851               	movf	(___fltol@f1+1)^(0+128),w
 15164  1147  00D5               	movwf	(??___fltol^(0+128)+1)
 15165  1148  0852               	movf	(___fltol@f1+2)^(0+128),w
 15166  1149  00D6               	movwf	(??___fltol^(0+128)+2)
 15167  114A  0853               	movf	(___fltol@f1+3)^(0+128),w
 15168  114B  00D7               	movwf	(??___fltol^(0+128)+3)
 15169  114C  301F               	movlw	31
 15170  114D                     u8135:
 15171  114D  36D7               	lsrf	(??___fltol^(0+128)+3),f
 15172  114E  0CD6               	rrf	(??___fltol^(0+128)+2),f
 15173  114F  0CD5               	rrf	(??___fltol^(0+128)+1),f
 15174  1150  0CD4               	rrf	??___fltol^(0+128),f
 15175  1151                     u8130:
 15176  1151  0B89               	decfsz	9,f
 15177  1152  294D               	goto	u8135
 15178  1153  0854               	movf	??___fltol^(0+128),w
 15179  1154  00D8               	movwf	(??___fltol+4)^(0+128)
 15180  1155  0858               	movf	(??___fltol+4)^(0+128),w
 15181  1156  00D9               	movwf	___fltol@sign1^(0+128)
 15182  1157                     l6890:
 15183  1157  17D2               	bsf	(___fltol@f1^(0+128)+2),7
 15184  1158                     l6892:
 15185  1158  30FF               	movlw	255
 15186  1159  05D0               	andwf	___fltol@f1^(0+128),f
 15187  115A  30FF               	movlw	255
 15188  115B  05D1               	andwf	(___fltol@f1+1)^(0+128),f
 15189  115C  30FF               	movlw	255
 15190  115D  05D2               	andwf	(___fltol@f1+2)^(0+128),f
 15191  115E  3000               	movlw	0
 15192  115F  05D3               	andwf	(___fltol@f1+3)^(0+128),f
 15193  1160                     l6894:
 15194  1160  3096               	movlw	150
 15195  1161  02DA               	subwf	___fltol@exp1^(0+128),f
 15196  1162                     l6896:
 15197  1162  1FDA               	btfss	___fltol@exp1^(0+128),7
 15198  1163  2965               	goto	u8141
 15199  1164  2966               	goto	u8140
 15200  1165                     u8141:
 15201  1165  297E               	goto	l6906
 15202  1166                     u8140:
 15203  1166                     l6898:
 15204  1166  085A               	movf	___fltol@exp1^(0+128),w
 15205  1167  3A80               	xorlw	128
 15206  1168  3E97               	addlw	151
 15207  1169  1803               	skipnc
 15208  116A  296C               	goto	u8151
 15209  116B  296D               	goto	u8150
 15210  116C                     u8151:
 15211  116C  296E               	goto	l6904
 15212  116D                     u8150:
 15213  116D  293B               	goto	l6884
 15214  116E                     l6904:
 15215  116E  3001               	movlw	1
 15216  116F                     u8165:
 15217  116F  36D3               	lsrf	(___fltol@f1+3)^(0+128),f
 15218  1170  0CD2               	rrf	(___fltol@f1+2)^(0+128),f
 15219  1171  0CD1               	rrf	(___fltol@f1+1)^(0+128),f
 15220  1172  0CD0               	rrf	___fltol@f1^(0+128),f
 15221  1173  0B89               	decfsz	9,f
 15222  1174  296F               	goto	u8165
 15223  1175  3001               	movlw	1
 15224  1176  00D4               	movwf	??___fltol^(0+128)
 15225  1177  0854               	movf	??___fltol^(0+128),w
 15226  1178  07DA               	addwf	___fltol@exp1^(0+128),f
 15227  1179  1D03               	btfss	3,2
 15228  117A  297C               	goto	u8171
 15229  117B  297D               	goto	u8170
 15230  117C                     u8171:
 15231  117C  296E               	goto	l6904
 15232  117D                     u8170:
 15233  117D  2993               	goto	l6914
 15234  117E                     l6906:
 15235  117E  3020               	movlw	32
 15236  117F  025A               	subwf	___fltol@exp1^(0+128),w
 15237  1180  1C03               	skipc
 15238  1181  2983               	goto	u8181
 15239  1182  2984               	goto	u8180
 15240  1183                     u8181:
 15241  1183  298E               	goto	l1396
 15242  1184                     u8180:
 15243  1184  293B               	goto	l6884
 15244  1185                     l6912:
 15245  1185  3001               	movlw	1
 15246  1186                     u8195:
 15247  1186  35D0               	lslf	___fltol@f1^(0+128),f
 15248  1187  0DD1               	rlf	(___fltol@f1+1)^(0+128),f
 15249  1188  0DD2               	rlf	(___fltol@f1+2)^(0+128),f
 15250  1189  0DD3               	rlf	(___fltol@f1+3)^(0+128),f
 15251  118A  0B89               	decfsz	9,f
 15252  118B  2986               	goto	u8195
 15253  118C  3001               	movlw	1
 15254  118D  02DA               	subwf	___fltol@exp1^(0+128),f
 15255  118E                     l1396:
 15256  118E  085A               	movf	___fltol@exp1^(0+128),w
 15257  118F  1D03               	btfss	3,2
 15258  1190  2992               	goto	u8201
 15259  1191  2993               	goto	u8200
 15260  1192                     u8201:
 15261  1192  2985               	goto	l6912
 15262  1193                     u8200:
 15263  1193                     l6914:
 15264  1193  0859               	movf	___fltol@sign1^(0+128),w
 15265  1194  1903               	btfsc	3,2
 15266  1195  2997               	goto	u8211
 15267  1196  2998               	goto	u8210
 15268  1197                     u8211:
 15269  1197  29A3               	goto	l1399
 15270  1198                     u8210:
 15271  1198                     l6916:
 15272  1198  09D0               	comf	___fltol@f1^(0+128),f
 15273  1199  09D1               	comf	(___fltol@f1+1)^(0+128),f
 15274  119A  09D2               	comf	(___fltol@f1+2)^(0+128),f
 15275  119B  09D3               	comf	(___fltol@f1+3)^(0+128),f
 15276  119C  0AD0               	incf	___fltol@f1^(0+128),f
 15277  119D  1903               	skipnz
 15278  119E  0AD1               	incf	(___fltol@f1+1)^(0+128),f
 15279  119F  1903               	skipnz
 15280  11A0  0AD2               	incf	(___fltol@f1+2)^(0+128),f
 15281  11A1  1903               	skipnz
 15282  11A2  0AD3               	incf	(___fltol@f1+3)^(0+128),f
 15283  11A3                     l1399:
 15284  11A3                     l1389:
 15285  11A3  0008               	return
 15286  11A4                     __end_of___fltol:
 15287                           
 15288                           	psect	text33
 15289  007C                     __ptext33:	
 15290 ;; *************** function ___flmul *****************
 15291 ;; Defined at:
 15292 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;  b               4   22[BANK1 ] long 
 15295 ;;  a               4   26[BANK1 ] long 
 15296 ;; Auto vars:     Size  Location     Type
 15297 ;;  prod            4   42[BANK1 ] struct .
 15298 ;;  grs             4   37[BANK1 ] unsigned long 
 15299 ;;  temp            2   46[BANK1 ] struct .
 15300 ;;  bexp            1   41[BANK1 ] unsigned char 
 15301 ;;  aexp            1   36[BANK1 ] unsigned char 
 15302 ;;  sign            1   35[BANK1 ] unsigned char 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  4   22[BANK1 ] unsigned char 
 15305 ;; Registers used:
 15306 ;;		wreg, status,2, status,0, pclath, cstack
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15312 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15313 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15314 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15315 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15316 ;;Total ram usage:       26 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:   13
 15319 ;; This function calls:
 15320 ;;		__Umul8_16
 15321 ;; This function is called by:
 15322 ;;		_spd_uint_to_float
 15323 ;;		_fuel_pwm_calculate
 15324 ;;		_fuel_percent_calculate
 15325 ;;		_fuel_uint_to_float
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329                           
 15330                           ;psect for function ___flmul
 15331  007C                     ___flmul:
 15332  007C                     l6918:	
 15333                           ;incstack = 0
 15334                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15335                           
 15336  007C  0021               	movlb	1	; select bank1
 15337  007D  0839               	movf	(___flmul@b^(0+128)+3),w
 15338  007E  3980               	andlw	128
 15339  007F  00BE               	movwf	??___flmul^(0+128)
 15340  0080  083E               	movf	??___flmul^(0+128),w
 15341  0081  00C3               	movwf	___flmul@sign^(0+128)
 15342  0082                     l6920:
 15343  0082  3539               	lslf	(___flmul@b^(0+128)+3),w
 15344  0083  00BE               	movwf	??___flmul^(0+128)
 15345  0084  083E               	movf	??___flmul^(0+128),w
 15346  0085  00C9               	movwf	___flmul@bexp^(0+128)
 15347  0086                     l6922:
 15348  0086  1FB8               	btfss	(___flmul@b^(0+128)+2),7
 15349  0087  2889               	goto	u8221
 15350  0088  288A               	goto	u8220
 15351  0089                     u8221:
 15352  0089  288B               	goto	l6926
 15353  008A                     u8220:
 15354  008A                     l6924:
 15355  008A  1449               	bsf	___flmul@bexp^(0+128),0
 15356  008B                     l6926:
 15357  008B  0849               	movf	___flmul@bexp^(0+128),w
 15358  008C  1903               	btfsc	3,2
 15359  008D  288F               	goto	u8231
 15360  008E  2890               	goto	u8230
 15361  008F                     u8231:
 15362  008F  289F               	goto	l6934
 15363  0090                     u8230:
 15364  0090                     l6928:
 15365  0090  0A49               	incf	___flmul@bexp^(0+128),w
 15366  0091  1D03               	btfss	3,2
 15367  0092  2894               	goto	u8241
 15368  0093  2895               	goto	u8240
 15369  0094                     u8241:
 15370  0094  289D               	goto	l6932
 15371  0095                     u8240:
 15372  0095                     l6930:
 15373  0095  3000               	movlw	0
 15374  0096  00B9               	movwf	(___flmul@b+3)^(0+128)
 15375  0097  3000               	movlw	0
 15376  0098  00B8               	movwf	(___flmul@b+2)^(0+128)
 15377  0099  3000               	movlw	0
 15378  009A  00B7               	movwf	(___flmul@b+1)^(0+128)
 15379  009B  3000               	movlw	0
 15380  009C  00B6               	movwf	___flmul@b^(0+128)
 15381  009D                     l6932:
 15382  009D  17B8               	bsf	(___flmul@b^(0+128)+2),7
 15383  009E  28A7               	goto	l6936
 15384  009F                     l6934:
 15385  009F  3000               	movlw	0
 15386  00A0  00B9               	movwf	(___flmul@b+3)^(0+128)
 15387  00A1  3000               	movlw	0
 15388  00A2  00B8               	movwf	(___flmul@b+2)^(0+128)
 15389  00A3  3000               	movlw	0
 15390  00A4  00B7               	movwf	(___flmul@b+1)^(0+128)
 15391  00A5  3000               	movlw	0
 15392  00A6  00B6               	movwf	___flmul@b^(0+128)
 15393  00A7                     l6936:
 15394  00A7  083D               	movf	(___flmul@a^(0+128)+3),w
 15395  00A8  3980               	andlw	128
 15396  00A9  00BE               	movwf	??___flmul^(0+128)
 15397  00AA  083E               	movf	??___flmul^(0+128),w
 15398  00AB  06C3               	xorwf	___flmul@sign^(0+128),f
 15399  00AC                     l6938:
 15400  00AC  353D               	lslf	(___flmul@a^(0+128)+3),w
 15401  00AD  00BE               	movwf	??___flmul^(0+128)
 15402  00AE  083E               	movf	??___flmul^(0+128),w
 15403  00AF  00C4               	movwf	___flmul@aexp^(0+128)
 15404  00B0                     l6940:
 15405  00B0  1FBC               	btfss	(___flmul@a^(0+128)+2),7
 15406  00B1  28B3               	goto	u8251
 15407  00B2  28B4               	goto	u8250
 15408  00B3                     u8251:
 15409  00B3  28B5               	goto	l6944
 15410  00B4                     u8250:
 15411  00B4                     l6942:
 15412  00B4  1444               	bsf	___flmul@aexp^(0+128),0
 15413  00B5                     l6944:
 15414  00B5  0844               	movf	___flmul@aexp^(0+128),w
 15415  00B6  1903               	btfsc	3,2
 15416  00B7  28B9               	goto	u8261
 15417  00B8  28BA               	goto	u8260
 15418  00B9                     u8261:
 15419  00B9  28C9               	goto	l6952
 15420  00BA                     u8260:
 15421  00BA                     l6946:
 15422  00BA  0A44               	incf	___flmul@aexp^(0+128),w
 15423  00BB  1D03               	btfss	3,2
 15424  00BC  28BE               	goto	u8271
 15425  00BD  28BF               	goto	u8270
 15426  00BE                     u8271:
 15427  00BE  28C7               	goto	l6950
 15428  00BF                     u8270:
 15429  00BF                     l6948:
 15430  00BF  3000               	movlw	0
 15431  00C0  00BD               	movwf	(___flmul@a+3)^(0+128)
 15432  00C1  3000               	movlw	0
 15433  00C2  00BC               	movwf	(___flmul@a+2)^(0+128)
 15434  00C3  3000               	movlw	0
 15435  00C4  00BB               	movwf	(___flmul@a+1)^(0+128)
 15436  00C5  3000               	movlw	0
 15437  00C6  00BA               	movwf	___flmul@a^(0+128)
 15438  00C7                     l6950:
 15439  00C7  17BC               	bsf	(___flmul@a^(0+128)+2),7
 15440  00C8  28D1               	goto	l6954
 15441  00C9                     l6952:
 15442  00C9  3000               	movlw	0
 15443  00CA  00BD               	movwf	(___flmul@a+3)^(0+128)
 15444  00CB  3000               	movlw	0
 15445  00CC  00BC               	movwf	(___flmul@a+2)^(0+128)
 15446  00CD  3000               	movlw	0
 15447  00CE  00BB               	movwf	(___flmul@a+1)^(0+128)
 15448  00CF  3000               	movlw	0
 15449  00D0  00BA               	movwf	___flmul@a^(0+128)
 15450  00D1                     l6954:
 15451  00D1  0844               	movf	___flmul@aexp^(0+128),w
 15452  00D2  1903               	btfsc	3,2
 15453  00D3  28D5               	goto	u8281
 15454  00D4  28D6               	goto	u8280
 15455  00D5                     u8281:
 15456  00D5  28DB               	goto	l6958
 15457  00D6                     u8280:
 15458  00D6                     l6956:
 15459  00D6  0849               	movf	___flmul@bexp^(0+128),w
 15460  00D7  1D03               	btfss	3,2
 15461  00D8  28DA               	goto	u8291
 15462  00D9  28DB               	goto	u8290
 15463  00DA                     u8291:
 15464  00DA  28E4               	goto	l6962
 15465  00DB                     u8290:
 15466  00DB                     l6958:
 15467  00DB  3000               	movlw	0
 15468  00DC  00B9               	movwf	(?___flmul+3)^(0+128)
 15469  00DD  3000               	movlw	0
 15470  00DE  00B8               	movwf	(?___flmul+2)^(0+128)
 15471  00DF  3000               	movlw	0
 15472  00E0  00B7               	movwf	(?___flmul+1)^(0+128)
 15473  00E1  3000               	movlw	0
 15474  00E2  00B6               	movwf	?___flmul^(0+128)
 15475  00E3  2AD2               	goto	l1592
 15476  00E4                     l6962:
 15477  00E4  0836               	movf	___flmul@b^(0+128),w
 15478  00E5  00BE               	movwf	??___flmul^(0+128)
 15479  00E6  083E               	movf	??___flmul^(0+128),w
 15480  00E7  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15481  00E8  083C               	movf	(___flmul@a^(0+128)+2),w
 15482  00E9  319B  2301  3180   	fcall	__Umul8_16
 15483  00EC  0021               	movlb	1	; select bank1
 15484  00ED  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15485  00EE  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15486  00EF  0828               	movf	?__Umul8_16^(0+128),w
 15487  00F0  00CE               	movwf	___flmul@temp^(0+128)
 15488  00F1                     l6964:
 15489  00F1  084E               	movf	___flmul@temp^(0+128),w
 15490  00F2  00BE               	movwf	??___flmul^(0+128)
 15491  00F3  01BF               	clrf	(??___flmul^(0+128)+1)
 15492  00F4  01C0               	clrf	(??___flmul^(0+128)+2)
 15493  00F5  01C1               	clrf	(??___flmul^(0+128)+3)
 15494  00F6  0841               	movf	(??___flmul+3)^(0+128),w
 15495  00F7  00C8               	movwf	(___flmul@grs+3)^(0+128)
 15496  00F8  0840               	movf	(??___flmul+2)^(0+128),w
 15497  00F9  00C7               	movwf	(___flmul@grs+2)^(0+128)
 15498  00FA  083F               	movf	(??___flmul+1)^(0+128),w
 15499  00FB  00C6               	movwf	(___flmul@grs+1)^(0+128)
 15500  00FC  083E               	movf	??___flmul^(0+128),w
 15501  00FD  00C5               	movwf	___flmul@grs^(0+128)
 15502  00FE                     l6966:
 15503  00FE  084F               	movf	(___flmul@temp^(0+128)+1),w
 15504  00FF  00BE               	movwf	??___flmul^(0+128)
 15505  0100  01BF               	clrf	(??___flmul^(0+128)+1)
 15506  0101  01C0               	clrf	(??___flmul^(0+128)+2)
 15507  0102  01C1               	clrf	(??___flmul^(0+128)+3)
 15508  0103  0841               	movf	(??___flmul+3)^(0+128),w
 15509  0104  00CD               	movwf	(___flmul@prod+3)^(0+128)
 15510  0105  0840               	movf	(??___flmul+2)^(0+128),w
 15511  0106  00CC               	movwf	(___flmul@prod+2)^(0+128)
 15512  0107  083F               	movf	(??___flmul+1)^(0+128),w
 15513  0108  00CB               	movwf	(___flmul@prod+1)^(0+128)
 15514  0109  083E               	movf	??___flmul^(0+128),w
 15515  010A  00CA               	movwf	___flmul@prod^(0+128)
 15516  010B  0837               	movf	(___flmul@b^(0+128)+1),w
 15517  010C  00BE               	movwf	??___flmul^(0+128)
 15518  010D  083E               	movf	??___flmul^(0+128),w
 15519  010E  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15520  010F  083B               	movf	(___flmul@a^(0+128)+1),w
 15521  0110  319B  2301  3180   	fcall	__Umul8_16
 15522  0113  0021               	movlb	1	; select bank1
 15523  0114  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15524  0115  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15525  0116  0828               	movf	?__Umul8_16^(0+128),w
 15526  0117  00CE               	movwf	___flmul@temp^(0+128)
 15527  0118                     l6968:
 15528  0118  084E               	movf	___flmul@temp^(0+128),w
 15529  0119  00BE               	movwf	??___flmul^(0+128)
 15530  011A  01BF               	clrf	(??___flmul^(0+128)+1)
 15531  011B  01C0               	clrf	(??___flmul^(0+128)+2)
 15532  011C  01C1               	clrf	(??___flmul^(0+128)+3)
 15533  011D  083E               	movf	??___flmul^(0+128),w
 15534  011E  07C5               	addwf	___flmul@grs^(0+128),f
 15535  011F  083F               	movf	(??___flmul+1)^(0+128),w
 15536  0120  3DC6               	addwfc	(___flmul@grs+1)^(0+128),f
 15537  0121  0840               	movf	(??___flmul+2)^(0+128),w
 15538  0122  3DC7               	addwfc	(___flmul@grs+2)^(0+128),f
 15539  0123  0841               	movf	(??___flmul+3)^(0+128),w
 15540  0124  3DC8               	addwfc	(___flmul@grs+3)^(0+128),f
 15541  0125                     l6970:
 15542  0125  084F               	movf	(___flmul@temp^(0+128)+1),w
 15543  0126  00BE               	movwf	??___flmul^(0+128)
 15544  0127  01BF               	clrf	(??___flmul^(0+128)+1)
 15545  0128  01C0               	clrf	(??___flmul^(0+128)+2)
 15546  0129  01C1               	clrf	(??___flmul^(0+128)+3)
 15547  012A  083E               	movf	??___flmul^(0+128),w
 15548  012B  07CA               	addwf	___flmul@prod^(0+128),f
 15549  012C  083F               	movf	(??___flmul+1)^(0+128),w
 15550  012D  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15551  012E  0840               	movf	(??___flmul+2)^(0+128),w
 15552  012F  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15553  0130  0841               	movf	(??___flmul+3)^(0+128),w
 15554  0131  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15555  0132  0838               	movf	(___flmul@b^(0+128)+2),w
 15556  0133  00BE               	movwf	??___flmul^(0+128)
 15557  0134  083E               	movf	??___flmul^(0+128),w
 15558  0135  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15559  0136  083A               	movf	___flmul@a^(0+128),w
 15560  0137  319B  2301  3180   	fcall	__Umul8_16
 15561  013A  0021               	movlb	1	; select bank1
 15562  013B  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15563  013C  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15564  013D  0828               	movf	?__Umul8_16^(0+128),w
 15565  013E  00CE               	movwf	___flmul@temp^(0+128)
 15566  013F                     l6972:
 15567  013F  084E               	movf	___flmul@temp^(0+128),w
 15568  0140  00BE               	movwf	??___flmul^(0+128)
 15569  0141  01BF               	clrf	(??___flmul^(0+128)+1)
 15570  0142  01C0               	clrf	(??___flmul^(0+128)+2)
 15571  0143  01C1               	clrf	(??___flmul^(0+128)+3)
 15572  0144  083E               	movf	??___flmul^(0+128),w
 15573  0145  07C5               	addwf	___flmul@grs^(0+128),f
 15574  0146  083F               	movf	(??___flmul+1)^(0+128),w
 15575  0147  3DC6               	addwfc	(___flmul@grs+1)^(0+128),f
 15576  0148  0840               	movf	(??___flmul+2)^(0+128),w
 15577  0149  3DC7               	addwfc	(___flmul@grs+2)^(0+128),f
 15578  014A  0841               	movf	(??___flmul+3)^(0+128),w
 15579  014B  3DC8               	addwfc	(___flmul@grs+3)^(0+128),f
 15580  014C                     l6974:
 15581  014C  084F               	movf	(___flmul@temp^(0+128)+1),w
 15582  014D  00BE               	movwf	??___flmul^(0+128)
 15583  014E  01BF               	clrf	(??___flmul^(0+128)+1)
 15584  014F  01C0               	clrf	(??___flmul^(0+128)+2)
 15585  0150  01C1               	clrf	(??___flmul^(0+128)+3)
 15586  0151  083E               	movf	??___flmul^(0+128),w
 15587  0152  07CA               	addwf	___flmul@prod^(0+128),f
 15588  0153  083F               	movf	(??___flmul+1)^(0+128),w
 15589  0154  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15590  0155  0840               	movf	(??___flmul+2)^(0+128),w
 15591  0156  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15592  0157  0841               	movf	(??___flmul+3)^(0+128),w
 15593  0158  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15594  0159                     l6976:
 15595  0159  3008               	movlw	8
 15596  015A                     u8305:
 15597  015A  35C5               	lslf	___flmul@grs^(0+128),f
 15598  015B  0DC6               	rlf	(___flmul@grs+1)^(0+128),f
 15599  015C  0DC7               	rlf	(___flmul@grs+2)^(0+128),f
 15600  015D  0DC8               	rlf	(___flmul@grs+3)^(0+128),f
 15601  015E  0B89               	decfsz	9,f
 15602  015F  295A               	goto	u8305
 15603  0160                     l6978:
 15604  0160  0837               	movf	(___flmul@b^(0+128)+1),w
 15605  0161  00BE               	movwf	??___flmul^(0+128)
 15606  0162  083E               	movf	??___flmul^(0+128),w
 15607  0163  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15608  0164  083A               	movf	___flmul@a^(0+128),w
 15609  0165  319B  2301  3180   	fcall	__Umul8_16
 15610  0168  0021               	movlb	1	; select bank1
 15611  0169  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15612  016A  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15613  016B  0828               	movf	?__Umul8_16^(0+128),w
 15614  016C  00CE               	movwf	___flmul@temp^(0+128)
 15615  016D                     l6980:
 15616  016D  084E               	movf	___flmul@temp^(0+128),w
 15617  016E  07C5               	addwf	___flmul@grs^(0+128),f
 15618  016F  084F               	movf	(___flmul@temp+1)^(0+128),w
 15619  0170  3DC6               	addwfc	(___flmul@grs+1)^(0+128),f
 15620  0171  3000               	movlw	0
 15621  0172  3DC7               	addwfc	(___flmul@grs+2)^(0+128),f
 15622  0173  3DC8               	addwfc	(___flmul@grs+3)^(0+128),f
 15623  0174                     l6982:
 15624  0174  0836               	movf	___flmul@b^(0+128),w
 15625  0175  00BE               	movwf	??___flmul^(0+128)
 15626  0176  083E               	movf	??___flmul^(0+128),w
 15627  0177  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15628  0178  083B               	movf	(___flmul@a^(0+128)+1),w
 15629  0179  319B  2301  3180   	fcall	__Umul8_16
 15630  017C  0021               	movlb	1	; select bank1
 15631  017D  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15632  017E  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15633  017F  0828               	movf	?__Umul8_16^(0+128),w
 15634  0180  00CE               	movwf	___flmul@temp^(0+128)
 15635  0181                     l6984:
 15636  0181  084E               	movf	___flmul@temp^(0+128),w
 15637  0182  07C5               	addwf	___flmul@grs^(0+128),f
 15638  0183  084F               	movf	(___flmul@temp+1)^(0+128),w
 15639  0184  3DC6               	addwfc	(___flmul@grs+1)^(0+128),f
 15640  0185  3000               	movlw	0
 15641  0186  3DC7               	addwfc	(___flmul@grs+2)^(0+128),f
 15642  0187  3DC8               	addwfc	(___flmul@grs+3)^(0+128),f
 15643  0188                     l6986:
 15644  0188  3008               	movlw	8
 15645  0189                     u8315:
 15646  0189  35C5               	lslf	___flmul@grs^(0+128),f
 15647  018A  0DC6               	rlf	(___flmul@grs+1)^(0+128),f
 15648  018B  0DC7               	rlf	(___flmul@grs+2)^(0+128),f
 15649  018C  0DC8               	rlf	(___flmul@grs+3)^(0+128),f
 15650  018D  0B89               	decfsz	9,f
 15651  018E  2989               	goto	u8315
 15652  018F  0836               	movf	___flmul@b^(0+128),w
 15653  0190  00BE               	movwf	??___flmul^(0+128)
 15654  0191  083E               	movf	??___flmul^(0+128),w
 15655  0192  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15656  0193  083A               	movf	___flmul@a^(0+128),w
 15657  0194  319B  2301  3180   	fcall	__Umul8_16
 15658  0197  0021               	movlb	1	; select bank1
 15659  0198  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15660  0199  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15661  019A  0828               	movf	?__Umul8_16^(0+128),w
 15662  019B  00CE               	movwf	___flmul@temp^(0+128)
 15663  019C                     l6988:
 15664  019C  084E               	movf	___flmul@temp^(0+128),w
 15665  019D  07C5               	addwf	___flmul@grs^(0+128),f
 15666  019E  084F               	movf	(___flmul@temp+1)^(0+128),w
 15667  019F  3DC6               	addwfc	(___flmul@grs+1)^(0+128),f
 15668  01A0  3000               	movlw	0
 15669  01A1  3DC7               	addwfc	(___flmul@grs+2)^(0+128),f
 15670  01A2  3DC8               	addwfc	(___flmul@grs+3)^(0+128),f
 15671  01A3                     l6990:
 15672  01A3  0837               	movf	(___flmul@b^(0+128)+1),w
 15673  01A4  00BE               	movwf	??___flmul^(0+128)
 15674  01A5  083E               	movf	??___flmul^(0+128),w
 15675  01A6  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15676  01A7  083C               	movf	(___flmul@a^(0+128)+2),w
 15677  01A8  319B  2301  3180   	fcall	__Umul8_16
 15678  01AB  0021               	movlb	1	; select bank1
 15679  01AC  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15680  01AD  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15681  01AE  0828               	movf	?__Umul8_16^(0+128),w
 15682  01AF  00CE               	movwf	___flmul@temp^(0+128)
 15683  01B0  084E               	movf	___flmul@temp^(0+128),w
 15684  01B1  07CA               	addwf	___flmul@prod^(0+128),f
 15685  01B2  084F               	movf	(___flmul@temp+1)^(0+128),w
 15686  01B3  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15687  01B4  3000               	movlw	0
 15688  01B5  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15689  01B6  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15690  01B7                     l6992:
 15691  01B7  0838               	movf	(___flmul@b^(0+128)+2),w
 15692  01B8  00BE               	movwf	??___flmul^(0+128)
 15693  01B9  083E               	movf	??___flmul^(0+128),w
 15694  01BA  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15695  01BB  083B               	movf	(___flmul@a^(0+128)+1),w
 15696  01BC  319B  2301  3180   	fcall	__Umul8_16
 15697  01BF  0021               	movlb	1	; select bank1
 15698  01C0  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15699  01C1  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15700  01C2  0828               	movf	?__Umul8_16^(0+128),w
 15701  01C3  00CE               	movwf	___flmul@temp^(0+128)
 15702  01C4                     l6994:
 15703  01C4  084E               	movf	___flmul@temp^(0+128),w
 15704  01C5  07CA               	addwf	___flmul@prod^(0+128),f
 15705  01C6  084F               	movf	(___flmul@temp+1)^(0+128),w
 15706  01C7  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15707  01C8  3000               	movlw	0
 15708  01C9  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15709  01CA  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15710  01CB  0838               	movf	(___flmul@b^(0+128)+2),w
 15711  01CC  00BE               	movwf	??___flmul^(0+128)
 15712  01CD  083E               	movf	??___flmul^(0+128),w
 15713  01CE  00A8               	movwf	__Umul8_16@multiplicand^(0+128)
 15714  01CF  083C               	movf	(___flmul@a^(0+128)+2),w
 15715  01D0  319B  2301  3180   	fcall	__Umul8_16
 15716  01D3  0021               	movlb	1	; select bank1
 15717  01D4  0829               	movf	(?__Umul8_16+1)^(0+128),w
 15718  01D5  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15719  01D6  0828               	movf	?__Umul8_16^(0+128),w
 15720  01D7  00CE               	movwf	___flmul@temp^(0+128)
 15721  01D8                     l6996:
 15722  01D8  084E               	movf	___flmul@temp^(0+128),w
 15723  01D9  00BE               	movwf	??___flmul^(0+128)
 15724  01DA  084F               	movf	(___flmul@temp+1)^(0+128),w
 15725  01DB  00BF               	movwf	(??___flmul^(0+128)+1)
 15726  01DC  01C0               	clrf	(??___flmul^(0+128)+2)
 15727  01DD  01C1               	clrf	(??___flmul^(0+128)+3)
 15728  01DE  3008               	movlw	8
 15729  01DF                     u8325:
 15730  01DF  35BE               	lslf	??___flmul^(0+128),f
 15731  01E0  0DBF               	rlf	(??___flmul^(0+128)+1),f
 15732  01E1  0DC0               	rlf	(??___flmul^(0+128)+2),f
 15733  01E2  0DC1               	rlf	(??___flmul^(0+128)+3),f
 15734  01E3                     u8320:
 15735  01E3  0B89               	decfsz	9,f
 15736  01E4  29DF               	goto	u8325
 15737  01E5  083E               	movf	??___flmul^(0+128),w
 15738  01E6  07CA               	addwf	___flmul@prod^(0+128),f
 15739  01E7  083F               	movf	(??___flmul+1)^(0+128),w
 15740  01E8  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15741  01E9  0840               	movf	(??___flmul+2)^(0+128),w
 15742  01EA  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15743  01EB  0841               	movf	(??___flmul+3)^(0+128),w
 15744  01EC  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15745  01ED                     l6998:
 15746  01ED  0845               	movf	___flmul@grs^(0+128),w
 15747  01EE  00BE               	movwf	??___flmul^(0+128)
 15748  01EF  0846               	movf	(___flmul@grs+1)^(0+128),w
 15749  01F0  00BF               	movwf	(??___flmul^(0+128)+1)
 15750  01F1  0847               	movf	(___flmul@grs+2)^(0+128),w
 15751  01F2  00C0               	movwf	(??___flmul^(0+128)+2)
 15752  01F3  0848               	movf	(___flmul@grs+3)^(0+128),w
 15753  01F4  00C1               	movwf	(??___flmul^(0+128)+3)
 15754  01F5  3018               	movlw	24
 15755  01F6                     u8335:
 15756  01F6  36C1               	lsrf	(??___flmul^(0+128)+3),f
 15757  01F7  0CC0               	rrf	(??___flmul^(0+128)+2),f
 15758  01F8  0CBF               	rrf	(??___flmul^(0+128)+1),f
 15759  01F9  0CBE               	rrf	??___flmul^(0+128),f
 15760  01FA                     u8330:
 15761  01FA  0B89               	decfsz	9,f
 15762  01FB  29F6               	goto	u8335
 15763  01FC  083E               	movf	??___flmul^(0+128),w
 15764  01FD  07CA               	addwf	___flmul@prod^(0+128),f
 15765  01FE  083F               	movf	(??___flmul+1)^(0+128),w
 15766  01FF  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15767  0200  0840               	movf	(??___flmul+2)^(0+128),w
 15768  0201  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15769  0202  0841               	movf	(??___flmul+3)^(0+128),w
 15770  0203  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15771  0204                     l7000:
 15772  0204  3008               	movlw	8
 15773  0205                     u8345:
 15774  0205  35C5               	lslf	___flmul@grs^(0+128),f
 15775  0206  0DC6               	rlf	(___flmul@grs+1)^(0+128),f
 15776  0207  0DC7               	rlf	(___flmul@grs+2)^(0+128),f
 15777  0208  0DC8               	rlf	(___flmul@grs+3)^(0+128),f
 15778  0209  0B89               	decfsz	9,f
 15779  020A  2A05               	goto	u8345
 15780  020B                     l7002:
 15781  020B  0849               	movf	___flmul@bexp^(0+128),w
 15782  020C  0744               	addwf	___flmul@aexp^(0+128),w
 15783  020D  00BE               	movwf	??___flmul^(0+128)
 15784  020E  01BF               	clrf	(??___flmul^(0+128)+1)
 15785  020F  0DBF               	rlf	(??___flmul+1)^(0+128),f
 15786  0210  083E               	movf	??___flmul^(0+128),w
 15787  0211  3E82               	addlw	130
 15788  0212  00CE               	movwf	___flmul@temp^(0+128)
 15789  0213  30FF               	movlw	255
 15790  0214  3D3F               	addwfc	(??___flmul+1)^(0+128),w
 15791  0215  00CF               	movwf	(___flmul@temp+1)^(0+128)
 15792  0216  2A2E               	goto	l7014
 15793  0217                     l7004:
 15794  0217  3001               	movlw	1
 15795  0218                     u8355:
 15796  0218  35CA               	lslf	___flmul@prod^(0+128),f
 15797  0219  0DCB               	rlf	(___flmul@prod+1)^(0+128),f
 15798  021A  0DCC               	rlf	(___flmul@prod+2)^(0+128),f
 15799  021B  0DCD               	rlf	(___flmul@prod+3)^(0+128),f
 15800  021C  0B89               	decfsz	9,f
 15801  021D  2A18               	goto	u8355
 15802  021E                     l7006:
 15803  021E  1FC8               	btfss	(___flmul@grs+3)^(0+128),7
 15804  021F  2A21               	goto	u8361
 15805  0220  2A22               	goto	u8360
 15806  0221                     u8361:
 15807  0221  2A23               	goto	l7010
 15808  0222                     u8360:
 15809  0222                     l7008:
 15810  0222  144A               	bsf	___flmul@prod^(0+128),0
 15811  0223                     l7010:
 15812  0223  3001               	movlw	1
 15813  0224                     u8375:
 15814  0224  35C5               	lslf	___flmul@grs^(0+128),f
 15815  0225  0DC6               	rlf	(___flmul@grs+1)^(0+128),f
 15816  0226  0DC7               	rlf	(___flmul@grs+2)^(0+128),f
 15817  0227  0DC8               	rlf	(___flmul@grs+3)^(0+128),f
 15818  0228  0B89               	decfsz	9,f
 15819  0229  2A24               	goto	u8375
 15820  022A                     l7012:
 15821  022A  30FF               	movlw	255
 15822  022B  07CE               	addwf	___flmul@temp^(0+128),f
 15823  022C  30FF               	movlw	255
 15824  022D  3DCF               	addwfc	(___flmul@temp+1)^(0+128),f
 15825  022E                     l7014:
 15826  022E  1FCC               	btfss	(___flmul@prod+2)^(0+128),7
 15827  022F  2A31               	goto	u8381
 15828  0230  2A32               	goto	u8380
 15829  0231                     u8381:
 15830  0231  2A17               	goto	l7004
 15831  0232                     u8380:
 15832  0232                     l7016:
 15833  0232  01C4               	clrf	___flmul@aexp^(0+128)
 15834  0233                     l7018:
 15835  0233  1FC8               	btfss	(___flmul@grs+3)^(0+128),7
 15836  0234  2A36               	goto	u8391
 15837  0235  2A37               	goto	u8390
 15838  0236                     u8391:
 15839  0236  2A53               	goto	l7026
 15840  0237                     u8390:
 15841  0237                     l7020:
 15842  0237  30FF               	movlw	255
 15843  0238  0545               	andwf	___flmul@grs^(0+128),w
 15844  0239  00BE               	movwf	??___flmul^(0+128)
 15845  023A  30FF               	movlw	255
 15846  023B  0546               	andwf	(___flmul@grs+1)^(0+128),w
 15847  023C  00BF               	movwf	(??___flmul^(0+128)+1)
 15848  023D  30FF               	movlw	255
 15849  023E  0547               	andwf	(___flmul@grs+2)^(0+128),w
 15850  023F  00C0               	movwf	(??___flmul^(0+128)+2)
 15851  0240  307F               	movlw	127
 15852  0241  0548               	andwf	(___flmul@grs+3)^(0+128),w
 15853  0242  00C1               	movwf	(??___flmul^(0+128)+3)
 15854  0243  0841               	movf	(??___flmul+3)^(0+128),w
 15855  0244  0440               	iorwf	(??___flmul+2)^(0+128),w
 15856  0245  043F               	iorwf	(??___flmul+1)^(0+128),w
 15857  0246  043E               	iorwf	??___flmul^(0+128),w
 15858  0247  1903               	skipnz
 15859  0248  2A4A               	goto	u8401
 15860  0249  2A4B               	goto	u8400
 15861  024A                     u8401:
 15862  024A  2A4E               	goto	l1598
 15863  024B                     u8400:
 15864  024B                     l7022:
 15865  024B  01C4               	clrf	___flmul@aexp^(0+128)
 15866  024C  0AC4               	incf	___flmul@aexp^(0+128),f
 15867  024D  2A53               	goto	l7026
 15868  024E                     l1598:
 15869  024E  1C4A               	btfss	___flmul@prod^(0+128),0
 15870  024F  2A51               	goto	u8411
 15871  0250  2A52               	goto	u8410
 15872  0251                     u8411:
 15873  0251  2A53               	goto	l7026
 15874  0252                     u8410:
 15875  0252  2A4B               	goto	l7022
 15876  0253                     l7026:
 15877  0253  0844               	movf	___flmul@aexp^(0+128),w
 15878  0254  1903               	btfsc	3,2
 15879  0255  2A57               	goto	u8421
 15880  0256  2A58               	goto	u8420
 15881  0257                     u8421:
 15882  0257  2A80               	goto	l7036
 15883  0258                     u8420:
 15884  0258                     l7028:
 15885  0258  3001               	movlw	1
 15886  0259  07CA               	addwf	___flmul@prod^(0+128),f
 15887  025A  3000               	movlw	0
 15888  025B  3DCB               	addwfc	(___flmul@prod+1)^(0+128),f
 15889  025C  3000               	movlw	0
 15890  025D  3DCC               	addwfc	(___flmul@prod+2)^(0+128),f
 15891  025E  3000               	movlw	0
 15892  025F  3DCD               	addwfc	(___flmul@prod+3)^(0+128),f
 15893  0260                     l7030:
 15894  0260  1C4D               	btfss	(___flmul@prod+3)^(0+128),0
 15895  0261  2A63               	goto	u8431
 15896  0262  2A64               	goto	u8430
 15897  0263                     u8431:
 15898  0263  2A80               	goto	l7036
 15899  0264                     u8430:
 15900  0264                     l7032:
 15901  0264  084A               	movf	___flmul@prod^(0+128),w
 15902  0265  00BE               	movwf	??___flmul^(0+128)
 15903  0266  084B               	movf	(___flmul@prod+1)^(0+128),w
 15904  0267  00BF               	movwf	(??___flmul^(0+128)+1)
 15905  0268  084C               	movf	(___flmul@prod+2)^(0+128),w
 15906  0269  00C0               	movwf	(??___flmul^(0+128)+2)
 15907  026A  084D               	movf	(___flmul@prod+3)^(0+128),w
 15908  026B  00C1               	movwf	(??___flmul^(0+128)+3)
 15909  026C  3001               	movlw	1
 15910  026D  00C2               	movwf	(??___flmul+4)^(0+128)
 15911  026E                     u8445:
 15912  026E  37C1               	asrf	(??___flmul^(0+128)+3),f
 15913  026F  0CC0               	rrf	(??___flmul^(0+128)+2),f
 15914  0270  0CBF               	rrf	(??___flmul^(0+128)+1),f
 15915  0271  0CBE               	rrf	??___flmul^(0+128),f
 15916  0272                     u8440:
 15917  0272  0BC2               	decfsz	(??___flmul+4)^(0+128),f
 15918  0273  2A6E               	goto	u8445
 15919  0274  0841               	movf	(??___flmul+3)^(0+128),w
 15920  0275  00CD               	movwf	(___flmul@prod+3)^(0+128)
 15921  0276  0840               	movf	(??___flmul+2)^(0+128),w
 15922  0277  00CC               	movwf	(___flmul@prod+2)^(0+128)
 15923  0278  083F               	movf	(??___flmul+1)^(0+128),w
 15924  0279  00CB               	movwf	(___flmul@prod+1)^(0+128)
 15925  027A  083E               	movf	??___flmul^(0+128),w
 15926  027B  00CA               	movwf	___flmul@prod^(0+128)
 15927  027C                     l7034:
 15928  027C  3001               	movlw	1
 15929  027D  07CE               	addwf	___flmul@temp^(0+128),f
 15930  027E  3000               	movlw	0
 15931  027F  3DCF               	addwfc	(___flmul@temp+1)^(0+128),f
 15932  0280                     l7036:
 15933  0280  084F               	movf	(___flmul@temp+1)^(0+128),w
 15934  0281  3A80               	xorlw	128
 15935  0282  00BE               	movwf	??___flmul^(0+128)
 15936  0283  3080               	movlw	128
 15937  0284  023E               	subwf	??___flmul^(0+128),w
 15938  0285  1D03               	skipz
 15939  0286  2A89               	goto	u8455
 15940  0287  30FF               	movlw	255
 15941  0288  024E               	subwf	___flmul@temp^(0+128),w
 15942  0289                     u8455:
 15943  0289  1C03               	skipc
 15944  028A  2A8C               	goto	u8451
 15945  028B  2A8D               	goto	u8450
 15946  028C                     u8451:
 15947  028C  2A97               	goto	l7040
 15948  028D                     u8450:
 15949  028D                     l7038:
 15950  028D  307F               	movlw	127
 15951  028E  0021               	movlb	1	; select bank1
 15952  028F  00CD               	movwf	(___flmul@prod+3)^(0+128)
 15953  0290  3080               	movlw	128
 15954  0291  00CC               	movwf	(___flmul@prod+2)^(0+128)
 15955  0292  3000               	movlw	0
 15956  0293  00CB               	movwf	(___flmul@prod+1)^(0+128)
 15957  0294  3000               	movlw	0
 15958  0295  00CA               	movwf	___flmul@prod^(0+128)
 15959  0296  2AC6               	goto	l1604
 15960  0297                     l7040:
 15961  0297  0021               	movlb	1	; select bank1
 15962  0298  084F               	movf	(___flmul@temp+1)^(0+128),w
 15963  0299  3A80               	xorlw	128
 15964  029A  00BE               	movwf	??___flmul^(0+128)
 15965  029B  3080               	movlw	128
 15966  029C  023E               	subwf	??___flmul^(0+128),w
 15967  029D  1D03               	skipz
 15968  029E  2AA1               	goto	u8465
 15969  029F  3001               	movlw	1
 15970  02A0  024E               	subwf	___flmul@temp^(0+128),w
 15971  02A1                     u8465:
 15972  02A1  1803               	skipnc
 15973  02A2  2AA4               	goto	u8461
 15974  02A3  2AA5               	goto	u8460
 15975  02A4                     u8461:
 15976  02A4  2AB0               	goto	l7046
 15977  02A5                     u8460:
 15978  02A5                     l7042:
 15979  02A5  3000               	movlw	0
 15980  02A6  0021               	movlb	1	; select bank1
 15981  02A7  00CD               	movwf	(___flmul@prod+3)^(0+128)
 15982  02A8  3000               	movlw	0
 15983  02A9  00CC               	movwf	(___flmul@prod+2)^(0+128)
 15984  02AA  3000               	movlw	0
 15985  02AB  00CB               	movwf	(___flmul@prod+1)^(0+128)
 15986  02AC  3000               	movlw	0
 15987  02AD  00CA               	movwf	___flmul@prod^(0+128)
 15988  02AE                     l7044:
 15989  02AE  01C3               	clrf	___flmul@sign^(0+128)
 15990  02AF  2AC6               	goto	l1604
 15991  02B0                     l7046:
 15992  02B0  0021               	movlb	1	; select bank1
 15993  02B1  084E               	movf	___flmul@temp^(0+128),w
 15994  02B2  00BE               	movwf	??___flmul^(0+128)
 15995  02B3  083E               	movf	??___flmul^(0+128),w
 15996  02B4  00C9               	movwf	___flmul@bexp^(0+128)
 15997  02B5  30FF               	movlw	255
 15998  02B6  05CA               	andwf	___flmul@prod^(0+128),f
 15999  02B7  30FF               	movlw	255
 16000  02B8  05CB               	andwf	(___flmul@prod+1)^(0+128),f
 16001  02B9  307F               	movlw	127
 16002  02BA  05CC               	andwf	(___flmul@prod+2)^(0+128),f
 16003  02BB  3000               	movlw	0
 16004  02BC  05CD               	andwf	(___flmul@prod+3)^(0+128),f
 16005  02BD                     l7048:
 16006  02BD  1C49               	btfss	___flmul@bexp^(0+128),0
 16007  02BE  2AC0               	goto	u8471
 16008  02BF  2AC1               	goto	u8470
 16009  02C0                     u8471:
 16010  02C0  2AC2               	goto	l7052
 16011  02C1                     u8470:
 16012  02C1                     l7050:
 16013  02C1  17CC               	bsf	(___flmul@prod^(0+128)+2),7
 16014  02C2                     l7052:
 16015  02C2  3649               	lsrf	___flmul@bexp^(0+128),w
 16016  02C3  00BE               	movwf	??___flmul^(0+128)
 16017  02C4  083E               	movf	??___flmul^(0+128),w
 16018  02C5  00CD               	movwf	(___flmul@prod^(0+128)+3)
 16019  02C6                     l1604:
 16020  02C6  0843               	movf	___flmul@sign^(0+128),w
 16021  02C7  00BE               	movwf	??___flmul^(0+128)
 16022  02C8  083E               	movf	??___flmul^(0+128),w
 16023  02C9  04CD               	iorwf	(___flmul@prod^(0+128)+3),f
 16024  02CA                     l7054:
 16025  02CA  084D               	movf	(___flmul@prod+3)^(0+128),w
 16026  02CB  00B9               	movwf	(?___flmul+3)^(0+128)
 16027  02CC  084C               	movf	(___flmul@prod+2)^(0+128),w
 16028  02CD  00B8               	movwf	(?___flmul+2)^(0+128)
 16029  02CE  084B               	movf	(___flmul@prod+1)^(0+128),w
 16030  02CF  00B7               	movwf	(?___flmul+1)^(0+128)
 16031  02D0  084A               	movf	___flmul@prod^(0+128),w
 16032  02D1  00B6               	movwf	?___flmul^(0+128)
 16033  02D2                     l1592:
 16034  02D2  0008               	return
 16035  02D3                     __end_of___flmul:
 16036                           
 16037                           	psect	text34
 16038  1B01                     __ptext34:	
 16039 ;; *************** function __Umul8_16 *****************
 16040 ;; Defined at:
 16041 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;  multiplier      1    wreg     unsigned char 
 16044 ;;  multiplicand    1    8[BANK1 ] unsigned char 
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  multiplier      1   16[BANK1 ] unsigned char 
 16047 ;;  word_mpld       2   14[BANK1 ] unsigned int 
 16048 ;;  product         2   12[BANK1 ] unsigned int 
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  2    8[BANK1 ] unsigned int 
 16051 ;; Registers used:
 16052 ;;		wreg, status,2, status,0
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/0
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16059 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16060 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16061 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16062 ;;Total ram usage:        9 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:   12
 16065 ;; This function calls:
 16066 ;;		Nothing
 16067 ;; This function is called by:
 16068 ;;		___flmul
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           
 16073                           ;psect for function __Umul8_16
 16074  1B01                     __Umul8_16:
 16075                           
 16076                           ;incstack = 0
 16077                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16078                           ;__Umul8_16@multiplier stored from wreg
 16079  1B01  0021               	movlb	1	; select bank1
 16080  1B02  00B0               	movwf	__Umul8_16@multiplier^(0+128)
 16081  1B03                     l6742:
 16082  1B03  01AC               	clrf	__Umul8_16@product^(0+128)
 16083  1B04  01AD               	clrf	(__Umul8_16@product+1)^(0+128)
 16084  1B05                     l6744:
 16085  1B05  0828               	movf	__Umul8_16@multiplicand^(0+128),w
 16086  1B06  00AA               	movwf	??__Umul8_16^(0+128)
 16087  1B07  01AB               	clrf	(??__Umul8_16^(0+128)+1)
 16088  1B08  082A               	movf	??__Umul8_16^(0+128),w
 16089  1B09  00AE               	movwf	__Umul8_16@word_mpld^(0+128)
 16090  1B0A  082B               	movf	(??__Umul8_16+1)^(0+128),w
 16091  1B0B  00AF               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 16092  1B0C                     l6746:
 16093  1B0C  1C30               	btfss	__Umul8_16@multiplier^(0+128),0
 16094  1B0D  2B0F               	goto	u7971
 16095  1B0E  2B10               	goto	u7970
 16096  1B0F                     u7971:
 16097  1B0F  2B14               	goto	l1611
 16098  1B10                     u7970:
 16099  1B10                     l6748:
 16100  1B10  082E               	movf	__Umul8_16@word_mpld^(0+128),w
 16101  1B11  07AC               	addwf	__Umul8_16@product^(0+128),f
 16102  1B12  082F               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 16103  1B13  3DAD               	addwfc	(__Umul8_16@product+1)^(0+128),f
 16104  1B14                     l1611:
 16105  1B14  3001               	movlw	1
 16106  1B15                     u7985:
 16107  1B15  35AE               	lslf	__Umul8_16@word_mpld^(0+128),f
 16108  1B16  0DAF               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 16109  1B17  0B89               	decfsz	9,f
 16110  1B18  2B15               	goto	u7985
 16111  1B19  1003               	clrc
 16112  1B1A  0CB0               	rrf	__Umul8_16@multiplier^(0+128),f
 16113  1B1B                     l6750:
 16114  1B1B  0830               	movf	__Umul8_16@multiplier^(0+128),w
 16115  1B1C  1D03               	btfss	3,2
 16116  1B1D  2B1F               	goto	u7991
 16117  1B1E  2B20               	goto	u7990
 16118  1B1F                     u7991:
 16119  1B1F  2B0C               	goto	l6746
 16120  1B20                     u7990:
 16121  1B20                     l6752:
 16122  1B20  082D               	movf	(__Umul8_16@product+1)^(0+128),w
 16123  1B21  00A9               	movwf	(?__Umul8_16+1)^(0+128)
 16124  1B22  082C               	movf	__Umul8_16@product^(0+128),w
 16125  1B23  00A8               	movwf	?__Umul8_16^(0+128)
 16126  1B24                     l1613:
 16127  1B24  0008               	return
 16128  1B25                     __end_of__Umul8_16:
 16129                           
 16130                           	psect	text35
 16131  1E02                     __ptext35:	
 16132 ;; *************** function _fuel_low_check *****************
 16133 ;; Defined at:
 16134 ;;		line 51 in file "fuel.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;		None
 16137 ;; Auto vars:     Size  Location     Type
 16138 ;;		None
 16139 ;; Return value:  Size  Location     Type
 16140 ;;                  1    wreg      void 
 16141 ;; Registers used:
 16142 ;;		wreg, status,2, status,0, pclath, cstack
 16143 ;; Tracked objects:
 16144 ;;		On entry : 0/0
 16145 ;;		On exit  : 0/0
 16146 ;;		Unchanged: 0/0
 16147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16150 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16151 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16152 ;;Total ram usage:        1 bytes
 16153 ;; Hardware stack levels used:    1
 16154 ;; Hardware stack levels required when called:   13
 16155 ;; This function calls:
 16156 ;;		_fuel_set_low
 16157 ;;		_is_fuel_low
 16158 ;; This function is called by:
 16159 ;;		_fuel_get
 16160 ;;		_fuel_calibration
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164                           
 16165                           ;psect for function _fuel_low_check
 16166  1E02                     _fuel_low_check:
 16167                           
 16168                           ;incstack = 0
 16169                           ; Regs used in _fuel_low_check: [wreg+status,2+status,0+pclath+cstack]
 16170  1E02                     l7604:
 16171                           
 16172                           ;fuel.c: 53:     static u8 low_count = 0;;fuel.c: 55:     if (fuel.percent < 10U) {
 16173  1E02  300A               	movlw	10
 16174  1E03  0023               	movlb	3	; select bank3
 16175  1E04  0252               	subwf	(_fuel^(0+384)+8),w
 16176  1E05  1803               	skipnc
 16177  1E06  2E08               	goto	u9031
 16178  1E07  2E09               	goto	u9030
 16179  1E08                     u9031:
 16180  1E08  2E30               	goto	l7616
 16181  1E09                     __ccov652_end_blk0:
 16182  1E09                     u9030:
 16183  1E09                     __ccov653_start_blk1:
 16184  1E09                     l7606:
 16185  1E09  14D7               	bsf	(__ccovbit1_158/(0+8))^(0+384),__ccovbit1_158& (0+7)	;volatile
 16186                           
 16187                           ;fuel.c: 56:         if (!is_fuel_low()) {
 16188  1E0A  31A6  2672  319E   	fcall	_is_fuel_low
 16189  1E0D  3A00               	xorlw	0
 16190  1E0E  1D03               	skipz
 16191  1E0F  2E11               	goto	u9041
 16192  1E10  2E12               	goto	u9040
 16193  1E11                     u9041:
 16194  1E11  2E2B               	goto	l7614
 16195  1E12                     __ccov653_end_blk1:
 16196  1E12                     u9040:
 16197  1E12                     __ccov654_start_blk2:
 16198  1E12                     l7608:
 16199  1E12  0023               	movlb	3	; select bank3
 16200  1E13  1457               	bsf	(__ccovbit2_159/(0+8))^(0+384),__ccovbit2_159& (0+7)	;volatile
 16201                           
 16202                           ;fuel.c: 57:             if (low_count > 100U) {
 16203  1E14  3065               	movlw	101
 16204  1E15  0022               	movlb	2	; select bank2
 16205  1E16  025C               	subwf	fuel_low_check@low_count^(0+256),w
 16206  1E17  1C03               	skipc
 16207  1E18  2E1A               	goto	u9051
 16208  1E19  2E1B               	goto	u9050
 16209  1E1A                     u9051:
 16210  1E1A  2E22               	goto	l7612
 16211  1E1B                     __ccov654_end_blk2:
 16212  1E1B                     u9050:
 16213  1E1B                     __ccov655_start_blk3:
 16214  1E1B                     l7610:
 16215  1E1B  0023               	movlb	3	; select bank3
 16216  1E1C  17D6               	bsf	(__ccovbit3_160/(0+8))^(0+384),__ccovbit3_160& (0+7)	;volatile
 16217                           
 16218                           ;fuel.c: 58:                 fuel_set_low (1);
 16219  1E1D  3001               	movlw	1
 16220  1E1E  3198  20E5  319E   	fcall	_fuel_set_low
 16221                           
 16222                           ;fuel.c: 59:             } else {
 16223  1E21  2E48               	goto	l1014
 16224  1E22                     __ccov655_end_blk3:
 16225  1E22                     __ccov656_start_blk5:
 16226  1E22                     l7612:
 16227  1E22  0023               	movlb	3	; select bank3
 16228  1E23  1756               	bsf	(__ccovbit5_161/(0+8))^(0+384),__ccovbit5_161& (0+7)	;volatile
 16229                           
 16230                           ;fuel.c: 60:                 low_count++;
 16231  1E24  3001               	movlw	1
 16232  1E25  0021               	movlb	1	; select bank1
 16233  1E26  00AA               	movwf	??_fuel_low_check^(0+128)
 16234  1E27  082A               	movf	??_fuel_low_check^(0+128),w
 16235  1E28  0022               	movlb	2	; select bank2
 16236  1E29  07DC               	addwf	fuel_low_check@low_count^(0+256),f
 16237  1E2A  2E48               	goto	l1014
 16238  1E2B                     __ccov656_end_blk5:
 16239  1E2B                     __ccov657_start_blk8:
 16240  1E2B                     l7614:
 16241  1E2B  0023               	movlb	3	; select bank3
 16242  1E2C  16D6               	bsf	(__ccovbit8_162/(0+8))^(0+384),__ccovbit8_162& (0+7)	;volatile
 16243                           
 16244                           ;fuel.c: 63:             low_count = 0;
 16245  1E2D  0022               	movlb	2	; select bank2
 16246  1E2E  01DC               	clrf	fuel_low_check@low_count^(0+256)
 16247  1E2F  2E48               	goto	l1014
 16248  1E30                     __ccov657_end_blk8:
 16249  1E30                     __ccov658_start_blk11:
 16250  1E30                     l7616:
 16251  1E30  1656               	bsf	(__ccovbit11_163/(0+8))^(0+384),__ccovbit11_163& (0+7)	;volatile
 16252                           
 16253                           ;fuel.c: 66:         if (is_fuel_low()) {
 16254  1E31  31A6  2672  319E   	fcall	_is_fuel_low
 16255  1E34  3A00               	xorlw	0
 16256  1E35  1903               	skipnz
 16257  1E36  2E38               	goto	u9061
 16258  1E37  2E39               	goto	u9060
 16259  1E38                     u9061:
 16260  1E38  2E2B               	goto	l7614
 16261  1E39                     __ccov658_end_blk11:
 16262  1E39                     u9060:
 16263  1E39                     __ccov659_start_blk12:
 16264  1E39                     l7618:
 16265  1E39  0023               	movlb	3	; select bank3
 16266  1E3A  15D6               	bsf	(__ccovbit12_164/(0+8))^(0+384),__ccovbit12_164& (0+7)	;volatile
 16267                           
 16268                           ;fuel.c: 67:             if (low_count > 100U) {
 16269  1E3B  3065               	movlw	101
 16270  1E3C  0022               	movlb	2	; select bank2
 16271  1E3D  025C               	subwf	fuel_low_check@low_count^(0+256),w
 16272  1E3E  1C03               	skipc
 16273  1E3F  2E41               	goto	u9071
 16274  1E40  2E42               	goto	u9070
 16275  1E41                     u9071:
 16276  1E41  2E22               	goto	l7612
 16277  1E42                     __ccov659_end_blk12:
 16278  1E42                     u9070:
 16279  1E42                     __ccov660_start_blk13:
 16280  1E42                     l7620:
 16281  1E42  0023               	movlb	3	; select bank3
 16282  1E43  1556               	bsf	(__ccovbit13_165/(0+8))^(0+384),__ccovbit13_165& (0+7)	;volatile
 16283                           
 16284                           ;fuel.c: 68:                 fuel_set_low (0);
 16285  1E44  3000               	movlw	0
 16286  1E45  3198  20E5  319E   	fcall	_fuel_set_low
 16287  1E48                     __ccov660_end_blk13:
 16288  1E48                     __ccov661_start_blk21:
 16289  1E48                     l1014:	
 16290                           ;fuel.c: 69:             } else {
 16291                           
 16292  1E48  0023               	movlb	3	; select bank3
 16293  1E49  14D6               	bsf	(__ccovbit21_166/(0+8))^(0+384),__ccovbit21_166& (0+7)	;volatile
 16294  1E4A  0008               	return
 16295  1E4B                     __end_of_fuel_low_check:
 16296  1E4B                     
 16297                           	psect	text36
 16298  2672                     __ptext36:	
 16299 ;; *************** function _is_fuel_low *****************
 16300 ;; Defined at:
 16301 ;;		line 138 in file "fuel.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;		None
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;		None
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      _Bool 
 16308 ;; Registers used:
 16309 ;;		wreg
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16319 ;;Total ram usage:        0 bytes
 16320 ;; Hardware stack levels used:    1
 16321 ;; Hardware stack levels required when called:   12
 16322 ;; This function calls:
 16323 ;;		Nothing
 16324 ;; This function is called by:
 16325 ;;		_fuel_low_check
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           
 16330                           ;psect for function _is_fuel_low
 16331  2672                     _is_fuel_low:
 16332                           
 16333                           ;incstack = 0
 16334                           ; Regs used in _is_fuel_low: [wreg]
 16335  2672                     l6866:
 16336                           
 16337                           ;fuel.c: 139:     return fuel.low;
 16338  2672  0023               	movlb	3	; select bank3
 16339  2673  0853               	movf	(_fuel^(0+384)+9),w
 16340  2674                     __ccov692_end_blk0:
 16341  2674                     __ccov693_start_blk2:
 16342  2674                     l1037:
 16343  2674  1455               	bsf	(__ccovbit2_175/(0+8))^(0+384),__ccovbit2_175& (0+7)	;volatile
 16344  2675  0008               	return
 16345  2676                     __end_of_is_fuel_low:
 16346  2676                     
 16347                           	psect	text37
 16348  18E5                     __ptext37:	
 16349 ;; *************** function _fuel_set_low *****************
 16350 ;; Defined at:
 16351 ;;		line 25 in file "fuel.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;  var             1    wreg     _Bool 
 16354 ;; Auto vars:     Size  Location     Type
 16355 ;;  var             1    9[BANK1 ] _Bool 
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  1    wreg      void 
 16358 ;; Registers used:
 16359 ;;		wreg, status,2, status,0
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16366 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16367 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16368 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16369 ;;Total ram usage:        2 bytes
 16370 ;; Hardware stack levels used:    1
 16371 ;; Hardware stack levels required when called:   12
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_fuel_low_check
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           
 16380                           ;psect for function _fuel_set_low
 16381  18E5                     _fuel_set_low:
 16382                           
 16383                           ;incstack = 0
 16384                           ; Regs used in _fuel_set_low: [wreg+status,2+status,0]
 16385                           ;fuel_set_low@var stored from wreg
 16386  18E5  0021               	movlb	1	; select bank1
 16387  18E6  00A9               	movwf	fuel_set_low@var^(0+128)
 16388  18E7                     l6862:
 16389                           
 16390                           ;fuel.c: 26:     fuel.low = var;
 16391  18E7  0829               	movf	fuel_set_low@var^(0+128),w
 16392  18E8  00A8               	movwf	??_fuel_set_low^(0+128)
 16393  18E9  0828               	movf	??_fuel_set_low^(0+128),w
 16394  18EA  0023               	movlb	3	; select bank3
 16395  18EB  00D3               	movwf	(_fuel^(0+384)+9)
 16396  18EC                     __ccov639_end_blk0:
 16397  18EC                     __ccov640_start_blk1:
 16398  18EC                     l6864:
 16399                           
 16400                           ;fuel.c: 27:     if (fuel.low) {
 16401  18EC  0853               	movf	(_fuel^(0+384)+9),w
 16402  18ED  1903               	btfsc	3,2
 16403  18EE  28F0               	goto	u8081
 16404  18EF  28F1               	goto	u8080
 16405  18F0                     u8081:
 16406  18F0  28F5               	goto	l988
 16407  18F1                     __ccov640_end_blk1:
 16408  18F1                     u8080:
 16409  18F1                     __ccov641_start_blk2:
 16410  18F1                     l985:	
 16411                           ;fuel.c: 28:         do { LATCbits.LATC0 = 1; } while(0);
 16412                           
 16413  18F1  0022               	movlb	2	; select bank2
 16414  18F2  1420               	bsf	(__ccovbit2_152/(0+8))^(0+256),__ccovbit2_152& (0+7)	;volatile
 16415  18F3  140E               	bsf	14,0	;volatile
 16416  18F4  28F8               	goto	l990
 16417  18F5                     __ccov641_end_blk2:
 16418  18F5                     __ccov642_start_blk5:
 16419  18F5                     l988:	
 16420                           ;fuel.c: 30:         do { LATCbits.LATC0 = 0; } while(0);
 16421                           
 16422  18F5  1757               	bsf	(__ccovbit5_153/(0+8))^(0+384),__ccovbit5_153& (0+7)	;volatile
 16423  18F6  0022               	movlb	2	; select bank2
 16424  18F7  100E               	bcf	14,0	;volatile
 16425  18F8                     __ccov642_end_blk5:
 16426  18F8                     __ccov643_start_blk8:
 16427  18F8                     l990:
 16428  18F8  0023               	movlb	3	; select bank3
 16429  18F9  16D7               	bsf	(__ccovbit8_154/(0+8))^(0+384),__ccovbit8_154& (0+7)	;volatile
 16430  18FA  0008               	return
 16431  18FB                     __end_of_fuel_set_low:
 16432  18FB                     
 16433                           	psect	text38
 16434  1996                     __ptext38:	
 16435 ;; *************** function _PWM5_LoadDutyValue *****************
 16436 ;; Defined at:
 16437 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 16438 ;; Parameters:    Size  Location     Type
 16439 ;;  dutyValue       2    8[BANK1 ] unsigned short 
 16440 ;; Auto vars:     Size  Location     Type
 16441 ;;		None
 16442 ;; Return value:  Size  Location     Type
 16443 ;;                  1    wreg      void 
 16444 ;; Registers used:
 16445 ;;		wreg, status,2, status,0
 16446 ;; Tracked objects:
 16447 ;;		On entry : 0/0
 16448 ;;		On exit  : 0/0
 16449 ;;		Unchanged: 0/0
 16450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16451 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16453 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16454 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16455 ;;Total ram usage:        4 bytes
 16456 ;; Hardware stack levels used:    1
 16457 ;; Hardware stack levels required when called:   12
 16458 ;; This function calls:
 16459 ;;		Nothing
 16460 ;; This function is called by:
 16461 ;;		_fuel_get
 16462 ;;		_fuel_calibration
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           
 16467                           ;psect for function _PWM5_LoadDutyValue
 16468  1996                     _PWM5_LoadDutyValue:
 16469                           
 16470                           ;incstack = 0
 16471                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
 16472  1996                     l7146:
 16473                           
 16474                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 16475  1996  0021               	movlb	1	; select bank1
 16476  1997  0829               	movf	(PWM5_LoadDutyValue@dutyValue+1)^(0+128),w
 16477  1998  00AB               	movwf	(??_PWM5_LoadDutyValue^(0+128)+1)
 16478  1999  0828               	movf	PWM5_LoadDutyValue@dutyValue^(0+128),w
 16479  199A  00AA               	movwf	??_PWM5_LoadDutyValue^(0+128)
 16480  199B  36AB               	lsrf	(??_PWM5_LoadDutyValue^(0+128)+1),f
 16481  199C  0CAA               	rrf	??_PWM5_LoadDutyValue^(0+128),f
 16482  199D  36AB               	lsrf	(??_PWM5_LoadDutyValue^(0+128)+1),f
 16483  199E  0CAA               	rrf	??_PWM5_LoadDutyValue^(0+128),f
 16484  199F  082A               	movf	??_PWM5_LoadDutyValue^(0+128),w
 16485  19A0  002C               	movlb	12	; select bank12
 16486  19A1  0098               	movwf	24	;volatile
 16487                           
 16488                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 16489  19A2  0021               	movlb	1	; select bank1
 16490  19A3  0828               	movf	PWM5_LoadDutyValue@dutyValue^(0+128),w
 16491  19A4  3903               	andlw	3
 16492  19A5  00AA               	movwf	??_PWM5_LoadDutyValue^(0+128)
 16493  19A6  3005               	movlw	5
 16494  19A7                     u8675:
 16495  19A7  35AA               	lslf	??_PWM5_LoadDutyValue^(0+128),f
 16496  19A8  3EFF               	addlw	-1
 16497  19A9  1D03               	skipz
 16498  19AA  29A7               	goto	u8675
 16499  19AB  352A               	lslf	??_PWM5_LoadDutyValue^(0+128),w
 16500  19AC  002C               	movlb	12	; select bank12
 16501  19AD  0097               	movwf	23	;volatile
 16502  19AE                     __ccov11_end_blk0:
 16503  19AE                     __ccov12_start_blk1:
 16504  19AE                     l28:
 16505  19AE  0020               	movlb	0	; select bank0
 16506  19AF  166F               	bsf	__ccovbit1_4/(0+8),__ccovbit1_4& (0+7)	;volatile
 16507  19B0  0008               	return
 16508  19B1                     __end_of_PWM5_LoadDutyValue:
 16509  19B1                     
 16510                           	psect	text39
 16511  1A3D                     __ptext39:	
 16512 ;; *************** function _ADC_GetConversion *****************
 16513 ;; Defined at:
 16514 ;;		line 115 in file "mcc_generated_files/adc.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  channel         1    wreg     enum E6327
 16517 ;; Auto vars:     Size  Location     Type
 16518 ;;  channel         1   11[BANK1 ] enum E6327
 16519 ;; Return value:  Size  Location     Type
 16520 ;;                  2    8[BANK1 ] unsigned short 
 16521 ;; Registers used:
 16522 ;;		wreg, status,2, status,0
 16523 ;; Tracked objects:
 16524 ;;		On entry : 0/0
 16525 ;;		On exit  : 0/0
 16526 ;;		Unchanged: 0/0
 16527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16528 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16530 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16531 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16532 ;;Total ram usage:        4 bytes
 16533 ;; Hardware stack levels used:    1
 16534 ;; Hardware stack levels required when called:   12
 16535 ;; This function calls:
 16536 ;;		Nothing
 16537 ;; This function is called by:
 16538 ;;		_spd_k_calibration
 16539 ;;		_spd_a_calibration
 16540 ;;		_fuel_init
 16541 ;;		_fuel_get
 16542 ;;		_fuel_calibration
 16543 ;; This function uses a non-reentrant model
 16544 ;;
 16545                           
 16546                           
 16547                           ;psect for function _ADC_GetConversion
 16548  1A3D                     _ADC_GetConversion:
 16549                           
 16550                           ;incstack = 0
 16551                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 16552                           ;ADC_GetConversion@channel stored from wreg
 16553  1A3D  0021               	movlb	1	; select bank1
 16554  1A3E  00AB               	movwf	ADC_GetConversion@channel^(0+128)
 16555  1A3F                     l7170:
 16556                           
 16557                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
 16558  1A3F  082B               	movf	ADC_GetConversion@channel^(0+128),w
 16559  1A40  00AA               	movwf	??_ADC_GetConversion^(0+128)
 16560  1A41  0DAA               	rlf	??_ADC_GetConversion^(0+128),f
 16561  1A42  0DAA               	rlf	??_ADC_GetConversion^(0+128),f
 16562  1A43  081D               	movf	29,w	;volatile
 16563  1A44  062A               	xorwf	??_ADC_GetConversion^(0+128),w
 16564  1A45  3903               	andlw	-253
 16565  1A46  062A               	xorwf	??_ADC_GetConversion^(0+128),w
 16566  1A47  009D               	movwf	29	;volatile
 16567  1A48                     __ccov77_end_blk0:
 16568  1A48                     __ccov78_start_blk1:
 16569  1A48                     l7172:
 16570                           
 16571                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
 16572  1A48  141D               	bsf	29,0	;volatile
 16573  1A49                     __ccov78_end_blk1:
 16574  1A49                     __ccov79_start_blk2:
 16575  1A49                     l7174:
 16576                           
 16577                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 16578  1A49  300D               	movlw	13
 16579  1A4A                     u9707:
 16580  1A4A  0B89               	decfsz	9,f
 16581  1A4B  2A4A               	goto	u9707
 16582  1A4C  0000               	nop
 16583  1A4D                     __ccov79_end_blk2:
 16584  1A4D                     __ccov80_start_blk3:
 16585  1A4D                     l7176:
 16586                           
 16587                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.ADGO = 1;
 16588  1A4D  0021               	movlb	1	; select bank1
 16589  1A4E  149D               	bsf	29,1	;volatile
 16590  1A4F                     __ccov80_end_blk3:
 16591  1A4F                     __ccov81_start_blk5:
 16592  1A4F                     l158:	
 16593                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
 16594                           
 16595                           
 16596                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.ADGO)
 16597  1A4F  189D               	btfsc	29,1	;volatile
 16598  1A50  2A52               	goto	u8681
 16599  1A51  2A53               	goto	u8680
 16600  1A52                     u8681:
 16601  1A52  2A4F               	goto	l158
 16602  1A53                     __ccov81_end_blk5:
 16603  1A53                     u8680:
 16604  1A53                     __ccov82_start_blk7:
 16605  1A53                     l7178:
 16606                           
 16607                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16608  1A53  081C               	movf	28,w	;volatile
 16609  1A54  00A9               	movwf	(?_ADC_GetConversion+1)^(0+128)
 16610  1A55  081B               	movf	27,w	;volatile
 16611  1A56  00A8               	movwf	?_ADC_GetConversion^(0+128)
 16612  1A57                     __ccov82_end_blk7:
 16613  1A57                     __ccov83_start_blk9:
 16614  1A57                     l161:
 16615  1A57  0020               	movlb	0	; select bank0
 16616  1A58  166E               	bsf	__ccovbit9_12/(0+8),__ccovbit9_12& (0+7)	;volatile
 16617  1A59  0008               	return
 16618  1A5A                     __end_of_ADC_GetConversion:
 16619  1A5A                     
 16620                           	psect	text40
 16621  277C                     __ptext40:	
 16622 ;; *************** function _button_init *****************
 16623 ;; Defined at:
 16624 ;;		line 25 in file "button.c"
 16625 ;; Parameters:    Size  Location     Type
 16626 ;;		None
 16627 ;; Auto vars:     Size  Location     Type
 16628 ;;		None
 16629 ;; Return value:  Size  Location     Type
 16630 ;;                  1    wreg      void 
 16631 ;; Registers used:
 16632 ;;		wreg, status,2, status,0, pclath, cstack
 16633 ;; Tracked objects:
 16634 ;;		On entry : 0/0
 16635 ;;		On exit  : 0/0
 16636 ;;		Unchanged: 0/0
 16637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16640 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16641 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;Total ram usage:        1 bytes
 16643 ;; Hardware stack levels used:    1
 16644 ;; Hardware stack levels required when called:   13
 16645 ;; This function calls:
 16646 ;;		_button_is_pressed
 16647 ;; This function is called by:
 16648 ;;		_main
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           
 16653                           ;psect for function _button_init
 16654  277C                     _button_init:
 16655                           
 16656                           ;incstack = 0
 16657                           ; Regs used in _button_init: [wreg+status,2+status,0+pclath+cstack]
 16658  277C                     l7684:
 16659                           
 16660                           ;button.c: 27:     button.value = button_is_pressed();
 16661  277C  31A6  26B3  31A7   	fcall	_button_is_pressed
 16662  277F  0021               	movlb	1	; select bank1
 16663  2780  00A9               	movwf	??_button_init^(0+128)
 16664  2781  0829               	movf	??_button_init^(0+128),w
 16665  2782  0022               	movlb	2	; select bank2
 16666  2783  00D7               	movwf	_button^(0+256)
 16667  2784                     __ccov477_end_blk0:
 16668  2784                     __ccov478_start_blk1:
 16669  2784                     l7686:
 16670                           
 16671                           ;button.c: 28:     button.state = NO_PRESSED;
 16672  2784  01D8               	clrf	(_button^(0+256)+1)
 16673  2785                     __ccov478_end_blk1:
 16674  2785                     __ccov479_start_blk2:
 16675  2785                     l7688:
 16676                           
 16677                           ;button.c: 29:     button.count = 0;
 16678  2785  01D9               	clrf	(_button^(0+256)+2)
 16679  2786                     __ccov479_end_blk2:
 16680  2786                     __ccov480_start_blk3:
 16681  2786                     l815:
 16682  2786  1627               	bsf	(__ccovbit3_92/(0+8))^(0+256),__ccovbit3_92& (0+7)	;volatile
 16683  2787  0008               	return
 16684  2788                     __end_of_button_init:
 16685  2788                     
 16686                           	psect	text41
 16687  1047                     __ptext41:	
 16688 ;; *************** function _button_check *****************
 16689 ;; Defined at:
 16690 ;;		line 38 in file "button.c"
 16691 ;; Parameters:    Size  Location     Type
 16692 ;;		None
 16693 ;; Auto vars:     Size  Location     Type
 16694 ;;		None
 16695 ;; Return value:  Size  Location     Type
 16696 ;;                  1   38[BANK2 ] enum E6836
 16697 ;; Registers used:
 16698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16699 ;; Tracked objects:
 16700 ;;		On entry : 0/0
 16701 ;;		On exit  : 0/0
 16702 ;;		Unchanged: 0/0
 16703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16704 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16706 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16707 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16708 ;;Total ram usage:        4 bytes
 16709 ;; Hardware stack levels required when called:   16
 16710 ;; This function calls:
 16711 ;;		_button_is_pressed
 16712 ;;		_printf
 16713 ;;		_puts
 16714 ;; This function is called by:
 16715 ;;		_main
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           
 16720                           ;psect for function _button_check
 16721  1047                     _button_check:
 16722                           
 16723                           ;incstack = 0
 16724                           ; Regs used in _button_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16725  1047  0022               	movlb	2	; select bank2
 16726  1048  00D0               	movwf	(?_button_check+1)^(0+256)
 16727  1049                     l7728:
 16728                           
 16729                           ;button.c: 40:     button.value = button_is_pressed();
 16730  1049  31A6  26B3  3190   	fcall	_button_is_pressed
 16731  104C  0022               	movlb	2	; select bank2
 16732  104D  00D1               	movwf	??_button_check^(0+256)
 16733  104E  0851               	movf	??_button_check^(0+256),w
 16734  104F  00D7               	movwf	_button^(0+256)
 16735  1050                     __ccov483_end_blk0:
 16736  1050                     __ccov484_start_blk1:
 16737  1050                     l7730:
 16738                           
 16739                           ;button.c: 41:     if (button.value == ON) {
 16740  1050  0357               	decf	_button^(0+256),w
 16741  1051  1D03               	btfss	3,2
 16742  1052  2854               	goto	u9171
 16743  1053  2855               	goto	u9170
 16744  1054                     u9171:
 16745  1054  287F               	goto	l7744
 16746  1055                     __ccov484_end_blk1:
 16747  1055                     u9170:
 16748  1055                     __ccov485_start_blk2:
 16749  1055                     l7732:
 16750                           
 16751                           ;button.c: 43:         puts("INFO: BUTTON IS PRESSED.");
 16752  1055  304B               	movlw	low (STR_7| (0+32768))
 16753  1056  0021               	movlb	1	; select bank1
 16754  1057  00BB               	movwf	puts@s^(0+128)
 16755  1058  30A2               	movlw	high (STR_7| (0+32768))
 16756  1059  00BC               	movwf	(puts@s^(0+128)+1)
 16757  105A  3014               	movlw	low u9187jt
 16758  105B  319A  2A99         	ljmp	_puts
 16759  105D                     __ccov485_end_blk2:
 16760  105D                     u9187jf:
 16761  105D                     __ccov486_start_blk3:
 16762  105D                     l7734:
 16763                           
 16764                           ;button.c: 45:         if (button.count == (0xff)) {
 16765  105D  0022               	movlb	2	; select bank2
 16766  105E  0A59               	incf	(_button^(0+256)+2),w
 16767  105F  1D03               	btfss	3,2
 16768  1060  2862               	goto	u9191
 16769  1061  2863               	goto	u9190
 16770  1062                     u9191:
 16771  1062  286C               	goto	l7738
 16772  1063                     __ccov486_end_blk3:
 16773  1063                     u9190:
 16774  1063                     __ccov487_start_blk4:
 16775  1063                     l7736:
 16776  1063  1527               	bsf	(__ccovbit4_94/(0+8))^(0+256),__ccovbit4_94& (0+7)	;volatile
 16777                           
 16778                           ;button.c: 46:             puts ("WARNING: BUTTON COUNTER OVERFLOW.");
 16779  1064  30FB               	movlw	low (STR_8| (0+32768))
 16780  1065  0021               	movlb	1	; select bank1
 16781  1066  00BB               	movwf	puts@s^(0+128)
 16782  1067  30A0               	movlw	high (STR_8| (0+32768))
 16783  1068  00BC               	movwf	(puts@s^(0+128)+1)
 16784  1069  3016               	movlw	low u9207jt
 16785  106A  319A  2A99         	ljmp	_puts
 16786  106C                     __ccov487_end_blk4:
 16787  106C                     u9207jf:
 16788  106C                     __ccov488_start_blk6:
 16789  106C                     l7738:
 16790                           
 16791                           ;button.c: 49:         if (button.count >= 30U) {
 16792  106C  301E               	movlw	30
 16793  106D  0022               	movlb	2	; select bank2
 16794  106E  0259               	subwf	(_button^(0+256)+2),w
 16795  106F  1C03               	skipc
 16796  1070  2872               	goto	u9211
 16797  1071  2873               	goto	u9210
 16798  1072                     u9211:
 16799  1072  2879               	goto	l7742
 16800  1073                     __ccov488_end_blk6:
 16801  1073                     u9210:
 16802  1073                     __ccov489_start_blk7:
 16803  1073                     l7740:
 16804  1073  14A7               	bsf	(__ccovbit7_95/(0+8))^(0+256),__ccovbit7_95& (0+7)	;volatile
 16805                           
 16806                           ;button.c: 50:             button.state = LONG_PRESSED;
 16807  1074  3002               	movlw	2
 16808  1075  00D1               	movwf	??_button_check^(0+256)
 16809  1076  0851               	movf	??_button_check^(0+256),w
 16810  1077  00D8               	movwf	(_button^(0+256)+1)
 16811                           
 16812                           ;button.c: 51:         } else {
 16813  1078  28B1               	goto	l7760
 16814  1079                     __ccov489_end_blk7:
 16815  1079                     __ccov490_start_blk9:
 16816  1079                     l7742:
 16817  1079  1427               	bsf	(__ccovbit9_96/(0+8))^(0+256),__ccovbit9_96& (0+7)	;volatile
 16818                           
 16819                           ;button.c: 52:             button.count++;
 16820  107A  3001               	movlw	1
 16821  107B  00D1               	movwf	??_button_check^(0+256)
 16822  107C  0851               	movf	??_button_check^(0+256),w
 16823  107D  07D9               	addwf	(_button^(0+256)+2),f
 16824  107E  28B1               	goto	l7760
 16825  107F                     __ccov490_end_blk9:
 16826  107F                     __ccov491_start_blk12:
 16827  107F                     l7744:
 16828  107F  0857               	movf	_button^(0+256),w
 16829  1080  1D03               	btfss	3,2
 16830  1081  2883               	goto	u9221
 16831  1082  2884               	goto	u9220
 16832  1083                     u9221:
 16833  1083  28A8               	goto	l7758
 16834  1084                     __ccov491_end_blk12:
 16835  1084                     u9220:
 16836  1084                     __ccov492_start_blk13:
 16837  1084                     l7746:
 16838                           
 16839                           ;button.c: 56:         if(button.count >= 10U) {
 16840  1084  300A               	movlw	10
 16841  1085  0259               	subwf	(_button^(0+256)+2),w
 16842  1086  1C03               	skipc
 16843  1087  2889               	goto	u9231
 16844  1088  288A               	goto	u9230
 16845  1089                     u9231:
 16846  1089  288E               	goto	l7750
 16847  108A                     __ccov492_end_blk13:
 16848  108A                     u9230:
 16849  108A                     __ccov493_start_blk14:
 16850  108A                     l7748:
 16851  108A  17A6               	bsf	(__ccovbit14_97/(0+8))^(0+256),__ccovbit14_97& (0+7)	;volatile
 16852                           
 16853                           ;button.c: 57:             button.state = SHORT_PRESSED;
 16854  108B  01D8               	clrf	(_button^(0+256)+1)
 16855  108C  0AD8               	incf	(_button^(0+256)+1),f
 16856                           
 16857                           ;button.c: 58:         } else if (button.count == 0) {
 16858  108D  2896               	goto	l7754
 16859  108E                     __ccov493_end_blk14:
 16860  108E                     __ccov494_start_blk16:
 16861  108E                     l7750:
 16862  108E  1726               	bsf	(__ccovbit16_98/(0+8))^(0+256),__ccovbit16_98& (0+7)	;volatile
 16863  108F  0859               	movf	(_button^(0+256)+2),w
 16864  1090  1D03               	btfss	3,2
 16865  1091  2893               	goto	u9241
 16866  1092  2894               	goto	u9240
 16867  1093                     u9241:
 16868  1093  2896               	goto	l7754
 16869  1094                     __ccov494_end_blk16:
 16870  1094                     u9240:
 16871  1094                     __ccov495_start_blk17:
 16872  1094                     l7752:
 16873  1094  16A6               	bsf	(__ccovbit17_99/(0+8))^(0+256),__ccovbit17_99& (0+7)	;volatile
 16874                           
 16875                           ;button.c: 59:             button.state = NO_PRESSED;
 16876  1095  01D8               	clrf	(_button^(0+256)+1)
 16877  1096                     __ccov495_end_blk17:
 16878  1096                     __ccov496_start_blk20:
 16879  1096                     l7754:
 16880                           
 16881                           ;button.c: 63:         printf ("INFO: BUTTON COUNTER IS %d\n.", button.count);
 16882  1096  30BD               	movlw	low (STR_9| (0+32768))
 16883  1097  00C4               	movwf	printf@fmt^(0+256)
 16884  1098  30A1               	movlw	high (STR_9| (0+32768))
 16885  1099  00C5               	movwf	(printf@fmt^(0+256)+1)
 16886  109A  0859               	movf	(_button^(0+256)+2),w
 16887  109B  00D1               	movwf	??_button_check^(0+256)
 16888  109C  01D2               	clrf	(??_button_check^(0+256)+1)
 16889  109D  0851               	movf	??_button_check^(0+256),w
 16890  109E  00C6               	movwf	(?_printf^(0+256)+2)
 16891  109F  0852               	movf	(??_button_check+1)^(0+256),w
 16892  10A0  00C7               	movwf	((?_printf+1)^(0+256)+2)
 16893  10A1  3087               	movlw	low u9257jt
 16894  10A2  3198  28CF         	ljmp	_printf
 16895  10A4                     __ccov496_end_blk20:
 16896  10A4                     u9257jf:
 16897  10A4                     __ccov497_start_blk21:
 16898  10A4                     l7756:
 16899  10A4  0022               	movlb	2	; select bank2
 16900  10A5  1626               	bsf	(__ccovbit21_100/(0+8))^(0+256),__ccovbit21_100& (0+7)	;volatile
 16901                           
 16902                           ;button.c: 65:         button.count = 0;
 16903  10A6  01D9               	clrf	(_button^(0+256)+2)
 16904                           
 16905                           ;button.c: 67:     } else {
 16906  10A7  28B1               	goto	l7760
 16907  10A8                     __ccov497_end_blk21:
 16908  10A8                     __ccov498_start_blk23:
 16909  10A8                     l7758:
 16910  10A8  15A6               	bsf	(__ccovbit23_101/(0+8))^(0+256),__ccovbit23_101& (0+7)	;volatile
 16911                           
 16912                           ;button.c: 68:         puts ("ERROR: BUTTON UNDIFINED VALUE.");
 16913  10A9  3080               	movlw	low (STR_10| (0+32768))
 16914  10AA  0021               	movlb	1	; select bank1
 16915  10AB  00BB               	movwf	puts@s^(0+128)
 16916  10AC  30A1               	movlw	high (STR_10| (0+32768))
 16917  10AD  00BC               	movwf	(puts@s^(0+128)+1)
 16918  10AE  3018               	movlw	low u9267jt
 16919  10AF  319A  2A99         	ljmp	_puts
 16920  10B1                     __ccov498_end_blk23:
 16921  10B1                     u9267jf:
 16922  10B1                     __ccov499_start_blk26:
 16923  10B1                     l7760:
 16924                           
 16925                           ;button.c: 70:     return button.state;
 16926  10B1  0022               	movlb	2	; select bank2
 16927  10B2  0858               	movf	(_button^(0+256)+1),w
 16928  10B3  00D1               	movwf	??_button_check^(0+256)
 16929  10B4  0851               	movf	??_button_check^(0+256),w
 16930  10B5  00CF               	movwf	?_button_check^(0+256)
 16931  10B6                     __ccov499_end_blk26:
 16932  10B6                     __ccov500_start_blk28:
 16933  10B6                     l831:
 16934  10B6  1526               	bsf	(__ccovbit28_102/(0+8))^(0+256),__ccovbit28_102& (0+7)	;volatile
 16935  10B7  31A2               	movlp	high __pjmp_tab__button_check
 16936  10B8  0850               	movf	(?_button_check+1)^(0+256),w
 16937  10B9  0082               	movwf	2
 16938  10BA                     __end_of_button_check:
 16939  10BA                     
 16940                           	psect	text42
 16941  1A99                     __ptext42:	
 16942 ;; *************** function _puts *****************
 16943 ;; Defined at:
 16944 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/puts.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;  s               2   27[BANK1 ] PTR const unsigned char 
 16947 ;;		 -> STR_22(44), STR_21(48), STR_20(33), STR_19(39), 
 16948 ;;		 -> STR_18(36), STR_17(48), STR_16(30), STR_15(33), 
 16949 ;;		 -> STR_14(33), STR_13(46), STR_10(31), STR_8(34), 
 16950 ;;		 -> STR_7(25), STR_6(23), STR_5(29), STR_4(38), 
 16951 ;;		 -> STR_3(27), STR_1(29), 
 16952 ;; Auto vars:     Size  Location     Type
 16953 ;;  r               2    0        int 
 16954 ;; Return value:  Size  Location     Type
 16955 ;;                  2   27[BANK1 ] int 
 16956 ;; Registers used:
 16957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16958 ;; Tracked objects:
 16959 ;;		On entry : 0/0
 16960 ;;		On exit  : 0/0
 16961 ;;		Unchanged: 0/0
 16962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16963 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16964 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16966 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16967 ;;Total ram usage:        6 bytes
 16968 ;; Hardware stack levels required when called:   16
 16969 ;; This function calls:
 16970 ;;		_fputc
 16971 ;;		_fputs
 16972 ;; This function is called by:
 16973 ;;		_main
 16974 ;;		_button_check
 16975 ;;		_eeprom_read_error_handler
 16976 ;;		_read_correction
 16977 ;;		_write_correction
 16978 ;;		_led_timer_call
 16979 ;;		_fuel_auto_conversion
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           
 16984                           ;psect for function _puts
 16985  1A99                     _puts:
 16986                           
 16987                           ;incstack = 0
 16988                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16989  1A99  0021               	movlb	1	; select bank1
 16990  1A9A  00BD               	movwf	(?_puts+2)^(0+128)
 16991  1A9B                     l6730:
 16992  1A9B  01C0               	clrf	_puts$2235^(0+128)
 16993  1A9C  0AC0               	incf	_puts$2235^(0+128),f
 16994  1A9D                     l6732:
 16995  1A9D  083C               	movf	(puts@s+1)^(0+128),w
 16996  1A9E  00B3               	movwf	(fputs@s+1)^(0+128)
 16997  1A9F  083B               	movf	puts@s^(0+128),w
 16998  1AA0  00B2               	movwf	fputs@s^(0+128)
 16999  1AA1  01B4               	clrf	fputs@fp^(0+128)
 17000  1AA2  319B  23C3  319A   	fcall	_fputs
 17001  1AA5  0021               	movlb	1	; select bank1
 17002  1AA6  1BB3               	btfsc	(?_fputs+1)^(0+128),7
 17003  1AA7  2AA9               	goto	u7951
 17004  1AA8  2AAA               	goto	u7950
 17005  1AA9                     u7951:
 17006  1AA9  2AB8               	goto	l6738
 17007  1AAA                     u7950:
 17008  1AAA                     l6734:
 17009  1AAA  300A               	movlw	10
 17010  1AAB  00AA               	movwf	fputc@c^(0+128)
 17011  1AAC  3000               	movlw	0
 17012  1AAD  00AB               	movwf	(fputc@c^(0+128)+1)
 17013  1AAE  01AC               	clrf	fputc@fp^(0+128)
 17014  1AAF  319D  25B9  319A   	fcall	_fputc
 17015  1AB2  0021               	movlb	1	; select bank1
 17016  1AB3  1BAB               	btfsc	(?_fputc+1)^(0+128),7
 17017  1AB4  2AB6               	goto	u7961
 17018  1AB5  2AB7               	goto	u7960
 17019  1AB6                     u7961:
 17020  1AB6  2AB8               	goto	l6738
 17021  1AB7                     u7960:
 17022  1AB7                     l6736:
 17023  1AB7  01C0               	clrf	_puts$2235^(0+128)
 17024  1AB8                     l6738:
 17025  1AB8                     l1766:
 17026  1AB8  3198               	movlp	high __pjmp_tab__puts
 17027  1AB9  083D               	movf	(?_puts+2)^(0+128),w
 17028  1ABA  0082               	movwf	2
 17029  1ABB                     __end_of_puts:
 17030                           
 17031                           	psect	text43
 17032  18CF                     __ptext43:	
 17033 ;; *************** function _printf *****************
 17034 ;; Defined at:
 17035 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/printf.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  fmt             2   27[BANK2 ] PTR const unsigned char 
 17038 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;  ret             2    0        int 
 17041 ;;  ap              1   37[BANK2 ] PTR void [1]
 17042 ;;		 -> ?_printf(2), 
 17043 ;; Return value:  Size  Location     Type
 17044 ;;                  2   27[BANK2 ] int 
 17045 ;; Registers used:
 17046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17047 ;; Tracked objects:
 17048 ;;		On entry : 0/0
 17049 ;;		On exit  : 0/0
 17050 ;;		Unchanged: 0/0
 17051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17052 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17053 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17054 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17055 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17056 ;;Total ram usage:       11 bytes
 17057 ;; Hardware stack levels required when called:   16
 17058 ;; This function calls:
 17059 ;;		_vfprintf
 17060 ;; This function is called by:
 17061 ;;		_main
 17062 ;;		_button_check
 17063 ;; This function uses a non-reentrant model
 17064 ;;
 17065                           
 17066                           
 17067                           ;psect for function _printf
 17068  18CF                     _printf:
 17069                           
 17070                           ;incstack = 0
 17071                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17072  18CF  0022               	movlb	2	; select bank2
 17073  18D0  00CA               	movwf	(?_printf+6)^(0+256)
 17074  18D1                     l7288:
 17075  18D1  3046               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
 17076  18D2  00CB               	movwf	??_printf^(0+256)
 17077  18D3  084B               	movf	??_printf^(0+256),w
 17078  18D4  00CE               	movwf	printf@ap^(0+256)
 17079  18D5                     l7290:
 17080  18D5  01BA               	clrf	vfprintf@fp^(0+256)
 17081  18D6  0845               	movf	(printf@fmt+1)^(0+256),w
 17082  18D7  00BC               	movwf	(vfprintf@fmt+1)^(0+256)
 17083  18D8  0844               	movf	printf@fmt^(0+256),w
 17084  18D9  00BB               	movwf	vfprintf@fmt^(0+256)
 17085  18DA  304E               	movlw	(low (printf@ap| (0+256)))& (0+255)
 17086  18DB  00CB               	movwf	??_printf^(0+256)
 17087  18DC  084B               	movf	??_printf^(0+256),w
 17088  18DD  00BD               	movwf	vfprintf@ap^(0+256)
 17089  18DE  3093               	movlw	low u8697jt
 17090  18DF  319D  2D07         	ljmp	_vfprintf
 17091  18E1                     u8697jf:
 17092  18E1                     l1658:
 17093  18E1  0022               	movlb	2	; select bank2
 17094  18E2  31A2               	movlp	high __pjmp_tab__printf
 17095  18E3  084A               	movf	(?_printf+6)^(0+256),w
 17096  18E4  0082               	movwf	2
 17097  18E5                     __end_of_printf:
 17098                           
 17099                           	psect	jmp_tab__vfprintf
 17100  2293                     __pjmp_tab__vfprintf:
 17101  2293                     u8697jt:
 17102  2293  3198  28E1         	ljmp	u8697jf
 17103                           
 17104                           	psect	text44
 17105  1D07                     __ptext44:	
 17106 ;; *************** function _vfprintf *****************
 17107 ;; Defined at:
 17108 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;  fp              1   17[BANK2 ] PTR struct _IO_FILE
 17111 ;;		 -> NULL(0), 
 17112 ;;  fmt             2   18[BANK2 ] PTR const unsigned char 
 17113 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 17114 ;;  ap              1   20[BANK2 ] PTR PTR void 
 17115 ;;		 -> printf@ap(1), 
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;  cfmt            2   25[BANK2 ] PTR unsigned char 
 17118 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 17119 ;; Return value:  Size  Location     Type
 17120 ;;                  2   17[BANK2 ] int 
 17121 ;; Registers used:
 17122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17123 ;; Tracked objects:
 17124 ;;		On entry : 0/0
 17125 ;;		On exit  : 0/0
 17126 ;;		Unchanged: 0/0
 17127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17128 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17129 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17130 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17131 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17132 ;;Total ram usage:       10 bytes
 17133 ;; Hardware stack levels required when called:   16
 17134 ;; This function calls:
 17135 ;;		_vfpfcnvrt
 17136 ;; This function is called by:
 17137 ;;		_printf
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           
 17142                           ;psect for function _vfprintf
 17143  1D07                     _vfprintf:
 17144                           
 17145                           ;incstack = 0
 17146                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17147  1D07  0022               	movlb	2	; select bank2
 17148  1D08  00BE               	movwf	(?_vfprintf+4)^(0+256)
 17149  1D09                     l7102:
 17150                           
 17151                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
 17152  1D09  083C               	movf	(vfprintf@fmt+1)^(0+256),w
 17153  1D0A  00C3               	movwf	(vfprintf@cfmt+1)^(0+256)
 17154  1D0B  083B               	movf	vfprintf@fmt^(0+256),w
 17155  1D0C  00C2               	movwf	vfprintf@cfmt^(0+256)
 17156  1D0D                     l7104:
 17157                           
 17158                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
 17159  1D0D  0023               	movlb	3	; select bank3
 17160  1D0E  01A4               	clrf	_nout^(0+384)
 17161  1D0F  01A5               	clrf	(_nout+1)^(0+384)
 17162                           
 17163                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 17164  1D10  2D28               	goto	l7108
 17165  1D11                     l7106:
 17166                           
 17167                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 17168  1D11  083A               	movf	vfprintf@fp^(0+256),w
 17169  1D12  00BF               	movwf	??_vfprintf^(0+256)
 17170  1D13  083F               	movf	??_vfprintf^(0+256),w
 17171  1D14  00A9               	movwf	vfpfcnvrt@fp^(0+256)
 17172  1D15  3042               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
 17173  1D16  00C0               	movwf	(??_vfprintf+1)^(0+256)
 17174  1D17  0840               	movf	(??_vfprintf+1)^(0+256),w
 17175  1D18  00AA               	movwf	vfpfcnvrt@fmt^(0+256)
 17176  1D19  083D               	movf	vfprintf@ap^(0+256),w
 17177  1D1A  00C1               	movwf	(??_vfprintf+2)^(0+256)
 17178  1D1B  0841               	movf	(??_vfprintf+2)^(0+256),w
 17179  1D1C  00AB               	movwf	vfpfcnvrt@ap^(0+256)
 17180  1D1D  3095               	movlw	low u8627jt
 17181  1D1E  3189  2962         	ljmp	_vfpfcnvrt
 17182  1D20                     u8627jf:
 17183  1D20  0022               	movlb	2	; select bank2
 17184  1D21  0829               	movf	?_vfpfcnvrt^(0+256),w
 17185  1D22  0023               	movlb	3	; select bank3
 17186  1D23  07A4               	addwf	_nout^(0+384),f
 17187  1D24  0022               	movlb	2	; select bank2
 17188  1D25  082A               	movf	(?_vfpfcnvrt+1)^(0+256),w
 17189  1D26  0023               	movlb	3	; select bank3
 17190  1D27  3DA5               	addwfc	(_nout+1)^(0+384),f
 17191  1D28                     l7108:
 17192                           
 17193                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 17194  1D28  0022               	movlb	2	; select bank2
 17195  1D29  0842               	movf	vfprintf@cfmt^(0+256),w
 17196  1D2A  0084               	movwf	4
 17197  1D2B  0843               	movf	(vfprintf@cfmt+1)^(0+256),w
 17198  1D2C  0085               	movwf	5
 17199  1D2D  0012               	moviw fsr0++
 17200  1D2E  1D03               	btfss	3,2
 17201  1D2F  2D31               	goto	u8631
 17202  1D30  2D32               	goto	u8630
 17203  1D31                     u8631:
 17204  1D31  2D11               	goto	l7106
 17205  1D32                     u8630:
 17206  1D32                     l7110:
 17207                           
 17208                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
 17209  1D32  0023               	movlb	3	; select bank3
 17210  1D33  0825               	movf	(_nout+1)^(0+384),w
 17211  1D34  0022               	movlb	2	; select bank2
 17212  1D35  00BB               	movwf	(?_vfprintf+1)^(0+256)
 17213  1D36  0023               	movlb	3	; select bank3
 17214  1D37  0824               	movf	_nout^(0+384),w
 17215  1D38  0022               	movlb	2	; select bank2
 17216  1D39  00BA               	movwf	?_vfprintf^(0+256)
 17217  1D3A                     l1730:
 17218  1D3A  31A2               	movlp	high __pjmp_tab__vfprintf
 17219  1D3B  083E               	movf	(?_vfprintf+4)^(0+256),w
 17220  1D3C  0082               	movwf	2
 17221  1D3D                     __end_of_vfprintf:
 17222                           
 17223                           	psect	jmp_tab__vfpfcnvrt
 17224  2295                     __pjmp_tab__vfpfcnvrt:
 17225  2295                     u8627jt:
 17226  2295  319D  2D20         	ljmp	u8627jf
 17227                           
 17228                           	psect	text45
 17229  0962                     __ptext45:	
 17230 ;; *************** function _vfpfcnvrt *****************
 17231 ;; Defined at:
 17232 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 17233 ;; Parameters:    Size  Location     Type
 17234 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
 17235 ;;		 -> NULL(0), 
 17236 ;;  fmt             1    1[BANK2 ] PTR PTR unsigned char 
 17237 ;;		 -> vfprintf@cfmt(2), 
 17238 ;;  ap              1    2[BANK2 ] PTR PTR void 
 17239 ;;		 -> printf@ap(1), 
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;  ll              8    9[BANK2 ] long long 
 17242 ;;  llu             8    0        unsigned long long 
 17243 ;;  f               4    0        unsigned long long 
 17244 ;;  ct              3    0        unsigned char [3]
 17245 ;;  vp              2    0        PTR void 
 17246 ;;  i               2    0        int 
 17247 ;;  done            2    0        int 
 17248 ;;  cp              2    0        PTR unsigned char 
 17249 ;;  c               1    0        unsigned char 
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  2    0[BANK2 ] int 
 17252 ;; Registers used:
 17253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17259 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17260 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17261 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17262 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;Total ram usage:       17 bytes
 17264 ;; Hardware stack levels required when called:   16
 17265 ;; This function calls:
 17266 ;;		_dtoa
 17267 ;;		_fputc
 17268 ;; This function is called by:
 17269 ;;		_vfprintf
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           
 17274                           ;psect for function _vfpfcnvrt
 17275  0962                     _vfpfcnvrt:
 17276                           
 17277                           ;incstack = 0
 17278                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17279  0962  0022               	movlb	2	; select bank2
 17280  0963  00AC               	movwf	(?_vfpfcnvrt+3)^(0+256)
 17281  0964                     l6756:
 17282                           
 17283                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
 17284  0964  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17285  0965  0086               	movwf	6
 17286  0966  3001               	movlw	1	; select bank2/3
 17287  0967  0087               	movwf	7
 17288  0968  3F40               	moviw [0]fsr1
 17289  0969  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17290  096A  3F41               	moviw [1]fsr1
 17291  096B  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17292  096C  082D               	movf	??_vfpfcnvrt^(0+256),w
 17293  096D  0084               	movwf	4
 17294  096E  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17295  096F  0085               	movwf	5
 17296  0970  0012               	moviw fsr0++
 17297  0971  3A25               	xorlw	37
 17298  0972  1D03               	btfss	3,2
 17299  0973  2975               	goto	u8001
 17300  0974  2976               	goto	u8000
 17301  0975                     u8001:
 17302  0975  2A3E               	goto	l6792
 17303  0976                     u8000:
 17304  0976                     l6758:
 17305                           
 17306                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
 17307  0976  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17308  0977  0086               	movwf	6
 17309  0978  3001               	movlw	1	; select bank2/3
 17310  0979  0087               	movwf	7
 17311  097A  3001               	movlw	1
 17312  097B  0781               	addwf	1,f
 17313  097C  3141               	addfsr 1,1
 17314  097D  1803               	skipnc
 17315  097E  0A81               	incf	1,f
 17316  097F                     l6760:
 17317                           
 17318                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
 17319  097F  0023               	movlb	3	; select bank3
 17320  0980  01A6               	clrf	_width^(0+384)
 17321  0981  01A7               	clrf	(_width+1)^(0+384)
 17322  0982  0021               	movlb	1	; select bank1
 17323  0983  01EC               	clrf	_flags^(0+128)
 17324  0984  01ED               	clrf	(_flags+1)^(0+128)
 17325  0985                     l6762:
 17326                           
 17327                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
 17328  0985  30FF               	movlw	255
 17329  0986  0022               	movlb	2	; select bank2
 17330  0987  00DA               	movwf	_prec^(0+256)
 17331  0988  30FF               	movlw	255
 17332  0989  00DB               	movwf	(_prec^(0+256)+1)
 17333  098A                     l6764:
 17334                           
 17335                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 17336  098A  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17337  098B  0086               	movwf	6
 17338  098C  3001               	movlw	1	; select bank2/3
 17339  098D  0087               	movwf	7
 17340  098E  3F40               	moviw [0]fsr1
 17341  098F  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17342  0990  3F41               	moviw [1]fsr1
 17343  0991  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17344  0992  082D               	movf	??_vfpfcnvrt^(0+256),w
 17345  0993  0084               	movwf	4
 17346  0994  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17347  0995  0085               	movwf	5
 17348  0996  0012               	moviw fsr0++
 17349  0997  3A64               	xorlw	100
 17350  0998  1903               	btfsc	3,2
 17351  0999  299B               	goto	u8011
 17352  099A  299C               	goto	u8010
 17353  099B                     u8011:
 17354  099B  29AE               	goto	l6768
 17355  099C                     u8010:
 17356  099C                     l6766:
 17357  099C  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17358  099D  0086               	movwf	6
 17359  099E  3001               	movlw	1	; select bank2/3
 17360  099F  0087               	movwf	7
 17361  09A0  3F40               	moviw [0]fsr1
 17362  09A1  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17363  09A2  3F41               	moviw [1]fsr1
 17364  09A3  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17365  09A4  082D               	movf	??_vfpfcnvrt^(0+256),w
 17366  09A5  0084               	movwf	4
 17367  09A6  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17368  09A7  0085               	movwf	5
 17369  09A8  0012               	moviw fsr0++
 17370  09A9  3A69               	xorlw	105
 17371  09AA  1D03               	btfss	3,2
 17372  09AB  29AD               	goto	u8021
 17373  09AC  29AE               	goto	u8020
 17374  09AD                     u8021:
 17375  09AD  2A03               	goto	l6776
 17376  09AE                     u8020:
 17377  09AE                     l6768:
 17378                           
 17379                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
 17380  09AE  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17381  09AF  0086               	movwf	6
 17382  09B0  3001               	movlw	1	; select bank2/3
 17383  09B1  0087               	movwf	7
 17384  09B2  3001               	movlw	1
 17385  09B3  0781               	addwf	1,f
 17386  09B4  3141               	addfsr 1,1
 17387  09B5  1803               	skipnc
 17388  09B6  0A81               	incf	1,f
 17389  09B7                     l6770:
 17390                           
 17391                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 17392  09B7  082B               	movf	vfpfcnvrt@ap^(0+256),w
 17393  09B8  0086               	movwf	6
 17394  09B9  3001               	movlw	1	; select bank2/3
 17395  09BA  0087               	movwf	7
 17396  09BB  0801               	movf	1,w
 17397  09BC  0084               	movwf	4
 17398  09BD  3001               	movlw	1	; select bank2/3
 17399  09BE  0085               	movwf	5
 17400  09BF  3002               	movlw	2
 17401  09C0  0781               	addwf	1,f
 17402  09C1  3F00               	moviw [0]fsr0
 17403  09C2  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17404  09C3  3F01               	moviw [1]fsr0
 17405  09C4  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17406  09C5  082D               	movf	??_vfpfcnvrt^(0+256),w
 17407  09C6  00B2               	movwf	vfpfcnvrt@ll^(0+256)
 17408  09C7  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17409  09C8  00B3               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 17410  09C9  0D89               	rlf	9,f
 17411  09CA  3B89               	subwfb	9,f
 17412  09CB  0989               	comf	9,f
 17413  09CC  00B4               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 17414  09CD  00B5               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 17415  09CE  00B6               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 17416  09CF  00B7               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 17417  09D0  00B8               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 17418  09D1  00B9               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 17419  09D2                     l6772:
 17420                           
 17421                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
 17422  09D2  0829               	movf	vfpfcnvrt@fp^(0+256),w
 17423  09D3  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17424  09D4  082D               	movf	??_vfpfcnvrt^(0+256),w
 17425  09D5  0021               	movlb	1	; select bank1
 17426  09D6  00C5               	movwf	dtoa@fp^(0+128)
 17427  09D7  0022               	movlb	2	; select bank2
 17428  09D8  0832               	movf	vfpfcnvrt@ll^(0+256),w
 17429  09D9  0021               	movlb	1	; select bank1
 17430  09DA  00C6               	movwf	dtoa@d^(0+128)
 17431  09DB  0022               	movlb	2	; select bank2
 17432  09DC  0833               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 17433  09DD  0021               	movlb	1	; select bank1
 17434  09DE  00C7               	movwf	(dtoa@d+1)^(0+128)
 17435  09DF  0022               	movlb	2	; select bank2
 17436  09E0  0834               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 17437  09E1  0021               	movlb	1	; select bank1
 17438  09E2  00C8               	movwf	(dtoa@d+2)^(0+128)
 17439  09E3  0022               	movlb	2	; select bank2
 17440  09E4  0835               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 17441  09E5  0021               	movlb	1	; select bank1
 17442  09E6  00C9               	movwf	(dtoa@d+3)^(0+128)
 17443  09E7  0022               	movlb	2	; select bank2
 17444  09E8  0836               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 17445  09E9  0021               	movlb	1	; select bank1
 17446  09EA  00CA               	movwf	(dtoa@d+4)^(0+128)
 17447  09EB  0022               	movlb	2	; select bank2
 17448  09EC  0837               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 17449  09ED  0021               	movlb	1	; select bank1
 17450  09EE  00CB               	movwf	(dtoa@d+5)^(0+128)
 17451  09EF  0022               	movlb	2	; select bank2
 17452  09F0  0838               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 17453  09F1  0021               	movlb	1	; select bank1
 17454  09F2  00CC               	movwf	(dtoa@d+6)^(0+128)
 17455  09F3  0022               	movlb	2	; select bank2
 17456  09F4  0839               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 17457  09F5  0021               	movlb	1	; select bank1
 17458  09F6  00CD               	movwf	(dtoa@d+7)^(0+128)
 17459  09F7  3097               	movlw	low u8037jt
 17460  09F8  318B  2B8D         	ljmp	_dtoa
 17461  09FA                     u8037jf:
 17462  09FA  0021               	movlb	1	; select bank1
 17463  09FB  0846               	movf	(?_dtoa+1)^(0+128),w
 17464  09FC  0022               	movlb	2	; select bank2
 17465  09FD  00AA               	movwf	(?_vfpfcnvrt+1)^(0+256)
 17466  09FE  0021               	movlb	1	; select bank1
 17467  09FF  0845               	movf	?_dtoa^(0+128),w
 17468  0A00  0022               	movlb	2	; select bank2
 17469  0A01  00A9               	movwf	?_vfpfcnvrt^(0+256)
 17470  0A02  2A68               	goto	l1723
 17471  0A03                     l6776:
 17472                           
 17473                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
 17474  0A03  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17475  0A04  0086               	movwf	6
 17476  0A05  3001               	movlw	1	; select bank2/3
 17477  0A06  0087               	movwf	7
 17478  0A07  3F40               	moviw [0]fsr1
 17479  0A08  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17480  0A09  3F41               	moviw [1]fsr1
 17481  0A0A  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17482  0A0B  082D               	movf	??_vfpfcnvrt^(0+256),w
 17483  0A0C  0084               	movwf	4
 17484  0A0D  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17485  0A0E  0085               	movwf	5
 17486  0A0F  0012               	moviw fsr0++
 17487  0A10  3A25               	xorlw	37
 17488  0A11  1D03               	btfss	3,2
 17489  0A12  2A14               	goto	u8041
 17490  0A13  2A15               	goto	u8040
 17491  0A14                     u8041:
 17492  0A14  2A32               	goto	l6786
 17493  0A15                     u8040:
 17494  0A15                     l6778:
 17495                           
 17496                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
 17497  0A15  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17498  0A16  0086               	movwf	6
 17499  0A17  3001               	movlw	1	; select bank2/3
 17500  0A18  0087               	movwf	7
 17501  0A19  3001               	movlw	1
 17502  0A1A  0781               	addwf	1,f
 17503  0A1B  3141               	addfsr 1,1
 17504  0A1C  1803               	skipnc
 17505  0A1D  0A81               	incf	1,f
 17506  0A1E                     l6780:
 17507                           
 17508                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
 17509  0A1E  3025               	movlw	37
 17510  0A1F  0021               	movlb	1	; select bank1
 17511  0A20  00AA               	movwf	fputc@c^(0+128)
 17512  0A21  3000               	movlw	0
 17513  0A22  00AB               	movwf	(fputc@c^(0+128)+1)
 17514  0A23  0022               	movlb	2	; select bank2
 17515  0A24  0829               	movf	vfpfcnvrt@fp^(0+256),w
 17516  0A25  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17517  0A26  082D               	movf	??_vfpfcnvrt^(0+256),w
 17518  0A27  0021               	movlb	1	; select bank1
 17519  0A28  00AC               	movwf	fputc@fp^(0+128)
 17520  0A29  319D  25B9  3189   	fcall	_fputc
 17521  0A2C                     l6782:
 17522                           
 17523                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
 17524  0A2C  3001               	movlw	1
 17525  0A2D  0022               	movlb	2	; select bank2
 17526  0A2E  00A9               	movwf	?_vfpfcnvrt^(0+256)
 17527  0A2F  3000               	movlw	0
 17528  0A30  00AA               	movwf	(?_vfpfcnvrt^(0+256)+1)
 17529  0A31  2A68               	goto	l1723
 17530  0A32                     l6786:
 17531                           
 17532                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
 17533  0A32  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17534  0A33  0086               	movwf	6
 17535  0A34  3001               	movlw	1	; select bank2/3
 17536  0A35  0087               	movwf	7
 17537  0A36  3001               	movlw	1
 17538  0A37  0781               	addwf	1,f
 17539  0A38  3141               	addfsr 1,1
 17540  0A39  1803               	skipnc
 17541  0A3A  0A81               	incf	1,f
 17542  0A3B                     l6788:
 17543                           
 17544                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
 17545  0A3B  01A9               	clrf	?_vfpfcnvrt^(0+256)
 17546  0A3C  01AA               	clrf	(?_vfpfcnvrt+1)^(0+256)
 17547  0A3D  2A68               	goto	l1723
 17548  0A3E                     l6792:
 17549                           
 17550                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
 17551  0A3E  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17552  0A3F  0086               	movwf	6
 17553  0A40  3001               	movlw	1	; select bank2/3
 17554  0A41  0087               	movwf	7
 17555  0A42  3F40               	moviw [0]fsr1
 17556  0A43  00AD               	movwf	??_vfpfcnvrt^(0+256)
 17557  0A44  3F41               	moviw [1]fsr1
 17558  0A45  00AE               	movwf	(??_vfpfcnvrt^(0+256)+1)
 17559  0A46  082D               	movf	??_vfpfcnvrt^(0+256),w
 17560  0A47  0084               	movwf	4
 17561  0A48  082E               	movf	(??_vfpfcnvrt+1)^(0+256),w
 17562  0A49  0085               	movwf	5
 17563  0A4A  0800               	movf	0,w	;code access
 17564  0A4B  00AF               	movwf	(??_vfpfcnvrt+2)^(0+256)
 17565  0A4C  01B0               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 17566  0A4D  082F               	movf	(??_vfpfcnvrt+2)^(0+256),w
 17567  0A4E  0021               	movlb	1	; select bank1
 17568  0A4F  00AA               	movwf	fputc@c^(0+128)
 17569  0A50  0022               	movlb	2	; select bank2
 17570  0A51  0830               	movf	(??_vfpfcnvrt+3)^(0+256),w
 17571  0A52  0021               	movlb	1	; select bank1
 17572  0A53  00AB               	movwf	(fputc@c+1)^(0+128)
 17573  0A54  0022               	movlb	2	; select bank2
 17574  0A55  0829               	movf	vfpfcnvrt@fp^(0+256),w
 17575  0A56  00B1               	movwf	(??_vfpfcnvrt+4)^(0+256)
 17576  0A57  0831               	movf	(??_vfpfcnvrt+4)^(0+256),w
 17577  0A58  0021               	movlb	1	; select bank1
 17578  0A59  00AC               	movwf	fputc@fp^(0+128)
 17579  0A5A  319D  25B9  3189   	fcall	_fputc
 17580  0A5D                     l6794:
 17581                           
 17582                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 17583  0A5D  0022               	movlb	2	; select bank2
 17584  0A5E  082A               	movf	vfpfcnvrt@fmt^(0+256),w
 17585  0A5F  0086               	movwf	6
 17586  0A60  3001               	movlw	1	; select bank2/3
 17587  0A61  0087               	movwf	7
 17588  0A62  3001               	movlw	1
 17589  0A63  0781               	addwf	1,f
 17590  0A64  3141               	addfsr 1,1
 17591  0A65  1803               	skipnc
 17592  0A66  0A81               	incf	1,f
 17593  0A67  2A2C               	goto	l6782
 17594  0A68                     l1723:
 17595  0A68  31A2               	movlp	high __pjmp_tab__vfpfcnvrt
 17596  0A69  082C               	movf	(?_vfpfcnvrt+3)^(0+256),w
 17597  0A6A  0082               	movwf	2
 17598  0A6B                     __end_of_vfpfcnvrt:
 17599                           
 17600                           	psect	jmp_tab__dtoa
 17601  2297                     __pjmp_tab__dtoa:
 17602  2297                     u8037jt:
 17603  2297  3189  29FA         	ljmp	u8037jf
 17604                           
 17605                           	psect	text46
 17606  0B8D                     __ptext46:	
 17607 ;; *************** function _dtoa *****************
 17608 ;; Defined at:
 17609 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  fp              1   37[BANK1 ] PTR struct _IO_FILE
 17612 ;;		 -> NULL(0), 
 17613 ;;  d               8   38[BANK1 ] long long 
 17614 ;; Auto vars:     Size  Location     Type
 17615 ;;  n               8   58[BANK1 ] long long 
 17616 ;;  i               2   66[BANK1 ] int 
 17617 ;;  s               2   56[BANK1 ] int 
 17618 ;;  w               2   54[BANK1 ] int 
 17619 ;;  p               2   52[BANK1 ] int 
 17620 ;; Return value:  Size  Location     Type
 17621 ;;                  2   37[BANK1 ] int 
 17622 ;; Registers used:
 17623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17624 ;; Tracked objects:
 17625 ;;		On entry : 0/0
 17626 ;;		On exit  : 0/0
 17627 ;;		Unchanged: 0/0
 17628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17629 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17632 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17633 ;;Total ram usage:       31 bytes
 17634 ;; Hardware stack levels required when called:   16
 17635 ;; This function calls:
 17636 ;;		___aodiv
 17637 ;;		___aomod
 17638 ;;		_abs
 17639 ;;		_pad
 17640 ;; This function is called by:
 17641 ;;		_vfpfcnvrt
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           
 17646                           ;psect for function _dtoa
 17647  0B8D                     _dtoa:
 17648                           
 17649                           ;incstack = 0
 17650                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17651  0B8D  0021               	movlb	1	; select bank1
 17652  0B8E  00CE               	movwf	(?_dtoa+9)^(0+128)
 17653  0B8F                     l6628:
 17654                           
 17655                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
 17656  0B8F  0846               	movf	dtoa@d^(0+128),w
 17657  0B90  00DA               	movwf	dtoa@n^(0+128)
 17658  0B91  0847               	movf	(dtoa@d+1)^(0+128),w
 17659  0B92  00DB               	movwf	(dtoa@n+1)^(0+128)
 17660  0B93  0848               	movf	(dtoa@d+2)^(0+128),w
 17661  0B94  00DC               	movwf	(dtoa@n+2)^(0+128)
 17662  0B95  0849               	movf	(dtoa@d+3)^(0+128),w
 17663  0B96  00DD               	movwf	(dtoa@n+3)^(0+128)
 17664  0B97  084A               	movf	(dtoa@d+4)^(0+128),w
 17665  0B98  00DE               	movwf	(dtoa@n+4)^(0+128)
 17666  0B99  084B               	movf	(dtoa@d+5)^(0+128),w
 17667  0B9A  00DF               	movwf	(dtoa@n+5)^(0+128)
 17668  0B9B  084C               	movf	(dtoa@d+6)^(0+128),w
 17669  0B9C  00E0               	movwf	(dtoa@n+6)^(0+128)
 17670  0B9D  084D               	movf	(dtoa@d+7)^(0+128),w
 17671  0B9E  00E1               	movwf	(dtoa@n+7)^(0+128)
 17672  0B9F                     l6630:
 17673                           
 17674                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
 17675  0B9F  30DA               	movlw	low dtoa@n
 17676  0BA0  0086               	movwf	6
 17677  0BA1  3000               	movlw	high dtoa@n
 17678  0BA2  0087               	movwf	7
 17679  0BA3  3F47               	moviw [7]fsr1
 17680  0BA4  00CF               	movwf	??_dtoa^(0+128)
 17681  0BA5  1BCF               	btfsc	??_dtoa^(0+128),7
 17682  0BA6  2BA8               	goto	u7741
 17683  0BA7  2BAA               	goto	u7740
 17684  0BA8                     u7741:
 17685  0BA8  3001               	movlw	1
 17686  0BA9  2BAB               	goto	u7750
 17687  0BAA                     u7740:
 17688  0BAA  3000               	movlw	0
 17689  0BAB                     u7750:
 17690  0BAB  0021               	movlb	1	; select bank1
 17691  0BAC  00D0               	movwf	(??_dtoa+1)^(0+128)
 17692  0BAD  01D1               	clrf	((??_dtoa+1)^(0+128)+1)
 17693  0BAE  0850               	movf	(??_dtoa+1)^(0+128),w
 17694  0BAF  00D8               	movwf	dtoa@s^(0+128)
 17695  0BB0  0851               	movf	(??_dtoa+2)^(0+128),w
 17696  0BB1  00D9               	movwf	(dtoa@s+1)^(0+128)
 17697  0BB2                     l6632:
 17698                           
 17699                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 17700  0BB2  0858               	movf	dtoa@s^(0+128),w
 17701  0BB3  0459               	iorwf	(dtoa@s+1)^(0+128),w
 17702  0BB4  1903               	btfsc	3,2
 17703  0BB5  2BB7               	goto	u7761
 17704  0BB6  2BB8               	goto	u7760
 17705  0BB7                     u7761:
 17706  0BB7  2BD6               	goto	l1693
 17707  0BB8                     u7760:
 17708  0BB8                     l6634:
 17709                           
 17710                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 17711  0BB8  09DA               	comf	dtoa@n^(0+128),f
 17712  0BB9  09DB               	comf	(dtoa@n+1)^(0+128),f
 17713  0BBA  09DC               	comf	(dtoa@n+2)^(0+128),f
 17714  0BBB  09DD               	comf	(dtoa@n+3)^(0+128),f
 17715  0BBC  09DE               	comf	(dtoa@n+4)^(0+128),f
 17716  0BBD  09DF               	comf	(dtoa@n+5)^(0+128),f
 17717  0BBE  09E0               	comf	(dtoa@n+6)^(0+128),f
 17718  0BBF  09E1               	comf	(dtoa@n+7)^(0+128),f
 17719  0BC0  0ADA               	incf	dtoa@n^(0+128),f
 17720  0BC1  1D03               	skipz
 17721  0BC2  2BD6               	goto	u777lld
 17722  0BC3  0ADB               	incf	(dtoa@n+1)^(0+128),f
 17723  0BC4  1D03               	skipz
 17724  0BC5  2BD6               	goto	u777lld
 17725  0BC6  0ADC               	incf	(dtoa@n+2)^(0+128),f
 17726  0BC7  1D03               	skipz
 17727  0BC8  2BD6               	goto	u777lld
 17728  0BC9  0ADD               	incf	(dtoa@n+3)^(0+128),f
 17729  0BCA  1D03               	skipz
 17730  0BCB  2BD6               	goto	u777lld
 17731  0BCC  0ADE               	incf	(dtoa@n+4)^(0+128),f
 17732  0BCD  1D03               	skipz
 17733  0BCE  2BD6               	goto	u777lld
 17734  0BCF  0ADF               	incf	(dtoa@n+5)^(0+128),f
 17735  0BD0  1D03               	skipz
 17736  0BD1  2BD6               	goto	u777lld
 17737  0BD2  0AE0               	incf	(dtoa@n+6)^(0+128),f
 17738  0BD3  1D03               	skipz
 17739  0BD4  2BD6               	goto	u777lld
 17740  0BD5  0AE1               	incf	(dtoa@n+7)^(0+128),f
 17741  0BD6                     u777lld:
 17742  0BD6                     l1693:	
 17743                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 297:     }
 17744                           
 17745                           
 17746                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
 17747  0BD6  0022               	movlb	2	; select bank2
 17748  0BD7  1BDB               	btfsc	(_prec+1)^(0+256),7
 17749  0BD8  2BDA               	goto	u7781
 17750  0BD9  2BDB               	goto	u7780
 17751  0BDA                     u7781:
 17752  0BDA  2BE0               	goto	l1694
 17753  0BDB                     u7780:
 17754  0BDB                     l6636:
 17755                           
 17756                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
 17757  0BDB  30FD               	movlw	253
 17758  0BDC  0021               	movlb	1	; select bank1
 17759  0BDD  05EC               	andwf	_flags^(0+128),f
 17760  0BDE  30FF               	movlw	255
 17761  0BDF  05ED               	andwf	(_flags+1)^(0+128),f
 17762  0BE0                     l1694:	
 17763                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 302:     }
 17764                           
 17765                           
 17766                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
 17767  0BE0  0022               	movlb	2	; select bank2
 17768  0BE1  085B               	movf	(_prec+1)^(0+256),w
 17769  0BE2  3A80               	xorlw	128
 17770  0BE3  0021               	movlb	1	; select bank1
 17771  0BE4  00CF               	movwf	??_dtoa^(0+128)
 17772  0BE5  3080               	movlw	128
 17773  0BE6  024F               	subwf	??_dtoa^(0+128),w
 17774  0BE7  1D03               	skipz
 17775  0BE8  2BEC               	goto	u7795
 17776  0BE9  3001               	movlw	1
 17777  0BEA  0022               	movlb	2	; select bank2
 17778  0BEB  025A               	subwf	_prec^(0+256),w
 17779  0BEC                     u7795:
 17780  0BEC  1803               	skipnc
 17781  0BED  2BEF               	goto	u7791
 17782  0BEE  2BF0               	goto	u7790
 17783  0BEF                     u7791:
 17784  0BEF  2BF6               	goto	l6640
 17785  0BF0                     u7790:
 17786  0BF0                     l6638:
 17787  0BF0  3001               	movlw	1
 17788  0BF1  0021               	movlb	1	; select bank1
 17789  0BF2  00D4               	movwf	dtoa@p^(0+128)
 17790  0BF3  3000               	movlw	0
 17791  0BF4  00D5               	movwf	(dtoa@p^(0+128)+1)
 17792  0BF5  2BFE               	goto	l1698
 17793  0BF6                     l6640:
 17794  0BF6  0022               	movlb	2	; select bank2
 17795  0BF7  085B               	movf	(_prec+1)^(0+256),w
 17796  0BF8  0021               	movlb	1	; select bank1
 17797  0BF9  00D5               	movwf	(dtoa@p+1)^(0+128)
 17798  0BFA  0022               	movlb	2	; select bank2
 17799  0BFB  085A               	movf	_prec^(0+256),w
 17800  0BFC  0021               	movlb	1	; select bank1
 17801  0BFD  00D4               	movwf	dtoa@p^(0+128)
 17802  0BFE                     l1698:
 17803                           
 17804                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
 17805  0BFE  0023               	movlb	3	; select bank3
 17806  0BFF  0827               	movf	(_width+1)^(0+384),w
 17807  0C00  0021               	movlb	1	; select bank1
 17808  0C01  00D7               	movwf	(dtoa@w+1)^(0+128)
 17809  0C02  0023               	movlb	3	; select bank3
 17810  0C03  0826               	movf	_width^(0+384),w
 17811  0C04  0021               	movlb	1	; select bank1
 17812  0C05  00D6               	movwf	dtoa@w^(0+128)
 17813  0C06                     l6642:
 17814                           
 17815                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
 17816  0C06  0858               	movf	dtoa@s^(0+128),w
 17817  0C07  0459               	iorwf	(dtoa@s+1)^(0+128),w
 17818  0C08  1D03               	btfss	3,2
 17819  0C09  2C0B               	goto	u7801
 17820  0C0A  2C0C               	goto	u7800
 17821  0C0B                     u7801:
 17822  0C0B  2C10               	goto	l6646
 17823  0C0C                     u7800:
 17824  0C0C                     l6644:
 17825  0C0C  1D6C               	btfss	_flags^(0+128),2
 17826  0C0D  2C0F               	goto	u7811
 17827  0C0E  2C10               	goto	u7810
 17828  0C0F                     u7811:
 17829  0C0F  2C14               	goto	l1699
 17830  0C10                     u7810:
 17831  0C10                     l6646:
 17832                           
 17833                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
 17834  0C10  30FF               	movlw	255
 17835  0C11  07D6               	addwf	dtoa@w^(0+128),f
 17836  0C12  30FF               	movlw	255
 17837  0C13  3DD7               	addwfc	(dtoa@w+1)^(0+128),f
 17838  0C14                     l1699:	
 17839                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 307:     }
 17840                           
 17841                           
 17842                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
 17843  0C14  301F               	movlw	31
 17844  0C15  00E2               	movwf	dtoa@i^(0+128)
 17845  0C16  3000               	movlw	0
 17846  0C17  00E3               	movwf	(dtoa@i^(0+128)+1)
 17847  0C18                     l6648:
 17848                           
 17849                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
 17850  0C18  0023               	movlb	3	; select bank3
 17851  0C19  01C9               	clrf	(_dbuf^(0+384)+31)
 17852                           
 17853                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17854  0C1A  2C84               	goto	l1702
 17855  0C1B                     l6650:
 17856                           
 17857                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
 17858  0C1B  30FF               	movlw	255
 17859  0C1C  0021               	movlb	1	; select bank1
 17860  0C1D  07E2               	addwf	dtoa@i^(0+128),f
 17861  0C1E  30FF               	movlw	255
 17862  0C1F  3DE3               	addwfc	(dtoa@i+1)^(0+128),f
 17863  0C20                     l6652:
 17864                           
 17865                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
 17866  0C20  300A               	movlw	10
 17867  0C21  00A8               	movwf	___aomod@divisor^(0+128)
 17868  0C22  01A9               	clrf	(___aomod@divisor+1)^(0+128)
 17869  0C23  01AA               	clrf	(___aomod@divisor+2)^(0+128)
 17870  0C24  01AB               	clrf	(___aomod@divisor+3)^(0+128)
 17871  0C25  01AC               	clrf	(___aomod@divisor+4)^(0+128)
 17872  0C26  01AD               	clrf	(___aomod@divisor+5)^(0+128)
 17873  0C27  01AE               	clrf	(___aomod@divisor+6)^(0+128)
 17874  0C28  01AF               	clrf	(___aomod@divisor+7)^(0+128)
 17875  0C29  085A               	movf	dtoa@n^(0+128),w
 17876  0C2A  00B0               	movwf	___aomod@dividend^(0+128)
 17877  0C2B  085B               	movf	(dtoa@n+1)^(0+128),w
 17878  0C2C  00B1               	movwf	(___aomod@dividend+1)^(0+128)
 17879  0C2D  085C               	movf	(dtoa@n+2)^(0+128),w
 17880  0C2E  00B2               	movwf	(___aomod@dividend+2)^(0+128)
 17881  0C2F  085D               	movf	(dtoa@n+3)^(0+128),w
 17882  0C30  00B3               	movwf	(___aomod@dividend+3)^(0+128)
 17883  0C31  085E               	movf	(dtoa@n+4)^(0+128),w
 17884  0C32  00B4               	movwf	(___aomod@dividend+4)^(0+128)
 17885  0C33  085F               	movf	(dtoa@n+5)^(0+128),w
 17886  0C34  00B5               	movwf	(___aomod@dividend+5)^(0+128)
 17887  0C35  0860               	movf	(dtoa@n+6)^(0+128),w
 17888  0C36  00B6               	movwf	(___aomod@dividend+6)^(0+128)
 17889  0C37  0861               	movf	(dtoa@n+7)^(0+128),w
 17890  0C38  00B7               	movwf	(___aomod@dividend+7)^(0+128)
 17891  0C39  3196  2612  318B   	fcall	___aomod
 17892  0C3C  0021               	movlb	1	; select bank1
 17893  0C3D  0829               	movf	(?___aomod+1)^(0+128),w
 17894  0C3E  00BC               	movwf	(abs@a+1)^(0+128)
 17895  0C3F  0828               	movf	?___aomod^(0+128),w
 17896  0C40  00BB               	movwf	abs@a^(0+128)
 17897  0C41  319A  2204  318B   	fcall	_abs
 17898  0C44  0021               	movlb	1	; select bank1
 17899  0C45  083B               	movf	?_abs^(0+128),w
 17900  0C46  3E30               	addlw	48
 17901  0C47  00CF               	movwf	??_dtoa^(0+128)
 17902  0C48  0862               	movf	dtoa@i^(0+128),w
 17903  0C49  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 17904  0C4A  0086               	movwf	6
 17905  0C4B  3001               	movlw	1	; select bank3/4
 17906  0C4C  0087               	movwf	7
 17907  0C4D  084F               	movf	??_dtoa^(0+128),w
 17908  0C4E  0081               	movwf	1
 17909  0C4F                     l6654:
 17910                           
 17911                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
 17912  0C4F  30FF               	movlw	255
 17913  0C50  07D4               	addwf	dtoa@p^(0+128),f
 17914  0C51  30FF               	movlw	255
 17915  0C52  3DD5               	addwfc	(dtoa@p+1)^(0+128),f
 17916  0C53                     l6656:
 17917                           
 17918                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
 17919  0C53  30FF               	movlw	255
 17920  0C54  07D6               	addwf	dtoa@w^(0+128),f
 17921  0C55  30FF               	movlw	255
 17922  0C56  3DD7               	addwfc	(dtoa@w+1)^(0+128),f
 17923  0C57                     l6658:
 17924                           
 17925                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
 17926  0C57  300A               	movlw	10
 17927  0C58  00A8               	movwf	___aodiv@divisor^(0+128)
 17928  0C59  01A9               	clrf	(___aodiv@divisor+1)^(0+128)
 17929  0C5A  01AA               	clrf	(___aodiv@divisor+2)^(0+128)
 17930  0C5B  01AB               	clrf	(___aodiv@divisor+3)^(0+128)
 17931  0C5C  01AC               	clrf	(___aodiv@divisor+4)^(0+128)
 17932  0C5D  01AD               	clrf	(___aodiv@divisor+5)^(0+128)
 17933  0C5E  01AE               	clrf	(___aodiv@divisor+6)^(0+128)
 17934  0C5F  01AF               	clrf	(___aodiv@divisor+7)^(0+128)
 17935  0C60  085A               	movf	dtoa@n^(0+128),w
 17936  0C61  00B0               	movwf	___aodiv@dividend^(0+128)
 17937  0C62  085B               	movf	(dtoa@n+1)^(0+128),w
 17938  0C63  00B1               	movwf	(___aodiv@dividend+1)^(0+128)
 17939  0C64  085C               	movf	(dtoa@n+2)^(0+128),w
 17940  0C65  00B2               	movwf	(___aodiv@dividend+2)^(0+128)
 17941  0C66  085D               	movf	(dtoa@n+3)^(0+128),w
 17942  0C67  00B3               	movwf	(___aodiv@dividend+3)^(0+128)
 17943  0C68  085E               	movf	(dtoa@n+4)^(0+128),w
 17944  0C69  00B4               	movwf	(___aodiv@dividend+4)^(0+128)
 17945  0C6A  085F               	movf	(dtoa@n+5)^(0+128),w
 17946  0C6B  00B5               	movwf	(___aodiv@dividend+5)^(0+128)
 17947  0C6C  0860               	movf	(dtoa@n+6)^(0+128),w
 17948  0C6D  00B6               	movwf	(___aodiv@dividend+6)^(0+128)
 17949  0C6E  0861               	movf	(dtoa@n+7)^(0+128),w
 17950  0C6F  00B7               	movwf	(___aodiv@dividend+7)^(0+128)
 17951  0C70  3188  205D  318B   	fcall	___aodiv
 17952  0C73  0021               	movlb	1	; select bank1
 17953  0C74  0828               	movf	?___aodiv^(0+128),w
 17954  0C75  00DA               	movwf	dtoa@n^(0+128)
 17955  0C76  0829               	movf	(?___aodiv+1)^(0+128),w
 17956  0C77  00DB               	movwf	(dtoa@n+1)^(0+128)
 17957  0C78  082A               	movf	(?___aodiv+2)^(0+128),w
 17958  0C79  00DC               	movwf	(dtoa@n+2)^(0+128)
 17959  0C7A  082B               	movf	(?___aodiv+3)^(0+128),w
 17960  0C7B  00DD               	movwf	(dtoa@n+3)^(0+128)
 17961  0C7C  082C               	movf	(?___aodiv+4)^(0+128),w
 17962  0C7D  00DE               	movwf	(dtoa@n+4)^(0+128)
 17963  0C7E  082D               	movf	(?___aodiv+5)^(0+128),w
 17964  0C7F  00DF               	movwf	(dtoa@n+5)^(0+128)
 17965  0C80  082E               	movf	(?___aodiv+6)^(0+128),w
 17966  0C81  00E0               	movwf	(dtoa@n+6)^(0+128)
 17967  0C82  082F               	movf	(?___aodiv+7)^(0+128),w
 17968  0C83  00E1               	movwf	(dtoa@n+7)^(0+128)
 17969  0C84                     l1702:	
 17970                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 318:     }
 17971                           
 17972                           
 17973                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17974  0C84  0021               	movlb	1	; select bank1
 17975  0C85  0863               	movf	(dtoa@i+1)^(0+128),w
 17976  0C86  3A80               	xorlw	128
 17977  0C87  00CF               	movwf	??_dtoa^(0+128)
 17978  0C88  3080               	movlw	128
 17979  0C89  024F               	subwf	??_dtoa^(0+128),w
 17980  0C8A  1D03               	skipz
 17981  0C8B  2C8E               	goto	u7825
 17982  0C8C  3001               	movlw	1
 17983  0C8D  0262               	subwf	dtoa@i^(0+128),w
 17984  0C8E                     u7825:
 17985  0C8E  1C03               	skipc
 17986  0C8F  2C91               	goto	u7821
 17987  0C90  2C92               	goto	u7820
 17988  0C91                     u7821:
 17989  0C91  2CBF               	goto	l6668
 17990  0C92                     u7820:
 17991  0C92                     l6660:
 17992  0C92  0021               	movlb	1	; select bank1
 17993  0C93  085A               	movf	dtoa@n^(0+128),w
 17994  0C94  045B               	iorwf	(dtoa@n+1)^(0+128),w
 17995  0C95  045C               	iorwf	(dtoa@n+2)^(0+128),w
 17996  0C96  045D               	iorwf	(dtoa@n+3)^(0+128),w
 17997  0C97  045E               	iorwf	(dtoa@n+4)^(0+128),w
 17998  0C98  045F               	iorwf	(dtoa@n+5)^(0+128),w
 17999  0C99  0460               	iorwf	(dtoa@n+6)^(0+128),w
 18000  0C9A  0461               	iorwf	(dtoa@n+7)^(0+128),w
 18001  0C9B  1D03               	skipz
 18002  0C9C  2C9E               	goto	u7831
 18003  0C9D  2C9F               	goto	u7830
 18004  0C9E                     u7831:
 18005  0C9E  2C1B               	goto	l6650
 18006  0C9F                     u7830:
 18007  0C9F                     l6662:
 18008  0C9F  0855               	movf	(dtoa@p+1)^(0+128),w
 18009  0CA0  3A80               	xorlw	128
 18010  0CA1  00CF               	movwf	??_dtoa^(0+128)
 18011  0CA2  3080               	movlw	128
 18012  0CA3  024F               	subwf	??_dtoa^(0+128),w
 18013  0CA4  1D03               	skipz
 18014  0CA5  2CA8               	goto	u7845
 18015  0CA6  3001               	movlw	1
 18016  0CA7  0254               	subwf	dtoa@p^(0+128),w
 18017  0CA8                     u7845:
 18018  0CA8  1803               	skipnc
 18019  0CA9  2CAB               	goto	u7841
 18020  0CAA  2CAC               	goto	u7840
 18021  0CAB                     u7841:
 18022  0CAB  2C1B               	goto	l6650
 18023  0CAC                     u7840:
 18024  0CAC                     l6664:
 18025  0CAC  0021               	movlb	1	; select bank1
 18026  0CAD  0857               	movf	(dtoa@w+1)^(0+128),w
 18027  0CAE  3A80               	xorlw	128
 18028  0CAF  00CF               	movwf	??_dtoa^(0+128)
 18029  0CB0  3080               	movlw	128
 18030  0CB1  024F               	subwf	??_dtoa^(0+128),w
 18031  0CB2  1D03               	skipz
 18032  0CB3  2CB6               	goto	u7855
 18033  0CB4  3001               	movlw	1
 18034  0CB5  0256               	subwf	dtoa@w^(0+128),w
 18035  0CB6                     u7855:
 18036  0CB6  1C03               	skipc
 18037  0CB7  2CB9               	goto	u7851
 18038  0CB8  2CBA               	goto	u7850
 18039  0CB9                     u7851:
 18040  0CB9  2CBF               	goto	l6668
 18041  0CBA                     u7850:
 18042  0CBA                     l6666:
 18043  0CBA  0021               	movlb	1	; select bank1
 18044  0CBB  18EC               	btfsc	_flags^(0+128),1
 18045  0CBC  2CBE               	goto	u7861
 18046  0CBD  2CBF               	goto	u7860
 18047  0CBE                     u7861:
 18048  0CBE  2C1B               	goto	l6650
 18049  0CBF                     u7860:
 18050  0CBF                     l6668:
 18051                           
 18052                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
 18053  0CBF  0021               	movlb	1	; select bank1
 18054  0CC0  0858               	movf	dtoa@s^(0+128),w
 18055  0CC1  0459               	iorwf	(dtoa@s+1)^(0+128),w
 18056  0CC2  1D03               	btfss	3,2
 18057  0CC3  2CC5               	goto	u7871
 18058  0CC4  2CC6               	goto	u7870
 18059  0CC5                     u7871:
 18060  0CC5  2CCA               	goto	l6672
 18061  0CC6                     u7870:
 18062  0CC6                     l6670:
 18063  0CC6  1D6C               	btfss	_flags^(0+128),2
 18064  0CC7  2CC9               	goto	u7881
 18065  0CC8  2CCA               	goto	u7880
 18066  0CC9                     u7881:
 18067  0CC9  2CE6               	goto	l6682
 18068  0CCA                     u7880:
 18069  0CCA                     l6672:
 18070                           
 18071                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
 18072  0CCA  30FF               	movlw	255
 18073  0CCB  07E2               	addwf	dtoa@i^(0+128),f
 18074  0CCC  30FF               	movlw	255
 18075  0CCD  3DE3               	addwfc	(dtoa@i+1)^(0+128),f
 18076  0CCE                     l6674:
 18077                           
 18078                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
 18079  0CCE  0858               	movf	dtoa@s^(0+128),w
 18080  0CCF  0459               	iorwf	(dtoa@s+1)^(0+128),w
 18081  0CD0  1D03               	btfss	3,2
 18082  0CD1  2CD3               	goto	u7891
 18083  0CD2  2CD4               	goto	u7890
 18084  0CD3                     u7891:
 18085  0CD3  2CD9               	goto	l6678
 18086  0CD4                     u7890:
 18087  0CD4                     l6676:
 18088  0CD4  302B               	movlw	43
 18089  0CD5  00D2               	movwf	_dtoa$2180^(0+128)
 18090  0CD6  3000               	movlw	0
 18091  0CD7  00D3               	movwf	(_dtoa$2180^(0+128)+1)
 18092  0CD8  2CDD               	goto	l6680
 18093  0CD9                     l6678:
 18094  0CD9  302D               	movlw	45
 18095  0CDA  00D2               	movwf	_dtoa$2180^(0+128)
 18096  0CDB  3000               	movlw	0
 18097  0CDC  00D3               	movwf	(_dtoa$2180^(0+128)+1)
 18098  0CDD                     l6680:
 18099  0CDD  0852               	movf	_dtoa$2180^(0+128),w
 18100  0CDE  00CF               	movwf	??_dtoa^(0+128)
 18101  0CDF  0862               	movf	dtoa@i^(0+128),w
 18102  0CE0  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 18103  0CE1  0086               	movwf	6
 18104  0CE2  3001               	movlw	1	; select bank3/4
 18105  0CE3  0087               	movwf	7
 18106  0CE4  084F               	movf	??_dtoa^(0+128),w
 18107  0CE5  0081               	movwf	1
 18108  0CE6                     l6682:
 18109                           
 18110                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
 18111  0CE6  0845               	movf	dtoa@fp^(0+128),w
 18112  0CE7  00CF               	movwf	??_dtoa^(0+128)
 18113  0CE8  084F               	movf	??_dtoa^(0+128),w
 18114  0CE9  00BB               	movwf	pad@fp^(0+128)
 18115  0CEA  0862               	movf	dtoa@i^(0+128),w
 18116  0CEB  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 18117  0CEC  00D0               	movwf	(??_dtoa+1)^(0+128)
 18118  0CED  0850               	movf	(??_dtoa+1)^(0+128),w
 18119  0CEE  00BC               	movwf	pad@buf^(0+128)
 18120  0CEF  0857               	movf	(dtoa@w+1)^(0+128),w
 18121  0CF0  00BE               	movwf	(pad@p+1)^(0+128)
 18122  0CF1  0856               	movf	dtoa@w^(0+128),w
 18123  0CF2  00BD               	movwf	pad@p^(0+128)
 18124  0CF3  3099               	movlw	low u7907jt
 18125  0CF4  319F  2F43         	ljmp	_pad
 18126  0CF6                     u7907jf:
 18127  0CF6  0021               	movlb	1	; select bank1
 18128  0CF7  083C               	movf	(?_pad+1)^(0+128),w
 18129  0CF8  00C6               	movwf	(?_dtoa+1)^(0+128)
 18130  0CF9  083B               	movf	?_pad^(0+128),w
 18131  0CFA  00C5               	movwf	?_dtoa^(0+128)
 18132  0CFB                     l1716:
 18133  0CFB  31A2               	movlp	high __pjmp_tab__dtoa
 18134  0CFC  084E               	movf	(?_dtoa+9)^(0+128),w
 18135  0CFD  0082               	movwf	2
 18136  0CFE                     __end_of_dtoa:
 18137                           
 18138                           	psect	jmp_tab__pad
 18139  2299                     __pjmp_tab__pad:
 18140  2299                     u7907jt:
 18141  2299  318C  2CF6         	ljmp	u7907jf
 18142                           
 18143                           	psect	text47
 18144  1F43                     __ptext47:	
 18145 ;; *************** function _pad *****************
 18146 ;; Defined at:
 18147 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
 18150 ;;		 -> NULL(0), 
 18151 ;;  buf             1   28[BANK1 ] PTR unsigned char 
 18152 ;;		 -> dbuf(32), 
 18153 ;;  p               2   29[BANK1 ] int 
 18154 ;; Auto vars:     Size  Location     Type
 18155 ;;  w               2   35[BANK1 ] int 
 18156 ;;  i               2   33[BANK1 ] int 
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  2   27[BANK1 ] int 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18166 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18167 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18168 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18169 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;Total ram usage:       10 bytes
 18171 ;; Hardware stack levels required when called:   16
 18172 ;; This function calls:
 18173 ;;		_fputc
 18174 ;;		_fputs
 18175 ;;		_strlen
 18176 ;; This function is called by:
 18177 ;;		_dtoa
 18178 ;; This function uses a non-reentrant model
 18179 ;;
 18180                           
 18181                           
 18182                           ;psect for function _pad
 18183  1F43                     _pad:
 18184                           
 18185                           ;incstack = 0
 18186                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18187  1F43  0021               	movlb	1	; select bank1
 18188  1F44  00BF               	movwf	(?_pad+4)^(0+128)
 18189  1F45                     l6544:
 18190                           
 18191                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18192  1F45  1C6C               	btfss	_flags^(0+128),0
 18193  1F46  2F48               	goto	u7531
 18194  1F47  2F49               	goto	u7530
 18195  1F48                     u7531:
 18196  1F48  2F54               	goto	l6548
 18197  1F49                     u7530:
 18198  1F49                     l6546:
 18199                           
 18200                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18201  1F49  083C               	movf	pad@buf^(0+128),w
 18202  1F4A  00B2               	movwf	fputs@s^(0+128)
 18203  1F4B  3001               	movlw	1
 18204  1F4C  00B3               	movwf	(fputs@s+1)^(0+128)
 18205  1F4D  083B               	movf	pad@fp^(0+128),w
 18206  1F4E  00C0               	movwf	??_pad^(0+128)
 18207  1F4F  0840               	movf	??_pad^(0+128),w
 18208  1F50  00B4               	movwf	fputs@fp^(0+128)
 18209  1F51  319B  23C3  319F   	fcall	_fputs
 18210  1F54                     l6548:
 18211                           
 18212                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18213  1F54  0021               	movlb	1	; select bank1
 18214  1F55  1BBE               	btfsc	(pad@p+1)^(0+128),7
 18215  1F56  2F58               	goto	u7541
 18216  1F57  2F59               	goto	u7540
 18217  1F58                     u7541:
 18218  1F58  2F5E               	goto	l6552
 18219  1F59                     u7540:
 18220  1F59                     l6550:
 18221  1F59  083E               	movf	(pad@p+1)^(0+128),w
 18222  1F5A  00C4               	movwf	(pad@w+1)^(0+128)
 18223  1F5B  083D               	movf	pad@p^(0+128),w
 18224  1F5C  00C3               	movwf	pad@w^(0+128)
 18225  1F5D  2F60               	goto	l1685
 18226  1F5E                     l6552:
 18227  1F5E  01C3               	clrf	pad@w^(0+128)
 18228  1F5F  01C4               	clrf	(pad@w+1)^(0+128)
 18229  1F60                     l1685:
 18230                           
 18231                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18232  1F60  01C1               	clrf	pad@i^(0+128)
 18233  1F61  01C2               	clrf	(pad@i+1)^(0+128)
 18234                           
 18235                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18236  1F62  2F74               	goto	l6558
 18237  1F63                     l6554:
 18238                           
 18239                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18240  1F63  3020               	movlw	32
 18241  1F64  0021               	movlb	1	; select bank1
 18242  1F65  00AA               	movwf	fputc@c^(0+128)
 18243  1F66  3000               	movlw	0
 18244  1F67  00AB               	movwf	(fputc@c^(0+128)+1)
 18245  1F68  083B               	movf	pad@fp^(0+128),w
 18246  1F69  00C0               	movwf	??_pad^(0+128)
 18247  1F6A  0840               	movf	??_pad^(0+128),w
 18248  1F6B  00AC               	movwf	fputc@fp^(0+128)
 18249  1F6C  319D  25B9  319F   	fcall	_fputc
 18250  1F6F                     l6556:
 18251                           
 18252                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18253  1F6F  3001               	movlw	1
 18254  1F70  0021               	movlb	1	; select bank1
 18255  1F71  07C1               	addwf	pad@i^(0+128),f
 18256  1F72  3000               	movlw	0
 18257  1F73  3DC2               	addwfc	(pad@i+1)^(0+128),f
 18258  1F74                     l6558:
 18259                           
 18260                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18261  1F74  0842               	movf	(pad@i+1)^(0+128),w
 18262  1F75  3A80               	xorlw	128
 18263  1F76  00C0               	movwf	??_pad^(0+128)
 18264  1F77  0844               	movf	(pad@w+1)^(0+128),w
 18265  1F78  3A80               	xorlw	128
 18266  1F79  0240               	subwf	??_pad^(0+128),w
 18267  1F7A  1D03               	skipz
 18268  1F7B  2F7E               	goto	u7555
 18269  1F7C  0843               	movf	pad@w^(0+128),w
 18270  1F7D  0241               	subwf	pad@i^(0+128),w
 18271  1F7E                     u7555:
 18272  1F7E  1C03               	skipc
 18273  1F7F  2F81               	goto	u7551
 18274  1F80  2F82               	goto	u7550
 18275  1F81                     u7551:
 18276  1F81  2F63               	goto	l6554
 18277  1F82                     u7550:
 18278  1F82                     l1688:
 18279                           
 18280                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18281  1F82  0021               	movlb	1	; select bank1
 18282  1F83  186C               	btfsc	_flags^(0+128),0
 18283  1F84  2F86               	goto	u7561
 18284  1F85  2F87               	goto	u7560
 18285  1F86                     u7561:
 18286  1F86  2F92               	goto	l6562
 18287  1F87                     u7560:
 18288  1F87                     l6560:
 18289                           
 18290                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18291  1F87  083C               	movf	pad@buf^(0+128),w
 18292  1F88  00B2               	movwf	fputs@s^(0+128)
 18293  1F89  3001               	movlw	1
 18294  1F8A  00B3               	movwf	(fputs@s+1)^(0+128)
 18295  1F8B  083B               	movf	pad@fp^(0+128),w
 18296  1F8C  00C0               	movwf	??_pad^(0+128)
 18297  1F8D  0840               	movf	??_pad^(0+128),w
 18298  1F8E  00B4               	movwf	fputs@fp^(0+128)
 18299  1F8F  319B  23C3  319F   	fcall	_fputs
 18300  1F92                     l6562:
 18301                           
 18302                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
 18303  1F92  0021               	movlb	1	; select bank1
 18304  1F93  083C               	movf	pad@buf^(0+128),w
 18305  1F94  3199  217B  319F   	fcall	_strlen
 18306  1F97  0021               	movlb	1	; select bank1
 18307  1F98  0843               	movf	pad@w^(0+128),w
 18308  1F99  0728               	addwf	?_strlen^(0+128),w
 18309  1F9A  00BB               	movwf	?_pad^(0+128)
 18310  1F9B  0844               	movf	(pad@w+1)^(0+128),w
 18311  1F9C  3D29               	addwfc	(?_strlen+1)^(0+128),w
 18312  1F9D  00BC               	movwf	(?_pad+1)^(0+128)
 18313  1F9E                     l1690:
 18314  1F9E  31A2               	movlp	high __pjmp_tab__pad
 18315  1F9F  083F               	movf	(?_pad+4)^(0+128),w
 18316  1FA0  0082               	movwf	2
 18317  1FA1                     __end_of_pad:
 18318                           
 18319                           	psect	text48
 18320  197B                     __ptext48:	
 18321 ;; *************** function _strlen *****************
 18322 ;; Defined at:
 18323 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 18324 ;; Parameters:    Size  Location     Type
 18325 ;;  s               1    wreg     PTR const unsigned char 
 18326 ;;		 -> dbuf(32), 
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 18329 ;;		 -> dbuf(32), 
 18330 ;;  a               1   11[BANK1 ] PTR const unsigned char 
 18331 ;;		 -> dbuf(32), 
 18332 ;; Return value:  Size  Location     Type
 18333 ;;                  2    8[BANK1 ] unsigned int 
 18334 ;; Registers used:
 18335 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18336 ;; Tracked objects:
 18337 ;;		On entry : 0/0
 18338 ;;		On exit  : 0/0
 18339 ;;		Unchanged: 0/0
 18340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18341 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18342 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18343 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18344 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18345 ;;Total ram usage:        5 bytes
 18346 ;; Hardware stack levels used:    1
 18347 ;; Hardware stack levels required when called:   12
 18348 ;; This function calls:
 18349 ;;		Nothing
 18350 ;; This function is called by:
 18351 ;;		_pad
 18352 ;; This function uses a non-reentrant model
 18353 ;;
 18354                           
 18355                           
 18356                           ;psect for function _strlen
 18357  197B                     _strlen:
 18358                           
 18359                           ;incstack = 0
 18360                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 18361                           ;strlen@s stored from wreg
 18362  197B  0021               	movlb	1	; select bank1
 18363  197C  00AC               	movwf	strlen@s^(0+128)
 18364  197D                     l6372:
 18365  197D  082C               	movf	strlen@s^(0+128),w
 18366  197E  00AA               	movwf	??_strlen^(0+128)
 18367  197F  082A               	movf	??_strlen^(0+128),w
 18368  1980  00AB               	movwf	strlen@a^(0+128)
 18369  1981  2986               	goto	l6376
 18370  1982                     l6374:
 18371  1982  3001               	movlw	1
 18372  1983  00AA               	movwf	??_strlen^(0+128)
 18373  1984  082A               	movf	??_strlen^(0+128),w
 18374  1985  07AC               	addwf	strlen@s^(0+128),f
 18375  1986                     l6376:
 18376  1986  082C               	movf	strlen@s^(0+128),w
 18377  1987  0086               	movwf	6
 18378  1988  3001               	movlw	1	; select bank2/3
 18379  1989  0087               	movwf	7
 18380  198A  0801               	movf	1,w
 18381  198B  1D03               	btfss	3,2
 18382  198C  298E               	goto	u7051
 18383  198D  298F               	goto	u7050
 18384  198E                     u7051:
 18385  198E  2982               	goto	l6374
 18386  198F                     u7050:
 18387  198F                     l6378:
 18388  198F  082B               	movf	strlen@a^(0+128),w
 18389  1990  022C               	subwf	strlen@s^(0+128),w
 18390  1991  00A8               	movwf	?_strlen^(0+128)
 18391  1992  01A9               	clrf	(?_strlen+1)^(0+128)
 18392  1993  1BA8               	btfsc	?_strlen^(0+128),7
 18393  1994  03A9               	decf	(?_strlen+1)^(0+128),f
 18394  1995                     l1772:
 18395  1995  0008               	return
 18396  1996                     __end_of_strlen:
 18397                           
 18398                           	psect	text49
 18399  1BC3                     __ptext49:	
 18400 ;; *************** function _fputs *****************
 18401 ;; Defined at:
 18402 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;  s               2   18[BANK1 ] PTR const unsigned char 
 18405 ;;		 -> dbuf(32), STR_22(44), STR_21(48), STR_20(33), 
 18406 ;;		 -> STR_19(39), STR_18(36), STR_17(48), STR_16(30), 
 18407 ;;		 -> STR_15(33), STR_14(33), STR_13(46), STR_10(31), 
 18408 ;;		 -> STR_8(34), STR_7(25), STR_6(23), STR_5(29), 
 18409 ;;		 -> STR_4(38), STR_3(27), STR_1(29), 
 18410 ;;  fp              1   20[BANK1 ] PTR struct _IO_FILE
 18411 ;;		 -> NULL(0), 
 18412 ;; Auto vars:     Size  Location     Type
 18413 ;;  i               2   25[BANK1 ] int 
 18414 ;;  c               1   24[BANK1 ] unsigned char 
 18415 ;; Return value:  Size  Location     Type
 18416 ;;                  2   18[BANK1 ] int 
 18417 ;; Registers used:
 18418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/0
 18421 ;;		On exit  : 0/0
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18424 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18425 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18426 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18427 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18428 ;;Total ram usage:        9 bytes
 18429 ;; Hardware stack levels used:    1
 18430 ;; Hardware stack levels required when called:   15
 18431 ;; This function calls:
 18432 ;;		_fputc
 18433 ;; This function is called by:
 18434 ;;		_pad
 18435 ;;		_puts
 18436 ;; This function uses a non-reentrant model
 18437 ;;
 18438                           
 18439                           
 18440                           ;psect for function _fputs
 18441  1BC3                     _fputs:
 18442  1BC3                     l6360:	
 18443                           ;incstack = 0
 18444                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18445                           
 18446  1BC3  0021               	movlb	1	; select bank1
 18447  1BC4  01B9               	clrf	fputs@i^(0+128)
 18448  1BC5  01BA               	clrf	(fputs@i+1)^(0+128)
 18449  1BC6  2BDA               	goto	l6366
 18450  1BC7                     l6362:
 18451  1BC7  0838               	movf	fputs@c^(0+128),w
 18452  1BC8  00B5               	movwf	??_fputs^(0+128)
 18453  1BC9  01B6               	clrf	(??_fputs^(0+128)+1)
 18454  1BCA  0835               	movf	??_fputs^(0+128),w
 18455  1BCB  00AA               	movwf	fputc@c^(0+128)
 18456  1BCC  0836               	movf	(??_fputs+1)^(0+128),w
 18457  1BCD  00AB               	movwf	(fputc@c+1)^(0+128)
 18458  1BCE  0834               	movf	fputs@fp^(0+128),w
 18459  1BCF  00B7               	movwf	(??_fputs+2)^(0+128)
 18460  1BD0  0837               	movf	(??_fputs+2)^(0+128),w
 18461  1BD1  00AC               	movwf	fputc@fp^(0+128)
 18462  1BD2  319D  25B9  319B   	fcall	_fputc
 18463  1BD5                     l6364:
 18464  1BD5  3001               	movlw	1
 18465  1BD6  0021               	movlb	1	; select bank1
 18466  1BD7  07B9               	addwf	fputs@i^(0+128),f
 18467  1BD8  3000               	movlw	0
 18468  1BD9  3DBA               	addwfc	(fputs@i+1)^(0+128),f
 18469  1BDA                     l6366:
 18470  1BDA  0832               	movf	fputs@s^(0+128),w
 18471  1BDB  0739               	addwf	fputs@i^(0+128),w
 18472  1BDC  0084               	movwf	4
 18473  1BDD  0833               	movf	(fputs@s+1)^(0+128),w
 18474  1BDE  3D3A               	addwfc	(fputs@i+1)^(0+128),w
 18475  1BDF  0085               	movwf	5
 18476  1BE0  0800               	movf	0,w	;code access
 18477  1BE1  00B5               	movwf	??_fputs^(0+128)
 18478  1BE2  0835               	movf	??_fputs^(0+128),w
 18479  1BE3  00B8               	movwf	fputs@c^(0+128)
 18480  1BE4  0838               	movf	fputs@c^(0+128),w
 18481  1BE5  1D03               	btfss	3,2
 18482  1BE6  2BE8               	goto	u7041
 18483  1BE7  2BE9               	goto	u7040
 18484  1BE8                     u7041:
 18485  1BE8  2BC7               	goto	l6362
 18486  1BE9                     u7040:
 18487  1BE9                     l6368:
 18488  1BE9  083A               	movf	(fputs@i+1)^(0+128),w
 18489  1BEA  00B3               	movwf	(?_fputs+1)^(0+128)
 18490  1BEB  0839               	movf	fputs@i^(0+128),w
 18491  1BEC  00B2               	movwf	?_fputs^(0+128)
 18492  1BED                     l1757:
 18493  1BED  0008               	return
 18494  1BEE                     __end_of_fputs:
 18495                           
 18496                           	psect	text50
 18497  1DB9                     __ptext50:	
 18498 ;; *************** function _fputc *****************
 18499 ;; Defined at:
 18500 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 18501 ;; Parameters:    Size  Location     Type
 18502 ;;  c               2   10[BANK1 ] int 
 18503 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
 18504 ;;		 -> NULL(0), 
 18505 ;; Auto vars:     Size  Location     Type
 18506 ;;		None
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  2   10[BANK1 ] int 
 18509 ;; Registers used:
 18510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18516 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18518 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18519 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18520 ;;Total ram usage:        8 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:   14
 18523 ;; This function calls:
 18524 ;;		_putch
 18525 ;; This function is called by:
 18526 ;;		_pad
 18527 ;;		_vfpfcnvrt
 18528 ;;		_fputs
 18529 ;;		_puts
 18530 ;; This function uses a non-reentrant model
 18531 ;;
 18532                           
 18533                           
 18534                           ;psect for function _fputc
 18535  1DB9                     _fputc:
 18536  1DB9                     l6322:	
 18537                           ;incstack = 0
 18538                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18539                           
 18540  1DB9  0021               	movlb	1	; select bank1
 18541  1DBA  082C               	movf	fputc@fp^(0+128),w
 18542  1DBB  1903               	btfsc	3,2
 18543  1DBC  2DBE               	goto	u6981
 18544  1DBD  2DBF               	goto	u6980
 18545  1DBE                     u6981:
 18546  1DBE  2DC4               	goto	l6326
 18547  1DBF                     u6980:
 18548  1DBF                     l6324:
 18549  1DBF  082C               	movf	fputc@fp^(0+128),w
 18550  1DC0  1D03               	btfss	3,2
 18551  1DC1  2DC3               	goto	u6991
 18552  1DC2  2DC4               	goto	u6990
 18553  1DC3                     u6991:
 18554  1DC3  2DC9               	goto	l6328
 18555  1DC4                     u6990:
 18556  1DC4                     l6326:
 18557  1DC4  082A               	movf	fputc@c^(0+128),w
 18558  1DC5  31A6  26A1  319D   	fcall	_putch
 18559  1DC8  2DF9               	goto	l6334
 18560  1DC9                     l6328:
 18561  1DC9  082C               	movf	fputc@fp^(0+128),w
 18562  1DCA  3E03               	addlw	3
 18563  1DCB  0086               	movwf	6
 18564  1DCC  0187               	clrf	7
 18565  1DCD  0016               	moviw fsr1++
 18566  1DCE  0401               	iorwf	1,w
 18567  1DCF  1903               	btfsc	3,2
 18568  1DD0  2DD2               	goto	u7001
 18569  1DD1  2DD3               	goto	u7000
 18570  1DD2                     u7001:
 18571  1DD2  2DF0               	goto	l6332
 18572  1DD3                     u7000:
 18573  1DD3                     l6330:
 18574  1DD3  082C               	movf	fputc@fp^(0+128),w
 18575  1DD4  3E03               	addlw	3
 18576  1DD5  0086               	movwf	6
 18577  1DD6  0187               	clrf	7
 18578  1DD7  3F40               	moviw [0]fsr1
 18579  1DD8  00AD               	movwf	??_fputc^(0+128)
 18580  1DD9  3F41               	moviw [1]fsr1
 18581  1DDA  00AE               	movwf	(??_fputc^(0+128)+1)
 18582  1DDB  0A2C               	incf	fputc@fp^(0+128),w
 18583  1DDC  0086               	movwf	6
 18584  1DDD  0187               	clrf	7
 18585  1DDE  3F40               	moviw [0]fsr1
 18586  1DDF  00AF               	movwf	(??_fputc+2)^(0+128)
 18587  1DE0  3F41               	moviw [1]fsr1
 18588  1DE1  00B0               	movwf	((??_fputc+2)^(0+128)+1)
 18589  1DE2  0830               	movf	(??_fputc+3)^(0+128),w
 18590  1DE3  3A80               	xorlw	128
 18591  1DE4  00B1               	movwf	(??_fputc+4)^(0+128)
 18592  1DE5  082E               	movf	(??_fputc+1)^(0+128),w
 18593  1DE6  3A80               	xorlw	128
 18594  1DE7  0231               	subwf	(??_fputc+4)^(0+128),w
 18595  1DE8  1D03               	skipz
 18596  1DE9  2DEC               	goto	u7015
 18597  1DEA  082D               	movf	??_fputc^(0+128),w
 18598  1DEB  022F               	subwf	(??_fputc+2)^(0+128),w
 18599  1DEC                     u7015:
 18600  1DEC  1803               	skipnc
 18601  1DED  2DEF               	goto	u7011
 18602  1DEE  2DF0               	goto	u7010
 18603  1DEF                     u7011:
 18604  1DEF  2DF9               	goto	l6334
 18605  1DF0                     u7010:
 18606  1DF0                     l6332:
 18607  1DF0  0021               	movlb	1	; select bank1
 18608  1DF1  0A2C               	incf	fputc@fp^(0+128),w
 18609  1DF2  0086               	movwf	6
 18610  1DF3  0187               	clrf	7
 18611  1DF4  3001               	movlw	1
 18612  1DF5  0781               	addwf	1,f
 18613  1DF6  3141               	addfsr 1,1
 18614  1DF7  1803               	skipnc
 18615  1DF8  0A81               	incf	1,f
 18616  1DF9                     l6334:
 18617  1DF9  0021               	movlb	1	; select bank1
 18618  1DFA  082A               	movf	fputc@c^(0+128),w
 18619  1DFB  00AD               	movwf	??_fputc^(0+128)
 18620  1DFC  01AE               	clrf	(??_fputc^(0+128)+1)
 18621  1DFD  082D               	movf	??_fputc^(0+128),w
 18622  1DFE  00AA               	movwf	?_fputc^(0+128)
 18623  1DFF  082E               	movf	(??_fputc+1)^(0+128),w
 18624  1E00  00AB               	movwf	(?_fputc+1)^(0+128)
 18625  1E01                     l1749:
 18626  1E01  0008               	return
 18627  1E02                     __end_of_fputc:
 18628                           
 18629                           	psect	text51
 18630  26A1                     __ptext51:	
 18631 ;; *************** function _putch *****************
 18632 ;; Defined at:
 18633 ;;		line 154 in file "mcc_generated_files/eusart.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;  txData          1    wreg     unsigned char 
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;  txData          1    9[BANK1 ] unsigned char 
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      void 
 18640 ;; Registers used:
 18641 ;;		wreg, status,2, status,0, pclath, cstack
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18648 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18650 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18651 ;;Total ram usage:        1 bytes
 18652 ;; Hardware stack levels used:    1
 18653 ;; Hardware stack levels required when called:   13
 18654 ;; This function calls:
 18655 ;;		_EUSART_Write
 18656 ;; This function is called by:
 18657 ;;		_fputc
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661                           
 18662                           ;psect for function _putch
 18663  26A1                     _putch:
 18664                           
 18665                           ;incstack = 0
 18666                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 18667                           ;putch@txData stored from wreg
 18668  26A1  0021               	movlb	1	; select bank1
 18669  26A2  00A9               	movwf	putch@txData^(0+128)
 18670  26A3                     l6304:
 18671                           
 18672                           ;mcc_generated_files/eusart.c: 154: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 155: {;mcc_generated_files/eusart.c: 156:     EUSART_Write(txData);
 18673  26A3  0829               	movf	putch@txData^(0+128),w
 18674  26A4  31A7  27CD  31A6   	fcall	_EUSART_Write
 18675  26A7                     __ccov50_end_blk0:
 18676  26A7                     __ccov51_start_blk1:
 18677  26A7                     l106:
 18678  26A7  0020               	movlb	0	; select bank0
 18679  26A8  14EF               	bsf	__ccovbit1_7/(0+8),__ccovbit1_7& (0+7)	;volatile
 18680  26A9  0008               	return
 18681  26AA                     __end_of_putch:
 18682  26AA                     
 18683                           	psect	text52
 18684  27CD                     __ptext52:	
 18685 ;; *************** function _EUSART_Write *****************
 18686 ;; Defined at:
 18687 ;;		line 138 in file "mcc_generated_files/eusart.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  txData          1    wreg     unsigned char 
 18690 ;; Auto vars:     Size  Location     Type
 18691 ;;  txData          1    8[BANK1 ] unsigned char 
 18692 ;; Return value:  Size  Location     Type
 18693 ;;                  1    wreg      void 
 18694 ;; Registers used:
 18695 ;;		wreg
 18696 ;; Tracked objects:
 18697 ;;		On entry : 0/0
 18698 ;;		On exit  : 0/0
 18699 ;;		Unchanged: 0/0
 18700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18702 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18704 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18705 ;;Total ram usage:        1 bytes
 18706 ;; Hardware stack levels used:    1
 18707 ;; Hardware stack levels required when called:   12
 18708 ;; This function calls:
 18709 ;;		Nothing
 18710 ;; This function is called by:
 18711 ;;		_putch
 18712 ;; This function uses a non-reentrant model
 18713 ;;
 18714                           
 18715                           
 18716                           ;psect for function _EUSART_Write
 18717  27CD                     _EUSART_Write:
 18718                           
 18719                           ;incstack = 0
 18720                           ; Regs used in _EUSART_Write: [wreg]
 18721                           ;EUSART_Write@txData stored from wreg
 18722  27CD  0021               	movlb	1	; select bank1
 18723  27CE  00A8               	movwf	EUSART_Write@txData^(0+128)
 18724  27CF                     l6298:
 18725                           
 18726                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RC1STAbits.SREN = 0;
 18727  27CF  0023               	movlb	3	; select bank3
 18728  27D0  129D               	bcf	29,5	;volatile
 18729                           
 18730                           ;mcc_generated_files/eusart.c: 141:     RC1STAbits.CREN = 0;
 18731  27D1  121D               	bcf	29,4	;volatile
 18732  27D2                     __ccov44_end_blk0:
 18733  27D2                     __ccov45_start_blk2:
 18734  27D2                     l97:	
 18735                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
 18736                           
 18737                           
 18738                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
 18739  27D2  0020               	movlb	0	; select bank0
 18740  27D3  1E11               	btfss	17,4	;volatile
 18741  27D4  2FD6               	goto	u6931
 18742  27D5  2FD7               	goto	u6930
 18743  27D6                     u6931:
 18744  27D6  2FD2               	goto	l97
 18745  27D7                     __ccov45_end_blk2:
 18746  27D7                     u6930:
 18747  27D7                     __ccov46_start_blk4:
 18748  27D7                     l6300:
 18749                           
 18750                           ;mcc_generated_files/eusart.c: 146:     TX1REG = txData;
 18751  27D7  0021               	movlb	1	; select bank1
 18752  27D8  0828               	movf	EUSART_Write@txData^(0+128),w
 18753  27D9  0023               	movlb	3	; select bank3
 18754  27DA  009A               	movwf	26	;volatile
 18755  27DB                     __ccov46_end_blk4:
 18756  27DB                     __ccov47_start_blk5:
 18757  27DB                     l100:
 18758  27DB  0020               	movlb	0	; select bank0
 18759  27DC  156F               	bsf	__ccovbit5_6/(0+8),__ccovbit5_6& (0+7)	;volatile
 18760  27DD  0008               	return
 18761  27DE                     __end_of_EUSART_Write:
 18762  27DE                     
 18763                           	psect	text53
 18764  1A04                     __ptext53:	
 18765 ;; *************** function _abs *****************
 18766 ;; Defined at:
 18767 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
 18768 ;; Parameters:    Size  Location     Type
 18769 ;;  a               2   27[BANK1 ] int 
 18770 ;; Auto vars:     Size  Location     Type
 18771 ;;		None
 18772 ;; Return value:  Size  Location     Type
 18773 ;;                  2   27[BANK1 ] int 
 18774 ;; Registers used:
 18775 ;;		wreg, status,2, status,0
 18776 ;; Tracked objects:
 18777 ;;		On entry : 0/0
 18778 ;;		On exit  : 0/0
 18779 ;;		Unchanged: 0/0
 18780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18781 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18783 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18784 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18785 ;;Total ram usage:        4 bytes
 18786 ;; Hardware stack levels used:    1
 18787 ;; Hardware stack levels required when called:   12
 18788 ;; This function calls:
 18789 ;;		Nothing
 18790 ;; This function is called by:
 18791 ;;		_dtoa
 18792 ;; This function uses a non-reentrant model
 18793 ;;
 18794                           
 18795                           
 18796                           ;psect for function _abs
 18797  1A04                     _abs:
 18798  1A04                     l6566:	
 18799                           ;incstack = 0
 18800                           ; Regs used in _abs: [wreg+status,2+status,0]
 18801                           
 18802  1A04  0021               	movlb	1	; select bank1
 18803  1A05  083C               	movf	(abs@a+1)^(0+128),w
 18804  1A06  3A80               	xorlw	128
 18805  1A07  00BD               	movwf	??_abs^(0+128)
 18806  1A08  3080               	movlw	128
 18807  1A09  023D               	subwf	??_abs^(0+128),w
 18808  1A0A  1D03               	skipz
 18809  1A0B  2A0E               	goto	u7575
 18810  1A0C  3001               	movlw	1
 18811  1A0D  023B               	subwf	abs@a^(0+128),w
 18812  1A0E                     u7575:
 18813  1A0E  1803               	skipnc
 18814  1A0F  2A11               	goto	u7571
 18815  1A10  2A12               	goto	u7570
 18816  1A11                     u7571:
 18817  1A11  2A1F               	goto	l1734
 18818  1A12                     u7570:
 18819  1A12                     l6568:
 18820  1A12  0021               	movlb	1	; select bank1
 18821  1A13  093B               	comf	abs@a^(0+128),w
 18822  1A14  00BD               	movwf	??_abs^(0+128)
 18823  1A15  093C               	comf	(abs@a+1)^(0+128),w
 18824  1A16  00BE               	movwf	(??_abs^(0+128)+1)
 18825  1A17  0ABD               	incf	??_abs^(0+128),f
 18826  1A18  1903               	skipnz
 18827  1A19  0ABE               	incf	(??_abs^(0+128)+1),f
 18828  1A1A  083D               	movf	??_abs^(0+128),w
 18829  1A1B  00BB               	movwf	?_abs^(0+128)
 18830  1A1C  083E               	movf	(??_abs+1)^(0+128),w
 18831  1A1D  00BC               	movwf	(?_abs+1)^(0+128)
 18832  1A1E  2A1F               	goto	l1737
 18833  1A1F                     l1734:
 18834  1A1F                     l1737:
 18835  1A1F  0008               	return
 18836  1A20                     __end_of_abs:
 18837                           
 18838                           	psect	text54
 18839  1612                     __ptext54:	
 18840 ;; *************** function ___aomod *****************
 18841 ;; Defined at:
 18842 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;  divisor         8    8[BANK1 ] long long 
 18845 ;;  dividend        8   16[BANK1 ] long long 
 18846 ;; Auto vars:     Size  Location     Type
 18847 ;;  sign            1   26[BANK1 ] unsigned char 
 18848 ;;  counter         1   25[BANK1 ] unsigned char 
 18849 ;; Return value:  Size  Location     Type
 18850 ;;                  8    8[BANK1 ] long long 
 18851 ;; Registers used:
 18852 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18853 ;; Tracked objects:
 18854 ;;		On entry : 0/0
 18855 ;;		On exit  : 0/0
 18856 ;;		Unchanged: 0/0
 18857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18858 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18859 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18860 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18861 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18862 ;;Total ram usage:       19 bytes
 18863 ;; Hardware stack levels used:    1
 18864 ;; Hardware stack levels required when called:   12
 18865 ;; This function calls:
 18866 ;;		Nothing
 18867 ;; This function is called by:
 18868 ;;		_dtoa
 18869 ;; This function uses a non-reentrant model
 18870 ;;
 18871                           
 18872                           
 18873                           ;psect for function ___aomod
 18874  1612                     ___aomod:
 18875  1612                     l6514:	
 18876                           ;incstack = 0
 18877                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 18878                           
 18879  1612  0021               	movlb	1	; select bank1
 18880  1613  01BA               	clrf	___aomod@sign^(0+128)
 18881  1614                     l6516:
 18882  1614  30B0               	movlw	low ___aomod@dividend
 18883  1615  0086               	movwf	6
 18884  1616  3000               	movlw	high ___aomod@dividend
 18885  1617  0087               	movwf	7
 18886  1618  3F47               	moviw [7]fsr1
 18887  1619  00B8               	movwf	??___aomod^(0+128)
 18888  161A  1FB8               	btfss	??___aomod^(0+128),7
 18889  161B  2E1D               	goto	u7431
 18890  161C  2E1E               	goto	u7430
 18891  161D                     u7431:
 18892  161D  2E40               	goto	l6520
 18893  161E                     u7430:
 18894  161E                     l6518:
 18895  161E  0021               	movlb	1	; select bank1
 18896  161F  09B0               	comf	___aomod@dividend^(0+128),f
 18897  1620  09B1               	comf	(___aomod@dividend+1)^(0+128),f
 18898  1621  09B2               	comf	(___aomod@dividend+2)^(0+128),f
 18899  1622  09B3               	comf	(___aomod@dividend+3)^(0+128),f
 18900  1623  09B4               	comf	(___aomod@dividend+4)^(0+128),f
 18901  1624  09B5               	comf	(___aomod@dividend+5)^(0+128),f
 18902  1625  09B6               	comf	(___aomod@dividend+6)^(0+128),f
 18903  1626  09B7               	comf	(___aomod@dividend+7)^(0+128),f
 18904  1627  0AB0               	incf	___aomod@dividend^(0+128),f
 18905  1628  1D03               	skipz
 18906  1629  2E3D               	goto	u744lld
 18907  162A  0AB1               	incf	(___aomod@dividend+1)^(0+128),f
 18908  162B  1D03               	skipz
 18909  162C  2E3D               	goto	u744lld
 18910  162D  0AB2               	incf	(___aomod@dividend+2)^(0+128),f
 18911  162E  1D03               	skipz
 18912  162F  2E3D               	goto	u744lld
 18913  1630  0AB3               	incf	(___aomod@dividend+3)^(0+128),f
 18914  1631  1D03               	skipz
 18915  1632  2E3D               	goto	u744lld
 18916  1633  0AB4               	incf	(___aomod@dividend+4)^(0+128),f
 18917  1634  1D03               	skipz
 18918  1635  2E3D               	goto	u744lld
 18919  1636  0AB5               	incf	(___aomod@dividend+5)^(0+128),f
 18920  1637  1D03               	skipz
 18921  1638  2E3D               	goto	u744lld
 18922  1639  0AB6               	incf	(___aomod@dividend+6)^(0+128),f
 18923  163A  1D03               	skipz
 18924  163B  2E3D               	goto	u744lld
 18925  163C  0AB7               	incf	(___aomod@dividend+7)^(0+128),f
 18926  163D                     u744lld:
 18927  163D  0021               	movlb	1	; select bank1
 18928  163E  01BA               	clrf	___aomod@sign^(0+128)
 18929  163F  0ABA               	incf	___aomod@sign^(0+128),f
 18930  1640                     l6520:
 18931  1640  30A8               	movlw	low ___aomod@divisor
 18932  1641  0086               	movwf	6
 18933  1642  3000               	movlw	high ___aomod@divisor
 18934  1643  0087               	movwf	7
 18935  1644  3F47               	moviw [7]fsr1
 18936  1645  0021               	movlb	1	; select bank1
 18937  1646  00B8               	movwf	??___aomod^(0+128)
 18938  1647  1FB8               	btfss	??___aomod^(0+128),7
 18939  1648  2E4A               	goto	u7451
 18940  1649  2E4B               	goto	u7450
 18941  164A                     u7451:
 18942  164A  2E6A               	goto	l6524
 18943  164B                     u7450:
 18944  164B                     l6522:
 18945  164B  0021               	movlb	1	; select bank1
 18946  164C  09A8               	comf	___aomod@divisor^(0+128),f
 18947  164D  09A9               	comf	(___aomod@divisor+1)^(0+128),f
 18948  164E  09AA               	comf	(___aomod@divisor+2)^(0+128),f
 18949  164F  09AB               	comf	(___aomod@divisor+3)^(0+128),f
 18950  1650  09AC               	comf	(___aomod@divisor+4)^(0+128),f
 18951  1651  09AD               	comf	(___aomod@divisor+5)^(0+128),f
 18952  1652  09AE               	comf	(___aomod@divisor+6)^(0+128),f
 18953  1653  09AF               	comf	(___aomod@divisor+7)^(0+128),f
 18954  1654  0AA8               	incf	___aomod@divisor^(0+128),f
 18955  1655  1D03               	skipz
 18956  1656  2E6A               	goto	u746lld
 18957  1657  0AA9               	incf	(___aomod@divisor+1)^(0+128),f
 18958  1658  1D03               	skipz
 18959  1659  2E6A               	goto	u746lld
 18960  165A  0AAA               	incf	(___aomod@divisor+2)^(0+128),f
 18961  165B  1D03               	skipz
 18962  165C  2E6A               	goto	u746lld
 18963  165D  0AAB               	incf	(___aomod@divisor+3)^(0+128),f
 18964  165E  1D03               	skipz
 18965  165F  2E6A               	goto	u746lld
 18966  1660  0AAC               	incf	(___aomod@divisor+4)^(0+128),f
 18967  1661  1D03               	skipz
 18968  1662  2E6A               	goto	u746lld
 18969  1663  0AAD               	incf	(___aomod@divisor+5)^(0+128),f
 18970  1664  1D03               	skipz
 18971  1665  2E6A               	goto	u746lld
 18972  1666  0AAE               	incf	(___aomod@divisor+6)^(0+128),f
 18973  1667  1D03               	skipz
 18974  1668  2E6A               	goto	u746lld
 18975  1669  0AAF               	incf	(___aomod@divisor+7)^(0+128),f
 18976  166A                     u746lld:
 18977  166A                     l6524:
 18978  166A  0021               	movlb	1	; select bank1
 18979  166B  0828               	movf	___aomod@divisor^(0+128),w
 18980  166C  0429               	iorwf	(___aomod@divisor+1)^(0+128),w
 18981  166D  042A               	iorwf	(___aomod@divisor+2)^(0+128),w
 18982  166E  042B               	iorwf	(___aomod@divisor+3)^(0+128),w
 18983  166F  042C               	iorwf	(___aomod@divisor+4)^(0+128),w
 18984  1670  042D               	iorwf	(___aomod@divisor+5)^(0+128),w
 18985  1671  042E               	iorwf	(___aomod@divisor+6)^(0+128),w
 18986  1672  042F               	iorwf	(___aomod@divisor+7)^(0+128),w
 18987  1673  1903               	skipnz
 18988  1674  2E76               	goto	u7471
 18989  1675  2E77               	goto	u7470
 18990  1676                     u7471:
 18991  1676  2ECA               	goto	l6540
 18992  1677                     u7470:
 18993  1677                     l6526:
 18994  1677  01B9               	clrf	___aomod@counter^(0+128)
 18995  1678  0AB9               	incf	___aomod@counter^(0+128),f
 18996  1679  2E86               	goto	l6532
 18997  167A                     l6528:
 18998  167A  35A8               	lslf	___aomod@divisor^(0+128),f
 18999  167B  0DA9               	rlf	(___aomod@divisor+1)^(0+128),f
 19000  167C  0DAA               	rlf	(___aomod@divisor+2)^(0+128),f
 19001  167D  0DAB               	rlf	(___aomod@divisor+3)^(0+128),f
 19002  167E  0DAC               	rlf	(___aomod@divisor+4)^(0+128),f
 19003  167F  0DAD               	rlf	(___aomod@divisor+5)^(0+128),f
 19004  1680  0DAE               	rlf	(___aomod@divisor+6)^(0+128),f
 19005  1681  0DAF               	rlf	(___aomod@divisor+7)^(0+128),f
 19006  1682                     l6530:
 19007  1682  3001               	movlw	1
 19008  1683  00B8               	movwf	??___aomod^(0+128)
 19009  1684  0838               	movf	??___aomod^(0+128),w
 19010  1685  07B9               	addwf	___aomod@counter^(0+128),f
 19011  1686                     l6532:
 19012  1686  1FAF               	btfss	(___aomod@divisor+7)^(0+128),7
 19013  1687  2E89               	goto	u7481
 19014  1688  2E8A               	goto	u7480
 19015  1689                     u7481:
 19016  1689  2E7A               	goto	l6528
 19017  168A                     u7480:
 19018  168A                     l6534:
 19019  168A  082F               	movf	(___aomod@divisor+7)^(0+128),w
 19020  168B  0237               	subwf	(___aomod@dividend+7)^(0+128),w
 19021  168C  1D03               	skipz
 19022  168D  2EA8               	goto	u7495
 19023  168E  082E               	movf	(___aomod@divisor+6)^(0+128),w
 19024  168F  0236               	subwf	(___aomod@dividend+6)^(0+128),w
 19025  1690  1D03               	skipz
 19026  1691  2EA8               	goto	u7495
 19027  1692  082D               	movf	(___aomod@divisor+5)^(0+128),w
 19028  1693  0235               	subwf	(___aomod@dividend+5)^(0+128),w
 19029  1694  1D03               	skipz
 19030  1695  2EA8               	goto	u7495
 19031  1696  082C               	movf	(___aomod@divisor+4)^(0+128),w
 19032  1697  0234               	subwf	(___aomod@dividend+4)^(0+128),w
 19033  1698  1D03               	skipz
 19034  1699  2EA8               	goto	u7495
 19035  169A  082B               	movf	(___aomod@divisor+3)^(0+128),w
 19036  169B  0233               	subwf	(___aomod@dividend+3)^(0+128),w
 19037  169C  1D03               	skipz
 19038  169D  2EA8               	goto	u7495
 19039  169E  082A               	movf	(___aomod@divisor+2)^(0+128),w
 19040  169F  0232               	subwf	(___aomod@dividend+2)^(0+128),w
 19041  16A0  1D03               	skipz
 19042  16A1  2EA8               	goto	u7495
 19043  16A2  0829               	movf	(___aomod@divisor+1)^(0+128),w
 19044  16A3  0231               	subwf	(___aomod@dividend+1)^(0+128),w
 19045  16A4  1D03               	skipz
 19046  16A5  2EA8               	goto	u7495
 19047  16A6  0828               	movf	___aomod@divisor^(0+128),w
 19048  16A7  0230               	subwf	___aomod@dividend^(0+128),w
 19049  16A8                     u7495:
 19050  16A8  1C03               	skipc
 19051  16A9  2EAB               	goto	u7491
 19052  16AA  2EAC               	goto	u7490
 19053  16AB                     u7491:
 19054  16AB  2EBC               	goto	l6538
 19055  16AC                     u7490:
 19056  16AC                     l6536:
 19057  16AC  0828               	movf	___aomod@divisor^(0+128),w
 19058  16AD  02B0               	subwf	___aomod@dividend^(0+128),f
 19059  16AE  0829               	movf	(___aomod@divisor+1)^(0+128),w
 19060  16AF  3BB1               	subwfb	(___aomod@dividend+1)^(0+128),f
 19061  16B0  082A               	movf	(___aomod@divisor+2)^(0+128),w
 19062  16B1  3BB2               	subwfb	(___aomod@dividend+2)^(0+128),f
 19063  16B2  082B               	movf	(___aomod@divisor+3)^(0+128),w
 19064  16B3  3BB3               	subwfb	(___aomod@dividend+3)^(0+128),f
 19065  16B4  082C               	movf	(___aomod@divisor+4)^(0+128),w
 19066  16B5  3BB4               	subwfb	(___aomod@dividend+4)^(0+128),f
 19067  16B6  082D               	movf	(___aomod@divisor+5)^(0+128),w
 19068  16B7  3BB5               	subwfb	(___aomod@dividend+5)^(0+128),f
 19069  16B8  082E               	movf	(___aomod@divisor+6)^(0+128),w
 19070  16B9  3BB6               	subwfb	(___aomod@dividend+6)^(0+128),f
 19071  16BA  082F               	movf	(___aomod@divisor+7)^(0+128),w
 19072  16BB  3BB7               	subwfb	(___aomod@dividend+7)^(0+128),f
 19073  16BC                     l6538:
 19074  16BC  36AF               	lsrf	(___aomod@divisor+7)^(0+128),f
 19075  16BD  0CAE               	rrf	(___aomod@divisor+6)^(0+128),f
 19076  16BE  0CAD               	rrf	(___aomod@divisor+5)^(0+128),f
 19077  16BF  0CAC               	rrf	(___aomod@divisor+4)^(0+128),f
 19078  16C0  0CAB               	rrf	(___aomod@divisor+3)^(0+128),f
 19079  16C1  0CAA               	rrf	(___aomod@divisor+2)^(0+128),f
 19080  16C2  0CA9               	rrf	(___aomod@divisor+1)^(0+128),f
 19081  16C3  0CA8               	rrf	___aomod@divisor^(0+128),f
 19082  16C4  3001               	movlw	1
 19083  16C5  02B9               	subwf	___aomod@counter^(0+128),f
 19084  16C6  1D03               	btfss	3,2
 19085  16C7  2EC9               	goto	u7501
 19086  16C8  2ECA               	goto	u7500
 19087  16C9                     u7501:
 19088  16C9  2E8A               	goto	l6534
 19089  16CA                     u7500:
 19090  16CA                     l6540:
 19091  16CA  083A               	movf	___aomod@sign^(0+128),w
 19092  16CB  1903               	btfsc	3,2
 19093  16CC  2ECE               	goto	u7511
 19094  16CD  2ECF               	goto	u7510
 19095  16CE                     u7511:
 19096  16CE  2EED               	goto	l1308
 19097  16CF                     u7510:
 19098  16CF                     l6542:
 19099  16CF  09B0               	comf	___aomod@dividend^(0+128),f
 19100  16D0  09B1               	comf	(___aomod@dividend+1)^(0+128),f
 19101  16D1  09B2               	comf	(___aomod@dividend+2)^(0+128),f
 19102  16D2  09B3               	comf	(___aomod@dividend+3)^(0+128),f
 19103  16D3  09B4               	comf	(___aomod@dividend+4)^(0+128),f
 19104  16D4  09B5               	comf	(___aomod@dividend+5)^(0+128),f
 19105  16D5  09B6               	comf	(___aomod@dividend+6)^(0+128),f
 19106  16D6  09B7               	comf	(___aomod@dividend+7)^(0+128),f
 19107  16D7  0AB0               	incf	___aomod@dividend^(0+128),f
 19108  16D8  1D03               	skipz
 19109  16D9  2EED               	goto	u752lld
 19110  16DA  0AB1               	incf	(___aomod@dividend+1)^(0+128),f
 19111  16DB  1D03               	skipz
 19112  16DC  2EED               	goto	u752lld
 19113  16DD  0AB2               	incf	(___aomod@dividend+2)^(0+128),f
 19114  16DE  1D03               	skipz
 19115  16DF  2EED               	goto	u752lld
 19116  16E0  0AB3               	incf	(___aomod@dividend+3)^(0+128),f
 19117  16E1  1D03               	skipz
 19118  16E2  2EED               	goto	u752lld
 19119  16E3  0AB4               	incf	(___aomod@dividend+4)^(0+128),f
 19120  16E4  1D03               	skipz
 19121  16E5  2EED               	goto	u752lld
 19122  16E6  0AB5               	incf	(___aomod@dividend+5)^(0+128),f
 19123  16E7  1D03               	skipz
 19124  16E8  2EED               	goto	u752lld
 19125  16E9  0AB6               	incf	(___aomod@dividend+6)^(0+128),f
 19126  16EA  1D03               	skipz
 19127  16EB  2EED               	goto	u752lld
 19128  16EC  0AB7               	incf	(___aomod@dividend+7)^(0+128),f
 19129  16ED                     u752lld:
 19130  16ED                     l1308:
 19131  16ED  0021               	movlb	1	; select bank1
 19132  16EE  0830               	movf	___aomod@dividend^(0+128),w
 19133  16EF  00A8               	movwf	?___aomod^(0+128)
 19134  16F0  0831               	movf	(___aomod@dividend+1)^(0+128),w
 19135  16F1  00A9               	movwf	(?___aomod+1)^(0+128)
 19136  16F2  0832               	movf	(___aomod@dividend+2)^(0+128),w
 19137  16F3  00AA               	movwf	(?___aomod+2)^(0+128)
 19138  16F4  0833               	movf	(___aomod@dividend+3)^(0+128),w
 19139  16F5  00AB               	movwf	(?___aomod+3)^(0+128)
 19140  16F6  0834               	movf	(___aomod@dividend+4)^(0+128),w
 19141  16F7  00AC               	movwf	(?___aomod+4)^(0+128)
 19142  16F8  0835               	movf	(___aomod@dividend+5)^(0+128),w
 19143  16F9  00AD               	movwf	(?___aomod+5)^(0+128)
 19144  16FA  0836               	movf	(___aomod@dividend+6)^(0+128),w
 19145  16FB  00AE               	movwf	(?___aomod+6)^(0+128)
 19146  16FC  0837               	movf	(___aomod@dividend+7)^(0+128),w
 19147  16FD  00AF               	movwf	(?___aomod+7)^(0+128)
 19148  16FE                     l1309:
 19149  16FE  0008               	return
 19150  16FF                     __end_of___aomod:
 19151                           
 19152                           	psect	text55
 19153  085D                     __ptext55:	
 19154 ;; *************** function ___aodiv *****************
 19155 ;; Defined at:
 19156 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;  divisor         8    8[BANK1 ] long long 
 19159 ;;  dividend        8   16[BANK1 ] long long 
 19160 ;; Auto vars:     Size  Location     Type
 19161 ;;  quotient        8   27[BANK1 ] long long 
 19162 ;;  sign            1   26[BANK1 ] unsigned char 
 19163 ;;  counter         1   25[BANK1 ] unsigned char 
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  8    8[BANK1 ] long long 
 19166 ;; Registers used:
 19167 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19168 ;; Tracked objects:
 19169 ;;		On entry : 0/0
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19173 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19175 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19177 ;;Total ram usage:       27 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; Hardware stack levels required when called:   12
 19180 ;; This function calls:
 19181 ;;		Nothing
 19182 ;; This function is called by:
 19183 ;;		_dtoa
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187                           
 19188                           ;psect for function ___aodiv
 19189  085D                     ___aodiv:
 19190  085D                     l6476:	
 19191                           ;incstack = 0
 19192                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 19193                           
 19194  085D  0021               	movlb	1	; select bank1
 19195  085E  01BA               	clrf	___aodiv@sign^(0+128)
 19196  085F                     l6478:
 19197  085F  30A8               	movlw	low ___aodiv@divisor
 19198  0860  0086               	movwf	6
 19199  0861  3000               	movlw	high ___aodiv@divisor
 19200  0862  0087               	movwf	7
 19201  0863  3F47               	moviw [7]fsr1
 19202  0864  00B8               	movwf	??___aodiv^(0+128)
 19203  0865  1FB8               	btfss	??___aodiv^(0+128),7
 19204  0866  2868               	goto	u7321
 19205  0867  2869               	goto	u7320
 19206  0868                     u7321:
 19207  0868  288B               	goto	l6482
 19208  0869                     u7320:
 19209  0869                     l6480:
 19210  0869  0021               	movlb	1	; select bank1
 19211  086A  09A8               	comf	___aodiv@divisor^(0+128),f
 19212  086B  09A9               	comf	(___aodiv@divisor+1)^(0+128),f
 19213  086C  09AA               	comf	(___aodiv@divisor+2)^(0+128),f
 19214  086D  09AB               	comf	(___aodiv@divisor+3)^(0+128),f
 19215  086E  09AC               	comf	(___aodiv@divisor+4)^(0+128),f
 19216  086F  09AD               	comf	(___aodiv@divisor+5)^(0+128),f
 19217  0870  09AE               	comf	(___aodiv@divisor+6)^(0+128),f
 19218  0871  09AF               	comf	(___aodiv@divisor+7)^(0+128),f
 19219  0872  0AA8               	incf	___aodiv@divisor^(0+128),f
 19220  0873  1D03               	skipz
 19221  0874  2888               	goto	u733lld
 19222  0875  0AA9               	incf	(___aodiv@divisor+1)^(0+128),f
 19223  0876  1D03               	skipz
 19224  0877  2888               	goto	u733lld
 19225  0878  0AAA               	incf	(___aodiv@divisor+2)^(0+128),f
 19226  0879  1D03               	skipz
 19227  087A  2888               	goto	u733lld
 19228  087B  0AAB               	incf	(___aodiv@divisor+3)^(0+128),f
 19229  087C  1D03               	skipz
 19230  087D  2888               	goto	u733lld
 19231  087E  0AAC               	incf	(___aodiv@divisor+4)^(0+128),f
 19232  087F  1D03               	skipz
 19233  0880  2888               	goto	u733lld
 19234  0881  0AAD               	incf	(___aodiv@divisor+5)^(0+128),f
 19235  0882  1D03               	skipz
 19236  0883  2888               	goto	u733lld
 19237  0884  0AAE               	incf	(___aodiv@divisor+6)^(0+128),f
 19238  0885  1D03               	skipz
 19239  0886  2888               	goto	u733lld
 19240  0887  0AAF               	incf	(___aodiv@divisor+7)^(0+128),f
 19241  0888                     u733lld:
 19242  0888  0021               	movlb	1	; select bank1
 19243  0889  01BA               	clrf	___aodiv@sign^(0+128)
 19244  088A  0ABA               	incf	___aodiv@sign^(0+128),f
 19245  088B                     l6482:
 19246  088B  30B0               	movlw	low ___aodiv@dividend
 19247  088C  0086               	movwf	6
 19248  088D  3000               	movlw	high ___aodiv@dividend
 19249  088E  0087               	movwf	7
 19250  088F  3F47               	moviw [7]fsr1
 19251  0890  0021               	movlb	1	; select bank1
 19252  0891  00B8               	movwf	??___aodiv^(0+128)
 19253  0892  1FB8               	btfss	??___aodiv^(0+128),7
 19254  0893  2895               	goto	u7341
 19255  0894  2896               	goto	u7340
 19256  0895                     u7341:
 19257  0895  28BA               	goto	l6488
 19258  0896                     u7340:
 19259  0896                     l6484:
 19260  0896  0021               	movlb	1	; select bank1
 19261  0897  09B0               	comf	___aodiv@dividend^(0+128),f
 19262  0898  09B1               	comf	(___aodiv@dividend+1)^(0+128),f
 19263  0899  09B2               	comf	(___aodiv@dividend+2)^(0+128),f
 19264  089A  09B3               	comf	(___aodiv@dividend+3)^(0+128),f
 19265  089B  09B4               	comf	(___aodiv@dividend+4)^(0+128),f
 19266  089C  09B5               	comf	(___aodiv@dividend+5)^(0+128),f
 19267  089D  09B6               	comf	(___aodiv@dividend+6)^(0+128),f
 19268  089E  09B7               	comf	(___aodiv@dividend+7)^(0+128),f
 19269  089F  0AB0               	incf	___aodiv@dividend^(0+128),f
 19270  08A0  1D03               	skipz
 19271  08A1  28B5               	goto	u735lld
 19272  08A2  0AB1               	incf	(___aodiv@dividend+1)^(0+128),f
 19273  08A3  1D03               	skipz
 19274  08A4  28B5               	goto	u735lld
 19275  08A5  0AB2               	incf	(___aodiv@dividend+2)^(0+128),f
 19276  08A6  1D03               	skipz
 19277  08A7  28B5               	goto	u735lld
 19278  08A8  0AB3               	incf	(___aodiv@dividend+3)^(0+128),f
 19279  08A9  1D03               	skipz
 19280  08AA  28B5               	goto	u735lld
 19281  08AB  0AB4               	incf	(___aodiv@dividend+4)^(0+128),f
 19282  08AC  1D03               	skipz
 19283  08AD  28B5               	goto	u735lld
 19284  08AE  0AB5               	incf	(___aodiv@dividend+5)^(0+128),f
 19285  08AF  1D03               	skipz
 19286  08B0  28B5               	goto	u735lld
 19287  08B1  0AB6               	incf	(___aodiv@dividend+6)^(0+128),f
 19288  08B2  1D03               	skipz
 19289  08B3  28B5               	goto	u735lld
 19290  08B4  0AB7               	incf	(___aodiv@dividend+7)^(0+128),f
 19291  08B5                     u735lld:
 19292  08B5                     l6486:
 19293  08B5  3001               	movlw	1
 19294  08B6  0021               	movlb	1	; select bank1
 19295  08B7  00B8               	movwf	??___aodiv^(0+128)
 19296  08B8  0838               	movf	??___aodiv^(0+128),w
 19297  08B9  06BA               	xorwf	___aodiv@sign^(0+128),f
 19298  08BA                     l6488:
 19299  08BA  30BB               	movlw	low ___aodiv@quotient
 19300  08BB  0086               	movwf	6
 19301  08BC  3000               	movlw	high ___aodiv@quotient
 19302  08BD  0087               	movwf	7
 19303  08BE  3008               	movlw	8
 19304  08BF  0021               	movlb	1	; select bank1
 19305  08C0  00B8               	movwf	??___aodiv^(0+128)
 19306  08C1  3000               	movlw	0
 19307  08C2                     u7360:
 19308  08C2  001E               	movwi fsr1++
 19309  08C3  0BB8               	decfsz	??___aodiv^(0+128),f
 19310  08C4  28C2               	goto	u7360
 19311  08C5                     l6490:
 19312  08C5  0828               	movf	___aodiv@divisor^(0+128),w
 19313  08C6  0429               	iorwf	(___aodiv@divisor+1)^(0+128),w
 19314  08C7  042A               	iorwf	(___aodiv@divisor+2)^(0+128),w
 19315  08C8  042B               	iorwf	(___aodiv@divisor+3)^(0+128),w
 19316  08C9  042C               	iorwf	(___aodiv@divisor+4)^(0+128),w
 19317  08CA  042D               	iorwf	(___aodiv@divisor+5)^(0+128),w
 19318  08CB  042E               	iorwf	(___aodiv@divisor+6)^(0+128),w
 19319  08CC  042F               	iorwf	(___aodiv@divisor+7)^(0+128),w
 19320  08CD  1903               	skipnz
 19321  08CE  28D0               	goto	u7371
 19322  08CF  28D1               	goto	u7370
 19323  08D0                     u7371:
 19324  08D0  292D               	goto	l6510
 19325  08D1                     u7370:
 19326  08D1                     l6492:
 19327  08D1  01B9               	clrf	___aodiv@counter^(0+128)
 19328  08D2  0AB9               	incf	___aodiv@counter^(0+128),f
 19329  08D3  28E0               	goto	l6498
 19330  08D4                     l6494:
 19331  08D4  35A8               	lslf	___aodiv@divisor^(0+128),f
 19332  08D5  0DA9               	rlf	(___aodiv@divisor+1)^(0+128),f
 19333  08D6  0DAA               	rlf	(___aodiv@divisor+2)^(0+128),f
 19334  08D7  0DAB               	rlf	(___aodiv@divisor+3)^(0+128),f
 19335  08D8  0DAC               	rlf	(___aodiv@divisor+4)^(0+128),f
 19336  08D9  0DAD               	rlf	(___aodiv@divisor+5)^(0+128),f
 19337  08DA  0DAE               	rlf	(___aodiv@divisor+6)^(0+128),f
 19338  08DB  0DAF               	rlf	(___aodiv@divisor+7)^(0+128),f
 19339  08DC                     l6496:
 19340  08DC  3001               	movlw	1
 19341  08DD  00B8               	movwf	??___aodiv^(0+128)
 19342  08DE  0838               	movf	??___aodiv^(0+128),w
 19343  08DF  07B9               	addwf	___aodiv@counter^(0+128),f
 19344  08E0                     l6498:
 19345  08E0  1FAF               	btfss	(___aodiv@divisor+7)^(0+128),7
 19346  08E1  28E3               	goto	u7381
 19347  08E2  28E4               	goto	u7380
 19348  08E3                     u7381:
 19349  08E3  28D4               	goto	l6494
 19350  08E4                     u7380:
 19351  08E4                     l6500:
 19352  08E4  35BB               	lslf	___aodiv@quotient^(0+128),f
 19353  08E5  0DBC               	rlf	(___aodiv@quotient+1)^(0+128),f
 19354  08E6  0DBD               	rlf	(___aodiv@quotient+2)^(0+128),f
 19355  08E7  0DBE               	rlf	(___aodiv@quotient+3)^(0+128),f
 19356  08E8  0DBF               	rlf	(___aodiv@quotient+4)^(0+128),f
 19357  08E9  0DC0               	rlf	(___aodiv@quotient+5)^(0+128),f
 19358  08EA  0DC1               	rlf	(___aodiv@quotient+6)^(0+128),f
 19359  08EB  0DC2               	rlf	(___aodiv@quotient+7)^(0+128),f
 19360  08EC                     l6502:
 19361  08EC  082F               	movf	(___aodiv@divisor+7)^(0+128),w
 19362  08ED  0237               	subwf	(___aodiv@dividend+7)^(0+128),w
 19363  08EE  1D03               	skipz
 19364  08EF  290A               	goto	u7395
 19365  08F0  082E               	movf	(___aodiv@divisor+6)^(0+128),w
 19366  08F1  0236               	subwf	(___aodiv@dividend+6)^(0+128),w
 19367  08F2  1D03               	skipz
 19368  08F3  290A               	goto	u7395
 19369  08F4  082D               	movf	(___aodiv@divisor+5)^(0+128),w
 19370  08F5  0235               	subwf	(___aodiv@dividend+5)^(0+128),w
 19371  08F6  1D03               	skipz
 19372  08F7  290A               	goto	u7395
 19373  08F8  082C               	movf	(___aodiv@divisor+4)^(0+128),w
 19374  08F9  0234               	subwf	(___aodiv@dividend+4)^(0+128),w
 19375  08FA  1D03               	skipz
 19376  08FB  290A               	goto	u7395
 19377  08FC  082B               	movf	(___aodiv@divisor+3)^(0+128),w
 19378  08FD  0233               	subwf	(___aodiv@dividend+3)^(0+128),w
 19379  08FE  1D03               	skipz
 19380  08FF  290A               	goto	u7395
 19381  0900  082A               	movf	(___aodiv@divisor+2)^(0+128),w
 19382  0901  0232               	subwf	(___aodiv@dividend+2)^(0+128),w
 19383  0902  1D03               	skipz
 19384  0903  290A               	goto	u7395
 19385  0904  0829               	movf	(___aodiv@divisor+1)^(0+128),w
 19386  0905  0231               	subwf	(___aodiv@dividend+1)^(0+128),w
 19387  0906  1D03               	skipz
 19388  0907  290A               	goto	u7395
 19389  0908  0828               	movf	___aodiv@divisor^(0+128),w
 19390  0909  0230               	subwf	___aodiv@dividend^(0+128),w
 19391  090A                     u7395:
 19392  090A  1C03               	skipc
 19393  090B  290D               	goto	u7391
 19394  090C  290E               	goto	u7390
 19395  090D                     u7391:
 19396  090D  291F               	goto	l6508
 19397  090E                     u7390:
 19398  090E                     l6504:
 19399  090E  0828               	movf	___aodiv@divisor^(0+128),w
 19400  090F  02B0               	subwf	___aodiv@dividend^(0+128),f
 19401  0910  0829               	movf	(___aodiv@divisor+1)^(0+128),w
 19402  0911  3BB1               	subwfb	(___aodiv@dividend+1)^(0+128),f
 19403  0912  082A               	movf	(___aodiv@divisor+2)^(0+128),w
 19404  0913  3BB2               	subwfb	(___aodiv@dividend+2)^(0+128),f
 19405  0914  082B               	movf	(___aodiv@divisor+3)^(0+128),w
 19406  0915  3BB3               	subwfb	(___aodiv@dividend+3)^(0+128),f
 19407  0916  082C               	movf	(___aodiv@divisor+4)^(0+128),w
 19408  0917  3BB4               	subwfb	(___aodiv@dividend+4)^(0+128),f
 19409  0918  082D               	movf	(___aodiv@divisor+5)^(0+128),w
 19410  0919  3BB5               	subwfb	(___aodiv@dividend+5)^(0+128),f
 19411  091A  082E               	movf	(___aodiv@divisor+6)^(0+128),w
 19412  091B  3BB6               	subwfb	(___aodiv@dividend+6)^(0+128),f
 19413  091C  082F               	movf	(___aodiv@divisor+7)^(0+128),w
 19414  091D  3BB7               	subwfb	(___aodiv@dividend+7)^(0+128),f
 19415  091E                     l6506:
 19416  091E  143B               	bsf	___aodiv@quotient^(0+128),0
 19417  091F                     l6508:
 19418  091F  36AF               	lsrf	(___aodiv@divisor+7)^(0+128),f
 19419  0920  0CAE               	rrf	(___aodiv@divisor+6)^(0+128),f
 19420  0921  0CAD               	rrf	(___aodiv@divisor+5)^(0+128),f
 19421  0922  0CAC               	rrf	(___aodiv@divisor+4)^(0+128),f
 19422  0923  0CAB               	rrf	(___aodiv@divisor+3)^(0+128),f
 19423  0924  0CAA               	rrf	(___aodiv@divisor+2)^(0+128),f
 19424  0925  0CA9               	rrf	(___aodiv@divisor+1)^(0+128),f
 19425  0926  0CA8               	rrf	___aodiv@divisor^(0+128),f
 19426  0927  3001               	movlw	1
 19427  0928  02B9               	subwf	___aodiv@counter^(0+128),f
 19428  0929  1D03               	btfss	3,2
 19429  092A  292C               	goto	u7401
 19430  092B  292D               	goto	u7400
 19431  092C                     u7401:
 19432  092C  28E4               	goto	l6500
 19433  092D                     u7400:
 19434  092D                     l6510:
 19435  092D  083A               	movf	___aodiv@sign^(0+128),w
 19436  092E  1903               	btfsc	3,2
 19437  092F  2931               	goto	u7411
 19438  0930  2932               	goto	u7410
 19439  0931                     u7411:
 19440  0931  2950               	goto	l1295
 19441  0932                     u7410:
 19442  0932                     l6512:
 19443  0932  09BB               	comf	___aodiv@quotient^(0+128),f
 19444  0933  09BC               	comf	(___aodiv@quotient+1)^(0+128),f
 19445  0934  09BD               	comf	(___aodiv@quotient+2)^(0+128),f
 19446  0935  09BE               	comf	(___aodiv@quotient+3)^(0+128),f
 19447  0936  09BF               	comf	(___aodiv@quotient+4)^(0+128),f
 19448  0937  09C0               	comf	(___aodiv@quotient+5)^(0+128),f
 19449  0938  09C1               	comf	(___aodiv@quotient+6)^(0+128),f
 19450  0939  09C2               	comf	(___aodiv@quotient+7)^(0+128),f
 19451  093A  0ABB               	incf	___aodiv@quotient^(0+128),f
 19452  093B  1D03               	skipz
 19453  093C  2950               	goto	u742lld
 19454  093D  0ABC               	incf	(___aodiv@quotient+1)^(0+128),f
 19455  093E  1D03               	skipz
 19456  093F  2950               	goto	u742lld
 19457  0940  0ABD               	incf	(___aodiv@quotient+2)^(0+128),f
 19458  0941  1D03               	skipz
 19459  0942  2950               	goto	u742lld
 19460  0943  0ABE               	incf	(___aodiv@quotient+3)^(0+128),f
 19461  0944  1D03               	skipz
 19462  0945  2950               	goto	u742lld
 19463  0946  0ABF               	incf	(___aodiv@quotient+4)^(0+128),f
 19464  0947  1D03               	skipz
 19465  0948  2950               	goto	u742lld
 19466  0949  0AC0               	incf	(___aodiv@quotient+5)^(0+128),f
 19467  094A  1D03               	skipz
 19468  094B  2950               	goto	u742lld
 19469  094C  0AC1               	incf	(___aodiv@quotient+6)^(0+128),f
 19470  094D  1D03               	skipz
 19471  094E  2950               	goto	u742lld
 19472  094F  0AC2               	incf	(___aodiv@quotient+7)^(0+128),f
 19473  0950                     u742lld:
 19474  0950                     l1295:
 19475  0950  0021               	movlb	1	; select bank1
 19476  0951  083B               	movf	___aodiv@quotient^(0+128),w
 19477  0952  00A8               	movwf	?___aodiv^(0+128)
 19478  0953  083C               	movf	(___aodiv@quotient+1)^(0+128),w
 19479  0954  00A9               	movwf	(?___aodiv+1)^(0+128)
 19480  0955  083D               	movf	(___aodiv@quotient+2)^(0+128),w
 19481  0956  00AA               	movwf	(?___aodiv+2)^(0+128)
 19482  0957  083E               	movf	(___aodiv@quotient+3)^(0+128),w
 19483  0958  00AB               	movwf	(?___aodiv+3)^(0+128)
 19484  0959  083F               	movf	(___aodiv@quotient+4)^(0+128),w
 19485  095A  00AC               	movwf	(?___aodiv+4)^(0+128)
 19486  095B  0840               	movf	(___aodiv@quotient+5)^(0+128),w
 19487  095C  00AD               	movwf	(?___aodiv+5)^(0+128)
 19488  095D  0841               	movf	(___aodiv@quotient+6)^(0+128),w
 19489  095E  00AE               	movwf	(?___aodiv+6)^(0+128)
 19490  095F  0842               	movf	(___aodiv@quotient+7)^(0+128),w
 19491  0960  00AF               	movwf	(?___aodiv+7)^(0+128)
 19492  0961                     l1296:
 19493  0961  0008               	return
 19494  0962                     __end_of___aodiv:
 19495                           
 19496                           	psect	text56
 19497  26B3                     __ptext56:	
 19498 ;; *************** function _button_is_pressed *****************
 19499 ;; Defined at:
 19500 ;;		line 32 in file "button.c"
 19501 ;; Parameters:    Size  Location     Type
 19502 ;;		None
 19503 ;; Auto vars:     Size  Location     Type
 19504 ;;		None
 19505 ;; Return value:  Size  Location     Type
 19506 ;;                  1    wreg      _Bool 
 19507 ;; Registers used:
 19508 ;;		wreg, status,2, status,0
 19509 ;; Tracked objects:
 19510 ;;		On entry : 0/0
 19511 ;;		On exit  : 0/0
 19512 ;;		Unchanged: 0/0
 19513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19516 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19517 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19518 ;;Total ram usage:        1 bytes
 19519 ;; Hardware stack levels used:    1
 19520 ;; Hardware stack levels required when called:   12
 19521 ;; This function calls:
 19522 ;;		Nothing
 19523 ;; This function is called by:
 19524 ;;		_button_init
 19525 ;;		_button_check
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           
 19530                           ;psect for function _button_is_pressed
 19531  26B3                     _button_is_pressed:
 19532                           
 19533                           ;incstack = 0
 19534                           ; Regs used in _button_is_pressed: [wreg+status,2+status,0]
 19535  26B3                     l7426:
 19536                           
 19537                           ;button.c: 33:     return PORTCbits.RC3 ? 1 : 0;
 19538  26B3  0020               	movlb	0	; select bank0
 19539  26B4  0C0E               	rrf	14,w	;volatile
 19540  26B5  0021               	movlb	1	; select bank1
 19541  26B6  00A8               	movwf	??_button_is_pressed^(0+128)
 19542  26B7  0CA8               	rrf	??_button_is_pressed^(0+128),f
 19543  26B8  0C28               	rrf	??_button_is_pressed^(0+128),w
 19544  26B9  3901               	andlw	1
 19545  26BA                     __ccov481_end_blk0:
 19546  26BA                     __ccov482_start_blk2:
 19547  26BA                     l818:
 19548  26BA  0022               	movlb	2	; select bank2
 19549  26BB  15A7               	bsf	(__ccovbit2_93/(0+8))^(0+256),__ccovbit2_93& (0+7)	;volatile
 19550  26BC  0008               	return
 19551  26BD                     __end_of_button_is_pressed:
 19552  26BD                     
 19553                           	psect	text57
 19554  1C44                     __ptext57:	
 19555 ;; *************** function _SYSTEM_Initialize *****************
 19556 ;; Defined at:
 19557 ;;		line 50 in file "mcc_generated_files/mcc.c"
 19558 ;; Parameters:    Size  Location     Type
 19559 ;;		None
 19560 ;; Auto vars:     Size  Location     Type
 19561 ;;		None
 19562 ;; Return value:  Size  Location     Type
 19563 ;;                  1    wreg      void 
 19564 ;; Registers used:
 19565 ;;		wreg, status,2, status,0, pclath, cstack
 19566 ;; Tracked objects:
 19567 ;;		On entry : 0/0
 19568 ;;		On exit  : 0/0
 19569 ;;		Unchanged: 0/0
 19570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19575 ;;Total ram usage:        0 bytes
 19576 ;; Hardware stack levels used:    1
 19577 ;; Hardware stack levels required when called:   14
 19578 ;; This function calls:
 19579 ;;		_ADC_Initialize
 19580 ;;		_EUSART_Initialize
 19581 ;;		_OSCILLATOR_Initialize
 19582 ;;		_PIN_MANAGER_Initialize
 19583 ;;		_PMD_Initialize
 19584 ;;		_PWM5_Initialize
 19585 ;;		_PWM6_Initialize
 19586 ;;		_TMR0_Initialize
 19587 ;;		_TMR1_Initialize
 19588 ;;		_TMR2_Initialize
 19589 ;;		_TMR3_Initialize
 19590 ;;		_TMR4_Initialize
 19591 ;;		_TMR6_Initialize
 19592 ;;		_WDT_Initialize
 19593 ;; This function is called by:
 19594 ;;		_main
 19595 ;; This function uses a non-reentrant model
 19596 ;;
 19597                           
 19598                           
 19599                           ;psect for function _SYSTEM_Initialize
 19600  1C44                     _SYSTEM_Initialize:
 19601                           
 19602                           ;incstack = 0
 19603                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19604  1C44                     l7650:
 19605                           
 19606                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 19607  1C44  31A7  27BD  319C   	fcall	_PMD_Initialize
 19608                           
 19609                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 19610  1C47  319C  24D4  319C   	fcall	_PIN_MANAGER_Initialize
 19611                           
 19612                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 19613  1C4A  31A7  2709  319C   	fcall	_OSCILLATOR_Initialize
 19614                           
 19615                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 19616  1C4D  3187  27FB  319C   	fcall	_WDT_Initialize
 19617                           
 19618                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
 19619  1C50  31A7  2764  319C   	fcall	_TMR4_Initialize
 19620                           
 19621                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 19622  1C53  3198  2090  319C   	fcall	_TMR2_Initialize
 19623                           
 19624                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 19625  1C56  319A  2220  319C   	fcall	_TMR0_Initialize
 19626                           
 19627                           ;mcc_generated_files/mcc.c: 60:     PWM6_Initialize();
 19628  1C59  31A7  2758  319C   	fcall	_PWM6_Initialize
 19629                           
 19630                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 19631  1C5C  31A7  2770  319C   	fcall	_TMR6_Initialize
 19632                           
 19633                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
 19634  1C5F  31A6  26DD  319C   	fcall	_ADC_Initialize
 19635                           
 19636                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 19637  1C62  3198  20A4  319C   	fcall	_TMR3_Initialize
 19638                           
 19639                           ;mcc_generated_files/mcc.c: 64:     PWM5_Initialize();
 19640  1C65  31A7  274C  319C   	fcall	_PWM5_Initialize
 19641                           
 19642                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
 19643  1C68  3199  2160  319C   	fcall	_TMR1_Initialize
 19644                           
 19645                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
 19646  1C6B  319B  234A  319C   	fcall	_EUSART_Initialize
 19647  1C6E                     __ccov98_end_blk0:
 19648  1C6E                     __ccov99_start_blk1:
 19649  1C6E                     l248:
 19650  1C6E  0021               	movlb	1	; select bank1
 19651  1C6F  156B               	bsf	(__ccovbit1_22/(0+8))^(0+128),__ccovbit1_22& (0+7)	;volatile
 19652  1C70  0008               	return
 19653  1C71                     __end_of_SYSTEM_Initialize:
 19654  1C71                     
 19655                           	psect	text58
 19656  07FB                     __ptext58:	
 19657 ;; *************** function _WDT_Initialize *****************
 19658 ;; Defined at:
 19659 ;;		line 83 in file "mcc_generated_files/mcc.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;		None
 19662 ;; Auto vars:     Size  Location     Type
 19663 ;;		None
 19664 ;; Return value:  Size  Location     Type
 19665 ;;                  1    wreg      void 
 19666 ;; Registers used:
 19667 ;;		wreg
 19668 ;; Tracked objects:
 19669 ;;		On entry : 0/0
 19670 ;;		On exit  : 0/0
 19671 ;;		Unchanged: 0/0
 19672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;Total ram usage:        0 bytes
 19678 ;; Hardware stack levels used:    1
 19679 ;; Hardware stack levels required when called:   12
 19680 ;; This function calls:
 19681 ;;		Nothing
 19682 ;; This function is called by:
 19683 ;;		_SYSTEM_Initialize
 19684 ;; This function uses a non-reentrant model
 19685 ;;
 19686                           
 19687                           
 19688                           ;psect for function _WDT_Initialize
 19689  07FB                     _WDT_Initialize:
 19690                           
 19691                           ;incstack = 0
 19692                           ; Regs used in _WDT_Initialize: [wreg]
 19693  07FB                     l7220:
 19694                           
 19695                           ;mcc_generated_files/mcc.c: 86:     WDTCON = 0x16;
 19696  07FB  3016               	movlw	22
 19697  07FC  0021               	movlb	1	; select bank1
 19698  07FD  0097               	movwf	23	;volatile
 19699  07FE                     __ccov105_end_blk0:
 19700  07FE                     __ccov106_start_blk1:
 19701  07FE                     l254:
 19702  07FE  146B               	bsf	(__ccovbit1_24/(0+8))^(0+128),__ccovbit1_24& (0+7)	;volatile
 19703  07FF  0008               	return
 19704  0800                     __end_of_WDT_Initialize:
 19705  0800                     
 19706                           	psect	text59
 19707  2770                     __ptext59:	
 19708 ;; *************** function _TMR6_Initialize *****************
 19709 ;; Defined at:
 19710 ;;		line 62 in file "mcc_generated_files/tmr6.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;		None
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;		None
 19715 ;; Return value:  Size  Location     Type
 19716 ;;                  1    wreg      void 
 19717 ;; Registers used:
 19718 ;;		wreg, status,2
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19728 ;;Total ram usage:        0 bytes
 19729 ;; Hardware stack levels used:    1
 19730 ;; Hardware stack levels required when called:   12
 19731 ;; This function calls:
 19732 ;;		Nothing
 19733 ;; This function is called by:
 19734 ;;		_SYSTEM_Initialize
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           
 19739                           ;psect for function _TMR6_Initialize
 19740  2770                     _TMR6_Initialize:
 19741                           
 19742                           ;incstack = 0
 19743                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 19744  2770                     l7256:
 19745                           
 19746                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0xFF;
 19747  2770  30FF               	movlw	255
 19748  2771  0028               	movlb	8	; select bank8
 19749  2772  009D               	movwf	29	;volatile
 19750  2773                     __ccov337_end_blk0:
 19751  2773                     __ccov338_start_blk1:
 19752  2773                     l7258:
 19753                           
 19754                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
 19755  2773  019C               	clrf	28	;volatile
 19756  2774                     __ccov338_end_blk1:
 19757  2774                     __ccov339_start_blk2:
 19758  2774                     l7260:
 19759                           
 19760                           ;mcc_generated_files/tmr6.c: 73:     PIR2bits.TMR6IF = 0;
 19761  2774  0020               	movlb	0	; select bank0
 19762  2775  1392               	bcf	18,7	;volatile
 19763  2776                     __ccov339_end_blk2:
 19764  2776                     __ccov340_start_blk3:
 19765  2776                     l7262:
 19766                           
 19767                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x07;
 19768  2776  3007               	movlw	7
 19769  2777  0028               	movlb	8	; select bank8
 19770  2778  009E               	movwf	30	;volatile
 19771  2779                     __ccov340_end_blk3:
 19772  2779                     __ccov341_start_blk4:
 19773  2779                     l600:
 19774  2779  0021               	movlb	1	; select bank1
 19775  277A  16E7               	bsf	(__ccovbit4_51/(0+8))^(0+128),__ccovbit4_51& (0+7)	;volatile
 19776  277B  0008               	return
 19777  277C                     __end_of_TMR6_Initialize:
 19778  277C                     
 19779                           	psect	text60
 19780  2764                     __ptext60:	
 19781 ;; *************** function _TMR4_Initialize *****************
 19782 ;; Defined at:
 19783 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 19784 ;; Parameters:    Size  Location     Type
 19785 ;;		None
 19786 ;; Auto vars:     Size  Location     Type
 19787 ;;		None
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  1    wreg      void 
 19790 ;; Registers used:
 19791 ;;		wreg, status,2
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/0
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19801 ;;Total ram usage:        0 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; Hardware stack levels required when called:   12
 19804 ;; This function calls:
 19805 ;;		Nothing
 19806 ;; This function is called by:
 19807 ;;		_SYSTEM_Initialize
 19808 ;; This function uses a non-reentrant model
 19809 ;;
 19810                           
 19811                           
 19812                           ;psect for function _TMR4_Initialize
 19813  2764                     _TMR4_Initialize:
 19814                           
 19815                           ;incstack = 0
 19816                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 19817  2764                     l7222:
 19818                           
 19819                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFF;
 19820  2764  30FF               	movlw	255
 19821  2765  0028               	movlb	8	; select bank8
 19822  2766  0096               	movwf	22	;volatile
 19823  2767                     __ccov318_end_blk0:
 19824  2767                     __ccov319_start_blk1:
 19825  2767                     l7224:
 19826                           
 19827                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
 19828  2767  0195               	clrf	21	;volatile
 19829  2768                     __ccov319_end_blk1:
 19830  2768                     __ccov320_start_blk2:
 19831  2768                     l7226:
 19832                           
 19833                           ;mcc_generated_files/tmr4.c: 73:     PIR2bits.TMR4IF = 0;
 19834  2768  0020               	movlb	0	; select bank0
 19835  2769  1092               	bcf	18,1	;volatile
 19836  276A                     __ccov320_end_blk2:
 19837  276A                     __ccov321_start_blk3:
 19838  276A                     l7228:
 19839                           
 19840                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x05;
 19841  276A  3005               	movlw	5
 19842  276B  0028               	movlb	8	; select bank8
 19843  276C  0097               	movwf	23	;volatile
 19844  276D                     __ccov321_end_blk3:
 19845  276D                     __ccov322_start_blk4:
 19846  276D                     l568:
 19847  276D  0021               	movlb	1	; select bank1
 19848  276E  1767               	bsf	(__ccovbit4_50/(0+8))^(0+128),__ccovbit4_50& (0+7)	;volatile
 19849  276F  0008               	return
 19850  2770                     __end_of_TMR4_Initialize:
 19851  2770                     
 19852                           	psect	text61
 19853  18A4                     __ptext61:	
 19854 ;; *************** function _TMR3_Initialize *****************
 19855 ;; Defined at:
 19856 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;		None
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;		None
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  1    wreg      void 
 19863 ;; Registers used:
 19864 ;;		wreg, status,2
 19865 ;; Tracked objects:
 19866 ;;		On entry : 0/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19874 ;;Total ram usage:        0 bytes
 19875 ;; Hardware stack levels used:    1
 19876 ;; Hardware stack levels required when called:   12
 19877 ;; This function calls:
 19878 ;;		Nothing
 19879 ;; This function is called by:
 19880 ;;		_SYSTEM_Initialize
 19881 ;; This function uses a non-reentrant model
 19882 ;;
 19883                           
 19884                           
 19885                           ;psect for function _TMR3_Initialize
 19886  18A4                     _TMR3_Initialize:
 19887                           
 19888                           ;incstack = 0
 19889                           ; Regs used in _TMR3_Initialize: [wreg+status,2]
 19890  18A4                     l7264:
 19891                           
 19892                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 19893  18A4  0028               	movlb	8	; select bank8
 19894  18A5  0194               	clrf	20	;volatile
 19895  18A6                     __ccov267_end_blk0:
 19896  18A6                     __ccov268_start_blk1:
 19897  18A6                     l7266:
 19898                           
 19899                           ;mcc_generated_files/tmr3.c: 71:     TMR3H = 0xE0;
 19900  18A6  30E0               	movlw	224
 19901  18A7  0092               	movwf	18	;volatile
 19902  18A8                     __ccov268_end_blk1:
 19903  18A8                     __ccov269_start_blk2:
 19904  18A8                     l7268:
 19905                           
 19906                           ;mcc_generated_files/tmr3.c: 74:     TMR3L = 0x00;
 19907  18A8  0191               	clrf	17	;volatile
 19908  18A9                     __ccov269_end_blk2:
 19909  18A9                     __ccov270_start_blk3:
 19910  18A9                     l7270:
 19911                           
 19912                           ;mcc_generated_files/tmr3.c: 77:     PIR3bits.TMR3IF = 0;
 19913  18A9  0020               	movlb	0	; select bank0
 19914  18AA  1213               	bcf	19,4	;volatile
 19915                           
 19916                           ;mcc_generated_files/tmr3.c: 80:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 19917  18AB  0028               	movlb	8	; select bank8
 19918  18AC  0812               	movf	18,w	;volatile
 19919  18AD  0023               	movlb	3	; select bank3
 19920  18AE  00DB               	movwf	(_timer3ReloadVal+1)^(0+384)	;volatile
 19921  18AF  0028               	movlb	8	; select bank8
 19922  18B0  0811               	movf	17,w	;volatile
 19923  18B1  0023               	movlb	3	; select bank3
 19924  18B2  00DA               	movwf	_timer3ReloadVal^(0+384)	;volatile
 19925                           
 19926                           ;mcc_generated_files/tmr3.c: 83:     T3CON = 0x31;
 19927  18B3  3031               	movlw	49
 19928  18B4  0028               	movlb	8	; select bank8
 19929  18B5  0093               	movwf	19	;volatile
 19930  18B6                     __ccov270_end_blk3:
 19931  18B6                     __ccov271_start_blk4:
 19932  18B6                     l483:
 19933  18B6  0021               	movlb	1	; select bank1
 19934  18B7  1668               	bsf	(__ccovbit4_44/(0+8))^(0+128),__ccovbit4_44& (0+7)	;volatile
 19935  18B8  0008               	return
 19936  18B9                     __end_of_TMR3_Initialize:
 19937  18B9                     
 19938                           	psect	text62
 19939  1890                     __ptext62:	
 19940 ;; *************** function _TMR2_Initialize *****************
 19941 ;; Defined at:
 19942 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;		None
 19945 ;; Auto vars:     Size  Location     Type
 19946 ;;		None
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      void 
 19949 ;; Registers used:
 19950 ;;		wreg, status,2, status,0, pclath, cstack
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19960 ;;Total ram usage:        0 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:   13
 19963 ;; This function calls:
 19964 ;;		_TMR2_SetInterruptHandler
 19965 ;; This function is called by:
 19966 ;;		_SYSTEM_Initialize
 19967 ;; This function uses a non-reentrant model
 19968 ;;
 19969                           
 19970                           
 19971                           ;psect for function _TMR2_Initialize
 19972  1890                     _TMR2_Initialize:
 19973                           
 19974                           ;incstack = 0
 19975                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19976  1890                     l7230:
 19977                           
 19978                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
 19979  1890  307C               	movlw	124
 19980  1891  0020               	movlb	0	; select bank0
 19981  1892  009E               	movwf	30	;volatile
 19982  1893                     __ccov294_end_blk0:
 19983  1893                     __ccov295_start_blk1:
 19984  1893                     l7232:
 19985                           
 19986                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 19987  1893  019D               	clrf	29	;volatile
 19988  1894                     __ccov295_end_blk1:
 19989  1894                     __ccov296_start_blk2:
 19990  1894                     l7234:
 19991                           
 19992                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 19993  1894  1091               	bcf	17,1	;volatile
 19994  1895                     __ccov296_end_blk2:
 19995  1895                     __ccov297_start_blk3:
 19996  1895                     l7236:
 19997                           
 19998                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 19999  1895  0021               	movlb	1	; select bank1
 20000  1896  1491               	bsf	17,1	;volatile
 20001  1897                     __ccov297_end_blk3:
 20002  1897                     __ccov298_start_blk4:
 20003  1897                     l7238:
 20004                           
 20005                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 20006  1897  306F               	movlw	low _TMR2_DefaultInterruptHandler
 20007  1898  00A8               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
 20008  1899  3026               	movlw	high _TMR2_DefaultInterruptHandler
 20009  189A  00A9               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 20010  189B  31A7  272A  3198   	fcall	_TMR2_SetInterruptHandler
 20011  189E                     __ccov298_end_blk4:
 20012  189E                     __ccov299_start_blk5:
 20013  189E                     l7240:
 20014                           
 20015                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4F;
 20016  189E  304F               	movlw	79
 20017  189F  0020               	movlb	0	; select bank0
 20018  18A0  009F               	movwf	31	;volatile
 20019  18A1                     __ccov299_end_blk5:
 20020  18A1                     __ccov300_start_blk6:
 20021  18A1                     l530:
 20022  18A1  0021               	movlb	1	; select bank1
 20023  18A2  15E8               	bsf	(__ccovbit6_45/(0+8))^(0+128),__ccovbit6_45& (0+7)	;volatile
 20024  18A3  0008               	return
 20025  18A4                     __end_of_TMR2_Initialize:
 20026  18A4                     
 20027                           	psect	text63
 20028  272A                     __ptext63:	
 20029 ;; *************** function _TMR2_SetInterruptHandler *****************
 20030 ;; Defined at:
 20031 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;  InterruptHan    2    8[BANK1 ] PTR FTN()void 
 20034 ;;		 -> led_indicate(1), TMR2_DefaultInterruptHandler(1), 
 20035 ;; Auto vars:     Size  Location     Type
 20036 ;;		None
 20037 ;; Return value:  Size  Location     Type
 20038 ;;                  1    wreg      void 
 20039 ;; Registers used:
 20040 ;;		wreg
 20041 ;; Tracked objects:
 20042 ;;		On entry : 0/0
 20043 ;;		On exit  : 0/0
 20044 ;;		Unchanged: 0/0
 20045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20046 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20049 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20050 ;;Total ram usage:        2 bytes
 20051 ;; Hardware stack levels used:    1
 20052 ;; Hardware stack levels required when called:   12
 20053 ;; This function calls:
 20054 ;;		Nothing
 20055 ;; This function is called by:
 20056 ;;		_TMR2_Initialize
 20057 ;;		_main
 20058 ;; This function uses a non-reentrant model
 20059 ;;
 20060                           
 20061                           
 20062                           ;psect for function _TMR2_SetInterruptHandler
 20063  272A                     _TMR2_SetInterruptHandler:
 20064                           
 20065                           ;incstack = 0
 20066                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 20067  272A                     l6858:
 20068                           
 20069                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 20070  272A  0021               	movlb	1	; select bank1
 20071  272B  0829               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 20072  272C  0023               	movlb	3	; select bank3
 20073  272D  00D9               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 20074  272E  0021               	movlb	1	; select bank1
 20075  272F  0828               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
 20076  2730  0023               	movlb	3	; select bank3
 20077  2731  00D8               	movwf	_TMR2_InterruptHandler^(0+384)
 20078  2732                     __ccov315_end_blk0:
 20079  2732                     __ccov316_start_blk1:
 20080  2732                     l552:
 20081  2732  0021               	movlb	1	; select bank1
 20082  2733  1468               	bsf	(__ccovbit1_48/(0+8))^(0+128),__ccovbit1_48& (0+7)	;volatile
 20083  2734  0008               	return
 20084  2735                     __end_of_TMR2_SetInterruptHandler:
 20085  2735                     
 20086                           	psect	text64
 20087  1960                     __ptext64:	
 20088 ;; *************** function _TMR1_Initialize *****************
 20089 ;; Defined at:
 20090 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 20091 ;; Parameters:    Size  Location     Type
 20092 ;;		None
 20093 ;; Auto vars:     Size  Location     Type
 20094 ;;		None
 20095 ;; Return value:  Size  Location     Type
 20096 ;;                  1    wreg      void 
 20097 ;; Registers used:
 20098 ;;		wreg, status,2, status,0, pclath, cstack
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/0
 20101 ;;		On exit  : 0/0
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20108 ;;Total ram usage:        0 bytes
 20109 ;; Hardware stack levels used:    1
 20110 ;; Hardware stack levels required when called:   13
 20111 ;; This function calls:
 20112 ;;		_TMR1_SetInterruptHandler
 20113 ;; This function is called by:
 20114 ;;		_SYSTEM_Initialize
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118                           
 20119                           ;psect for function _TMR1_Initialize
 20120  1960                     _TMR1_Initialize:
 20121                           
 20122                           ;incstack = 0
 20123                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20124  1960                     l7272:
 20125                           
 20126                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 20127  1960  0020               	movlb	0	; select bank0
 20128  1961  019C               	clrf	28	;volatile
 20129                           
 20130                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
 20131  1962  019A               	clrf	26	;volatile
 20132                           
 20133                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
 20134  1963  0199               	clrf	25	;volatile
 20135  1964                     __ccov201_end_blk0:
 20136  1964                     __ccov202_start_blk1:
 20137  1964                     l7274:
 20138                           
 20139                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
 20140  1964  1011               	bcf	17,0	;volatile
 20141  1965                     __ccov202_end_blk1:
 20142  1965                     __ccov203_start_blk2:
 20143  1965                     l7276:
 20144                           
 20145                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 20146  1965  081A               	movf	26,w	;volatile
 20147  1966  0023               	movlb	3	; select bank3
 20148  1967  00E1               	movwf	(_timer1ReloadVal+1)^(0+384)	;volatile
 20149  1968  0020               	movlb	0	; select bank0
 20150  1969  0819               	movf	25,w	;volatile
 20151  196A  0023               	movlb	3	; select bank3
 20152  196B  00E0               	movwf	_timer1ReloadVal^(0+384)	;volatile
 20153  196C                     __ccov203_end_blk2:
 20154  196C                     __ccov204_start_blk3:
 20155  196C                     l7278:
 20156                           
 20157                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
 20158  196C  0021               	movlb	1	; select bank1
 20159  196D  1411               	bsf	17,0	;volatile
 20160  196E                     __ccov204_end_blk3:
 20161  196E                     __ccov205_start_blk4:
 20162  196E                     l7280:
 20163                           
 20164                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 20165  196E  306C               	movlw	low _TMR1_DefaultInterruptHandler
 20166  196F  00A8               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 20167  1970  3026               	movlw	high _TMR1_DefaultInterruptHandler
 20168  1971  00A9               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 20169  1972  31A7  271F  3199   	fcall	_TMR1_SetInterruptHandler
 20170  1975                     __ccov205_end_blk4:
 20171  1975                     __ccov206_start_blk5:
 20172  1975                     l7282:
 20173                           
 20174                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
 20175  1975  3001               	movlw	1
 20176  1976  0020               	movlb	0	; select bank0
 20177  1977  009B               	movwf	27	;volatile
 20178  1978                     __ccov206_end_blk5:
 20179  1978                     __ccov207_start_blk6:
 20180  1978                     l379:
 20181  1978  0021               	movlb	1	; select bank1
 20182  1979  156A               	bsf	(__ccovbit6_30/(0+8))^(0+128),__ccovbit6_30& (0+7)	;volatile
 20183  197A  0008               	return
 20184  197B                     __end_of_TMR1_Initialize:
 20185  197B                     
 20186                           	psect	text65
 20187  271F                     __ptext65:	
 20188 ;; *************** function _TMR1_SetInterruptHandler *****************
 20189 ;; Defined at:
 20190 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 20191 ;; Parameters:    Size  Location     Type
 20192 ;;  InterruptHan    2    8[BANK1 ] PTR FTN()void 
 20193 ;;		 -> frequency_calculation(1), TMR1_DefaultInterruptHandler(1), 
 20194 ;; Auto vars:     Size  Location     Type
 20195 ;;		None
 20196 ;; Return value:  Size  Location     Type
 20197 ;;                  1    wreg      void 
 20198 ;; Registers used:
 20199 ;;		wreg
 20200 ;; Tracked objects:
 20201 ;;		On entry : 0/0
 20202 ;;		On exit  : 0/0
 20203 ;;		Unchanged: 0/0
 20204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20205 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20208 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20209 ;;Total ram usage:        2 bytes
 20210 ;; Hardware stack levels used:    1
 20211 ;; Hardware stack levels required when called:   12
 20212 ;; This function calls:
 20213 ;;		Nothing
 20214 ;; This function is called by:
 20215 ;;		_TMR1_Initialize
 20216 ;;		_main
 20217 ;; This function uses a non-reentrant model
 20218 ;;
 20219                           
 20220                           
 20221                           ;psect for function _TMR1_SetInterruptHandler
 20222  271F                     _TMR1_SetInterruptHandler:
 20223                           
 20224                           ;incstack = 0
 20225                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 20226  271F                     l6854:
 20227                           
 20228                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
 20229  271F  0021               	movlb	1	; select bank1
 20230  2720  0829               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 20231  2721  0023               	movlb	3	; select bank3
 20232  2722  00DF               	movwf	(_TMR1_InterruptHandler+1)^(0+384)
 20233  2723  0021               	movlb	1	; select bank1
 20234  2724  0828               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 20235  2725  0023               	movlb	3	; select bank3
 20236  2726  00DE               	movwf	_TMR1_InterruptHandler^(0+384)
 20237  2727                     __ccov233_end_blk0:
 20238  2727                     __ccov234_start_blk1:
 20239  2727                     l409:
 20240  2727  0021               	movlb	1	; select bank1
 20241  2728  1669               	bsf	(__ccovbit1_36/(0+8))^(0+128),__ccovbit1_36& (0+7)	;volatile
 20242  2729  0008               	return
 20243  272A                     __end_of_TMR1_SetInterruptHandler:
 20244  272A                     
 20245                           	psect	text66
 20246  1A20                     __ptext66:	
 20247 ;; *************** function _TMR0_Initialize *****************
 20248 ;; Defined at:
 20249 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 20250 ;; Parameters:    Size  Location     Type
 20251 ;;		None
 20252 ;; Auto vars:     Size  Location     Type
 20253 ;;		None
 20254 ;; Return value:  Size  Location     Type
 20255 ;;                  1    wreg      void 
 20256 ;; Registers used:
 20257 ;;		wreg, status,2, status,0, pclath, cstack
 20258 ;; Tracked objects:
 20259 ;;		On entry : 0/0
 20260 ;;		On exit  : 0/0
 20261 ;;		Unchanged: 0/0
 20262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20267 ;;Total ram usage:        0 bytes
 20268 ;; Hardware stack levels used:    1
 20269 ;; Hardware stack levels required when called:   13
 20270 ;; This function calls:
 20271 ;;		_TMR0_SetInterruptHandler
 20272 ;; This function is called by:
 20273 ;;		_SYSTEM_Initialize
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           
 20278                           ;psect for function _TMR0_Initialize
 20279  1A20                     _TMR0_Initialize:
 20280                           
 20281                           ;incstack = 0
 20282                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20283  1A20                     l7242:
 20284                           
 20285                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x10;
 20286  1A20  3010               	movlw	16
 20287  1A21  0020               	movlb	0	; select bank0
 20288  1A22  0098               	movwf	24	;volatile
 20289  1A23                     __ccov236_end_blk0:
 20290  1A23                     __ccov237_start_blk1:
 20291  1A23                     l7244:
 20292                           
 20293                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
 20294  1A23  0196               	clrf	22	;volatile
 20295  1A24                     __ccov237_end_blk1:
 20296  1A24                     __ccov238_start_blk2:
 20297  1A24                     l7246:
 20298                           
 20299                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 20300  1A24  0195               	clrf	21	;volatile
 20301                           
 20302                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (uint16_t)((TMR0H << 8) | TM
      +                          R0L);
 20303  1A25  0816               	movf	22,w	;volatile
 20304  1A26  0022               	movlb	2	; select bank2
 20305  1A27  00EE               	movwf	(_timer0ReloadVal16bit+1)^(0+256)	;volatile
 20306  1A28  0020               	movlb	0	; select bank0
 20307  1A29  0815               	movf	21,w	;volatile
 20308  1A2A  0022               	movlb	2	; select bank2
 20309  1A2B  00ED               	movwf	_timer0ReloadVal16bit^(0+256)	;volatile
 20310  1A2C                     __ccov238_end_blk2:
 20311  1A2C                     __ccov239_start_blk3:
 20312  1A2C                     l7248:
 20313                           
 20314                           ;mcc_generated_files/tmr0.c: 84:     PIR0bits.TMR0IF = 0;
 20315  1A2C  0020               	movlb	0	; select bank0
 20316  1A2D  1290               	bcf	16,5	;volatile
 20317  1A2E                     __ccov239_end_blk3:
 20318  1A2E                     __ccov240_start_blk4:
 20319  1A2E                     l7250:
 20320                           
 20321                           ;mcc_generated_files/tmr0.c: 87:     PIE0bits.TMR0IE = 1;
 20322  1A2E  0021               	movlb	1	; select bank1
 20323  1A2F  1690               	bsf	16,5	;volatile
 20324  1A30                     __ccov240_end_blk4:
 20325  1A30                     __ccov241_start_blk5:
 20326  1A30                     l7252:
 20327                           
 20328                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 20329  1A30  30C7               	movlw	low _TMR0_DefaultInterruptHandler
 20330  1A31  00A8               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
 20331  1A32  3026               	movlw	high _TMR0_DefaultInterruptHandler
 20332  1A33  00A9               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
 20333  1A34  31A7  2714  319A   	fcall	_TMR0_SetInterruptHandler
 20334  1A37                     __ccov241_end_blk5:
 20335  1A37                     __ccov242_start_blk6:
 20336  1A37                     l7254:
 20337                           
 20338                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 20339  1A37  3090               	movlw	144
 20340  1A38  0020               	movlb	0	; select bank0
 20341  1A39  0097               	movwf	23	;volatile
 20342  1A3A                     __ccov242_end_blk6:
 20343  1A3A                     __ccov243_start_blk7:
 20344  1A3A                     l439:
 20345  1A3A  0021               	movlb	1	; select bank1
 20346  1A3B  1569               	bsf	(__ccovbit7_38/(0+8))^(0+128),__ccovbit7_38& (0+7)	;volatile
 20347  1A3C  0008               	return
 20348  1A3D                     __end_of_TMR0_Initialize:
 20349  1A3D                     
 20350                           	psect	text67
 20351  2714                     __ptext67:	
 20352 ;; *************** function _TMR0_SetInterruptHandler *****************
 20353 ;; Defined at:
 20354 ;;		line 152 in file "mcc_generated_files/tmr0.c"
 20355 ;; Parameters:    Size  Location     Type
 20356 ;;  InterruptHan    2    8[BANK1 ] PTR FTN()void 
 20357 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 20358 ;; Auto vars:     Size  Location     Type
 20359 ;;		None
 20360 ;; Return value:  Size  Location     Type
 20361 ;;                  1    wreg      void 
 20362 ;; Registers used:
 20363 ;;		wreg
 20364 ;; Tracked objects:
 20365 ;;		On entry : 0/0
 20366 ;;		On exit  : 0/0
 20367 ;;		Unchanged: 0/0
 20368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20369 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20372 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20373 ;;Total ram usage:        2 bytes
 20374 ;; Hardware stack levels used:    1
 20375 ;; Hardware stack levels required when called:   12
 20376 ;; This function calls:
 20377 ;;		Nothing
 20378 ;; This function is called by:
 20379 ;;		_TMR0_Initialize
 20380 ;; This function uses a non-reentrant model
 20381 ;;
 20382                           
 20383                           
 20384                           ;psect for function _TMR0_SetInterruptHandler
 20385  2714                     _TMR0_SetInterruptHandler:
 20386                           
 20387                           ;incstack = 0
 20388                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 20389  2714                     l6856:
 20390                           
 20391                           ;mcc_generated_files/tmr0.c: 152: void TMR0_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr0.c: 153: {;mcc_generated_files/tmr0.c: 154:     TMR0_In
      +                          terruptHandler = InterruptHandler;
 20392  2714  0021               	movlb	1	; select bank1
 20393  2715  0829               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 20394  2716  0023               	movlb	3	; select bank3
 20395  2717  00DD               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 20396  2718  0021               	movlb	1	; select bank1
 20397  2719  0828               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
 20398  271A  0023               	movlb	3	; select bank3
 20399  271B  00DC               	movwf	_TMR0_InterruptHandler^(0+384)
 20400  271C                     __ccov263_end_blk0:
 20401  271C                     __ccov264_start_blk1:
 20402  271C                     l461:
 20403  271C  0021               	movlb	1	; select bank1
 20404  271D  1768               	bsf	(__ccovbit1_42/(0+8))^(0+128),__ccovbit1_42& (0+7)	;volatile
 20405  271E  0008               	return
 20406  271F                     __end_of_TMR0_SetInterruptHandler:
 20407  271F                     
 20408                           	psect	text68
 20409  2758                     __ptext68:	
 20410 ;; *************** function _PWM6_Initialize *****************
 20411 ;; Defined at:
 20412 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 20413 ;; Parameters:    Size  Location     Type
 20414 ;;		None
 20415 ;; Auto vars:     Size  Location     Type
 20416 ;;		None
 20417 ;; Return value:  Size  Location     Type
 20418 ;;                  1    wreg      void 
 20419 ;; Registers used:
 20420 ;;		wreg, status,2, status,0
 20421 ;; Tracked objects:
 20422 ;;		On entry : 0/0
 20423 ;;		On exit  : 0/0
 20424 ;;		Unchanged: 0/0
 20425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20430 ;;Total ram usage:        0 bytes
 20431 ;; Hardware stack levels used:    1
 20432 ;; Hardware stack levels required when called:   12
 20433 ;; This function calls:
 20434 ;;		Nothing
 20435 ;; This function is called by:
 20436 ;;		_SYSTEM_Initialize
 20437 ;; This function uses a non-reentrant model
 20438 ;;
 20439                           
 20440                           
 20441                           ;psect for function _PWM6_Initialize
 20442  2758                     _PWM6_Initialize:
 20443                           
 20444                           ;incstack = 0
 20445                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 20446  2758                     l7132:
 20447                           
 20448                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 20449  2758  3080               	movlw	128
 20450  2759  002C               	movlb	12	; select bank12
 20451  275A  009C               	movwf	28	;volatile
 20452                           
 20453                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
 20454  275B  307F               	movlw	127
 20455  275C  009B               	movwf	27	;volatile
 20456                           
 20457                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 20458  275D  30C0               	movlw	192
 20459  275E  009A               	movwf	26	;volatile
 20460  275F                     __ccov1_end_blk0:
 20461  275F                     __ccov2_start_blk1:
 20462  275F                     l7134:
 20463                           
 20464                           ;mcc_generated_files/pwm6.c: 71:     PWMTMRSbits.P6TSEL = 3;
 20465  275F  300C               	movlw	12
 20466  2760  049F               	iorwf	31,f	;volatile
 20467  2761                     __ccov2_end_blk1:
 20468  2761                     __ccov3_start_blk2:
 20469  2761                     l11:
 20470  2761  0020               	movlb	0	; select bank0
 20471  2762  17EF               	bsf	__ccovbit2_1/(0+8),__ccovbit2_1& (0+7)	;volatile
 20472  2763  0008               	return
 20473  2764                     __end_of_PWM6_Initialize:
 20474  2764                     
 20475                           	psect	text69
 20476  274C                     __ptext69:	
 20477 ;; *************** function _PWM5_Initialize *****************
 20478 ;; Defined at:
 20479 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 20480 ;; Parameters:    Size  Location     Type
 20481 ;;		None
 20482 ;; Auto vars:     Size  Location     Type
 20483 ;;		None
 20484 ;; Return value:  Size  Location     Type
 20485 ;;                  1    wreg      void 
 20486 ;; Registers used:
 20487 ;;		wreg, status,2, status,0
 20488 ;; Tracked objects:
 20489 ;;		On entry : 0/0
 20490 ;;		On exit  : 0/0
 20491 ;;		Unchanged: 0/0
 20492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20497 ;;Total ram usage:        0 bytes
 20498 ;; Hardware stack levels used:    1
 20499 ;; Hardware stack levels required when called:   12
 20500 ;; This function calls:
 20501 ;;		Nothing
 20502 ;; This function is called by:
 20503 ;;		_SYSTEM_Initialize
 20504 ;; This function uses a non-reentrant model
 20505 ;;
 20506                           
 20507                           
 20508                           ;psect for function _PWM5_Initialize
 20509  274C                     _PWM5_Initialize:
 20510                           
 20511                           ;incstack = 0
 20512                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 20513  274C                     l7138:
 20514                           
 20515                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 20516  274C  3080               	movlw	128
 20517  274D  002C               	movlb	12	; select bank12
 20518  274E  0099               	movwf	25	;volatile
 20519  274F                     __ccov6_end_blk0:
 20520  274F                     __ccov7_start_blk1:
 20521  274F                     l7140:
 20522                           
 20523                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x00;
 20524  274F  0198               	clrf	24	;volatile
 20525  2750                     __ccov7_end_blk1:
 20526  2750                     __ccov8_start_blk2:
 20527  2750                     l7142:
 20528                           
 20529                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x00;
 20530  2750  0197               	clrf	23	;volatile
 20531  2751                     __ccov8_end_blk2:
 20532  2751                     __ccov9_start_blk3:
 20533  2751                     l7144:
 20534                           
 20535                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 2;
 20536  2751  081F               	movf	31,w	;volatile
 20537  2752  39FC               	andlw	-4
 20538  2753  3802               	iorlw	2
 20539  2754  009F               	movwf	31	;volatile
 20540  2755                     __ccov9_end_blk3:
 20541  2755                     __ccov10_start_blk4:
 20542  2755                     l25:
 20543  2755  0020               	movlb	0	; select bank0
 20544  2756  16EF               	bsf	__ccovbit4_3/(0+8),__ccovbit4_3& (0+7)	;volatile
 20545  2757  0008               	return
 20546  2758                     __end_of_PWM5_Initialize:
 20547  2758                     
 20548                           	psect	text70
 20549  27BD                     __ptext70:	
 20550 ;; *************** function _PMD_Initialize *****************
 20551 ;; Defined at:
 20552 ;;		line 89 in file "mcc_generated_files/mcc.c"
 20553 ;; Parameters:    Size  Location     Type
 20554 ;;		None
 20555 ;; Auto vars:     Size  Location     Type
 20556 ;;		None
 20557 ;; Return value:  Size  Location     Type
 20558 ;;                  1    wreg      void 
 20559 ;; Registers used:
 20560 ;;		wreg
 20561 ;; Tracked objects:
 20562 ;;		On entry : 0/0
 20563 ;;		On exit  : 0/0
 20564 ;;		Unchanged: 0/0
 20565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20570 ;;Total ram usage:        0 bytes
 20571 ;; Hardware stack levels used:    1
 20572 ;; Hardware stack levels required when called:   12
 20573 ;; This function calls:
 20574 ;;		Nothing
 20575 ;; This function is called by:
 20576 ;;		_SYSTEM_Initialize
 20577 ;; This function uses a non-reentrant model
 20578 ;;
 20579                           
 20580                           
 20581                           ;psect for function _PMD_Initialize
 20582  27BD                     _PMD_Initialize:
 20583                           
 20584                           ;incstack = 0
 20585                           ; Regs used in _PMD_Initialize: [wreg]
 20586  27BD                     l7182:
 20587                           
 20588                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x41;
 20589  27BD  3041               	movlw	65
 20590  27BE  0032               	movlb	18	; select bank18
 20591  27BF  0091               	movwf	17	;volatile
 20592                           
 20593                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x80;
 20594  27C0  3080               	movlw	128
 20595  27C1  0092               	movwf	18	;volatile
 20596                           
 20597                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x46;
 20598  27C2  3046               	movlw	70
 20599  27C3  0093               	movwf	19	;volatile
 20600                           
 20601                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0xCF;
 20602  27C4  30CF               	movlw	207
 20603  27C5  0094               	movwf	20	;volatile
 20604                           
 20605                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x06;
 20606  27C6  3006               	movlw	6
 20607  27C7  0095               	movwf	21	;volatile
 20608                           
 20609                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x1F;
 20610  27C8  301F               	movlw	31
 20611  27C9  0096               	movwf	22	;volatile
 20612  27CA                     __ccov107_end_blk0:
 20613  27CA                     __ccov108_start_blk1:
 20614  27CA                     l257:
 20615  27CA  0021               	movlb	1	; select bank1
 20616  27CB  17EA               	bsf	(__ccovbit1_25/(0+8))^(0+128),__ccovbit1_25& (0+7)	;volatile
 20617  27CC  0008               	return
 20618  27CD                     __end_of_PMD_Initialize:
 20619  27CD                     
 20620                           	psect	text71
 20621  1CD4                     __ptext71:	
 20622 ;; *************** function _PIN_MANAGER_Initialize *****************
 20623 ;; Defined at:
 20624 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 20625 ;; Parameters:    Size  Location     Type
 20626 ;;		None
 20627 ;; Auto vars:     Size  Location     Type
 20628 ;;		None
 20629 ;; Return value:  Size  Location     Type
 20630 ;;                  1    wreg      void 
 20631 ;; Registers used:
 20632 ;;		wreg, status,2
 20633 ;; Tracked objects:
 20634 ;;		On entry : 0/0
 20635 ;;		On exit  : 0/0
 20636 ;;		Unchanged: 0/0
 20637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;Total ram usage:        0 bytes
 20643 ;; Hardware stack levels used:    1
 20644 ;; Hardware stack levels required when called:   12
 20645 ;; This function calls:
 20646 ;;		Nothing
 20647 ;; This function is called by:
 20648 ;;		_SYSTEM_Initialize
 20649 ;; This function uses a non-reentrant model
 20650 ;;
 20651                           
 20652                           
 20653                           ;psect for function _PIN_MANAGER_Initialize
 20654  1CD4                     _PIN_MANAGER_Initialize:
 20655                           
 20656                           ;incstack = 0
 20657                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 20658  1CD4                     l7184:
 20659                           
 20660                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 20661  1CD4  0022               	movlb	2	; select bank2
 20662  1CD5  018C               	clrf	12	;volatile
 20663                           
 20664                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 20665  1CD6  018E               	clrf	14	;volatile
 20666  1CD7                     __ccov185_end_blk0:
 20667  1CD7                     __ccov186_start_blk1:
 20668  1CD7                     l7186:
 20669                           
 20670                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x23;
 20671  1CD7  3023               	movlw	35
 20672  1CD8  0021               	movlb	1	; select bank1
 20673  1CD9  008C               	movwf	12	;volatile
 20674  1CDA                     __ccov186_end_blk1:
 20675  1CDA                     __ccov187_start_blk2:
 20676  1CDA                     l7188:
 20677                           
 20678                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3C;
 20679  1CDA  303C               	movlw	60
 20680  1CDB  008E               	movwf	14	;volatile
 20681  1CDC                     __ccov187_end_blk2:
 20682  1CDC                     __ccov188_start_blk3:
 20683  1CDC                     l7190:
 20684                           
 20685                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x27;
 20686  1CDC  3027               	movlw	39
 20687  1CDD  0023               	movlb	3	; select bank3
 20688  1CDE  008E               	movwf	14	;volatile
 20689  1CDF                     __ccov188_end_blk3:
 20690  1CDF                     __ccov189_start_blk4:
 20691  1CDF                     l7192:
 20692                           
 20693                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
 20694  1CDF  3004               	movlw	4
 20695  1CE0  008C               	movwf	12	;volatile
 20696  1CE1                     __ccov189_end_blk4:
 20697  1CE1                     __ccov190_start_blk5:
 20698  1CE1                     l7194:
 20699                           
 20700                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x20;
 20701  1CE1  3020               	movlw	32
 20702  1CE2  0024               	movlb	4	; select bank4
 20703  1CE3  008C               	movwf	12	;volatile
 20704  1CE4                     __ccov190_end_blk5:
 20705  1CE4                     __ccov191_start_blk6:
 20706  1CE4                     l7196:
 20707                           
 20708                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
 20709  1CE4  018E               	clrf	14	;volatile
 20710  1CE5                     __ccov191_end_blk6:
 20711  1CE5                     __ccov192_start_blk7:
 20712  1CE5                     l7198:
 20713                           
 20714                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
 20715  1CE5  0025               	movlb	5	; select bank5
 20716  1CE6  018C               	clrf	12	;volatile
 20717  1CE7                     __ccov192_end_blk7:
 20718  1CE7                     __ccov193_start_blk8:
 20719  1CE7                     l7200:
 20720                           
 20721                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
 20722  1CE7  018E               	clrf	14	;volatile
 20723                           
 20724                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
 20725  1CE8  3037               	movlw	55
 20726  1CE9  0026               	movlb	6	; select bank6
 20727  1CEA  008C               	movwf	12	;volatile
 20728                           
 20729                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
 20730  1CEB  303F               	movlw	63
 20731  1CEC  008E               	movwf	14	;volatile
 20732                           
 20733                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
 20734  1CED  303F               	movlw	63
 20735  1CEE  0027               	movlb	7	; select bank7
 20736  1CEF  008C               	movwf	12	;volatile
 20737                           
 20738                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
 20739  1CF0  303F               	movlw	63
 20740  1CF1  008E               	movwf	14	;volatile
 20741                           
 20742                           ;mcc_generated_files/pin_manager.c: 106:     RXPPS = 0x01;
 20743  1CF2  3001               	movlw	1
 20744  1CF3  003C               	movlb	28	; select bank28
 20745  1CF4  00A4               	movwf	36	;volatile
 20746                           
 20747                           ;mcc_generated_files/pin_manager.c: 107:     RC1PPS = 0x03;
 20748  1CF5  3003               	movlw	3
 20749  1CF6  003D               	movlb	29	; select bank29
 20750  1CF7  00A1               	movwf	33	;volatile
 20751  1CF8                     __ccov193_end_blk8:
 20752  1CF8                     __ccov194_start_blk9:
 20753  1CF8                     l7202:
 20754                           
 20755                           ;mcc_generated_files/pin_manager.c: 108:     TXPPS = 0x00;
 20756  1CF8  003C               	movlb	28	; select bank28
 20757  1CF9  01A5               	clrf	37	;volatile
 20758  1CFA                     __ccov194_end_blk9:
 20759  1CFA                     __ccov195_start_blk10:
 20760  1CFA                     l7204:
 20761                           
 20762                           ;mcc_generated_files/pin_manager.c: 109:     RA1PPS = 0x15;
 20763  1CFA  3015               	movlw	21
 20764  1CFB  003D               	movlb	29	; select bank29
 20765  1CFC  0091               	movwf	17	;volatile
 20766  1CFD                     __ccov195_end_blk10:
 20767  1CFD                     __ccov196_start_blk11:
 20768  1CFD                     l7206:
 20769                           
 20770                           ;mcc_generated_files/pin_manager.c: 110:     RA2PPS = 0x02;
 20771  1CFD  3002               	movlw	2
 20772  1CFE  0092               	movwf	18	;volatile
 20773  1CFF                     __ccov196_end_blk11:
 20774  1CFF                     __ccov197_start_blk12:
 20775  1CFF                     l7208:
 20776                           
 20777                           ;mcc_generated_files/pin_manager.c: 111:     RA0PPS = 0x14;
 20778  1CFF  3014               	movlw	20
 20779  1D00  0090               	movwf	16	;volatile
 20780  1D01                     __ccov197_end_blk12:
 20781  1D01                     __ccov198_start_blk13:
 20782  1D01                     l7210:
 20783                           
 20784                           ;mcc_generated_files/pin_manager.c: 112:     T0CKIPPS = 0x14;
 20785  1D01  3014               	movlw	20
 20786  1D02  003C               	movlb	28	; select bank28
 20787  1D03  0091               	movwf	17	;volatile
 20788  1D04                     __ccov198_end_blk13:
 20789  1D04                     __ccov199_start_blk14:
 20790  1D04                     l349:
 20791  1D04  0021               	movlb	1	; select bank1
 20792  1D05  15EA               	bsf	(__ccovbit14_29/(0+8))^(0+128),__ccovbit14_29& (0+7)	;volatile
 20793  1D06  0008               	return
 20794  1D07                     __end_of_PIN_MANAGER_Initialize:
 20795  1D07                     
 20796                           	psect	text72
 20797  2709                     __ptext72:	
 20798 ;; *************** function _OSCILLATOR_Initialize *****************
 20799 ;; Defined at:
 20800 ;;		line 69 in file "mcc_generated_files/mcc.c"
 20801 ;; Parameters:    Size  Location     Type
 20802 ;;		None
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;		None
 20805 ;; Return value:  Size  Location     Type
 20806 ;;                  1    wreg      void 
 20807 ;; Registers used:
 20808 ;;		wreg, status,2
 20809 ;; Tracked objects:
 20810 ;;		On entry : 0/0
 20811 ;;		On exit  : 0/0
 20812 ;;		Unchanged: 0/0
 20813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20818 ;;Total ram usage:        0 bytes
 20819 ;; Hardware stack levels used:    1
 20820 ;; Hardware stack levels required when called:   12
 20821 ;; This function calls:
 20822 ;;		Nothing
 20823 ;; This function is called by:
 20824 ;;		_SYSTEM_Initialize
 20825 ;; This function uses a non-reentrant model
 20826 ;;
 20827                           
 20828                           
 20829                           ;psect for function _OSCILLATOR_Initialize
 20830  2709                     _OSCILLATOR_Initialize:
 20831                           
 20832                           ;incstack = 0
 20833                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 20834  2709                     l7212:
 20835                           
 20836                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x60;
 20837  2709  3060               	movlw	96
 20838  270A  0032               	movlb	18	; select bank18
 20839  270B  0099               	movwf	25	;volatile
 20840  270C                     __ccov100_end_blk0:
 20841  270C                     __ccov101_start_blk1:
 20842  270C                     l7214:
 20843                           
 20844                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 20845  270C  019B               	clrf	27	;volatile
 20846  270D                     __ccov101_end_blk1:
 20847  270D                     __ccov102_start_blk2:
 20848  270D                     l7216:
 20849                           
 20850                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 20851  270D  019D               	clrf	29	;volatile
 20852                           
 20853                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x07;
 20854  270E  3007               	movlw	7
 20855  270F  009F               	movwf	31	;volatile
 20856  2710                     __ccov102_end_blk2:
 20857  2710                     __ccov103_start_blk3:
 20858  2710                     l7218:
 20859                           
 20860                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 20861  2710  019E               	clrf	30	;volatile
 20862  2711                     __ccov103_end_blk3:
 20863  2711                     __ccov104_start_blk4:
 20864  2711                     l251:
 20865  2711  0021               	movlb	1	; select bank1
 20866  2712  14EB               	bsf	(__ccovbit4_23/(0+8))^(0+128),__ccovbit4_23& (0+7)	;volatile
 20867  2713  0008               	return
 20868  2714                     __end_of_OSCILLATOR_Initialize:
 20869  2714                     
 20870                           	psect	text73
 20871  1B4A                     __ptext73:	
 20872 ;; *************** function _EUSART_Initialize *****************
 20873 ;; Defined at:
 20874 ;;		line 65 in file "mcc_generated_files/eusart.c"
 20875 ;; Parameters:    Size  Location     Type
 20876 ;;		None
 20877 ;; Auto vars:     Size  Location     Type
 20878 ;;		None
 20879 ;; Return value:  Size  Location     Type
 20880 ;;                  1    wreg      void 
 20881 ;; Registers used:
 20882 ;;		wreg, status,2, status,0, pclath, cstack
 20883 ;; Tracked objects:
 20884 ;;		On entry : 0/0
 20885 ;;		On exit  : 0/0
 20886 ;;		Unchanged: 0/0
 20887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20892 ;;Total ram usage:        0 bytes
 20893 ;; Hardware stack levels used:    1
 20894 ;; Hardware stack levels required when called:   13
 20895 ;; This function calls:
 20896 ;;		_EUSART_SetErrorHandler
 20897 ;;		_EUSART_SetFramingErrorHandler
 20898 ;;		_EUSART_SetOverrunErrorHandler
 20899 ;; This function is called by:
 20900 ;;		_SYSTEM_Initialize
 20901 ;; This function uses a non-reentrant model
 20902 ;;
 20903                           
 20904                           
 20905                           ;psect for function _EUSART_Initialize
 20906  1B4A                     _EUSART_Initialize:
 20907                           
 20908                           ;incstack = 0
 20909                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20910  1B4A                     l7148:
 20911                           
 20912                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
 20913  1B4A  3008               	movlw	8
 20914  1B4B  0023               	movlb	3	; select bank3
 20915  1B4C  009F               	movwf	31	;volatile
 20916                           
 20917                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x90;
 20918  1B4D  3090               	movlw	144
 20919  1B4E  009D               	movwf	29	;volatile
 20920                           
 20921                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x34;
 20922  1B4F  3034               	movlw	52
 20923  1B50  009E               	movwf	30	;volatile
 20924                           
 20925                           ;mcc_generated_files/eusart.c: 79:     SP1BRGL = 0x44;
 20926  1B51  3044               	movlw	68
 20927  1B52  009B               	movwf	27	;volatile
 20928  1B53                     __ccov13_end_blk0:
 20929  1B53                     __ccov14_start_blk1:
 20930  1B53                     l7150:
 20931                           
 20932                           ;mcc_generated_files/eusart.c: 82:     SP1BRGH = 0x00;
 20933  1B53  019C               	clrf	28	;volatile
 20934  1B54                     __ccov14_end_blk1:
 20935  1B54                     __ccov15_start_blk2:
 20936  1B54                     l7152:
 20937                           
 20938                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 20939  1B54  3000               	movlw	0
 20940  1B55  0021               	movlb	1	; select bank1
 20941  1B56  00A8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
 20942  1B57  3000               	movlw	0
 20943  1B58  00A9               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
 20944  1B59  31A6  26F3  319B   	fcall	_EUSART_SetFramingErrorHandler
 20945  1B5C                     __ccov15_end_blk2:
 20946  1B5C                     __ccov16_start_blk3:
 20947  1B5C                     l7154:
 20948                           
 20949                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 20950  1B5C  3000               	movlw	0
 20951  1B5D  0021               	movlb	1	; select bank1
 20952  1B5E  00A8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
 20953  1B5F  3000               	movlw	0
 20954  1B60  00A9               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
 20955  1B61  31A6  26FE  319B   	fcall	_EUSART_SetOverrunErrorHandler
 20956  1B64                     __ccov16_end_blk3:
 20957  1B64                     __ccov17_start_blk4:
 20958  1B64                     l7156:
 20959                           
 20960                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 20961  1B64  3000               	movlw	0
 20962  1B65  0021               	movlb	1	; select bank1
 20963  1B66  00A8               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
 20964  1B67  3000               	movlw	0
 20965  1B68  00A9               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
 20966  1B69  31A6  26E8  319B   	fcall	_EUSART_SetErrorHandler
 20967  1B6C                     __ccov17_end_blk4:
 20968  1B6C                     __ccov18_start_blk5:
 20969  1B6C                     l7158:
 20970                           
 20971                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
 20972  1B6C  0022               	movlb	2	; select bank2
 20973  1B6D  01E0               	clrf	_eusartRxLastError^(0+256)	;volatile
 20974  1B6E                     __ccov18_end_blk5:
 20975  1B6E                     __ccov19_start_blk6:
 20976  1B6E                     l71:
 20977  1B6E  0020               	movlb	0	; select bank0
 20978  1B6F  15EF               	bsf	__ccovbit6_5/(0+8),__ccovbit6_5& (0+7)	;volatile
 20979  1B70  0008               	return
 20980  1B71                     __end_of_EUSART_Initialize:
 20981  1B71                     
 20982                           	psect	text74
 20983  26FE                     __ptext74:	
 20984 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 20985 ;; Defined at:
 20986 ;;		line 176 in file "mcc_generated_files/eusart.c"
 20987 ;; Parameters:    Size  Location     Type
 20988 ;;  interruptHan    2    8[BANK1 ] PTR FTN()void 
 20989 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 20990 ;; Auto vars:     Size  Location     Type
 20991 ;;		None
 20992 ;; Return value:  Size  Location     Type
 20993 ;;                  1    wreg      void 
 20994 ;; Registers used:
 20995 ;;		wreg
 20996 ;; Tracked objects:
 20997 ;;		On entry : 0/0
 20998 ;;		On exit  : 0/0
 20999 ;;		Unchanged: 0/0
 21000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21001 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21004 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21005 ;;Total ram usage:        2 bytes
 21006 ;; Hardware stack levels used:    1
 21007 ;; Hardware stack levels required when called:   12
 21008 ;; This function calls:
 21009 ;;		Nothing
 21010 ;; This function is called by:
 21011 ;;		_EUSART_Initialize
 21012 ;; This function uses a non-reentrant model
 21013 ;;
 21014                           
 21015                           
 21016                           ;psect for function _EUSART_SetOverrunErrorHandler
 21017  26FE                     _EUSART_SetOverrunErrorHandler:
 21018                           
 21019                           ;incstack = 0
 21020                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 21021  26FE                     l6814:
 21022                           
 21023                           ;mcc_generated_files/eusart.c: 177:     EUSART_OverrunErrorHandler = interruptHandler;
 21024  26FE  0021               	movlb	1	; select bank1
 21025  26FF  0829               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
 21026  2700  0023               	movlb	3	; select bank3
 21027  2701  00E5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 21028  2702  0021               	movlb	1	; select bank1
 21029  2703  0828               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
 21030  2704  0023               	movlb	3	; select bank3
 21031  2705  00E4               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 21032  2706                     __ccov58_end_blk0:
 21033  2706                     __ccov59_start_blk1:
 21034  2706                     l121:
 21035  2706  0020               	movlb	0	; select bank0
 21036  2707  17EE               	bsf	__ccovbit1_9/(0+8),__ccovbit1_9& (0+7)	;volatile
 21037  2708  0008               	return
 21038  2709                     __end_of_EUSART_SetOverrunErrorHandler:
 21039  2709                     
 21040                           	psect	text75
 21041  26F3                     __ptext75:	
 21042 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 21043 ;; Defined at:
 21044 ;;		line 172 in file "mcc_generated_files/eusart.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;  interruptHan    2    8[BANK1 ] PTR FTN()void 
 21047 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 21048 ;; Auto vars:     Size  Location     Type
 21049 ;;		None
 21050 ;; Return value:  Size  Location     Type
 21051 ;;                  1    wreg      void 
 21052 ;; Registers used:
 21053 ;;		wreg
 21054 ;; Tracked objects:
 21055 ;;		On entry : 0/0
 21056 ;;		On exit  : 0/0
 21057 ;;		Unchanged: 0/0
 21058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21063 ;;Total ram usage:        2 bytes
 21064 ;; Hardware stack levels used:    1
 21065 ;; Hardware stack levels required when called:   12
 21066 ;; This function calls:
 21067 ;;		Nothing
 21068 ;; This function is called by:
 21069 ;;		_EUSART_Initialize
 21070 ;; This function uses a non-reentrant model
 21071 ;;
 21072                           
 21073                           
 21074                           ;psect for function _EUSART_SetFramingErrorHandler
 21075  26F3                     _EUSART_SetFramingErrorHandler:
 21076                           
 21077                           ;incstack = 0
 21078                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 21079  26F3                     l6812:
 21080                           
 21081                           ;mcc_generated_files/eusart.c: 173:     EUSART_FramingErrorHandler = interruptHandler;
 21082  26F3  0021               	movlb	1	; select bank1
 21083  26F4  0829               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
 21084  26F5  0023               	movlb	3	; select bank3
 21085  26F6  00E7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 21086  26F7  0021               	movlb	1	; select bank1
 21087  26F8  0828               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
 21088  26F9  0023               	movlb	3	; select bank3
 21089  26FA  00E6               	movwf	_EUSART_FramingErrorHandler^(0+384)
 21090  26FB                     __ccov56_end_blk0:
 21091  26FB                     __ccov57_start_blk1:
 21092  26FB                     l118:
 21093  26FB  0020               	movlb	0	; select bank0
 21094  26FC  146F               	bsf	__ccovbit1_8/(0+8),__ccovbit1_8& (0+7)	;volatile
 21095  26FD  0008               	return
 21096  26FE                     __end_of_EUSART_SetFramingErrorHandler:
 21097  26FE                     
 21098                           	psect	text76
 21099  26E8                     __ptext76:	
 21100 ;; *************** function _EUSART_SetErrorHandler *****************
 21101 ;; Defined at:
 21102 ;;		line 180 in file "mcc_generated_files/eusart.c"
 21103 ;; Parameters:    Size  Location     Type
 21104 ;;  interruptHan    2    8[BANK1 ] PTR FTN()void 
 21105 ;;		 -> EUSART_DefaultErrorHandler(1), 
 21106 ;; Auto vars:     Size  Location     Type
 21107 ;;		None
 21108 ;; Return value:  Size  Location     Type
 21109 ;;                  1    wreg      void 
 21110 ;; Registers used:
 21111 ;;		wreg
 21112 ;; Tracked objects:
 21113 ;;		On entry : 0/0
 21114 ;;		On exit  : 0/0
 21115 ;;		Unchanged: 0/0
 21116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21117 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21120 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21121 ;;Total ram usage:        2 bytes
 21122 ;; Hardware stack levels used:    1
 21123 ;; Hardware stack levels required when called:   12
 21124 ;; This function calls:
 21125 ;;		Nothing
 21126 ;; This function is called by:
 21127 ;;		_EUSART_Initialize
 21128 ;; This function uses a non-reentrant model
 21129 ;;
 21130                           
 21131                           
 21132                           ;psect for function _EUSART_SetErrorHandler
 21133  26E8                     _EUSART_SetErrorHandler:
 21134                           
 21135                           ;incstack = 0
 21136                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 21137  26E8                     l6816:
 21138                           
 21139                           ;mcc_generated_files/eusart.c: 181:     EUSART_ErrorHandler = interruptHandler;
 21140  26E8  0021               	movlb	1	; select bank1
 21141  26E9  0829               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
 21142  26EA  0023               	movlb	3	; select bank3
 21143  26EB  00E3               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 21144  26EC  0021               	movlb	1	; select bank1
 21145  26ED  0828               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
 21146  26EE  0023               	movlb	3	; select bank3
 21147  26EF  00E2               	movwf	_EUSART_ErrorHandler^(0+384)
 21148  26F0                     __ccov60_end_blk0:
 21149  26F0                     __ccov61_start_blk1:
 21150  26F0                     l124:
 21151  26F0  0020               	movlb	0	; select bank0
 21152  26F1  176E               	bsf	__ccovbit1_10/(0+8),__ccovbit1_10& (0+7)	;volatile
 21153  26F2  0008               	return
 21154  26F3                     __end_of_EUSART_SetErrorHandler:
 21155  26F3                     
 21156                           	psect	text77
 21157  26DD                     __ptext77:	
 21158 ;; *************** function _ADC_Initialize *****************
 21159 ;; Defined at:
 21160 ;;		line 67 in file "mcc_generated_files/adc.c"
 21161 ;; Parameters:    Size  Location     Type
 21162 ;;		None
 21163 ;; Auto vars:     Size  Location     Type
 21164 ;;		None
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  1    wreg      void 
 21167 ;; Registers used:
 21168 ;;		wreg, status,2
 21169 ;; Tracked objects:
 21170 ;;		On entry : 0/0
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21178 ;;Total ram usage:        0 bytes
 21179 ;; Hardware stack levels used:    1
 21180 ;; Hardware stack levels required when called:   12
 21181 ;; This function calls:
 21182 ;;		Nothing
 21183 ;; This function is called by:
 21184 ;;		_SYSTEM_Initialize
 21185 ;; This function uses a non-reentrant model
 21186 ;;
 21187                           
 21188                           
 21189                           ;psect for function _ADC_Initialize
 21190  26DD                     _ADC_Initialize:
 21191                           
 21192                           ;incstack = 0
 21193                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 21194  26DD                     l7160:
 21195                           
 21196                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
 21197  26DD  30A0               	movlw	160
 21198  26DE  0021               	movlb	1	; select bank1
 21199  26DF  009E               	movwf	30	;volatile
 21200  26E0                     __ccov62_end_blk0:
 21201  26E0                     __ccov63_start_blk1:
 21202  26E0                     l7162:
 21203                           
 21204                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
 21205  26E0  019F               	clrf	31	;volatile
 21206  26E1                     __ccov63_end_blk1:
 21207  26E1                     __ccov64_start_blk2:
 21208  26E1                     l7164:
 21209                           
 21210                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 21211  26E1  019B               	clrf	27	;volatile
 21212  26E2                     __ccov64_end_blk2:
 21213  26E2                     __ccov65_start_blk3:
 21214  26E2                     l7166:
 21215                           
 21216                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 21217  26E2  019C               	clrf	28	;volatile
 21218  26E3                     __ccov65_end_blk3:
 21219  26E3                     __ccov66_start_blk4:
 21220  26E3                     l7168:
 21221                           
 21222                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
 21223  26E3  3001               	movlw	1
 21224  26E4  009D               	movwf	29	;volatile
 21225  26E5                     __ccov66_end_blk4:
 21226  26E5                     __ccov67_start_blk5:
 21227  26E5                     l143:
 21228  26E5  0020               	movlb	0	; select bank0
 21229  26E6  16EE               	bsf	__ccovbit5_11/(0+8),__ccovbit5_11& (0+7)	;volatile
 21230  26E7  0008               	return
 21231  26E8                     __end_of_ADC_Initialize:
 21232  26E8                     
 21233                           	psect	text78
 21234  1A78                     __ptext78:	
 21235 ;; *************** function _FLASH_ReadWord *****************
 21236 ;; Defined at:
 21237 ;;		line 58 in file "mcc_generated_files/memory.c"
 21238 ;; Parameters:    Size  Location     Type
 21239 ;;  flashAddr       2    8[BANK1 ] unsigned short 
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;  GIEBitValue     1   10[BANK1 ] unsigned char 
 21242 ;; Return value:  Size  Location     Type
 21243 ;;                  2    8[BANK1 ] unsigned short 
 21244 ;; Registers used:
 21245 ;;		wreg, status,2, status,0
 21246 ;; Tracked objects:
 21247 ;;		On entry : 0/0
 21248 ;;		On exit  : 0/0
 21249 ;;		Unchanged: 0/0
 21250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21251 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21252 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21254 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21255 ;;Total ram usage:        3 bytes
 21256 ;; Hardware stack levels used:    1
 21257 ;; Hardware stack levels required when called:   12
 21258 ;; This function calls:
 21259 ;;		Nothing
 21260 ;; This function is called by:
 21261 ;;		_main
 21262 ;;		_FLASH_WriteWord
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           
 21267                           ;psect for function _FLASH_ReadWord
 21268  1A78                     _FLASH_ReadWord:
 21269                           
 21270                           ;incstack = 0
 21271                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 21272  1A78                     l7652:
 21273                           
 21274                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
 21275  1A78  3000               	movlw	0
 21276  1A79  1B8B               	btfsc	11,7	;volatile
 21277  1A7A  3001               	movlw	1
 21278  1A7B  0021               	movlb	1	; select bank1
 21279  1A7C  00AA               	movwf	FLASH_ReadWord@GIEBitValue^(0+128)
 21280  1A7D                     __ccov109_end_blk0:
 21281  1A7D                     __ccov110_start_blk1:
 21282  1A7D                     l7654:
 21283                           
 21284                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
 21285  1A7D  138B               	bcf	11,7	;volatile
 21286  1A7E                     __ccov110_end_blk1:
 21287  1A7E                     __ccov111_start_blk2:
 21288  1A7E                     l7656:
 21289                           
 21290                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
 21291  1A7E  0828               	movf	FLASH_ReadWord@flashAddr^(0+128),w
 21292  1A7F  0031               	movlb	17	; select bank17
 21293  1A80  0091               	movwf	17	;volatile
 21294  1A81                     __ccov111_end_blk2:
 21295  1A81                     __ccov112_start_blk3:
 21296  1A81                     l7658:
 21297                           
 21298                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
 21299  1A81  0021               	movlb	1	; select bank1
 21300  1A82  0829               	movf	(FLASH_ReadWord@flashAddr+1)^(0+128),w
 21301  1A83  0031               	movlb	17	; select bank17
 21302  1A84  0092               	movwf	18	;volatile
 21303  1A85                     __ccov112_end_blk3:
 21304  1A85                     __ccov113_start_blk4:
 21305  1A85                     l7660:
 21306                           
 21307                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
 21308  1A85  1315               	bcf	21,6	;volsfr
 21309  1A86                     __ccov113_end_blk4:
 21310  1A86                     __ccov114_start_blk5:
 21311  1A86                     l7662:
 21312                           
 21313                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
 21314  1A86  1415               	bsf	21,0	;volsfr
 21315  1A87                     __ccov114_end_blk5:
 21316  1A87                     __ccov115_start_blk6:
 21317  1A87                     l7664:
 21318                           
 21319                           ;mcc_generated_files/memory.c: 68:     __nop();
 21320  1A87  0000               	nop
 21321  1A88                     __ccov115_end_blk6:
 21322  1A88                     __ccov116_start_blk7:
 21323  1A88                     l7666:
 21324                           
 21325                           ;mcc_generated_files/memory.c: 69:     __nop();
 21326  1A88  0000               	nop
 21327  1A89                     __ccov116_end_blk7:
 21328  1A89                     __ccov117_start_blk8:
 21329  1A89                     l7668:
 21330                           
 21331                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
 21332  1A89  0021               	movlb	1	; select bank1
 21333  1A8A  0C2A               	rrf	FLASH_ReadWord@GIEBitValue^(0+128),w
 21334  1A8B  1C03               	skipc
 21335  1A8C  138B               	bcf	11,7	;volatile
 21336  1A8D  1803               	skipnc
 21337  1A8E  178B               	bsf	11,7	;volatile
 21338  1A8F                     __ccov117_end_blk8:
 21339  1A8F                     __ccov118_start_blk9:
 21340  1A8F                     l7670:
 21341                           
 21342                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
 21343  1A8F  0031               	movlb	17	; select bank17
 21344  1A90  0814               	movf	20,w	;volatile
 21345  1A91  0021               	movlb	1	; select bank1
 21346  1A92  00A9               	movwf	(?_FLASH_ReadWord+1)^(0+128)
 21347  1A93  0031               	movlb	17	; select bank17
 21348  1A94  0813               	movf	19,w	;volatile
 21349  1A95  0021               	movlb	1	; select bank1
 21350  1A96  00A8               	movwf	?_FLASH_ReadWord^(0+128)
 21351  1A97                     __ccov118_end_blk9:
 21352  1A97                     __ccov119_start_blk11:
 21353  1A97                     l280:
 21354  1A97  176A               	bsf	(__ccovbit11_26/(0+8))^(0+128),__ccovbit11_26& (0+7)	;volatile
 21355  1A98  0008               	return
 21356  1A99                     __end_of_FLASH_ReadWord:
 21357  1A99                     
 21358                           	psect	intentry
 21359  0004                     __pintentry:	
 21360 ;; *************** function _INTERRUPT_InterruptManager *****************
 21361 ;; Defined at:
 21362 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21363 ;; Parameters:    Size  Location     Type
 21364 ;;		None
 21365 ;; Auto vars:     Size  Location     Type
 21366 ;;		None
 21367 ;; Return value:  Size  Location     Type
 21368 ;;                  1    wreg      void 
 21369 ;; Registers used:
 21370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21371 ;; Tracked objects:
 21372 ;;		On entry : 0/0
 21373 ;;		On exit  : 0/0
 21374 ;;		Unchanged: 0/0
 21375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21380 ;;Total ram usage:        0 bytes
 21381 ;; Hardware stack levels used:    1
 21382 ;; Hardware stack levels required when called:   11
 21383 ;; This function calls:
 21384 ;;		_TMR0_ISR
 21385 ;;		_TMR1_ISR
 21386 ;;		_TMR2_ISR
 21387 ;; This function is called by:
 21388 ;;		Interrupt level 1
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392  0004                     _INTERRUPT_InterruptManager:
 21393                           
 21394                           ;incstack = 0
 21395  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 21396                           
 21397                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21398  0005  3180               	pagesel	$
 21399  0006                     i1l7858:
 21400                           
 21401                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21402  0006  0021               	movlb	1	; select bank1
 21403  0007  1E90               	btfss	16,5	;volatile
 21404  0008  280A               	goto	u937_21
 21405  0009  280B               	goto	u937_20
 21406  000A                     u937_21:
 21407  000A  2816               	goto	i1l185
 21408  000B                     u937_20:
 21409  000B                     __ccov86_end_blk0:
 21410  000B                     __ccov87_start_blk1:
 21411  000B                     i1l7860:
 21412  000B  0020               	movlb	0	; select bank0
 21413  000C  15EE               	bsf	__ccovbit1_13/(0+8),__ccovbit1_13& (0+7)	;volatile
 21414  000D  1E90               	btfss	16,5	;volatile
 21415  000E  2810               	goto	u938_21
 21416  000F  2811               	goto	u938_20
 21417  0010                     u938_21:
 21418  0010  2816               	goto	i1l185
 21419  0011                     u938_20:
 21420  0011                     __ccov87_end_blk1:
 21421  0011                     __ccov88_start_blk2:
 21422  0011                     i1l7862:
 21423  0011  156E               	bsf	__ccovbit2_14/(0+8),__ccovbit2_14& (0+7)	;volatile
 21424                           
 21425                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21426  0012  3199  21CC  3180   	fcall	_TMR0_ISR
 21427                           
 21428                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21429  0015  2840               	goto	i1l193
 21430  0016                     __ccov88_end_blk2:
 21431  0016                     __ccov89_start_blk3:
 21432  0016                     i1l185:	
 21433                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 21434                           
 21435  0016  0020               	movlb	0	; select bank0
 21436  0017  14EE               	bsf	__ccovbit3_15/(0+8),__ccovbit3_15& (0+7)	;volatile
 21437  0018  1F0B               	btfss	11,6	;volatile
 21438  0019  281B               	goto	u939_21
 21439  001A  281C               	goto	u939_20
 21440  001B                     u939_21:
 21441  001B  2840               	goto	i1l193
 21442  001C                     u939_20:
 21443  001C                     __ccov89_end_blk3:
 21444  001C                     __ccov90_start_blk4:
 21445  001C                     i1l7864:
 21446                           
 21447                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 21448  001C  0021               	movlb	1	; select bank1
 21449  001D  1C11               	btfss	17,0	;volatile
 21450  001E  2820               	goto	u940_21
 21451  001F  2821               	goto	u940_20
 21452  0020                     u940_21:
 21453  0020  282D               	goto	i1l188
 21454  0021                     u940_20:
 21455  0021                     __ccov90_end_blk4:
 21456  0021                     __ccov91_start_blk5:
 21457  0021                     i1l7866:
 21458  0021  0020               	movlb	0	; select bank0
 21459  0022  146E               	bsf	__ccovbit5_16/(0+8),__ccovbit5_16& (0+7)	;volatile
 21460  0023  1C11               	btfss	17,0	;volatile
 21461  0024  2826               	goto	u941_21
 21462  0025  2827               	goto	u941_20
 21463  0026                     u941_21:
 21464  0026  282D               	goto	i1l188
 21465  0027                     u941_20:
 21466  0027                     __ccov91_end_blk5:
 21467  0027                     __ccov92_start_blk6:
 21468  0027                     i1l7868:
 21469  0027  0021               	movlb	1	; select bank1
 21470  0028  17EB               	bsf	(__ccovbit6_17/(0+8))^(0+128),__ccovbit6_17& (0+7)	;volatile
 21471                           
 21472                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
 21473  0029  3199  21E8  3180   	fcall	_TMR1_ISR
 21474                           
 21475                           ;mcc_generated_files/interrupt_manager.c: 64:         } else if(PIE1bits.TMR2IE == 1 && 
      +                          PIR1bits.TMR2IF == 1)
 21476  002C  2840               	goto	i1l193
 21477  002D                     __ccov92_end_blk6:
 21478  002D                     __ccov93_start_blk7:
 21479  002D                     i1l188:
 21480  002D  0021               	movlb	1	; select bank1
 21481  002E  1C91               	btfss	17,1	;volatile
 21482  002F  2831               	goto	u942_21
 21483  0030  2832               	goto	u942_20
 21484  0031                     u942_21:
 21485  0031  283E               	goto	i1l192
 21486  0032                     u942_20:
 21487  0032                     __ccov93_end_blk7:
 21488  0032                     __ccov94_start_blk8:
 21489  0032                     i1l7870:
 21490  0032  176B               	bsf	(__ccovbit8_18/(0+8))^(0+128),__ccovbit8_18& (0+7)	;volatile
 21491  0033  0020               	movlb	0	; select bank0
 21492  0034  1C91               	btfss	17,1	;volatile
 21493  0035  2837               	goto	u943_21
 21494  0036  2838               	goto	u943_20
 21495  0037                     u943_21:
 21496  0037  283E               	goto	i1l192
 21497  0038                     u943_20:
 21498  0038                     __ccov94_end_blk8:
 21499  0038                     __ccov95_start_blk9:
 21500  0038                     i1l7872:
 21501  0038  0021               	movlb	1	; select bank1
 21502  0039  16EB               	bsf	(__ccovbit9_19/(0+8))^(0+128),__ccovbit9_19& (0+7)	;volatile
 21503                           
 21504                           ;mcc_generated_files/interrupt_manager.c: 65:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 66:             TMR2_ISR();
 21505  003A  3198  207C  3180   	fcall	_TMR2_ISR
 21506                           
 21507                           ;mcc_generated_files/interrupt_manager.c: 67:         }
 21508  003D  2840               	goto	i1l193
 21509  003E                     __ccov95_end_blk9:
 21510  003E                     __ccov96_start_blk14:
 21511  003E                     i1l192:	
 21512                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 76:     }
 21513                           
 21514  003E  0021               	movlb	1	; select bank1
 21515  003F  166B               	bsf	(__ccovbit14_20/(0+8))^(0+128),__ccovbit14_20& (0+7)	;volatile
 21516  0040                     __ccov96_end_blk14:
 21517  0040                     __ccov97_start_blk16:
 21518  0040                     i1l193:
 21519  0040  0021               	movlb	1	; select bank1
 21520  0041  15EB               	bsf	(__ccovbit16_21/(0+8))^(0+128),__ccovbit16_21& (0+7)	;volatile
 21521  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 21522  0043  0009               	retfie
 21523  0044                     __end_of_INTERRUPT_InterruptManager:
 21524  0044                     
 21525                           	psect	text80
 21526  187C                     __ptext80:	
 21527 ;; *************** function _TMR2_ISR *****************
 21528 ;; Defined at:
 21529 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;		None
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;		None
 21534 ;; Return value:  Size  Location     Type
 21535 ;;                  1    wreg      void 
 21536 ;; Registers used:
 21537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21538 ;; Tracked objects:
 21539 ;;		On entry : 0/0
 21540 ;;		On exit  : 0/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21547 ;;Total ram usage:        0 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:    6
 21550 ;; This function calls:
 21551 ;;		Absolute function
 21552 ;;		_TMR2_DefaultInterruptHandler
 21553 ;;		_led_indicate
 21554 ;; This function is called by:
 21555 ;;		_INTERRUPT_InterruptManager
 21556 ;; This function uses a non-reentrant model
 21557 ;;
 21558                           
 21559                           
 21560                           ;psect for function _TMR2_ISR
 21561  187C                     _TMR2_ISR:
 21562                           
 21563                           ;incstack = 0
 21564                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21565  187C                     i1l7644:
 21566                           
 21567                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 21568  187C  0020               	movlb	0	; select bank0
 21569  187D  1091               	bcf	17,1	;volatile
 21570  187E                     __ccov311_end_blk0:
 21571  187E                     __ccov312_start_blk1:
 21572  187E                     i1l7646:
 21573                           
 21574                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 21575  187E  0023               	movlb	3	; select bank3
 21576  187F  0858               	movf	_TMR2_InterruptHandler^(0+384),w
 21577  1880  0459               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 21578  1881  1903               	btfsc	3,2
 21579  1882  2884               	goto	u910_21
 21580  1883  2885               	goto	u910_20
 21581  1884                     u910_21:
 21582  1884  288D               	goto	i1l549
 21583  1885                     __ccov312_end_blk1:
 21584  1885                     u910_20:
 21585  1885                     __ccov313_start_blk2:
 21586  1885                     i1l7648:
 21587  1885  0021               	movlb	1	; select bank1
 21588  1886  1568               	bsf	(__ccovbit2_46/(0+8))^(0+128),__ccovbit2_46& (0+7)	;volatile
 21589                           
 21590                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 21591  1887  0023               	movlb	3	; select bank3
 21592  1888  0859               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 21593  1889  008A               	movwf	10
 21594  188A  0858               	movf	_TMR2_InterruptHandler^(0+384),w
 21595  188B  000A               	callw
 21596  188C  3198               	pagesel	$
 21597  188D                     __ccov313_end_blk2:
 21598  188D                     __ccov314_start_blk4:
 21599  188D                     i1l549:
 21600  188D  0021               	movlb	1	; select bank1
 21601  188E  14E8               	bsf	(__ccovbit4_47/(0+8))^(0+128),__ccovbit4_47& (0+7)	;volatile
 21602  188F  0008               	return
 21603  1890                     __end_of_TMR2_ISR:
 21604  1890                     
 21605                           	psect	text81
 21606  266F                     __ptext81:	
 21607 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 21608 ;; Defined at:
 21609 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 21610 ;; Parameters:    Size  Location     Type
 21611 ;;		None
 21612 ;; Auto vars:     Size  Location     Type
 21613 ;;		None
 21614 ;; Return value:  Size  Location     Type
 21615 ;;                  1    wreg      void 
 21616 ;; Registers used:
 21617 ;;		None
 21618 ;; Tracked objects:
 21619 ;;		On entry : 0/0
 21620 ;;		On exit  : 0/0
 21621 ;;		Unchanged: 0/0
 21622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21627 ;;Total ram usage:        0 bytes
 21628 ;; Hardware stack levels used:    1
 21629 ;; This function calls:
 21630 ;;		Nothing
 21631 ;; This function is called by:
 21632 ;;		_TMR2_Initialize
 21633 ;;		_TMR2_ISR
 21634 ;; This function uses a non-reentrant model
 21635 ;;
 21636                           
 21637                           
 21638                           ;psect for function _TMR2_DefaultInterruptHandler
 21639  266F                     _TMR2_DefaultInterruptHandler:
 21640                           
 21641                           ;incstack = 0
 21642                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 21643  266F                     i1l555:
 21644  266F  0021               	movlb	1	; select bank1
 21645  2670  17E7               	bsf	(__ccovbit0_49/(0+8))^(0+128),__ccovbit0_49& (0+7)	;volatile
 21646  2671  0008               	return
 21647  2672                     __end_of_TMR2_DefaultInterruptHandler:
 21648  2672                     
 21649                           	psect	text82
 21650  138F                     __ptext82:	
 21651 ;; *************** function _led_indicate *****************
 21652 ;; Defined at:
 21653 ;;		line 100 in file "led.c"
 21654 ;; Parameters:    Size  Location     Type
 21655 ;;		None
 21656 ;; Auto vars:     Size  Location     Type
 21657 ;;		None
 21658 ;; Return value:  Size  Location     Type
 21659 ;;                  1    wreg      void 
 21660 ;; Registers used:
 21661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21662 ;; Tracked objects:
 21663 ;;		On entry : 0/0
 21664 ;;		On exit  : 0/0
 21665 ;;		Unchanged: 0/0
 21666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21671 ;;Total ram usage:        2 bytes
 21672 ;; Hardware stack levels used:    1
 21673 ;; Hardware stack levels required when called:    5
 21674 ;; This function calls:
 21675 ;;		_led_off
 21676 ;;		_led_on
 21677 ;;		_led_toggle
 21678 ;;		i1_led_set_mode
 21679 ;;		i1_puts
 21680 ;; This function is called by:
 21681 ;;		_main
 21682 ;;		_TMR2_ISR
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           
 21687                           ;psect for function _led_indicate
 21688  138F                     _led_indicate:
 21689                           
 21690                           ;incstack = 0
 21691                           ; Regs used in _led_indicate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21692  138F                     i1l7360:
 21693                           
 21694                           ;led.c: 102:     static u8 count = 0;;led.c: 103:     static u8 delay = 0;;led.c: 105:  
      +                             switch (led.mode) {
 21695  138F  2C39               	goto	i1l7420
 21696  1390                     __ccov447_end_blk0:
 21697  1390                     __ccov448_start_blk2:
 21698  1390                     i1l7362:
 21699  1390  0021               	movlb	1	; select bank1
 21700  1391  1664               	bsf	(__ccovbit2_76/(0+8))^(0+128),__ccovbit2_76& (0+7)	;volatile
 21701                           
 21702                           ;led.c: 107:             if (led.state == OFF) {
 21703  1392  0023               	movlb	3	; select bank3
 21704  1393  0821               	movf	(_led^(0+384)+1),w
 21705  1394  1D03               	btfss	3,2
 21706  1395  2B97               	goto	u877_21
 21707  1396  2B98               	goto	u877_20
 21708  1397                     u877_21:
 21709  1397  2B9D               	goto	i1l7366
 21710  1398                     __ccov448_end_blk2:
 21711  1398                     u877_20:
 21712  1398                     __ccov449_start_blk3:
 21713  1398                     i1l7364:
 21714  1398  0021               	movlb	1	; select bank1
 21715  1399  15E4               	bsf	(__ccovbit3_77/(0+8))^(0+128),__ccovbit3_77& (0+7)	;volatile
 21716                           
 21717                           ;led.c: 108:                 led_on();
 21718  139A  31A6  2689  3193   	fcall	_led_on
 21719  139D                     __ccov449_end_blk3:
 21720  139D                     __ccov450_start_blk5:
 21721  139D                     i1l7366:
 21722                           
 21723                           ;led.c: 110:             count = 0;
 21724  139D  0021               	movlb	1	; select bank1
 21725  139E  01EF               	clrf	led_indicate@count^(0+128)
 21726  139F                     __ccov450_end_blk5:
 21727  139F                     __ccov451_start_blk6:
 21728  139F                     i1l7368:
 21729  139F  1564               	bsf	(__ccovbit6_78/(0+8))^(0+128),__ccovbit6_78& (0+7)	;volatile
 21730                           
 21731                           ;led.c: 111:             delay = 0;
 21732  13A0  0022               	movlb	2	; select bank2
 21733  13A1  01DE               	clrf	led_indicate@delay^(0+256)
 21734                           
 21735                           ;led.c: 112:             break;
 21736  13A2  2C4E               	goto	i1l802
 21737  13A3                     __ccov451_end_blk6:
 21738  13A3                     __ccov452_start_blk8:
 21739  13A3                     i1l7370:
 21740                           
 21741                           ;led.c: 115:             if ((count == 0) && (led.state == ON)) {
 21742  13A3  0021               	movlb	1	; select bank1
 21743  13A4  086F               	movf	led_indicate@count^(0+128),w
 21744  13A5  1D03               	btfss	3,2
 21745  13A6  2BA8               	goto	u878_21
 21746  13A7  2BA9               	goto	u878_20
 21747  13A8                     u878_21:
 21748  13A8  2BBB               	goto	i1l7378
 21749  13A9                     __ccov452_end_blk8:
 21750  13A9                     u878_20:
 21751  13A9                     __ccov453_start_blk9:
 21752  13A9                     i1l7372:
 21753  13A9  14E4               	bsf	(__ccovbit9_79/(0+8))^(0+128),__ccovbit9_79& (0+7)	;volatile
 21754  13AA  0023               	movlb	3	; select bank3
 21755  13AB  0321               	decf	(_led^(0+384)+1),w
 21756  13AC  1D03               	btfss	3,2
 21757  13AD  2BAF               	goto	u879_21
 21758  13AE  2BB0               	goto	u879_20
 21759  13AF                     u879_21:
 21760  13AF  2BBB               	goto	i1l7378
 21761  13B0                     __ccov453_end_blk9:
 21762  13B0                     u879_20:
 21763  13B0                     __ccov454_start_blk10:
 21764  13B0                     i1l7374:
 21765                           
 21766                           ;led.c: 116:                 led_off();
 21767  13B0  3198  201A  3193   	fcall	_led_off
 21768  13B3                     __ccov454_end_blk10:
 21769  13B3                     __ccov455_start_blk11:
 21770  13B3                     i1l7376:
 21771  13B3  0021               	movlb	1	; select bank1
 21772  13B4  1464               	bsf	(__ccovbit11_80/(0+8))^(0+128),__ccovbit11_80& (0+7)	;volatile
 21773                           
 21774                           ;led.c: 117:                 delay = 50U;
 21775  13B5  3032               	movlw	50
 21776  13B6  0020               	movlb	0	; select bank0
 21777  13B7  00AB               	movwf	??_led_indicate
 21778  13B8  082B               	movf	??_led_indicate,w
 21779  13B9  0022               	movlb	2	; select bank2
 21780  13BA  00DE               	movwf	led_indicate@delay^(0+256)
 21781  13BB                     __ccov455_end_blk11:
 21782  13BB                     __ccov456_start_blk13:
 21783  13BB                     i1l7378:
 21784                           
 21785                           ;led.c: 119:             if ((led.state == OFF) && (count >= delay)) {
 21786  13BB  0023               	movlb	3	; select bank3
 21787  13BC  0821               	movf	(_led^(0+384)+1),w
 21788  13BD  1D03               	btfss	3,2
 21789  13BE  2BC0               	goto	u880_21
 21790  13BF  2BC1               	goto	u880_20
 21791  13C0                     u880_21:
 21792  13C0  2BD6               	goto	i1l7386
 21793  13C1                     __ccov456_end_blk13:
 21794  13C1                     u880_20:
 21795  13C1                     __ccov457_start_blk14:
 21796  13C1                     i1l7380:
 21797  13C1  0022               	movlb	2	; select bank2
 21798  13C2  17A8               	bsf	(__ccovbit14_81/(0+8))^(0+256),__ccovbit14_81& (0+7)	;volatile
 21799  13C3  085E               	movf	led_indicate@delay^(0+256),w
 21800  13C4  0021               	movlb	1	; select bank1
 21801  13C5  026F               	subwf	led_indicate@count^(0+128),w
 21802  13C6  1C03               	skipc
 21803  13C7  2BC9               	goto	u881_21
 21804  13C8  2BCA               	goto	u881_20
 21805  13C9                     u881_21:
 21806  13C9  2BD6               	goto	i1l7386
 21807  13CA                     __ccov457_end_blk14:
 21808  13CA                     u881_20:
 21809  13CA                     __ccov458_start_blk15:
 21810  13CA                     i1l7382:
 21811                           
 21812                           ;led.c: 120:                 led_on();
 21813  13CA  31A6  2689  3193   	fcall	_led_on
 21814  13CD                     __ccov458_end_blk15:
 21815  13CD                     __ccov459_start_blk16:
 21816  13CD                     i1l7384:
 21817  13CD  0022               	movlb	2	; select bank2
 21818  13CE  1728               	bsf	(__ccovbit16_82/(0+8))^(0+256),__ccovbit16_82& (0+7)	;volatile
 21819                           
 21820                           ;led.c: 121:                 delay = 20U;
 21821  13CF  3014               	movlw	20
 21822  13D0  0020               	movlb	0	; select bank0
 21823  13D1  00AB               	movwf	??_led_indicate
 21824  13D2  082B               	movf	??_led_indicate,w
 21825  13D3  0022               	movlb	2	; select bank2
 21826  13D4  00DE               	movwf	led_indicate@delay^(0+256)
 21827                           
 21828                           ;led.c: 122:             } else if ((led.state == ON) && (count >= delay)) {
 21829  13D5  2C0B               	goto	i1l7404
 21830  13D6                     __ccov459_end_blk16:
 21831  13D6                     __ccov460_start_blk18:
 21832  13D6                     i1l7386:
 21833  13D6  0022               	movlb	2	; select bank2
 21834  13D7  16A8               	bsf	(__ccovbit18_83/(0+8))^(0+256),__ccovbit18_83& (0+7)	;volatile
 21835  13D8  0023               	movlb	3	; select bank3
 21836  13D9  0321               	decf	(_led^(0+384)+1),w
 21837  13DA  1D03               	btfss	3,2
 21838  13DB  2BDD               	goto	u882_21
 21839  13DC  2BDE               	goto	u882_20
 21840  13DD                     u882_21:
 21841  13DD  2C0B               	goto	i1l7404
 21842  13DE                     __ccov460_end_blk18:
 21843  13DE                     u882_20:
 21844  13DE                     __ccov461_start_blk19:
 21845  13DE                     i1l7388:
 21846  13DE  0022               	movlb	2	; select bank2
 21847  13DF  1628               	bsf	(__ccovbit19_84/(0+8))^(0+256),__ccovbit19_84& (0+7)	;volatile
 21848  13E0  085E               	movf	led_indicate@delay^(0+256),w
 21849  13E1  0021               	movlb	1	; select bank1
 21850  13E2  026F               	subwf	led_indicate@count^(0+128),w
 21851  13E3  1C03               	skipc
 21852  13E4  2BE6               	goto	u883_21
 21853  13E5  2BE7               	goto	u883_20
 21854  13E6                     u883_21:
 21855  13E6  2C0B               	goto	i1l7404
 21856  13E7                     __ccov461_end_blk19:
 21857  13E7                     u883_20:
 21858  13E7                     __ccov462_start_blk20:
 21859  13E7                     i1l7390:
 21860                           
 21861                           ;led.c: 123:                 led_off();
 21862  13E7  3198  201A  3193   	fcall	_led_off
 21863  13EA                     __ccov462_end_blk20:
 21864  13EA                     __ccov463_start_blk21:
 21865  13EA                     i1l7392:
 21866                           
 21867                           ;led.c: 124:                 led.count++;
 21868  13EA  3001               	movlw	1
 21869  13EB  0020               	movlb	0	; select bank0
 21870  13EC  00AB               	movwf	??_led_indicate
 21871  13ED  082B               	movf	??_led_indicate,w
 21872  13EE  0023               	movlb	3	; select bank3
 21873  13EF  07A3               	addwf	(_led^(0+384)+3),f
 21874  13F0                     __ccov463_end_blk21:
 21875  13F0                     __ccov464_start_blk22:
 21876  13F0                     i1l7394:
 21877                           
 21878                           ;led.c: 125:                 count = 0;
 21879  13F0  0021               	movlb	1	; select bank1
 21880  13F1  01EF               	clrf	led_indicate@count^(0+128)
 21881  13F2                     __ccov464_end_blk22:
 21882  13F2                     __ccov465_start_blk23:
 21883  13F2                     i1l7396:
 21884                           
 21885                           ;led.c: 126:                 if (led.count >= led.number) {
 21886  13F2  0023               	movlb	3	; select bank3
 21887  13F3  0822               	movf	(_led^(0+384)+2),w
 21888  13F4  0223               	subwf	(_led^(0+384)+3),w
 21889  13F5  1C03               	skipc
 21890  13F6  2BF8               	goto	u884_21
 21891  13F7  2BF9               	goto	u884_20
 21892  13F8                     u884_21:
 21893  13F8  2C03               	goto	i1l7402
 21894  13F9                     __ccov465_end_blk23:
 21895  13F9                     u884_20:
 21896  13F9                     __ccov466_start_blk24:
 21897  13F9                     i1l7398:
 21898                           
 21899                           ;led.c: 127:                     led.count = 0;
 21900  13F9  01A3               	clrf	(_led^(0+384)+3)
 21901  13FA                     __ccov466_end_blk24:
 21902  13FA                     __ccov467_start_blk25:
 21903  13FA                     i1l7400:
 21904  13FA  0022               	movlb	2	; select bank2
 21905  13FB  15A8               	bsf	(__ccovbit25_85/(0+8))^(0+256),__ccovbit25_85& (0+7)	;volatile
 21906                           
 21907                           ;led.c: 128:                     delay = 50U;
 21908  13FC  3032               	movlw	50
 21909  13FD  0020               	movlb	0	; select bank0
 21910  13FE  00AB               	movwf	??_led_indicate
 21911  13FF  082B               	movf	??_led_indicate,w
 21912  1400  0022               	movlb	2	; select bank2
 21913  1401  00DE               	movwf	led_indicate@delay^(0+256)
 21914                           
 21915                           ;led.c: 129:                 } else {
 21916  1402  2C0B               	goto	i1l7404
 21917  1403                     __ccov467_end_blk25:
 21918  1403                     __ccov468_start_blk27:
 21919  1403                     i1l7402:
 21920  1403  0022               	movlb	2	; select bank2
 21921  1404  1528               	bsf	(__ccovbit27_86/(0+8))^(0+256),__ccovbit27_86& (0+7)	;volatile
 21922                           
 21923                           ;led.c: 130:                     delay = 10U;
 21924  1405  300A               	movlw	10
 21925  1406  0020               	movlb	0	; select bank0
 21926  1407  00AB               	movwf	??_led_indicate
 21927  1408  082B               	movf	??_led_indicate,w
 21928  1409  0022               	movlb	2	; select bank2
 21929  140A  00DE               	movwf	led_indicate@delay^(0+256)
 21930  140B                     __ccov468_end_blk27:
 21931  140B                     __ccov469_start_blk31:
 21932  140B                     i1l7404:
 21933                           
 21934                           ;led.c: 133:             if (count == (0xff)) {
 21935  140B  0021               	movlb	1	; select bank1
 21936  140C  0A6F               	incf	led_indicate@count^(0+128),w
 21937  140D  1D03               	btfss	3,2
 21938  140E  2C10               	goto	u885_21
 21939  140F  2C11               	goto	u885_20
 21940  1410                     u885_21:
 21941  1410  2C1C               	goto	i1l7408
 21942  1411                     __ccov469_end_blk31:
 21943  1411                     u885_20:
 21944  1411                     __ccov470_start_blk32:
 21945  1411                     i1l7406:
 21946  1411  0022               	movlb	2	; select bank2
 21947  1412  14A8               	bsf	(__ccovbit32_87/(0+8))^(0+256),__ccovbit32_87& (0+7)	;volatile
 21948                           
 21949                           ;led.c: 134:                 puts ("ERROR: LED COUNTER OVERFLOW.");
 21950  1413  30DA               	movlw	low (STR_5| (0+32768))
 21951  1414  0020               	movlb	0	; select bank0
 21952  1415  00A6               	movwf	i1puts@s
 21953  1416  30A1               	movlw	high (STR_5| (0+32768))
 21954  1417  00A7               	movwf	i1puts@s+1
 21955  1418  319A  225A  3193   	fcall	i1_puts
 21956                           
 21957                           ;led.c: 135:             } else {
 21958  141B  2C4E               	goto	i1l802
 21959  141C                     __ccov470_end_blk32:
 21960  141C                     __ccov471_start_blk34:
 21961  141C                     i1l7408:
 21962  141C  0022               	movlb	2	; select bank2
 21963  141D  1428               	bsf	(__ccovbit34_88/(0+8))^(0+256),__ccovbit34_88& (0+7)	;volatile
 21964                           
 21965                           ;led.c: 136:                 count++;
 21966  141E  3001               	movlw	1
 21967  141F  0020               	movlb	0	; select bank0
 21968  1420  00AB               	movwf	??_led_indicate
 21969  1421  082B               	movf	??_led_indicate,w
 21970  1422  0021               	movlb	1	; select bank1
 21971  1423  07EF               	addwf	led_indicate@count^(0+128),f
 21972  1424  2C4E               	goto	i1l802
 21973  1425                     __ccov471_end_blk34:
 21974  1425                     __ccov472_start_blk37:
 21975  1425                     i1l7410:
 21976  1425  0022               	movlb	2	; select bank2
 21977  1426  17A7               	bsf	(__ccovbit37_89/(0+8))^(0+256),__ccovbit37_89& (0+7)	;volatile
 21978                           
 21979                           ;led.c: 141:             led_toggle();
 21980  1427  3198  20B9  3193   	fcall	_led_toggle
 21981  142A  2B9D               	goto	i1l7366
 21982  142B                     __ccov472_end_blk37:
 21983  142B                     __ccov473_start_blk41:
 21984  142B                     i1l7416:
 21985                           
 21986                           ;led.c: 147:             puts("ERROR: WRONG LED MODE.");
 21987  142B  3064               	movlw	low (STR_6| (0+32768))
 21988  142C  00A6               	movwf	i1puts@s
 21989  142D  30A2               	movlw	high (STR_6| (0+32768))
 21990  142E  00A7               	movwf	i1puts@s+1
 21991  142F  319A  225A  3193   	fcall	i1_puts
 21992  1432                     __ccov473_end_blk41:
 21993  1432                     __ccov474_start_blk42:
 21994  1432                     i1l7418:
 21995  1432  0022               	movlb	2	; select bank2
 21996  1433  1727               	bsf	(__ccovbit42_90/(0+8))^(0+256),__ccovbit42_90& (0+7)	;volatile
 21997                           
 21998                           ;led.c: 148:             led_set_mode (ALWAYS_ON);
 21999  1434  3002               	movlw	2
 22000  1435  31A6  2691  3193   	fcall	i1_led_set_mode
 22001                           
 22002                           ;led.c: 149:     }
 22003  1438  2C4E               	goto	i1l802
 22004  1439                     __ccov474_end_blk42:
 22005  1439                     __ccov475_start_blk44:
 22006  1439                     i1l7420:
 22007  1439  0023               	movlb	3	; select bank3
 22008  143A  0820               	movf	_led^(0+384),w
 22009  143B  0020               	movlb	0	; select bank0
 22010  143C  00AB               	movwf	??_led_indicate
 22011  143D  01AC               	clrf	??_led_indicate+1
 22012                           
 22013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22014                           ; Switch size 1, requested type "simple"
 22015                           ; Number of cases is 1, Range of values is 0 to 0
 22016                           ; switch strategies available:
 22017                           ; Name         Instructions Cycles
 22018                           ; simple_byte            4     3 (average)
 22019                           ; direct_byte            8     6 (fixed)
 22020                           ; jumptable            260     6 (fixed)
 22021                           ;	Chosen strategy is simple_byte
 22022  143E  082C               	movf	??_led_indicate+1,w
 22023  143F  3A00               	xorlw	0	; case 0
 22024  1440  1903               	skipnz
 22025  1441  2C43               	goto	i1l8238
 22026  1442  2C2B               	goto	i1l7416
 22027  1443                     i1l8238:
 22028                           
 22029                           ; Switch size 1, requested type "simple"
 22030                           ; Number of cases is 3, Range of values is 0 to 2
 22031                           ; switch strategies available:
 22032                           ; Name         Instructions Cycles
 22033                           ; simple_byte           10     6 (average)
 22034                           ; direct_byte           12     6 (fixed)
 22035                           ; jumptable            260     6 (fixed)
 22036                           ;	Chosen strategy is simple_byte
 22037  1443  082B               	movf	??_led_indicate,w
 22038  1444  3A00               	xorlw	0	; case 0
 22039  1445  1903               	skipnz
 22040  1446  2C25               	goto	i1l7410
 22041  1447  3A01               	xorlw	1	; case 1
 22042  1448  1903               	skipnz
 22043  1449  2BA3               	goto	i1l7370
 22044  144A  3A03               	xorlw	3	; case 2
 22045  144B  1903               	skipnz
 22046  144C  2B90               	goto	i1l7362
 22047  144D  2C2B               	goto	i1l7416
 22048  144E                     __ccov475_end_blk44:
 22049  144E                     __ccov476_start_blk46:
 22050  144E                     i1l802:
 22051  144E  0022               	movlb	2	; select bank2
 22052  144F  16A7               	bsf	(__ccovbit46_91/(0+8))^(0+256),__ccovbit46_91& (0+7)	;volatile
 22053  1450  0008               	return
 22054  1451                     __end_of_led_indicate:
 22055  1451                     
 22056                           	psect	text83
 22057  2691                     __ptext83:	
 22058 ;; *************** function i1_led_set_mode *****************
 22059 ;; Defined at:
 22060 ;;		line 34 in file "led.c"
 22061 ;; Parameters:    Size  Location     Type
 22062 ;;  newmode         1    wreg     enum E6821
 22063 ;; Auto vars:     Size  Location     Type
 22064 ;;  newmode         1    1[COMMON] enum E6821
 22065 ;; Return value:  Size  Location     Type
 22066 ;;                  1    wreg      void 
 22067 ;; Registers used:
 22068 ;;		wreg
 22069 ;; Tracked objects:
 22070 ;;		On entry : 0/0
 22071 ;;		On exit  : 0/0
 22072 ;;		Unchanged: 0/0
 22073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22078 ;;Total ram usage:        2 bytes
 22079 ;; Hardware stack levels used:    1
 22080 ;; This function calls:
 22081 ;;		Nothing
 22082 ;; This function is called by:
 22083 ;;		_led_indicate
 22084 ;; This function uses a non-reentrant model
 22085 ;;
 22086                           
 22087                           
 22088                           ;psect for function i1_led_set_mode
 22089  2691                     i1_led_set_mode:
 22090                           
 22091                           ;incstack = 0
 22092                           ; Regs used in i1_led_set_mode: [wreg]
 22093                           ;i1led_set_mode@newmode stored from wreg
 22094  2691  00F1               	movwf	i1led_set_mode@newmode
 22095  2692                     i1l4986:
 22096                           
 22097                           ;led.c: 34: void led_set_mode (enum e_ledmode newmode);led.c: 35: {;led.c: 36:     led.m
      +                          ode = newmode;
 22098  2692  0871               	movf	i1led_set_mode@newmode,w
 22099  2693  00F0               	movwf	??i1_led_set_mode
 22100  2694  0870               	movf	??i1_led_set_mode,w
 22101  2695  0023               	movlb	3	; select bank3
 22102  2696  00A0               	movwf	_led^(0+384)
 22103  2697                     __ccov708_end_blk0:
 22104  2697                     __ccov709_start_blk1:
 22105  2697                     i1l746:
 22106  2697  14D4               	bsf	(__ccovbit1_182/(0+8))^(0+384),__ccovbit1_182& (0+7)	;volatile
 22107  2698  0008               	return
 22108  2699                     __end_ofi1_led_set_mode:
 22109  2699                     
 22110                           	psect	text84
 22111  18B9                     __ptext84:	
 22112 ;; *************** function _led_toggle *****************
 22113 ;; Defined at:
 22114 ;;		line 71 in file "led.c"
 22115 ;; Parameters:    Size  Location     Type
 22116 ;;		None
 22117 ;; Auto vars:     Size  Location     Type
 22118 ;;		None
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      void 
 22121 ;; Registers used:
 22122 ;;		wreg, status,2, status,0
 22123 ;; Tracked objects:
 22124 ;;		On entry : 0/0
 22125 ;;		On exit  : 0/0
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22132 ;;Total ram usage:        1 bytes
 22133 ;; Hardware stack levels used:    1
 22134 ;; This function calls:
 22135 ;;		Nothing
 22136 ;; This function is called by:
 22137 ;;		_led_indicate
 22138 ;; This function uses a non-reentrant model
 22139 ;;
 22140                           
 22141                           
 22142                           ;psect for function _led_toggle
 22143  18B9                     _led_toggle:
 22144  18B9                     i1l771:	
 22145                           ;incstack = 0
 22146                           ; Regs used in _led_toggle: [wreg+status,2+status,0]
 22147                           ;led.c: 73:     do { LATAbits.LATA4 = ~LATAbits.LATA4; } while(0);
 22148                           
 22149  18B9                     i1l4724:
 22150  18B9  1003               	clrc
 22151  18BA  0022               	movlb	2	; select bank2
 22152  18BB  1E0C               	btfss	12,4	;volatile
 22153  18BC  1403               	setc
 22154  18BD  1803               	btfsc	3,0
 22155  18BE  28C0               	goto	u468_21
 22156  18BF  28C3               	goto	u468_20
 22157  18C0                     u468_21:
 22158  18C0  0022               	movlb	2	; select bank2
 22159  18C1  160C               	bsf	12,4	;volatile
 22160  18C2  28C5               	goto	u469_24
 22161  18C3                     u468_20:
 22162  18C3  0022               	movlb	2	; select bank2
 22163  18C4  120C               	bcf	12,4	;volatile
 22164  18C5                     __ccov434_end_blk1:
 22165  18C5                     u469_24:
 22166  18C5                     __ccov435_start_blk3:
 22167  18C5                     i1l4726:
 22168                           
 22169                           ;led.c: 74:     led.state = (led.state + 1) % 2;
 22170  18C5  0023               	movlb	3	; select bank3
 22171  18C6  0821               	movf	(_led^(0+384)+1),w
 22172  18C7  3E01               	addlw	1
 22173  18C8  3901               	andlw	1
 22174  18C9  00F0               	movwf	??_led_toggle
 22175  18CA  0870               	movf	??_led_toggle,w
 22176  18CB  00A1               	movwf	(_led^(0+384)+1)
 22177  18CC                     __ccov435_end_blk3:
 22178  18CC                     __ccov436_start_blk4:
 22179  18CC                     i1l773:
 22180  18CC  0021               	movlb	1	; select bank1
 22181  18CD  16E4               	bsf	(__ccovbit4_75/(0+8))^(0+128),__ccovbit4_75& (0+7)	;volatile
 22182  18CE  0008               	return
 22183  18CF                     __end_of_led_toggle:
 22184  18CF                     
 22185                           	psect	text85
 22186  2689                     __ptext85:	
 22187 ;; *************** function _led_on *****************
 22188 ;; Defined at:
 22189 ;;		line 59 in file "led.c"
 22190 ;; Parameters:    Size  Location     Type
 22191 ;;		None
 22192 ;; Auto vars:     Size  Location     Type
 22193 ;;		None
 22194 ;; Return value:  Size  Location     Type
 22195 ;;                  1    wreg      void 
 22196 ;; Registers used:
 22197 ;;		None
 22198 ;; Tracked objects:
 22199 ;;		On entry : 0/0
 22200 ;;		On exit  : 0/0
 22201 ;;		Unchanged: 0/0
 22202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22207 ;;Total ram usage:        0 bytes
 22208 ;; Hardware stack levels used:    1
 22209 ;; This function calls:
 22210 ;;		Nothing
 22211 ;; This function is called by:
 22212 ;;		_led_indicate
 22213 ;; This function uses a non-reentrant model
 22214 ;;
 22215                           
 22216                           
 22217                           ;psect for function _led_on
 22218  2689                     _led_on:
 22219                           
 22220                           ;incstack = 0
 22221                           ; Regs used in _led_on: []
 22222  2689                     i1l761:	
 22223                           ;led.c: 61:     do { LATAbits.LATA4 = 1; } while(0);
 22224                           
 22225  2689  0022               	movlb	2	; select bank2
 22226  268A  160C               	bsf	12,4	;volatile
 22227  268B                     __ccov427_end_blk0:
 22228  268B                     __ccov428_start_blk1:
 22229  268B                     i1l762:
 22230                           
 22231                           ;led.c: 62:     led.state = ON;
 22232  268B  0023               	movlb	3	; select bank3
 22233  268C  01A1               	clrf	(_led^(0+384)+1)
 22234  268D  0AA1               	incf	(_led^(0+384)+1),f
 22235  268E                     __ccov428_end_blk1:
 22236  268E                     __ccov429_start_blk2:
 22237  268E                     i1l763:
 22238  268E  0021               	movlb	1	; select bank1
 22239  268F  17E4               	bsf	(__ccovbit2_73/(0+8))^(0+128),__ccovbit2_73& (0+7)	;volatile
 22240  2690  0008               	return
 22241  2691                     __end_of_led_on:
 22242  2691                     
 22243                           	psect	text86
 22244  181A                     __ptext86:	
 22245 ;; *************** function _led_off *****************
 22246 ;; Defined at:
 22247 ;;		line 65 in file "led.c"
 22248 ;; Parameters:    Size  Location     Type
 22249 ;;		None
 22250 ;; Auto vars:     Size  Location     Type
 22251 ;;		None
 22252 ;; Return value:  Size  Location     Type
 22253 ;;                  1    wreg      void 
 22254 ;; Registers used:
 22255 ;;		status,2
 22256 ;; Tracked objects:
 22257 ;;		On entry : 0/0
 22258 ;;		On exit  : 0/0
 22259 ;;		Unchanged: 0/0
 22260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22265 ;;Total ram usage:        0 bytes
 22266 ;; Hardware stack levels used:    1
 22267 ;; This function calls:
 22268 ;;		Nothing
 22269 ;; This function is called by:
 22270 ;;		_led_indicate
 22271 ;; This function uses a non-reentrant model
 22272 ;;
 22273                           
 22274                           
 22275                           ;psect for function _led_off
 22276  181A                     _led_off:
 22277                           
 22278                           ;incstack = 0
 22279                           ; Regs used in _led_off: [status,2]
 22280  181A                     i1l766:	
 22281                           ;led.c: 67:     do { LATAbits.LATA4 = 0; } while(0);
 22282                           
 22283  181A  0022               	movlb	2	; select bank2
 22284  181B  120C               	bcf	12,4	;volatile
 22285  181C                     __ccov430_end_blk0:
 22286  181C                     __ccov431_start_blk2:
 22287  181C                     i1l4722:
 22288                           
 22289                           ;led.c: 68:     led.state = OFF;
 22290  181C  0023               	movlb	3	; select bank3
 22291  181D  01A1               	clrf	(_led^(0+384)+1)
 22292  181E                     __ccov431_end_blk2:
 22293  181E                     __ccov432_start_blk3:
 22294  181E                     i1l768:
 22295  181E  0021               	movlb	1	; select bank1
 22296  181F  1764               	bsf	(__ccovbit3_74/(0+8))^(0+128),__ccovbit3_74& (0+7)	;volatile
 22297  1820  0008               	return
 22298  1821                     __end_of_led_off:
 22299  1821                     
 22300                           	psect	text87
 22301  19E8                     __ptext87:	
 22302 ;; *************** function _TMR1_ISR *****************
 22303 ;; Defined at:
 22304 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 22305 ;; Parameters:    Size  Location     Type
 22306 ;;		None
 22307 ;; Auto vars:     Size  Location     Type
 22308 ;;		None
 22309 ;; Return value:  Size  Location     Type
 22310 ;;                  1    wreg      void 
 22311 ;; Registers used:
 22312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22313 ;; Tracked objects:
 22314 ;;		On entry : 0/0
 22315 ;;		On exit  : 0/0
 22316 ;;		Unchanged: 0/0
 22317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22322 ;;Total ram usage:        0 bytes
 22323 ;; Hardware stack levels used:    1
 22324 ;; Hardware stack levels required when called:   10
 22325 ;; This function calls:
 22326 ;;		Absolute function
 22327 ;;		_TMR1_DefaultInterruptHandler
 22328 ;;		_TMR1_WriteTimer
 22329 ;;		_frequency_calculation
 22330 ;; This function is called by:
 22331 ;;		_INTERRUPT_InterruptManager
 22332 ;; This function uses a non-reentrant model
 22333 ;;
 22334                           
 22335                           
 22336                           ;psect for function _TMR1_ISR
 22337  19E8                     _TMR1_ISR:
 22338                           
 22339                           ;incstack = 0
 22340                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22341  19E8                     i1l7636:
 22342                           
 22343                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 22344  19E8  0020               	movlb	0	; select bank0
 22345  19E9  1011               	bcf	17,0	;volatile
 22346  19EA                     __ccov228_end_blk0:
 22347  19EA                     __ccov229_start_blk1:
 22348  19EA                     i1l7638:
 22349                           
 22350                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 22351  19EA  0023               	movlb	3	; select bank3
 22352  19EB  0861               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
 22353  19EC  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 22354  19ED  0860               	movf	_timer1ReloadVal^(0+384),w	;volatile
 22355  19EE  00F0               	movwf	TMR1_WriteTimer@timerVal
 22356  19EF  3199  2113  3199   	fcall	_TMR1_WriteTimer
 22357  19F2                     __ccov229_end_blk1:
 22358  19F2                     __ccov230_start_blk2:
 22359  19F2                     i1l7640:
 22360                           
 22361                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 22362  19F2  0023               	movlb	3	; select bank3
 22363  19F3  085E               	movf	_TMR1_InterruptHandler^(0+384),w
 22364  19F4  045F               	iorwf	(_TMR1_InterruptHandler+1)^(0+384),w
 22365  19F5  1903               	btfsc	3,2
 22366  19F6  29F8               	goto	u909_21
 22367  19F7  29F9               	goto	u909_20
 22368  19F8                     u909_21:
 22369  19F8  2A01               	goto	i1l406
 22370  19F9                     __ccov230_end_blk2:
 22371  19F9                     u909_20:
 22372  19F9                     __ccov231_start_blk3:
 22373  19F9                     i1l7642:
 22374  19F9  0021               	movlb	1	; select bank1
 22375  19FA  1769               	bsf	(__ccovbit3_34/(0+8))^(0+128),__ccovbit3_34& (0+7)	;volatile
 22376                           
 22377                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 22378  19FB  0023               	movlb	3	; select bank3
 22379  19FC  085F               	movf	(_TMR1_InterruptHandler+1)^(0+384),w
 22380  19FD  008A               	movwf	10
 22381  19FE  085E               	movf	_TMR1_InterruptHandler^(0+384),w
 22382  19FF  000A               	callw
 22383  1A00  3199               	pagesel	$
 22384  1A01                     __ccov231_end_blk3:
 22385  1A01                     __ccov232_start_blk5:
 22386  1A01                     i1l406:
 22387  1A01  0021               	movlb	1	; select bank1
 22388  1A02  16E9               	bsf	(__ccovbit5_35/(0+8))^(0+128),__ccovbit5_35& (0+7)	;volatile
 22389  1A03  0008               	return
 22390  1A04                     __end_of_TMR1_ISR:
 22391  1A04                     
 22392                           	psect	text88
 22393  266C                     __ptext88:	
 22394 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 22395 ;; Defined at:
 22396 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;		None
 22399 ;; Auto vars:     Size  Location     Type
 22400 ;;		None
 22401 ;; Return value:  Size  Location     Type
 22402 ;;                  1    wreg      void 
 22403 ;; Registers used:
 22404 ;;		None
 22405 ;; Tracked objects:
 22406 ;;		On entry : 0/0
 22407 ;;		On exit  : 0/0
 22408 ;;		Unchanged: 0/0
 22409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22414 ;;Total ram usage:        0 bytes
 22415 ;; Hardware stack levels used:    1
 22416 ;; This function calls:
 22417 ;;		Nothing
 22418 ;; This function is called by:
 22419 ;;		_TMR1_Initialize
 22420 ;;		_TMR1_ISR
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424                           
 22425                           ;psect for function _TMR1_DefaultInterruptHandler
 22426  266C                     _TMR1_DefaultInterruptHandler:
 22427                           
 22428                           ;incstack = 0
 22429                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 22430  266C                     i1l412:
 22431  266C  0021               	movlb	1	; select bank1
 22432  266D  15E9               	bsf	(__ccovbit0_37/(0+8))^(0+128),__ccovbit0_37& (0+7)	;volatile
 22433  266E  0008               	return
 22434  266F                     __end_of_TMR1_DefaultInterruptHandler:
 22435  266F                     
 22436                           	psect	text89
 22437  1451                     __ptext89:	
 22438 ;; *************** function _frequency_calculation *****************
 22439 ;; Defined at:
 22440 ;;		line 92 in file "spd.c"
 22441 ;; Parameters:    Size  Location     Type
 22442 ;;		None
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;		None
 22445 ;; Return value:  Size  Location     Type
 22446 ;;                  1    wreg      void 
 22447 ;; Registers used:
 22448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22449 ;; Tracked objects:
 22450 ;;		On entry : 0/0
 22451 ;;		On exit  : 0/0
 22452 ;;		Unchanged: 0/0
 22453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22456 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22457 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22458 ;;Total ram usage:        4 bytes
 22459 ;; Hardware stack levels used:    1
 22460 ;; Hardware stack levels required when called:    9
 22461 ;; This function calls:
 22462 ;;		_TMR0_Reload
 22463 ;;		i1_PWM6_LoadDutyValue
 22464 ;;		i1_TMR6_LoadPeriodRegister
 22465 ;;		i1___flmul
 22466 ;;		i1___fltol
 22467 ;;		i1___xxtofl
 22468 ;;		i1_is_moving
 22469 ;;		i1_printf
 22470 ;; This function is called by:
 22471 ;;		_main
 22472 ;;		_TMR1_ISR
 22473 ;; This function uses a non-reentrant model
 22474 ;;
 22475                           
 22476                           
 22477                           ;psect for function _frequency_calculation
 22478  1451                     _frequency_calculation:
 22479                           
 22480                           ;incstack = 0
 22481                           ; Regs used in _frequency_calculation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22482  1451                     i1l7560:
 22483                           
 22484                           ;spd.c: 95:     spd.count = (u16)((TMR0H << 8) | TMR0L);
 22485  1451  0020               	movlb	0	; select bank0
 22486  1452  0816               	movf	22,w	;volatile
 22487  1453  0022               	movlb	2	; select bank2
 22488  1454  00E7               	movwf	((_spd+1)^(0+256)+5)
 22489  1455  0020               	movlb	0	; select bank0
 22490  1456  0815               	movf	21,w	;volatile
 22491  1457  0022               	movlb	2	; select bank2
 22492  1458  00E6               	movwf	(_spd^(0+256)+5)
 22493  1459                     __ccov533_end_blk0:
 22494  1459                     __ccov534_start_blk1:
 22495  1459                     i1l7562:
 22496                           
 22497                           ;spd.c: 96:     TMR0_Reload();
 22498  1459  31A6  26D2  3194   	fcall	_TMR0_Reload
 22499  145C                     __ccov534_end_blk1:
 22500  145C                     __ccov535_start_blk2:
 22501  145C                     i1l7564:
 22502                           
 22503                           ;spd.c: 99:     if (is_moving()) {
 22504  145C  31A7  2740  3194   	fcall	i1_is_moving
 22505  145F  3A00               	xorlw	0
 22506  1460  1903               	skipnz
 22507  1461  2C63               	goto	u901_21
 22508  1462  2C64               	goto	u901_20
 22509  1463                     u901_21:
 22510  1463  2D0B               	goto	i1l7580
 22511  1464                     __ccov535_end_blk2:
 22512  1464                     u901_20:
 22513  1464                     __ccov536_start_blk3:
 22514  1464                     i1l7566:
 22515                           
 22516                           ;spd.c: 101:         spd.speed = (u16)(spd.k * spd.count) + spd.a;
 22517  1464  0022               	movlb	2	; select bank2
 22518  1465  0865               	movf	(_spd^(0+256)+4),w
 22519  1466  0021               	movlb	1	; select bank1
 22520  1467  00A4               	movwf	??_frequency_calculation^(0+128)
 22521  1468  01A5               	clrf	(??_frequency_calculation^(0+128)+1)
 22522  1469  0022               	movlb	2	; select bank2
 22523  146A  0866               	movf	(_spd^(0+256)+5),w
 22524  146B  00F0               	movwf	i1___xxtofl@val
 22525  146C  0867               	movf	((_spd+1)^(0+256)+5),w
 22526  146D  00F1               	movwf	i1___xxtofl@val+1
 22527  146E  01F2               	clrf	i1___xxtofl@val+2
 22528  146F  01F3               	clrf	i1___xxtofl@val+3
 22529  1470  3000               	movlw	0
 22530  1471  3192  2236  3194   	fcall	i1___xxtofl
 22531  1474  0873               	movf	?i1___xxtofl+3,w
 22532  1475  0020               	movlb	0	; select bank0
 22533  1476  00A7               	movwf	i1___flmul@a+3
 22534  1477  0872               	movf	?i1___xxtofl+2,w
 22535  1478  00A6               	movwf	i1___flmul@a+2
 22536  1479  0871               	movf	?i1___xxtofl+1,w
 22537  147A  00A5               	movwf	i1___flmul@a+1
 22538  147B  0870               	movf	?i1___xxtofl,w
 22539  147C  00A4               	movwf	i1___flmul@a
 22540  147D  0022               	movlb	2	; select bank2
 22541  147E  0864               	movf	(_spd+3)^(0+256),w
 22542  147F  0020               	movlb	0	; select bank0
 22543  1480  00A3               	movwf	i1___flmul@b+3
 22544  1481  0022               	movlb	2	; select bank2
 22545  1482  0863               	movf	(_spd+2)^(0+256),w
 22546  1483  0020               	movlb	0	; select bank0
 22547  1484  00A2               	movwf	i1___flmul@b+2
 22548  1485  0022               	movlb	2	; select bank2
 22549  1486  0862               	movf	(_spd+1)^(0+256),w
 22550  1487  0020               	movlb	0	; select bank0
 22551  1488  00A1               	movwf	i1___flmul@b+1
 22552  1489  0022               	movlb	2	; select bank2
 22553  148A  0861               	movf	_spd^(0+256),w
 22554  148B  0020               	movlb	0	; select bank0
 22555  148C  00A0               	movwf	i1___flmul@b
 22556  148D  3182  22D3  3194   	fcall	i1___flmul
 22557  1490  0020               	movlb	0	; select bank0
 22558  1491  0823               	movf	?i1___flmul+3,w
 22559  1492  00BD               	movwf	i1___fltol@f1+3
 22560  1493  0822               	movf	?i1___flmul+2,w
 22561  1494  00BC               	movwf	i1___fltol@f1+2
 22562  1495  0821               	movf	?i1___flmul+1,w
 22563  1496  00BB               	movwf	i1___fltol@f1+1
 22564  1497  0820               	movf	?i1___flmul,w
 22565  1498  00BA               	movwf	i1___fltol@f1
 22566  1499  3190  20BA  3194   	fcall	i1___fltol
 22567  149C  0021               	movlb	1	; select bank1
 22568  149D  0824               	movf	??_frequency_calculation^(0+128),w
 22569  149E  0020               	movlb	0	; select bank0
 22570  149F  073A               	addwf	?i1___fltol,w
 22571  14A0  0022               	movlb	2	; select bank2
 22572  14A1  00EB               	movwf	(_spd^(0+256)+10)
 22573  14A2  0021               	movlb	1	; select bank1
 22574  14A3  0825               	movf	(??_frequency_calculation+1)^(0+128),w
 22575  14A4  0020               	movlb	0	; select bank0
 22576  14A5  3D3B               	addwfc	?i1___fltol+1,w
 22577  14A6  0022               	movlb	2	; select bank2
 22578  14A7  00EC               	movwf	((_spd+1)^(0+256)+10)
 22579  14A8                     __ccov536_end_blk3:
 22580  14A8                     __ccov537_start_blk4:
 22581  14A8                     i1l7568:
 22582                           
 22583                           ;spd.c: 104:         spd.pr_value = (u8)(spd.speed / sizeof(spd.speed));
 22584  14A8  300A               	movlw	10
 22585  14A9  3E61               	addlw	(low (_spd| (0+256)))& (0+255)
 22586  14AA  0086               	movwf	6
 22587  14AB  3001               	movlw	1	; select bank2/3
 22588  14AC  0087               	movwf	7
 22589  14AD  3F40               	moviw [0]fsr1
 22590  14AE  0021               	movlb	1	; select bank1
 22591  14AF  00A4               	movwf	??_frequency_calculation^(0+128)
 22592  14B0  3F41               	moviw [1]fsr1
 22593  14B1  00A5               	movwf	(??_frequency_calculation^(0+128)+1)
 22594  14B2  36A5               	lsrf	(??_frequency_calculation^(0+128)+1),f
 22595  14B3  0CA4               	rrf	??_frequency_calculation^(0+128),f
 22596  14B4  0824               	movf	??_frequency_calculation^(0+128),w
 22597  14B5  00A6               	movwf	(??_frequency_calculation+2)^(0+128)
 22598  14B6  0826               	movf	(??_frequency_calculation+2)^(0+128),w
 22599  14B7  0022               	movlb	2	; select bank2
 22600  14B8  00EA               	movwf	(_spd^(0+256)+9)
 22601  14B9                     __ccov537_end_blk4:
 22602  14B9                     __ccov538_start_blk5:
 22603  14B9                     i1l7570:
 22604                           
 22605                           ;spd.c: 105:         TMR6_LoadPeriodRegister (spd.pr_value);
 22606  14B9  086A               	movf	(_spd^(0+256)+9),w
 22607  14BA  31A6  267A  3194   	fcall	i1_TMR6_LoadPeriodRegister
 22608  14BD                     __ccov538_end_blk5:
 22609  14BD                     __ccov539_start_blk6:
 22610  14BD                     i1l7572:
 22611                           
 22612                           ;spd.c: 106:         spd.duty = (4 * (u16)spd.pr_value + 1) / 2;
 22613  14BD  0022               	movlb	2	; select bank2
 22614  14BE  086A               	movf	(_spd^(0+256)+9),w
 22615  14BF  0021               	movlb	1	; select bank1
 22616  14C0  00A4               	movwf	??_frequency_calculation^(0+128)
 22617  14C1  01A5               	clrf	(??_frequency_calculation^(0+128)+1)
 22618  14C2  35A4               	lslf	??_frequency_calculation^(0+128),f
 22619  14C3  0DA5               	rlf	(??_frequency_calculation^(0+128)+1),f
 22620  14C4  35A4               	lslf	??_frequency_calculation^(0+128),f
 22621  14C5  0DA5               	rlf	(??_frequency_calculation^(0+128)+1),f
 22622  14C6  0824               	movf	??_frequency_calculation^(0+128),w
 22623  14C7  3E01               	addlw	1
 22624  14C8  00A6               	movwf	(??_frequency_calculation+2)^(0+128)
 22625  14C9  3000               	movlw	0
 22626  14CA  3D25               	addwfc	(??_frequency_calculation+1)^(0+128),w
 22627  14CB  00A7               	movwf	(??_frequency_calculation+3)^(0+128)
 22628  14CC  36A7               	lsrf	((??_frequency_calculation+2)^(0+128)+1),f
 22629  14CD  0CA6               	rrf	(??_frequency_calculation+2)^(0+128),f
 22630  14CE  0826               	movf	(??_frequency_calculation+2)^(0+128),w
 22631  14CF  0022               	movlb	2	; select bank2
 22632  14D0  00E8               	movwf	(_spd^(0+256)+7)
 22633  14D1  0021               	movlb	1	; select bank1
 22634  14D2  0827               	movf	(??_frequency_calculation+3)^(0+128),w
 22635  14D3  0022               	movlb	2	; select bank2
 22636  14D4  00E9               	movwf	((_spd+1)^(0+256)+7)
 22637  14D5                     __ccov539_end_blk6:
 22638  14D5                     __ccov540_start_blk7:
 22639  14D5                     i1l7574:
 22640                           
 22641                           ;spd.c: 107:         PWM6_LoadDutyValue (spd.duty);
 22642  14D5  0869               	movf	((_spd+1)^(0+256)+7),w
 22643  14D6  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 22644  14D7  0868               	movf	(_spd^(0+256)+7),w
 22645  14D8  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 22646  14D9  3198  20FB  3194   	fcall	i1_PWM6_LoadDutyValue
 22647  14DC                     __ccov540_end_blk7:
 22648  14DC                     __ccov541_start_blk8:
 22649  14DC                     i1l7576:
 22650                           
 22651                           ;spd.c: 110:         printf("SPD %d PR %d", spd.speed, spd.pr_value);
 22652  14DC  3000               	movlw	low (STR_11| (0+32768))
 22653  14DD  0020               	movlb	0	; select bank0
 22654  14DE  00E8               	movwf	i1printf@fmt
 22655  14DF  30A8               	movlw	high (STR_11| (0+32768))
 22656  14E0  00E9               	movwf	i1printf@fmt+1
 22657  14E1  0022               	movlb	2	; select bank2
 22658  14E2  086C               	movf	((_spd+1)^(0+256)+10),w
 22659  14E3  0020               	movlb	0	; select bank0
 22660  14E4  00EB               	movwf	?i1_printf+3
 22661  14E5  0022               	movlb	2	; select bank2
 22662  14E6  086B               	movf	(_spd^(0+256)+10),w
 22663  14E7  0020               	movlb	0	; select bank0
 22664  14E8  00EA               	movwf	?i1_printf+2
 22665  14E9  0022               	movlb	2	; select bank2
 22666  14EA  086A               	movf	(_spd^(0+256)+9),w
 22667  14EB  0021               	movlb	1	; select bank1
 22668  14EC  00A4               	movwf	??_frequency_calculation^(0+128)
 22669  14ED  01A5               	clrf	(??_frequency_calculation^(0+128)+1)
 22670  14EE  0824               	movf	??_frequency_calculation^(0+128),w
 22671  14EF  0020               	movlb	0	; select bank0
 22672  14F0  00EC               	movwf	?i1_printf+4
 22673  14F1  0021               	movlb	1	; select bank1
 22674  14F2  0825               	movf	(??_frequency_calculation+1)^(0+128),w
 22675  14F3  0020               	movlb	0	; select bank0
 22676  14F4  00ED               	movwf	?i1_printf+5
 22677  14F5  3198  2056  3194   	fcall	i1_printf
 22678  14F8                     __ccov541_end_blk8:
 22679  14F8                     __ccov542_start_blk9:
 22680  14F8                     i1l7578:
 22681  14F8  0022               	movlb	2	; select bank2
 22682  14F9  17A4               	bsf	(__ccovbit9_113/(0+8))^(0+256),__ccovbit9_113& (0+7)	;volatile
 22683                           
 22684                           ;spd.c: 111:         printf("SPD_DUTY %d", spd.duty);
 22685  14FA  300D               	movlw	low (STR_12| (0+32768))
 22686  14FB  0020               	movlb	0	; select bank0
 22687  14FC  00E8               	movwf	i1printf@fmt
 22688  14FD  30A8               	movlw	high (STR_12| (0+32768))
 22689  14FE  00E9               	movwf	i1printf@fmt+1
 22690  14FF  0022               	movlb	2	; select bank2
 22691  1500  0869               	movf	((_spd+1)^(0+256)+7),w
 22692  1501  0020               	movlb	0	; select bank0
 22693  1502  00EB               	movwf	?i1_printf+3
 22694  1503  0022               	movlb	2	; select bank2
 22695  1504  0868               	movf	(_spd^(0+256)+7),w
 22696  1505  0020               	movlb	0	; select bank0
 22697  1506  00EA               	movwf	?i1_printf+2
 22698  1507  3198  2056  3194   	fcall	i1_printf
 22699                           
 22700                           ;spd.c: 117:     } else if (spd.speed != 0) {
 22701  150A  2D25               	goto	i1l888
 22702  150B                     __ccov542_end_blk9:
 22703  150B                     __ccov543_start_blk11:
 22704  150B                     i1l7580:
 22705  150B  0022               	movlb	2	; select bank2
 22706  150C  1724               	bsf	(__ccovbit11_114/(0+8))^(0+256),__ccovbit11_114& (0+7)	;volatile
 22707  150D  086B               	movf	(_spd^(0+256)+10),w
 22708  150E  046C               	iorwf	((_spd+1)^(0+256)+10),w
 22709  150F  1903               	btfsc	3,2
 22710  1510  2D12               	goto	u902_21
 22711  1511  2D13               	goto	u902_20
 22712  1512                     u902_21:
 22713  1512  2D25               	goto	i1l888
 22714  1513                     __ccov543_end_blk11:
 22715  1513                     u902_20:
 22716  1513                     __ccov544_start_blk12:
 22717  1513                     i1l7582:
 22718                           
 22719                           ;spd.c: 118:         spd.duty = 0;
 22720  1513  01E8               	clrf	(_spd^(0+256)+7)
 22721  1514  01E9               	clrf	((_spd+1)^(0+256)+7)
 22722                           
 22723                           ;spd.c: 119:         spd.speed = 0;
 22724  1515  01EB               	clrf	(_spd^(0+256)+10)
 22725  1516  01EC               	clrf	((_spd+1)^(0+256)+10)
 22726                           
 22727                           ;spd.c: 120:         spd.pr_value = 0;
 22728  1517  01EA               	clrf	(_spd^(0+256)+9)
 22729  1518                     __ccov544_end_blk12:
 22730  1518                     __ccov545_start_blk13:
 22731  1518                     i1l7584:
 22732                           
 22733                           ;spd.c: 121:         TMR6_LoadPeriodRegister (spd.pr_value);
 22734  1518  086A               	movf	(_spd^(0+256)+9),w
 22735  1519  31A6  267A  3194   	fcall	i1_TMR6_LoadPeriodRegister
 22736  151C                     __ccov545_end_blk13:
 22737  151C                     __ccov546_start_blk14:
 22738  151C                     i1l7586:
 22739  151C  0022               	movlb	2	; select bank2
 22740  151D  16A4               	bsf	(__ccovbit14_115/(0+8))^(0+256),__ccovbit14_115& (0+7)	;volatile
 22741                           
 22742                           ;spd.c: 122:         PWM6_LoadDutyValue (spd.duty);
 22743  151E  0869               	movf	((_spd+1)^(0+256)+7),w
 22744  151F  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 22745  1520  0868               	movf	(_spd^(0+256)+7),w
 22746  1521  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 22747  1522  3198  20FB  3194   	fcall	i1_PWM6_LoadDutyValue
 22748  1525                     __ccov546_end_blk14:
 22749  1525                     __ccov547_start_blk17:
 22750  1525                     i1l888:
 22751  1525  0022               	movlb	2	; select bank2
 22752  1526  1624               	bsf	(__ccovbit17_116/(0+8))^(0+256),__ccovbit17_116& (0+7)	;volatile
 22753  1527  0008               	return
 22754  1528                     __end_of_frequency_calculation:
 22755  1528                     
 22756                           	psect	text90
 22757  1856                     __ptext90:	
 22758 ;; *************** function i1_printf *****************
 22759 ;; Defined at:
 22760 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/printf.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
 22763 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 22764 ;; Auto vars:     Size  Location     Type
 22765 ;;  ap              2    2[BANK1 ] PTR void [1]
 22766 ;;		 -> ?i1_printf(2), ?_printf(2), 
 22767 ;;  ret             2    0        int 
 22768 ;; Return value:  Size  Location     Type
 22769 ;;                  2   72[BANK0 ] int 
 22770 ;; Registers used:
 22771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22777 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22778 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22780 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22781 ;;Total ram usage:       10 bytes
 22782 ;; Hardware stack levels used:    1
 22783 ;; Hardware stack levels required when called:    8
 22784 ;; This function calls:
 22785 ;;		i1_vfprintf
 22786 ;; This function is called by:
 22787 ;;		_frequency_calculation
 22788 ;; This function uses a non-reentrant model
 22789 ;;
 22790                           
 22791                           
 22792                           ;psect for function i1_printf
 22793  1856                     i1_printf:
 22794  1856                     i1l7114:	
 22795                           ;incstack = 0
 22796                           ; Regs used in i1_printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22797                           
 22798  1856  306A               	movlw	low (?i1_printf+2)
 22799  1857  0021               	movlb	1	; select bank1
 22800  1858  00A2               	movwf	i1printf@ap^(0+128)
 22801  1859  3000               	movlw	high (?i1_printf+2)
 22802  185A  00A3               	movwf	(i1printf@ap+1)^(0+128)
 22803  185B                     i1l7116:
 22804  185B  0020               	movlb	0	; select bank0
 22805  185C  0869               	movf	i1printf@fmt+1,w
 22806  185D  00E1               	movwf	i1vfprintf@fmt+1
 22807  185E  0868               	movf	i1printf@fmt,w
 22808  185F  00E0               	movwf	i1vfprintf@fmt
 22809  1860  30A2               	movlw	low i1printf@ap
 22810  1861  00E2               	movwf	i1vfprintf@ap
 22811  1862  3000               	movlw	high i1printf@ap
 22812  1863  00E3               	movwf	i1vfprintf@ap+1
 22813  1864  3000               	movlw	0
 22814  1865  319C  2471  3198   	fcall	i1_vfprintf
 22815  1868                     i1l1658:
 22816  1868  0008               	return
 22817  1869                     __end_ofi1_printf:
 22818                           
 22819                           	psect	text91
 22820  1C71                     __ptext91:	
 22821 ;; *************** function i1_vfprintf *****************
 22822 ;; Defined at:
 22823 ;;		line 1390 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 22824 ;; Parameters:    Size  Location     Type
 22825 ;;  fp              1    wreg     PTR struct _IO_FILE
 22826 ;;		 -> NULL(0), 
 22827 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
 22828 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 22829 ;;  ap              2   66[BANK0 ] PTR PTR void 
 22830 ;;		 -> i1printf@ap(2), printf@ap(1), 
 22831 ;; Auto vars:     Size  Location     Type
 22832 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
 22833 ;;		 -> NULL(0), 
 22834 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
 22835 ;;		 -> STR_12(12), STR_11(13), STR_9(29), STR_2(28), 
 22836 ;; Return value:  Size  Location     Type
 22837 ;;                  2   64[BANK0 ] int 
 22838 ;; Registers used:
 22839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22840 ;; Tracked objects:
 22841 ;;		On entry : 0/0
 22842 ;;		On exit  : 0/0
 22843 ;;		Unchanged: 0/0
 22844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22848 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22849 ;;Total ram usage:        8 bytes
 22850 ;; Hardware stack levels used:    1
 22851 ;; Hardware stack levels required when called:    7
 22852 ;; This function calls:
 22853 ;;		i1_vfpfcnvrt
 22854 ;; This function is called by:
 22855 ;;		i1_printf
 22856 ;; This function uses a non-reentrant model
 22857 ;;
 22858                           
 22859                           
 22860                           ;psect for function i1_vfprintf
 22861  1C71                     i1_vfprintf:
 22862                           
 22863                           ;incstack = 0
 22864                           ; Regs used in i1_vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22865                           ;i1vfprintf@fp stored from wreg
 22866  1C71  0020               	movlb	0	; select bank0
 22867  1C72  00E5               	movwf	i1vfprintf@fp
 22868  1C73                     i1l6800:
 22869                           
 22870                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
 22871  1C73  0861               	movf	i1vfprintf@fmt+1,w
 22872  1C74  00E7               	movwf	i1vfprintf@cfmt+1
 22873  1C75  0860               	movf	i1vfprintf@fmt,w
 22874  1C76  00E6               	movwf	i1vfprintf@cfmt
 22875  1C77                     i1l6802:
 22876                           
 22877                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
 22878  1C77  0023               	movlb	3	; select bank3
 22879  1C78  01A4               	clrf	_nout^(0+384)
 22880  1C79  01A5               	clrf	(_nout+1)^(0+384)
 22881                           
 22882                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 22883  1C7A  2C8F               	goto	i1l6806
 22884  1C7B                     i1l6804:
 22885                           
 22886                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 22887  1C7B  3066               	movlw	low i1vfprintf@cfmt
 22888  1C7C  00CE               	movwf	i1vfpfcnvrt@fmt
 22889  1C7D  3000               	movlw	high i1vfprintf@cfmt
 22890  1C7E  00CF               	movwf	i1vfpfcnvrt@fmt+1
 22891  1C7F  0863               	movf	i1vfprintf@ap+1,w
 22892  1C80  00D1               	movwf	i1vfpfcnvrt@ap+1
 22893  1C81  0862               	movf	i1vfprintf@ap,w
 22894  1C82  00D0               	movwf	i1vfpfcnvrt@ap
 22895  1C83  0865               	movf	i1vfprintf@fp,w
 22896  1C84  3187  2709  319C   	fcall	i1_vfpfcnvrt
 22897  1C87  0020               	movlb	0	; select bank0
 22898  1C88  084E               	movf	?i1_vfpfcnvrt,w
 22899  1C89  0023               	movlb	3	; select bank3
 22900  1C8A  07A4               	addwf	_nout^(0+384),f
 22901  1C8B  0020               	movlb	0	; select bank0
 22902  1C8C  084F               	movf	?i1_vfpfcnvrt+1,w
 22903  1C8D  0023               	movlb	3	; select bank3
 22904  1C8E  3DA5               	addwfc	(_nout+1)^(0+384),f
 22905  1C8F                     i1l6806:
 22906                           
 22907                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
 22908  1C8F  0020               	movlb	0	; select bank0
 22909  1C90  0866               	movf	i1vfprintf@cfmt,w
 22910  1C91  0084               	movwf	4
 22911  1C92  0867               	movf	i1vfprintf@cfmt+1,w
 22912  1C93  0085               	movwf	5
 22913  1C94  0012               	moviw fsr0++
 22914  1C95  1D03               	btfss	3,2
 22915  1C96  2C98               	goto	u805_21
 22916  1C97  2C99               	goto	u805_20
 22917  1C98                     u805_21:
 22918  1C98  2C7B               	goto	i1l6804
 22919  1C99                     u805_20:
 22920  1C99                     i1l6808:
 22921                           
 22922                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1400:     return nout;
 22923  1C99  0023               	movlb	3	; select bank3
 22924  1C9A  0825               	movf	(_nout+1)^(0+384),w
 22925  1C9B  0020               	movlb	0	; select bank0
 22926  1C9C  00E1               	movwf	?i1_vfprintf+1
 22927  1C9D  0023               	movlb	3	; select bank3
 22928  1C9E  0824               	movf	_nout^(0+384),w
 22929  1C9F  0020               	movlb	0	; select bank0
 22930  1CA0  00E0               	movwf	?i1_vfprintf
 22931  1CA1                     i1l1730:
 22932  1CA1  0008               	return
 22933  1CA2                     __end_ofi1_vfprintf:
 22934                           
 22935                           	psect	text92
 22936  0709                     __ptext92:	
 22937 ;; *************** function i1_vfpfcnvrt *****************
 22938 ;; Defined at:
 22939 ;;		line 692 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 22940 ;; Parameters:    Size  Location     Type
 22941 ;;  fp              1    wreg     PTR struct _IO_FILE
 22942 ;;		 -> NULL(0), 
 22943 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
 22944 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
 22945 ;;  ap              2   48[BANK0 ] PTR PTR void 
 22946 ;;		 -> i1printf@ap(2), printf@ap(1), 
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
 22949 ;;		 -> NULL(0), 
 22950 ;;  ll              8   55[BANK0 ] long long 
 22951 ;;  llu             8    0        unsigned long long 
 22952 ;;  f               4    0        unsigned long long 
 22953 ;;  ct              3    0        unsigned char [3]
 22954 ;;  vp              2    0        PTR void 
 22955 ;;  i               2    0        int 
 22956 ;;  done            2    0        int 
 22957 ;;  cp              2    0        PTR unsigned char 
 22958 ;;  c               1    0        unsigned char 
 22959 ;; Return value:  Size  Location     Type
 22960 ;;                  2   46[BANK0 ] int 
 22961 ;; Registers used:
 22962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22963 ;; Tracked objects:
 22964 ;;		On entry : 0/0
 22965 ;;		On exit  : 0/0
 22966 ;;		Unchanged: 0/0
 22967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22969 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22970 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22971 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22972 ;;Total ram usage:       18 bytes
 22973 ;; Hardware stack levels used:    1
 22974 ;; Hardware stack levels required when called:    6
 22975 ;; This function calls:
 22976 ;;		i1_dtoa
 22977 ;;		i1_fputc
 22978 ;; This function is called by:
 22979 ;;		i1_vfprintf
 22980 ;; This function uses a non-reentrant model
 22981 ;;
 22982                           
 22983                           
 22984                           ;psect for function i1_vfpfcnvrt
 22985  0709                     i1_vfpfcnvrt:
 22986                           
 22987                           ;incstack = 0
 22988                           ; Regs used in i1_vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22989                           ;i1vfpfcnvrt@fp stored from wreg
 22990  0709  0020               	movlb	0	; select bank0
 22991  070A  00DF               	movwf	i1vfpfcnvrt@fp
 22992  070B                     i1l6686:
 22993                           
 22994                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
 22995  070B  084E               	movf	i1vfpfcnvrt@fmt,w
 22996  070C  0086               	movwf	6
 22997  070D  084F               	movf	i1vfpfcnvrt@fmt+1,w
 22998  070E  0087               	movwf	7
 22999  070F  3F40               	moviw [0]fsr1
 23000  0710  00D2               	movwf	??i1_vfpfcnvrt
 23001  0711  3F41               	moviw [1]fsr1
 23002  0712  00D3               	movwf	??i1_vfpfcnvrt+1
 23003  0713  0852               	movf	??i1_vfpfcnvrt,w
 23004  0714  0084               	movwf	4
 23005  0715  0853               	movf	??i1_vfpfcnvrt+1,w
 23006  0716  0085               	movwf	5
 23007  0717  0012               	moviw fsr0++
 23008  0718  3A25               	xorlw	37
 23009  0719  1D03               	btfss	3,2
 23010  071A  2F1C               	goto	u791_21
 23011  071B  2F1D               	goto	u791_20
 23012  071C                     u791_21:
 23013  071C  2FD5               	goto	i1l6722
 23014  071D                     u791_20:
 23015  071D                     i1l6688:
 23016                           
 23017                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
 23018  071D  084E               	movf	i1vfpfcnvrt@fmt,w
 23019  071E  0086               	movwf	6
 23020  071F  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23021  0720  0087               	movwf	7
 23022  0721  3001               	movlw	1
 23023  0722  0781               	addwf	1,f
 23024  0723  3141               	addfsr 1,1
 23025  0724  1803               	skipnc
 23026  0725  0A81               	incf	1,f
 23027  0726                     i1l6690:
 23028                           
 23029                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
 23030  0726  0023               	movlb	3	; select bank3
 23031  0727  01A6               	clrf	_width^(0+384)
 23032  0728  01A7               	clrf	(_width+1)^(0+384)
 23033  0729  0021               	movlb	1	; select bank1
 23034  072A  01EC               	clrf	_flags^(0+128)
 23035  072B  01ED               	clrf	(_flags+1)^(0+128)
 23036  072C                     i1l6692:
 23037                           
 23038                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
 23039  072C  30FF               	movlw	255
 23040  072D  0022               	movlb	2	; select bank2
 23041  072E  00DA               	movwf	_prec^(0+256)
 23042  072F  30FF               	movlw	255
 23043  0730  00DB               	movwf	(_prec^(0+256)+1)
 23044  0731                     i1l6694:
 23045                           
 23046                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 23047  0731  0020               	movlb	0	; select bank0
 23048  0732  084E               	movf	i1vfpfcnvrt@fmt,w
 23049  0733  0086               	movwf	6
 23050  0734  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23051  0735  0087               	movwf	7
 23052  0736  3F40               	moviw [0]fsr1
 23053  0737  00D2               	movwf	??i1_vfpfcnvrt
 23054  0738  3F41               	moviw [1]fsr1
 23055  0739  00D3               	movwf	??i1_vfpfcnvrt+1
 23056  073A  0852               	movf	??i1_vfpfcnvrt,w
 23057  073B  0084               	movwf	4
 23058  073C  0853               	movf	??i1_vfpfcnvrt+1,w
 23059  073D  0085               	movwf	5
 23060  073E  0012               	moviw fsr0++
 23061  073F  3A64               	xorlw	100
 23062  0740  1903               	btfsc	3,2
 23063  0741  2F43               	goto	u792_21
 23064  0742  2F44               	goto	u792_20
 23065  0743                     u792_21:
 23066  0743  2F56               	goto	i1l6698
 23067  0744                     u792_20:
 23068  0744                     i1l6696:
 23069  0744  084E               	movf	i1vfpfcnvrt@fmt,w
 23070  0745  0086               	movwf	6
 23071  0746  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23072  0747  0087               	movwf	7
 23073  0748  3F40               	moviw [0]fsr1
 23074  0749  00D2               	movwf	??i1_vfpfcnvrt
 23075  074A  3F41               	moviw [1]fsr1
 23076  074B  00D3               	movwf	??i1_vfpfcnvrt+1
 23077  074C  0852               	movf	??i1_vfpfcnvrt,w
 23078  074D  0084               	movwf	4
 23079  074E  0853               	movf	??i1_vfpfcnvrt+1,w
 23080  074F  0085               	movwf	5
 23081  0750  0012               	moviw fsr0++
 23082  0751  3A69               	xorlw	105
 23083  0752  1D03               	btfss	3,2
 23084  0753  2F55               	goto	u793_21
 23085  0754  2F56               	goto	u793_20
 23086  0755                     u793_21:
 23087  0755  2F9D               	goto	i1l6706
 23088  0756                     u793_20:
 23089  0756                     i1l6698:
 23090                           
 23091                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
 23092  0756  084E               	movf	i1vfpfcnvrt@fmt,w
 23093  0757  0086               	movwf	6
 23094  0758  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23095  0759  0087               	movwf	7
 23096  075A  3001               	movlw	1
 23097  075B  0781               	addwf	1,f
 23098  075C  3141               	addfsr 1,1
 23099  075D  1803               	skipnc
 23100  075E  0A81               	incf	1,f
 23101  075F                     i1l6700:
 23102                           
 23103                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 23104  075F  0850               	movf	i1vfpfcnvrt@ap,w
 23105  0760  0086               	movwf	6
 23106  0761  0851               	movf	i1vfpfcnvrt@ap+1,w
 23107  0762  0087               	movwf	7
 23108  0763  0801               	movf	1,w
 23109  0764  00D2               	movwf	??i1_vfpfcnvrt
 23110  0765  3002               	movlw	2
 23111  0766  0781               	addwf	1,f
 23112  0767  3141               	addfsr 1,1
 23113  0768  0801               	movf	1,w
 23114  0769  00D3               	movwf	??i1_vfpfcnvrt+1
 23115  076A  3000               	movlw	0
 23116  076B  1803               	skipnc
 23117  076C  0A81               	incf	1,f
 23118  076D  0781               	addwf	1,f
 23119  076E  0852               	movf	??i1_vfpfcnvrt,w
 23120  076F  0086               	movwf	6
 23121  0770  0853               	movf	??i1_vfpfcnvrt+1,w
 23122  0771  0087               	movwf	7
 23123  0772  3F40               	moviw [0]fsr1
 23124  0773  00D4               	movwf	??i1_vfpfcnvrt+2
 23125  0774  3F41               	moviw [1]fsr1
 23126  0775  00D5               	movwf	??i1_vfpfcnvrt+3
 23127  0776  0854               	movf	??i1_vfpfcnvrt+2,w
 23128  0777  00D7               	movwf	i1vfpfcnvrt@ll
 23129  0778  0855               	movf	??i1_vfpfcnvrt+3,w
 23130  0779  00D8               	movwf	i1vfpfcnvrt@ll+1
 23131  077A  0D89               	rlf	9,f
 23132  077B  3B89               	subwfb	9,f
 23133  077C  0989               	comf	9,f
 23134  077D  00D9               	movwf	i1vfpfcnvrt@ll+2
 23135  077E  00DA               	movwf	i1vfpfcnvrt@ll+3
 23136  077F  00DB               	movwf	i1vfpfcnvrt@ll+4
 23137  0780  00DC               	movwf	i1vfpfcnvrt@ll+5
 23138  0781  00DD               	movwf	i1vfpfcnvrt@ll+6
 23139  0782  00DE               	movwf	i1vfpfcnvrt@ll+7
 23140  0783                     i1l6702:
 23141                           
 23142                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
 23143  0783  0857               	movf	i1vfpfcnvrt@ll,w
 23144  0784  00B0               	movwf	i1dtoa@d
 23145  0785  0858               	movf	i1vfpfcnvrt@ll+1,w
 23146  0786  00B1               	movwf	i1dtoa@d+1
 23147  0787  0859               	movf	i1vfpfcnvrt@ll+2,w
 23148  0788  00B2               	movwf	i1dtoa@d+2
 23149  0789  085A               	movf	i1vfpfcnvrt@ll+3,w
 23150  078A  00B3               	movwf	i1dtoa@d+3
 23151  078B  085B               	movf	i1vfpfcnvrt@ll+4,w
 23152  078C  00B4               	movwf	i1dtoa@d+4
 23153  078D  085C               	movf	i1vfpfcnvrt@ll+5,w
 23154  078E  00B5               	movwf	i1dtoa@d+5
 23155  078F  085D               	movf	i1vfpfcnvrt@ll+6,w
 23156  0790  00B6               	movwf	i1dtoa@d+6
 23157  0791  085E               	movf	i1vfpfcnvrt@ll+7,w
 23158  0792  00B7               	movwf	i1dtoa@d+7
 23159  0793  085F               	movf	i1vfpfcnvrt@fp,w
 23160  0794  318C  24FE  3187   	fcall	i1_dtoa
 23161  0797  0020               	movlb	0	; select bank0
 23162  0798  0831               	movf	?i1_dtoa+1,w
 23163  0799  00CF               	movwf	?i1_vfpfcnvrt+1
 23164  079A  0830               	movf	?i1_dtoa,w
 23165  079B  00CE               	movwf	?i1_vfpfcnvrt
 23166  079C  2FFA               	goto	i1l1723
 23167  079D                     i1l6706:
 23168                           
 23169                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
 23170  079D  084E               	movf	i1vfpfcnvrt@fmt,w
 23171  079E  0086               	movwf	6
 23172  079F  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23173  07A0  0087               	movwf	7
 23174  07A1  3F40               	moviw [0]fsr1
 23175  07A2  00D2               	movwf	??i1_vfpfcnvrt
 23176  07A3  3F41               	moviw [1]fsr1
 23177  07A4  00D3               	movwf	??i1_vfpfcnvrt+1
 23178  07A5  0852               	movf	??i1_vfpfcnvrt,w
 23179  07A6  0084               	movwf	4
 23180  07A7  0853               	movf	??i1_vfpfcnvrt+1,w
 23181  07A8  0085               	movwf	5
 23182  07A9  0012               	moviw fsr0++
 23183  07AA  3A25               	xorlw	37
 23184  07AB  1D03               	btfss	3,2
 23185  07AC  2FAE               	goto	u794_21
 23186  07AD  2FAF               	goto	u794_20
 23187  07AE                     u794_21:
 23188  07AE  2FC9               	goto	i1l6716
 23189  07AF                     u794_20:
 23190  07AF                     i1l6708:
 23191                           
 23192                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
 23193  07AF  084E               	movf	i1vfpfcnvrt@fmt,w
 23194  07B0  0086               	movwf	6
 23195  07B1  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23196  07B2  0087               	movwf	7
 23197  07B3  3001               	movlw	1
 23198  07B4  0781               	addwf	1,f
 23199  07B5  3141               	addfsr 1,1
 23200  07B6  1803               	skipnc
 23201  07B7  0A81               	incf	1,f
 23202  07B8                     i1l6710:
 23203                           
 23204                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
 23205  07B8  3025               	movlw	37
 23206  07B9  00F2               	movwf	i1fputc@c
 23207  07BA  3000               	movlw	0
 23208  07BB  00F3               	movwf	i1fputc@c+1
 23209  07BC  085F               	movf	i1vfpfcnvrt@fp,w
 23210  07BD  00D2               	movwf	??i1_vfpfcnvrt
 23211  07BE  0852               	movf	??i1_vfpfcnvrt,w
 23212  07BF  00F4               	movwf	i1fputc@fp
 23213  07C0  3190  2001  3187   	fcall	i1_fputc
 23214  07C3                     i1l6712:
 23215                           
 23216                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1375:             return 1;
 23217  07C3  3001               	movlw	1
 23218  07C4  0020               	movlb	0	; select bank0
 23219  07C5  00CE               	movwf	?i1_vfpfcnvrt
 23220  07C6  3000               	movlw	0
 23221  07C7  00CF               	movwf	?i1_vfpfcnvrt+1
 23222  07C8  2FFA               	goto	i1l1723
 23223  07C9                     i1l6716:
 23224                           
 23225                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
 23226  07C9  084E               	movf	i1vfpfcnvrt@fmt,w
 23227  07CA  0086               	movwf	6
 23228  07CB  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23229  07CC  0087               	movwf	7
 23230  07CD  3001               	movlw	1
 23231  07CE  0781               	addwf	1,f
 23232  07CF  3141               	addfsr 1,1
 23233  07D0  1803               	skipnc
 23234  07D1  0A81               	incf	1,f
 23235  07D2                     i1l6718:
 23236                           
 23237                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1380:         return 0;
 23238  07D2  01CE               	clrf	?i1_vfpfcnvrt
 23239  07D3  01CF               	clrf	?i1_vfpfcnvrt+1
 23240  07D4  2FFA               	goto	i1l1723
 23241  07D5                     i1l6722:
 23242                           
 23243                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
 23244  07D5  084E               	movf	i1vfpfcnvrt@fmt,w
 23245  07D6  0086               	movwf	6
 23246  07D7  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23247  07D8  0087               	movwf	7
 23248  07D9  3F40               	moviw [0]fsr1
 23249  07DA  00D2               	movwf	??i1_vfpfcnvrt
 23250  07DB  3F41               	moviw [1]fsr1
 23251  07DC  00D3               	movwf	??i1_vfpfcnvrt+1
 23252  07DD  0852               	movf	??i1_vfpfcnvrt,w
 23253  07DE  0084               	movwf	4
 23254  07DF  0853               	movf	??i1_vfpfcnvrt+1,w
 23255  07E0  0085               	movwf	5
 23256  07E1  0800               	movf	0,w	;code access
 23257  07E2  00D4               	movwf	??i1_vfpfcnvrt+2
 23258  07E3  01D5               	clrf	??i1_vfpfcnvrt+3
 23259  07E4  0854               	movf	??i1_vfpfcnvrt+2,w
 23260  07E5  00F2               	movwf	i1fputc@c
 23261  07E6  0855               	movf	??i1_vfpfcnvrt+3,w
 23262  07E7  00F3               	movwf	i1fputc@c+1
 23263  07E8  085F               	movf	i1vfpfcnvrt@fp,w
 23264  07E9  00D6               	movwf	??i1_vfpfcnvrt+4
 23265  07EA  0856               	movf	??i1_vfpfcnvrt+4,w
 23266  07EB  00F4               	movwf	i1fputc@fp
 23267  07EC  3190  2001  3187   	fcall	i1_fputc
 23268  07EF                     i1l6724:
 23269                           
 23270                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 23271  07EF  0020               	movlb	0	; select bank0
 23272  07F0  084E               	movf	i1vfpfcnvrt@fmt,w
 23273  07F1  0086               	movwf	6
 23274  07F2  084F               	movf	i1vfpfcnvrt@fmt+1,w
 23275  07F3  0087               	movwf	7
 23276  07F4  3001               	movlw	1
 23277  07F5  0781               	addwf	1,f
 23278  07F6  3141               	addfsr 1,1
 23279  07F7  1803               	skipnc
 23280  07F8  0A81               	incf	1,f
 23281  07F9  2FC3               	goto	i1l6712
 23282  07FA                     i1l1723:
 23283  07FA  0008               	return
 23284  07FB                     __end_ofi1_vfpfcnvrt:
 23285                           
 23286                           	psect	text93
 23287  0CFE                     __ptext93:	
 23288 ;; *************** function i1_dtoa *****************
 23289 ;; Defined at:
 23290 ;;		line 287 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 23291 ;; Parameters:    Size  Location     Type
 23292 ;;  fp              1    wreg     PTR struct _IO_FILE
 23293 ;;		 -> NULL(0), 
 23294 ;;  d               8   16[BANK0 ] long long 
 23295 ;; Auto vars:     Size  Location     Type
 23296 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 23297 ;;		 -> NULL(0), 
 23298 ;;  n               8   36[BANK0 ] long long 
 23299 ;;  i               2   44[BANK0 ] int 
 23300 ;;  s               2   34[BANK0 ] int 
 23301 ;;  w               2   32[BANK0 ] int 
 23302 ;;  p               2   30[BANK0 ] int 
 23303 ;; Return value:  Size  Location     Type
 23304 ;;                  2   16[BANK0 ] int 
 23305 ;; Registers used:
 23306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23307 ;; Tracked objects:
 23308 ;;		On entry : 0/0
 23309 ;;		On exit  : 0/0
 23310 ;;		Unchanged: 0/0
 23311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23312 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23313 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23314 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23315 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23316 ;;Total ram usage:       30 bytes
 23317 ;; Hardware stack levels used:    1
 23318 ;; Hardware stack levels required when called:    5
 23319 ;; This function calls:
 23320 ;;		i1___aodiv
 23321 ;;		i1___aomod
 23322 ;;		i1_abs
 23323 ;;		i1_pad
 23324 ;; This function is called by:
 23325 ;;		i1_vfpfcnvrt
 23326 ;; This function uses a non-reentrant model
 23327 ;;
 23328                           
 23329                           
 23330                           ;psect for function i1_dtoa
 23331  0CFE                     i1_dtoa:
 23332                           
 23333                           ;incstack = 0
 23334                           ; Regs used in i1_dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23335                           ;i1dtoa@fp stored from wreg
 23336  0CFE  0020               	movlb	0	; select bank0
 23337  0CFF  00BB               	movwf	i1dtoa@fp
 23338  0D00                     i1l6570:
 23339                           
 23340                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.31/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .31/pic/sources/c99/common/doprnt.c: 293:     n = d;
 23341  0D00  0830               	movf	i1dtoa@d,w
 23342  0D01  00C4               	movwf	i1dtoa@n
 23343  0D02  0831               	movf	i1dtoa@d+1,w
 23344  0D03  00C5               	movwf	i1dtoa@n+1
 23345  0D04  0832               	movf	i1dtoa@d+2,w
 23346  0D05  00C6               	movwf	i1dtoa@n+2
 23347  0D06  0833               	movf	i1dtoa@d+3,w
 23348  0D07  00C7               	movwf	i1dtoa@n+3
 23349  0D08  0834               	movf	i1dtoa@d+4,w
 23350  0D09  00C8               	movwf	i1dtoa@n+4
 23351  0D0A  0835               	movf	i1dtoa@d+5,w
 23352  0D0B  00C9               	movwf	i1dtoa@n+5
 23353  0D0C  0836               	movf	i1dtoa@d+6,w
 23354  0D0D  00CA               	movwf	i1dtoa@n+6
 23355  0D0E  0837               	movf	i1dtoa@d+7,w
 23356  0D0F  00CB               	movwf	i1dtoa@n+7
 23357  0D10                     i1l6572:
 23358                           
 23359                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
 23360  0D10  3044               	movlw	low i1dtoa@n
 23361  0D11  0086               	movwf	6
 23362  0D12  3000               	movlw	high i1dtoa@n
 23363  0D13  0087               	movwf	7
 23364  0D14  3F47               	moviw [7]fsr1
 23365  0D15  00B8               	movwf	??i1_dtoa
 23366  0D16  1BB8               	btfsc	??i1_dtoa,7
 23367  0D17  2D19               	goto	u758_21
 23368  0D18  2D1B               	goto	u758_20
 23369  0D19                     u758_21:
 23370  0D19  3001               	movlw	1
 23371  0D1A  2D1C               	goto	u759_20
 23372  0D1B                     u758_20:
 23373  0D1B  3000               	movlw	0
 23374  0D1C                     u759_20:
 23375  0D1C  0020               	movlb	0	; select bank0
 23376  0D1D  00B9               	movwf	??i1_dtoa+1
 23377  0D1E  01BA               	clrf	??i1_dtoa+2
 23378  0D1F  0839               	movf	??i1_dtoa+1,w
 23379  0D20  00C2               	movwf	i1dtoa@s
 23380  0D21  083A               	movf	??i1_dtoa+2,w
 23381  0D22  00C3               	movwf	i1dtoa@s+1
 23382  0D23                     i1l6574:
 23383                           
 23384                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 23385  0D23  0842               	movf	i1dtoa@s,w
 23386  0D24  0443               	iorwf	i1dtoa@s+1,w
 23387  0D25  1903               	btfsc	3,2
 23388  0D26  2D28               	goto	u760_21
 23389  0D27  2D29               	goto	u760_20
 23390  0D28                     u760_21:
 23391  0D28  2D47               	goto	i1l1693
 23392  0D29                     u760_20:
 23393  0D29                     i1l6576:
 23394                           
 23395                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 23396  0D29  09C4               	comf	i1dtoa@n,f
 23397  0D2A  09C5               	comf	i1dtoa@n+1,f
 23398  0D2B  09C6               	comf	i1dtoa@n+2,f
 23399  0D2C  09C7               	comf	i1dtoa@n+3,f
 23400  0D2D  09C8               	comf	i1dtoa@n+4,f
 23401  0D2E  09C9               	comf	i1dtoa@n+5,f
 23402  0D2F  09CA               	comf	i1dtoa@n+6,f
 23403  0D30  09CB               	comf	i1dtoa@n+7,f
 23404  0D31  0AC4               	incf	i1dtoa@n,f
 23405  0D32  1D03               	skipz
 23406  0D33  2D47               	goto	u761_2lld
 23407  0D34  0AC5               	incf	i1dtoa@n+1,f
 23408  0D35  1D03               	skipz
 23409  0D36  2D47               	goto	u761_2lld
 23410  0D37  0AC6               	incf	i1dtoa@n+2,f
 23411  0D38  1D03               	skipz
 23412  0D39  2D47               	goto	u761_2lld
 23413  0D3A  0AC7               	incf	i1dtoa@n+3,f
 23414  0D3B  1D03               	skipz
 23415  0D3C  2D47               	goto	u761_2lld
 23416  0D3D  0AC8               	incf	i1dtoa@n+4,f
 23417  0D3E  1D03               	skipz
 23418  0D3F  2D47               	goto	u761_2lld
 23419  0D40  0AC9               	incf	i1dtoa@n+5,f
 23420  0D41  1D03               	skipz
 23421  0D42  2D47               	goto	u761_2lld
 23422  0D43  0ACA               	incf	i1dtoa@n+6,f
 23423  0D44  1D03               	skipz
 23424  0D45  2D47               	goto	u761_2lld
 23425  0D46  0ACB               	incf	i1dtoa@n+7,f
 23426  0D47                     u761_2lld:
 23427  0D47                     i1l1693:	
 23428                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 297:     }
 23429                           
 23430                           
 23431                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
 23432  0D47  0022               	movlb	2	; select bank2
 23433  0D48  1BDB               	btfsc	(_prec+1)^(0+256),7
 23434  0D49  2D4B               	goto	u762_21
 23435  0D4A  2D4C               	goto	u762_20
 23436  0D4B                     u762_21:
 23437  0D4B  2D51               	goto	i1l1694
 23438  0D4C                     u762_20:
 23439  0D4C                     i1l6578:
 23440                           
 23441                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
 23442  0D4C  30FD               	movlw	253
 23443  0D4D  0021               	movlb	1	; select bank1
 23444  0D4E  05EC               	andwf	_flags^(0+128),f
 23445  0D4F  30FF               	movlw	255
 23446  0D50  05ED               	andwf	(_flags+1)^(0+128),f
 23447  0D51                     i1l1694:	
 23448                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 302:     }
 23449                           
 23450                           
 23451                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
 23452  0D51  0022               	movlb	2	; select bank2
 23453  0D52  085B               	movf	(_prec+1)^(0+256),w
 23454  0D53  3A80               	xorlw	128
 23455  0D54  0020               	movlb	0	; select bank0
 23456  0D55  00B8               	movwf	??i1_dtoa
 23457  0D56  3080               	movlw	128
 23458  0D57  0238               	subwf	??i1_dtoa,w
 23459  0D58  1D03               	skipz
 23460  0D59  2D5D               	goto	u763_25
 23461  0D5A  3001               	movlw	1
 23462  0D5B  0022               	movlb	2	; select bank2
 23463  0D5C  025A               	subwf	_prec^(0+256),w
 23464  0D5D                     u763_25:
 23465  0D5D  1803               	skipnc
 23466  0D5E  2D60               	goto	u763_21
 23467  0D5F  2D61               	goto	u763_20
 23468  0D60                     u763_21:
 23469  0D60  2D67               	goto	i1l6582
 23470  0D61                     u763_20:
 23471  0D61                     i1l6580:
 23472  0D61  3001               	movlw	1
 23473  0D62  0020               	movlb	0	; select bank0
 23474  0D63  00BE               	movwf	i1dtoa@p
 23475  0D64  3000               	movlw	0
 23476  0D65  00BF               	movwf	i1dtoa@p+1
 23477  0D66  2D6F               	goto	i1l1698
 23478  0D67                     i1l6582:
 23479  0D67  0022               	movlb	2	; select bank2
 23480  0D68  085B               	movf	(_prec+1)^(0+256),w
 23481  0D69  0020               	movlb	0	; select bank0
 23482  0D6A  00BF               	movwf	i1dtoa@p+1
 23483  0D6B  0022               	movlb	2	; select bank2
 23484  0D6C  085A               	movf	_prec^(0+256),w
 23485  0D6D  0020               	movlb	0	; select bank0
 23486  0D6E  00BE               	movwf	i1dtoa@p
 23487  0D6F                     i1l1698:
 23488                           
 23489                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 304:     w = width;
 23490  0D6F  0023               	movlb	3	; select bank3
 23491  0D70  0827               	movf	(_width+1)^(0+384),w
 23492  0D71  0020               	movlb	0	; select bank0
 23493  0D72  00C1               	movwf	i1dtoa@w+1
 23494  0D73  0023               	movlb	3	; select bank3
 23495  0D74  0826               	movf	_width^(0+384),w
 23496  0D75  0020               	movlb	0	; select bank0
 23497  0D76  00C0               	movwf	i1dtoa@w
 23498  0D77                     i1l6584:
 23499                           
 23500                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
 23501  0D77  0842               	movf	i1dtoa@s,w
 23502  0D78  0443               	iorwf	i1dtoa@s+1,w
 23503  0D79  1D03               	btfss	3,2
 23504  0D7A  2D7C               	goto	u764_21
 23505  0D7B  2D7D               	goto	u764_20
 23506  0D7C                     u764_21:
 23507  0D7C  2D82               	goto	i1l6588
 23508  0D7D                     u764_20:
 23509  0D7D                     i1l6586:
 23510  0D7D  0021               	movlb	1	; select bank1
 23511  0D7E  1D6C               	btfss	_flags^(0+128),2
 23512  0D7F  2D81               	goto	u765_21
 23513  0D80  2D82               	goto	u765_20
 23514  0D81                     u765_21:
 23515  0D81  2D87               	goto	i1l1699
 23516  0D82                     u765_20:
 23517  0D82                     i1l6588:
 23518                           
 23519                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 306:         --w;
 23520  0D82  30FF               	movlw	255
 23521  0D83  0020               	movlb	0	; select bank0
 23522  0D84  07C0               	addwf	i1dtoa@w,f
 23523  0D85  30FF               	movlw	255
 23524  0D86  3DC1               	addwfc	i1dtoa@w+1,f
 23525  0D87                     i1l1699:	
 23526                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 307:     }
 23527                           
 23528                           
 23529                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
 23530  0D87  301F               	movlw	31
 23531  0D88  0020               	movlb	0	; select bank0
 23532  0D89  00CC               	movwf	i1dtoa@i
 23533  0D8A  3000               	movlw	0
 23534  0D8B  00CD               	movwf	i1dtoa@i+1
 23535  0D8C                     i1l6590:
 23536                           
 23537                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
 23538  0D8C  0023               	movlb	3	; select bank3
 23539  0D8D  01C9               	clrf	(_dbuf^(0+384)+31)
 23540                           
 23541                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23542  0D8E  2DF8               	goto	i1l1702
 23543  0D8F                     i1l6592:
 23544                           
 23545                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 313:         --i;
 23546  0D8F  30FF               	movlw	255
 23547  0D90  0020               	movlb	0	; select bank0
 23548  0D91  07CC               	addwf	i1dtoa@i,f
 23549  0D92  30FF               	movlw	255
 23550  0D93  3DCD               	addwfc	i1dtoa@i+1,f
 23551  0D94                     i1l6594:
 23552                           
 23553                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
 23554  0D94  300A               	movlw	10
 23555  0D95  00A0               	movwf	i1___aomod@divisor
 23556  0D96  01A1               	clrf	i1___aomod@divisor+1
 23557  0D97  01A2               	clrf	i1___aomod@divisor+2
 23558  0D98  01A3               	clrf	i1___aomod@divisor+3
 23559  0D99  01A4               	clrf	i1___aomod@divisor+4
 23560  0D9A  01A5               	clrf	i1___aomod@divisor+5
 23561  0D9B  01A6               	clrf	i1___aomod@divisor+6
 23562  0D9C  01A7               	clrf	i1___aomod@divisor+7
 23563  0D9D  0844               	movf	i1dtoa@n,w
 23564  0D9E  00A8               	movwf	i1___aomod@dividend
 23565  0D9F  0845               	movf	i1dtoa@n+1,w
 23566  0DA0  00A9               	movwf	i1___aomod@dividend+1
 23567  0DA1  0846               	movf	i1dtoa@n+2,w
 23568  0DA2  00AA               	movwf	i1___aomod@dividend+2
 23569  0DA3  0847               	movf	i1dtoa@n+3,w
 23570  0DA4  00AB               	movwf	i1___aomod@dividend+3
 23571  0DA5  0848               	movf	i1dtoa@n+4,w
 23572  0DA6  00AC               	movwf	i1___aomod@dividend+4
 23573  0DA7  0849               	movf	i1dtoa@n+5,w
 23574  0DA8  00AD               	movwf	i1___aomod@dividend+5
 23575  0DA9  084A               	movf	i1dtoa@n+6,w
 23576  0DAA  00AE               	movwf	i1___aomod@dividend+6
 23577  0DAB  084B               	movf	i1dtoa@n+7,w
 23578  0DAC  00AF               	movwf	i1___aomod@dividend+7
 23579  0DAD  3195  2528  318C   	fcall	i1___aomod
 23580  0DB0  0020               	movlb	0	; select bank0
 23581  0DB1  0821               	movf	?i1___aomod+1,w
 23582  0DB2  00F4               	movwf	i1abs@a+1
 23583  0DB3  0820               	movf	?i1___aomod,w
 23584  0DB4  00F3               	movwf	i1abs@a
 23585  0DB5  3199  212C  318C   	fcall	i1_abs
 23586  0DB8  0873               	movf	?i1_abs,w
 23587  0DB9  3E30               	addlw	48
 23588  0DBA  0020               	movlb	0	; select bank0
 23589  0DBB  00B8               	movwf	??i1_dtoa
 23590  0DBC  084C               	movf	i1dtoa@i,w
 23591  0DBD  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 23592  0DBE  0086               	movwf	6
 23593  0DBF  3001               	movlw	1	; select bank3/4
 23594  0DC0  0087               	movwf	7
 23595  0DC1  0838               	movf	??i1_dtoa,w
 23596  0DC2  0081               	movwf	1
 23597  0DC3                     i1l6596:
 23598                           
 23599                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 315:         --p;
 23600  0DC3  30FF               	movlw	255
 23601  0DC4  07BE               	addwf	i1dtoa@p,f
 23602  0DC5  30FF               	movlw	255
 23603  0DC6  3DBF               	addwfc	i1dtoa@p+1,f
 23604  0DC7                     i1l6598:
 23605                           
 23606                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 316:         --w;
 23607  0DC7  30FF               	movlw	255
 23608  0DC8  07C0               	addwf	i1dtoa@w,f
 23609  0DC9  30FF               	movlw	255
 23610  0DCA  3DC1               	addwfc	i1dtoa@w+1,f
 23611  0DCB                     i1l6600:
 23612                           
 23613                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
 23614  0DCB  300A               	movlw	10
 23615  0DCC  00A0               	movwf	i1___aodiv@divisor
 23616  0DCD  01A1               	clrf	i1___aodiv@divisor+1
 23617  0DCE  01A2               	clrf	i1___aodiv@divisor+2
 23618  0DCF  01A3               	clrf	i1___aodiv@divisor+3
 23619  0DD0  01A4               	clrf	i1___aodiv@divisor+4
 23620  0DD1  01A5               	clrf	i1___aodiv@divisor+5
 23621  0DD2  01A6               	clrf	i1___aodiv@divisor+6
 23622  0DD3  01A7               	clrf	i1___aodiv@divisor+7
 23623  0DD4  0844               	movf	i1dtoa@n,w
 23624  0DD5  00A8               	movwf	i1___aodiv@dividend
 23625  0DD6  0845               	movf	i1dtoa@n+1,w
 23626  0DD7  00A9               	movwf	i1___aodiv@dividend+1
 23627  0DD8  0846               	movf	i1dtoa@n+2,w
 23628  0DD9  00AA               	movwf	i1___aodiv@dividend+2
 23629  0DDA  0847               	movf	i1dtoa@n+3,w
 23630  0DDB  00AB               	movwf	i1___aodiv@dividend+3
 23631  0DDC  0848               	movf	i1dtoa@n+4,w
 23632  0DDD  00AC               	movwf	i1___aodiv@dividend+4
 23633  0DDE  0849               	movf	i1dtoa@n+5,w
 23634  0DDF  00AD               	movwf	i1___aodiv@dividend+5
 23635  0DE0  084A               	movf	i1dtoa@n+6,w
 23636  0DE1  00AE               	movwf	i1___aodiv@dividend+6
 23637  0DE2  084B               	movf	i1dtoa@n+7,w
 23638  0DE3  00AF               	movwf	i1___aodiv@dividend+7
 23639  0DE4  3196  26FF  318C   	fcall	i1___aodiv
 23640  0DE7  0020               	movlb	0	; select bank0
 23641  0DE8  0820               	movf	?i1___aodiv,w
 23642  0DE9  00C4               	movwf	i1dtoa@n
 23643  0DEA  0821               	movf	?i1___aodiv+1,w
 23644  0DEB  00C5               	movwf	i1dtoa@n+1
 23645  0DEC  0822               	movf	?i1___aodiv+2,w
 23646  0DED  00C6               	movwf	i1dtoa@n+2
 23647  0DEE  0823               	movf	?i1___aodiv+3,w
 23648  0DEF  00C7               	movwf	i1dtoa@n+3
 23649  0DF0  0824               	movf	?i1___aodiv+4,w
 23650  0DF1  00C8               	movwf	i1dtoa@n+4
 23651  0DF2  0825               	movf	?i1___aodiv+5,w
 23652  0DF3  00C9               	movwf	i1dtoa@n+5
 23653  0DF4  0826               	movf	?i1___aodiv+6,w
 23654  0DF5  00CA               	movwf	i1dtoa@n+6
 23655  0DF6  0827               	movf	?i1___aodiv+7,w
 23656  0DF7  00CB               	movwf	i1dtoa@n+7
 23657  0DF8                     i1l1702:	
 23658                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 318:     }
 23659                           
 23660                           
 23661                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23662  0DF8  0020               	movlb	0	; select bank0
 23663  0DF9  084D               	movf	i1dtoa@i+1,w
 23664  0DFA  3A80               	xorlw	128
 23665  0DFB  00B8               	movwf	??i1_dtoa
 23666  0DFC  3080               	movlw	128
 23667  0DFD  0238               	subwf	??i1_dtoa,w
 23668  0DFE  1D03               	skipz
 23669  0DFF  2E02               	goto	u766_25
 23670  0E00  3001               	movlw	1
 23671  0E01  024C               	subwf	i1dtoa@i,w
 23672  0E02                     u766_25:
 23673  0E02  1C03               	skipc
 23674  0E03  2E05               	goto	u766_21
 23675  0E04  2E06               	goto	u766_20
 23676  0E05                     u766_21:
 23677  0E05  2E33               	goto	i1l6610
 23678  0E06                     u766_20:
 23679  0E06                     i1l6602:
 23680  0E06  0020               	movlb	0	; select bank0
 23681  0E07  0844               	movf	i1dtoa@n,w
 23682  0E08  0445               	iorwf	i1dtoa@n+1,w
 23683  0E09  0446               	iorwf	i1dtoa@n+2,w
 23684  0E0A  0447               	iorwf	i1dtoa@n+3,w
 23685  0E0B  0448               	iorwf	i1dtoa@n+4,w
 23686  0E0C  0449               	iorwf	i1dtoa@n+5,w
 23687  0E0D  044A               	iorwf	i1dtoa@n+6,w
 23688  0E0E  044B               	iorwf	i1dtoa@n+7,w
 23689  0E0F  1D03               	skipz
 23690  0E10  2E12               	goto	u767_21
 23691  0E11  2E13               	goto	u767_20
 23692  0E12                     u767_21:
 23693  0E12  2D8F               	goto	i1l6592
 23694  0E13                     u767_20:
 23695  0E13                     i1l6604:
 23696  0E13  083F               	movf	i1dtoa@p+1,w
 23697  0E14  3A80               	xorlw	128
 23698  0E15  00B8               	movwf	??i1_dtoa
 23699  0E16  3080               	movlw	128
 23700  0E17  0238               	subwf	??i1_dtoa,w
 23701  0E18  1D03               	skipz
 23702  0E19  2E1C               	goto	u768_25
 23703  0E1A  3001               	movlw	1
 23704  0E1B  023E               	subwf	i1dtoa@p,w
 23705  0E1C                     u768_25:
 23706  0E1C  1803               	skipnc
 23707  0E1D  2E1F               	goto	u768_21
 23708  0E1E  2E20               	goto	u768_20
 23709  0E1F                     u768_21:
 23710  0E1F  2D8F               	goto	i1l6592
 23711  0E20                     u768_20:
 23712  0E20                     i1l6606:
 23713  0E20  0020               	movlb	0	; select bank0
 23714  0E21  0841               	movf	i1dtoa@w+1,w
 23715  0E22  3A80               	xorlw	128
 23716  0E23  00B8               	movwf	??i1_dtoa
 23717  0E24  3080               	movlw	128
 23718  0E25  0238               	subwf	??i1_dtoa,w
 23719  0E26  1D03               	skipz
 23720  0E27  2E2A               	goto	u769_25
 23721  0E28  3001               	movlw	1
 23722  0E29  0240               	subwf	i1dtoa@w,w
 23723  0E2A                     u769_25:
 23724  0E2A  1C03               	skipc
 23725  0E2B  2E2D               	goto	u769_21
 23726  0E2C  2E2E               	goto	u769_20
 23727  0E2D                     u769_21:
 23728  0E2D  2E33               	goto	i1l6610
 23729  0E2E                     u769_20:
 23730  0E2E                     i1l6608:
 23731  0E2E  0021               	movlb	1	; select bank1
 23732  0E2F  18EC               	btfsc	_flags^(0+128),1
 23733  0E30  2E32               	goto	u770_21
 23734  0E31  2E33               	goto	u770_20
 23735  0E32                     u770_21:
 23736  0E32  2D8F               	goto	i1l6592
 23737  0E33                     u770_20:
 23738  0E33                     i1l6610:
 23739                           
 23740                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
 23741  0E33  0020               	movlb	0	; select bank0
 23742  0E34  0842               	movf	i1dtoa@s,w
 23743  0E35  0443               	iorwf	i1dtoa@s+1,w
 23744  0E36  1D03               	btfss	3,2
 23745  0E37  2E39               	goto	u771_21
 23746  0E38  2E3A               	goto	u771_20
 23747  0E39                     u771_21:
 23748  0E39  2E3F               	goto	i1l6614
 23749  0E3A                     u771_20:
 23750  0E3A                     i1l6612:
 23751  0E3A  0021               	movlb	1	; select bank1
 23752  0E3B  1D6C               	btfss	_flags^(0+128),2
 23753  0E3C  2E3E               	goto	u772_21
 23754  0E3D  2E3F               	goto	u772_20
 23755  0E3E                     u772_21:
 23756  0E3E  2E5C               	goto	i1l6624
 23757  0E3F                     u772_20:
 23758  0E3F                     i1l6614:
 23759                           
 23760                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 322:         --i;
 23761  0E3F  30FF               	movlw	255
 23762  0E40  0020               	movlb	0	; select bank0
 23763  0E41  07CC               	addwf	i1dtoa@i,f
 23764  0E42  30FF               	movlw	255
 23765  0E43  3DCD               	addwfc	i1dtoa@i+1,f
 23766  0E44                     i1l6616:
 23767                           
 23768                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
 23769  0E44  0842               	movf	i1dtoa@s,w
 23770  0E45  0443               	iorwf	i1dtoa@s+1,w
 23771  0E46  1D03               	btfss	3,2
 23772  0E47  2E49               	goto	u773_21
 23773  0E48  2E4A               	goto	u773_20
 23774  0E49                     u773_21:
 23775  0E49  2E4F               	goto	i1l6620
 23776  0E4A                     u773_20:
 23777  0E4A                     i1l6618:
 23778  0E4A  302B               	movlw	43
 23779  0E4B  00BC               	movwf	i1_dtoa$2180
 23780  0E4C  3000               	movlw	0
 23781  0E4D  00BD               	movwf	i1_dtoa$2180+1
 23782  0E4E  2E53               	goto	i1l6622
 23783  0E4F                     i1l6620:
 23784  0E4F  302D               	movlw	45
 23785  0E50  00BC               	movwf	i1_dtoa$2180
 23786  0E51  3000               	movlw	0
 23787  0E52  00BD               	movwf	i1_dtoa$2180+1
 23788  0E53                     i1l6622:
 23789  0E53  083C               	movf	i1_dtoa$2180,w
 23790  0E54  00B8               	movwf	??i1_dtoa
 23791  0E55  084C               	movf	i1dtoa@i,w
 23792  0E56  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 23793  0E57  0086               	movwf	6
 23794  0E58  3001               	movlw	1	; select bank3/4
 23795  0E59  0087               	movwf	7
 23796  0E5A  0838               	movf	??i1_dtoa,w
 23797  0E5B  0081               	movwf	1
 23798  0E5C                     i1l6624:
 23799                           
 23800                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
 23801  0E5C  0020               	movlb	0	; select bank0
 23802  0E5D  084C               	movf	i1dtoa@i,w
 23803  0E5E  3EAA               	addlw	(low (_dbuf| (0+256)))& (0+255)
 23804  0E5F  00B8               	movwf	??i1_dtoa
 23805  0E60  0838               	movf	??i1_dtoa,w
 23806  0E61  00A6               	movwf	i1pad@buf
 23807  0E62  0841               	movf	i1dtoa@w+1,w
 23808  0E63  00A8               	movwf	i1pad@p+1
 23809  0E64  0840               	movf	i1dtoa@w,w
 23810  0E65  00A7               	movwf	i1pad@p
 23811  0E66  083B               	movf	i1dtoa@fp,w
 23812  0E67  319F  27A1  318C   	fcall	i1_pad
 23813  0E6A  0020               	movlb	0	; select bank0
 23814  0E6B  0827               	movf	?i1_pad+1,w
 23815  0E6C  00B1               	movwf	?i1_dtoa+1
 23816  0E6D  0826               	movf	?i1_pad,w
 23817  0E6E  00B0               	movwf	?i1_dtoa
 23818  0E6F                     i1l1716:
 23819  0E6F  0008               	return
 23820  0E70                     __end_ofi1_dtoa:
 23821                           
 23822                           	psect	text94
 23823  1FA1                     __ptext94:	
 23824 ;; *************** function i1_pad *****************
 23825 ;; Defined at:
 23826 ;;		line 72 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;  fp              1    wreg     PTR struct _IO_FILE
 23829 ;;		 -> NULL(0), 
 23830 ;;  buf             1    6[BANK0 ] PTR unsigned char 
 23831 ;;		 -> dbuf(32), 
 23832 ;;  p               2    7[BANK0 ] int 
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
 23835 ;;		 -> NULL(0), 
 23836 ;;  w               2   11[BANK0 ] int 
 23837 ;;  i               2    9[BANK0 ] int 
 23838 ;; Return value:  Size  Location     Type
 23839 ;;                  2    6[BANK0 ] int 
 23840 ;; Registers used:
 23841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23842 ;; Tracked objects:
 23843 ;;		On entry : 0/0
 23844 ;;		On exit  : 0/0
 23845 ;;		Unchanged: 0/0
 23846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23847 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23848 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23850 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23851 ;;Total ram usage:        9 bytes
 23852 ;; Hardware stack levels used:    1
 23853 ;; Hardware stack levels required when called:    4
 23854 ;; This function calls:
 23855 ;;		i1_fputc
 23856 ;;		i1_fputs
 23857 ;;		i1_strlen
 23858 ;; This function is called by:
 23859 ;;		i1_dtoa
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           
 23864                           ;psect for function i1_pad
 23865  1FA1                     i1_pad:
 23866                           
 23867                           ;incstack = 0
 23868                           ; Regs used in i1_pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23869                           ;i1pad@fp stored from wreg
 23870  1FA1  0020               	movlb	0	; select bank0
 23871  1FA2  00AD               	movwf	i1pad@fp
 23872  1FA3                     i1l6450:
 23873                           
 23874                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.31/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23875  1FA3  0021               	movlb	1	; select bank1
 23876  1FA4  1C6C               	btfss	_flags^(0+128),0
 23877  1FA5  2FA7               	goto	u727_21
 23878  1FA6  2FA8               	goto	u727_20
 23879  1FA7                     u727_21:
 23880  1FA7  2FB4               	goto	i1l6454
 23881  1FA8                     u727_20:
 23882  1FA8                     i1l6452:
 23883                           
 23884                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23885  1FA8  0020               	movlb	0	; select bank0
 23886  1FA9  0826               	movf	i1pad@buf,w
 23887  1FAA  00FA               	movwf	i1fputs@s
 23888  1FAB  3001               	movlw	1
 23889  1FAC  00FB               	movwf	i1fputs@s+1
 23890  1FAD  082D               	movf	i1pad@fp,w
 23891  1FAE  00FD               	movwf	??i1_pad
 23892  1FAF  087D               	movf	??i1_pad,w
 23893  1FB0  00FC               	movwf	i1fputs@fp
 23894  1FB1  319B  2398  319F   	fcall	i1_fputs
 23895  1FB4                     i1l6454:
 23896                           
 23897                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23898  1FB4  0020               	movlb	0	; select bank0
 23899  1FB5  1BA8               	btfsc	i1pad@p+1,7
 23900  1FB6  2FB8               	goto	u728_21
 23901  1FB7  2FB9               	goto	u728_20
 23902  1FB8                     u728_21:
 23903  1FB8  2FBE               	goto	i1l6458
 23904  1FB9                     u728_20:
 23905  1FB9                     i1l6456:
 23906  1FB9  0828               	movf	i1pad@p+1,w
 23907  1FBA  00AC               	movwf	i1pad@w+1
 23908  1FBB  0827               	movf	i1pad@p,w
 23909  1FBC  00AB               	movwf	i1pad@w
 23910  1FBD  2FC0               	goto	i1l1685
 23911  1FBE                     i1l6458:
 23912  1FBE  01AB               	clrf	i1pad@w
 23913  1FBF  01AC               	clrf	i1pad@w+1
 23914  1FC0                     i1l1685:
 23915                           
 23916                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23917  1FC0  01A9               	clrf	i1pad@i
 23918  1FC1  01AA               	clrf	i1pad@i+1
 23919                           
 23920                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23921  1FC2  2FD4               	goto	i1l6464
 23922  1FC3                     i1l6460:
 23923                           
 23924                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23925  1FC3  3020               	movlw	32
 23926  1FC4  00F2               	movwf	i1fputc@c
 23927  1FC5  3000               	movlw	0
 23928  1FC6  00F3               	movwf	i1fputc@c+1
 23929  1FC7  0020               	movlb	0	; select bank0
 23930  1FC8  082D               	movf	i1pad@fp,w
 23931  1FC9  00FD               	movwf	??i1_pad
 23932  1FCA  087D               	movf	??i1_pad,w
 23933  1FCB  00F4               	movwf	i1fputc@fp
 23934  1FCC  3190  2001  319F   	fcall	i1_fputc
 23935  1FCF                     i1l6462:
 23936                           
 23937                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23938  1FCF  3001               	movlw	1
 23939  1FD0  0020               	movlb	0	; select bank0
 23940  1FD1  07A9               	addwf	i1pad@i,f
 23941  1FD2  3000               	movlw	0
 23942  1FD3  3DAA               	addwfc	i1pad@i+1,f
 23943  1FD4                     i1l6464:
 23944                           
 23945                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23946  1FD4  082A               	movf	i1pad@i+1,w
 23947  1FD5  3A80               	xorlw	128
 23948  1FD6  00FD               	movwf	??i1_pad
 23949  1FD7  082C               	movf	i1pad@w+1,w
 23950  1FD8  3A80               	xorlw	128
 23951  1FD9  027D               	subwf	??i1_pad,w
 23952  1FDA  1D03               	skipz
 23953  1FDB  2FDE               	goto	u729_25
 23954  1FDC  082B               	movf	i1pad@w,w
 23955  1FDD  0229               	subwf	i1pad@i,w
 23956  1FDE                     u729_25:
 23957  1FDE  1C03               	skipc
 23958  1FDF  2FE1               	goto	u729_21
 23959  1FE0  2FE2               	goto	u729_20
 23960  1FE1                     u729_21:
 23961  1FE1  2FC3               	goto	i1l6460
 23962  1FE2                     u729_20:
 23963  1FE2                     i1l1688:
 23964                           
 23965                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23966  1FE2  0021               	movlb	1	; select bank1
 23967  1FE3  186C               	btfsc	_flags^(0+128),0
 23968  1FE4  2FE6               	goto	u730_21
 23969  1FE5  2FE7               	goto	u730_20
 23970  1FE6                     u730_21:
 23971  1FE6  2FF3               	goto	i1l6468
 23972  1FE7                     u730_20:
 23973  1FE7                     i1l6466:
 23974                           
 23975                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23976  1FE7  0020               	movlb	0	; select bank0
 23977  1FE8  0826               	movf	i1pad@buf,w
 23978  1FE9  00FA               	movwf	i1fputs@s
 23979  1FEA  3001               	movlw	1
 23980  1FEB  00FB               	movwf	i1fputs@s+1
 23981  1FEC  082D               	movf	i1pad@fp,w
 23982  1FED  00FD               	movwf	??i1_pad
 23983  1FEE  087D               	movf	??i1_pad,w
 23984  1FEF  00FC               	movwf	i1fputs@fp
 23985  1FF0  319B  2398  319F   	fcall	i1_fputs
 23986  1FF3                     i1l6468:
 23987                           
 23988                           ;/opt/microchip/xc8/v2.31/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
 23989  1FF3  0020               	movlb	0	; select bank0
 23990  1FF4  0826               	movf	i1pad@buf,w
 23991  1FF5  3199  2146  319F   	fcall	i1_strlen
 23992  1FF8  0020               	movlb	0	; select bank0
 23993  1FF9  082B               	movf	i1pad@w,w
 23994  1FFA  0770               	addwf	?i1_strlen,w
 23995  1FFB  00A6               	movwf	?i1_pad
 23996  1FFC  082C               	movf	i1pad@w+1,w
 23997  1FFD  3D71               	addwfc	?i1_strlen+1,w
 23998  1FFE  00A7               	movwf	?i1_pad+1
 23999  1FFF                     i1l1690:
 24000  1FFF  0008               	return
 24001  2000                     __end_ofi1_pad:
 24002                           
 24003                           	psect	text95
 24004  1946                     __ptext95:	
 24005 ;; *************** function i1_strlen *****************
 24006 ;; Defined at:
 24007 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/strlen.c"
 24008 ;; Parameters:    Size  Location     Type
 24009 ;;  s               1    wreg     PTR const unsigned char 
 24010 ;;		 -> dbuf(32), 
 24011 ;; Auto vars:     Size  Location     Type
 24012 ;;  s               1    4[COMMON] PTR const unsigned char 
 24013 ;;		 -> dbuf(32), 
 24014 ;;  a               1    3[COMMON] PTR const unsigned char 
 24015 ;;		 -> dbuf(32), 
 24016 ;; Return value:  Size  Location     Type
 24017 ;;                  2    0[COMMON] unsigned int 
 24018 ;; Registers used:
 24019 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24020 ;; Tracked objects:
 24021 ;;		On entry : 0/0
 24022 ;;		On exit  : 0/0
 24023 ;;		Unchanged: 0/0
 24024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24029 ;;Total ram usage:        5 bytes
 24030 ;; Hardware stack levels used:    1
 24031 ;; This function calls:
 24032 ;;		Nothing
 24033 ;; This function is called by:
 24034 ;;		i1_pad
 24035 ;; This function uses a non-reentrant model
 24036 ;;
 24037                           
 24038                           
 24039                           ;psect for function i1_strlen
 24040  1946                     i1_strlen:
 24041                           
 24042                           ;incstack = 0
 24043                           ; Regs used in i1_strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 24044                           ;i1strlen@s stored from wreg
 24045  1946  00F4               	movwf	i1strlen@s
 24046  1947                     i1l6350:
 24047  1947  0874               	movf	i1strlen@s,w
 24048  1948  00F2               	movwf	??i1_strlen
 24049  1949  0872               	movf	??i1_strlen,w
 24050  194A  00F3               	movwf	i1strlen@a
 24051  194B  2950               	goto	i1l6354
 24052  194C                     i1l6352:
 24053  194C  3001               	movlw	1
 24054  194D  00F2               	movwf	??i1_strlen
 24055  194E  0872               	movf	??i1_strlen,w
 24056  194F  07F4               	addwf	i1strlen@s,f
 24057  1950                     i1l6354:
 24058  1950  0874               	movf	i1strlen@s,w
 24059  1951  0086               	movwf	6
 24060  1952  3001               	movlw	1	; select bank2/3
 24061  1953  0087               	movwf	7
 24062  1954  0801               	movf	1,w
 24063  1955  1D03               	btfss	3,2
 24064  1956  2958               	goto	u703_21
 24065  1957  2959               	goto	u703_20
 24066  1958                     u703_21:
 24067  1958  294C               	goto	i1l6352
 24068  1959                     u703_20:
 24069  1959                     i1l6356:
 24070  1959  0873               	movf	i1strlen@a,w
 24071  195A  0274               	subwf	i1strlen@s,w
 24072  195B  00F0               	movwf	?i1_strlen
 24073  195C  01F1               	clrf	?i1_strlen+1
 24074  195D  1BF0               	btfsc	?i1_strlen,7
 24075  195E  03F1               	decf	?i1_strlen+1,f
 24076  195F                     i1l1772:
 24077  195F  0008               	return
 24078  1960                     __end_ofi1_strlen:
 24079                           
 24080                           	psect	text96
 24081  192C                     __ptext96:	
 24082 ;; *************** function i1_abs *****************
 24083 ;; Defined at:
 24084 ;;		line 1 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/abs.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;  a               2    3[COMMON] int 
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  2    3[COMMON] int 
 24091 ;; Registers used:
 24092 ;;		wreg, status,2, status,0
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/0
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24101 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24102 ;;Total ram usage:        4 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; This function calls:
 24105 ;;		Nothing
 24106 ;; This function is called by:
 24107 ;;		i1_dtoa
 24108 ;; This function uses a non-reentrant model
 24109 ;;
 24110                           
 24111                           
 24112                           ;psect for function i1_abs
 24113  192C                     i1_abs:
 24114  192C                     i1l6472:	
 24115                           ;incstack = 0
 24116                           ; Regs used in i1_abs: [wreg+status,2+status,0]
 24117                           
 24118  192C  0874               	movf	i1abs@a+1,w
 24119  192D  3A80               	xorlw	128
 24120  192E  00F5               	movwf	??i1_abs
 24121  192F  3080               	movlw	128
 24122  1930  0275               	subwf	??i1_abs,w
 24123  1931  1D03               	skipz
 24124  1932  2935               	goto	u731_25
 24125  1933  3001               	movlw	1
 24126  1934  0273               	subwf	i1abs@a,w
 24127  1935                     u731_25:
 24128  1935  1803               	skipnc
 24129  1936  2938               	goto	u731_21
 24130  1937  2939               	goto	u731_20
 24131  1938                     u731_21:
 24132  1938  2945               	goto	i1l1734
 24133  1939                     u731_20:
 24134  1939                     i1l6474:
 24135  1939  0973               	comf	i1abs@a,w
 24136  193A  00F5               	movwf	??i1_abs
 24137  193B  0974               	comf	i1abs@a+1,w
 24138  193C  00F6               	movwf	??i1_abs+1
 24139  193D  0AF5               	incf	??i1_abs,f
 24140  193E  1903               	skipnz
 24141  193F  0AF6               	incf	??i1_abs+1,f
 24142  1940  0875               	movf	??i1_abs,w
 24143  1941  00F3               	movwf	?i1_abs
 24144  1942  0876               	movf	??i1_abs+1,w
 24145  1943  00F4               	movwf	?i1_abs+1
 24146  1944  2945               	goto	i1l1737
 24147  1945                     i1l1734:
 24148  1945                     i1l1737:
 24149  1945  0008               	return
 24150  1946                     __end_ofi1_abs:
 24151                           
 24152                           	psect	text97
 24153  1528                     __ptext97:	
 24154 ;; *************** function i1___aomod *****************
 24155 ;; Defined at:
 24156 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aomod.c"
 24157 ;; Parameters:    Size  Location     Type
 24158 ;;  divisor         8    0[BANK0 ] long long 
 24159 ;;  dividend        8    8[BANK0 ] long long 
 24160 ;; Auto vars:     Size  Location     Type
 24161 ;;  sign            1    2[COMMON] unsigned char 
 24162 ;;  counter         1    1[COMMON] unsigned char 
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  8    0[BANK0 ] long long 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24172 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24175 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24176 ;;Total ram usage:       19 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; This function calls:
 24179 ;;		Nothing
 24180 ;; This function is called by:
 24181 ;;		i1_dtoa
 24182 ;; This function uses a non-reentrant model
 24183 ;;
 24184                           
 24185                           
 24186                           ;psect for function i1___aomod
 24187  1528                     i1___aomod:
 24188  1528                     i1l6420:	
 24189                           ;incstack = 0
 24190                           ; Regs used in i1___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 24191                           
 24192  1528  01F2               	clrf	i1___aomod@sign
 24193  1529                     i1l6422:
 24194  1529  3028               	movlw	low i1___aomod@dividend
 24195  152A  0086               	movwf	6
 24196  152B  3000               	movlw	high i1___aomod@dividend
 24197  152C  0087               	movwf	7
 24198  152D  3F47               	moviw [7]fsr1
 24199  152E  00F0               	movwf	??i1___aomod
 24200  152F  1FF0               	btfss	??i1___aomod,7
 24201  1530  2D32               	goto	u717_21
 24202  1531  2D33               	goto	u717_20
 24203  1532                     u717_21:
 24204  1532  2D54               	goto	i1l6426
 24205  1533                     u717_20:
 24206  1533                     i1l6424:
 24207  1533  0020               	movlb	0	; select bank0
 24208  1534  09A8               	comf	i1___aomod@dividend,f
 24209  1535  09A9               	comf	i1___aomod@dividend+1,f
 24210  1536  09AA               	comf	i1___aomod@dividend+2,f
 24211  1537  09AB               	comf	i1___aomod@dividend+3,f
 24212  1538  09AC               	comf	i1___aomod@dividend+4,f
 24213  1539  09AD               	comf	i1___aomod@dividend+5,f
 24214  153A  09AE               	comf	i1___aomod@dividend+6,f
 24215  153B  09AF               	comf	i1___aomod@dividend+7,f
 24216  153C  0AA8               	incf	i1___aomod@dividend,f
 24217  153D  1D03               	skipz
 24218  153E  2D52               	goto	u718_2lld
 24219  153F  0AA9               	incf	i1___aomod@dividend+1,f
 24220  1540  1D03               	skipz
 24221  1541  2D52               	goto	u718_2lld
 24222  1542  0AAA               	incf	i1___aomod@dividend+2,f
 24223  1543  1D03               	skipz
 24224  1544  2D52               	goto	u718_2lld
 24225  1545  0AAB               	incf	i1___aomod@dividend+3,f
 24226  1546  1D03               	skipz
 24227  1547  2D52               	goto	u718_2lld
 24228  1548  0AAC               	incf	i1___aomod@dividend+4,f
 24229  1549  1D03               	skipz
 24230  154A  2D52               	goto	u718_2lld
 24231  154B  0AAD               	incf	i1___aomod@dividend+5,f
 24232  154C  1D03               	skipz
 24233  154D  2D52               	goto	u718_2lld
 24234  154E  0AAE               	incf	i1___aomod@dividend+6,f
 24235  154F  1D03               	skipz
 24236  1550  2D52               	goto	u718_2lld
 24237  1551  0AAF               	incf	i1___aomod@dividend+7,f
 24238  1552                     u718_2lld:
 24239  1552  01F2               	clrf	i1___aomod@sign
 24240  1553  0AF2               	incf	i1___aomod@sign,f
 24241  1554                     i1l6426:
 24242  1554  3020               	movlw	low i1___aomod@divisor
 24243  1555  0086               	movwf	6
 24244  1556  3000               	movlw	high i1___aomod@divisor
 24245  1557  0087               	movwf	7
 24246  1558  3F47               	moviw [7]fsr1
 24247  1559  00F0               	movwf	??i1___aomod
 24248  155A  1FF0               	btfss	??i1___aomod,7
 24249  155B  2D5D               	goto	u719_21
 24250  155C  2D5E               	goto	u719_20
 24251  155D                     u719_21:
 24252  155D  2D7D               	goto	i1l6430
 24253  155E                     u719_20:
 24254  155E                     i1l6428:
 24255  155E  0020               	movlb	0	; select bank0
 24256  155F  09A0               	comf	i1___aomod@divisor,f
 24257  1560  09A1               	comf	i1___aomod@divisor+1,f
 24258  1561  09A2               	comf	i1___aomod@divisor+2,f
 24259  1562  09A3               	comf	i1___aomod@divisor+3,f
 24260  1563  09A4               	comf	i1___aomod@divisor+4,f
 24261  1564  09A5               	comf	i1___aomod@divisor+5,f
 24262  1565  09A6               	comf	i1___aomod@divisor+6,f
 24263  1566  09A7               	comf	i1___aomod@divisor+7,f
 24264  1567  0AA0               	incf	i1___aomod@divisor,f
 24265  1568  1D03               	skipz
 24266  1569  2D7D               	goto	u720_2lld
 24267  156A  0AA1               	incf	i1___aomod@divisor+1,f
 24268  156B  1D03               	skipz
 24269  156C  2D7D               	goto	u720_2lld
 24270  156D  0AA2               	incf	i1___aomod@divisor+2,f
 24271  156E  1D03               	skipz
 24272  156F  2D7D               	goto	u720_2lld
 24273  1570  0AA3               	incf	i1___aomod@divisor+3,f
 24274  1571  1D03               	skipz
 24275  1572  2D7D               	goto	u720_2lld
 24276  1573  0AA4               	incf	i1___aomod@divisor+4,f
 24277  1574  1D03               	skipz
 24278  1575  2D7D               	goto	u720_2lld
 24279  1576  0AA5               	incf	i1___aomod@divisor+5,f
 24280  1577  1D03               	skipz
 24281  1578  2D7D               	goto	u720_2lld
 24282  1579  0AA6               	incf	i1___aomod@divisor+6,f
 24283  157A  1D03               	skipz
 24284  157B  2D7D               	goto	u720_2lld
 24285  157C  0AA7               	incf	i1___aomod@divisor+7,f
 24286  157D                     u720_2lld:
 24287  157D                     i1l6430:
 24288  157D  0020               	movlb	0	; select bank0
 24289  157E  0820               	movf	i1___aomod@divisor,w
 24290  157F  0421               	iorwf	i1___aomod@divisor+1,w
 24291  1580  0422               	iorwf	i1___aomod@divisor+2,w
 24292  1581  0423               	iorwf	i1___aomod@divisor+3,w
 24293  1582  0424               	iorwf	i1___aomod@divisor+4,w
 24294  1583  0425               	iorwf	i1___aomod@divisor+5,w
 24295  1584  0426               	iorwf	i1___aomod@divisor+6,w
 24296  1585  0427               	iorwf	i1___aomod@divisor+7,w
 24297  1586  1903               	skipnz
 24298  1587  2D89               	goto	u721_21
 24299  1588  2D8A               	goto	u721_20
 24300  1589                     u721_21:
 24301  1589  2DDD               	goto	i1l6446
 24302  158A                     u721_20:
 24303  158A                     i1l6432:
 24304  158A  01F1               	clrf	i1___aomod@counter
 24305  158B  0AF1               	incf	i1___aomod@counter,f
 24306  158C  2D99               	goto	i1l6438
 24307  158D                     i1l6434:
 24308  158D  35A0               	lslf	i1___aomod@divisor,f
 24309  158E  0DA1               	rlf	i1___aomod@divisor+1,f
 24310  158F  0DA2               	rlf	i1___aomod@divisor+2,f
 24311  1590  0DA3               	rlf	i1___aomod@divisor+3,f
 24312  1591  0DA4               	rlf	i1___aomod@divisor+4,f
 24313  1592  0DA5               	rlf	i1___aomod@divisor+5,f
 24314  1593  0DA6               	rlf	i1___aomod@divisor+6,f
 24315  1594  0DA7               	rlf	i1___aomod@divisor+7,f
 24316  1595                     i1l6436:
 24317  1595  3001               	movlw	1
 24318  1596  00F0               	movwf	??i1___aomod
 24319  1597  0870               	movf	??i1___aomod,w
 24320  1598  07F1               	addwf	i1___aomod@counter,f
 24321  1599                     i1l6438:
 24322  1599  1FA7               	btfss	i1___aomod@divisor+7,7
 24323  159A  2D9C               	goto	u722_21
 24324  159B  2D9D               	goto	u722_20
 24325  159C                     u722_21:
 24326  159C  2D8D               	goto	i1l6434
 24327  159D                     u722_20:
 24328  159D                     i1l6440:
 24329  159D  0827               	movf	i1___aomod@divisor+7,w
 24330  159E  022F               	subwf	i1___aomod@dividend+7,w
 24331  159F  1D03               	skipz
 24332  15A0  2DBB               	goto	u723_25
 24333  15A1  0826               	movf	i1___aomod@divisor+6,w
 24334  15A2  022E               	subwf	i1___aomod@dividend+6,w
 24335  15A3  1D03               	skipz
 24336  15A4  2DBB               	goto	u723_25
 24337  15A5  0825               	movf	i1___aomod@divisor+5,w
 24338  15A6  022D               	subwf	i1___aomod@dividend+5,w
 24339  15A7  1D03               	skipz
 24340  15A8  2DBB               	goto	u723_25
 24341  15A9  0824               	movf	i1___aomod@divisor+4,w
 24342  15AA  022C               	subwf	i1___aomod@dividend+4,w
 24343  15AB  1D03               	skipz
 24344  15AC  2DBB               	goto	u723_25
 24345  15AD  0823               	movf	i1___aomod@divisor+3,w
 24346  15AE  022B               	subwf	i1___aomod@dividend+3,w
 24347  15AF  1D03               	skipz
 24348  15B0  2DBB               	goto	u723_25
 24349  15B1  0822               	movf	i1___aomod@divisor+2,w
 24350  15B2  022A               	subwf	i1___aomod@dividend+2,w
 24351  15B3  1D03               	skipz
 24352  15B4  2DBB               	goto	u723_25
 24353  15B5  0821               	movf	i1___aomod@divisor+1,w
 24354  15B6  0229               	subwf	i1___aomod@dividend+1,w
 24355  15B7  1D03               	skipz
 24356  15B8  2DBB               	goto	u723_25
 24357  15B9  0820               	movf	i1___aomod@divisor,w
 24358  15BA  0228               	subwf	i1___aomod@dividend,w
 24359  15BB                     u723_25:
 24360  15BB  1C03               	skipc
 24361  15BC  2DBE               	goto	u723_21
 24362  15BD  2DBF               	goto	u723_20
 24363  15BE                     u723_21:
 24364  15BE  2DCF               	goto	i1l6444
 24365  15BF                     u723_20:
 24366  15BF                     i1l6442:
 24367  15BF  0820               	movf	i1___aomod@divisor,w
 24368  15C0  02A8               	subwf	i1___aomod@dividend,f
 24369  15C1  0821               	movf	i1___aomod@divisor+1,w
 24370  15C2  3BA9               	subwfb	i1___aomod@dividend+1,f
 24371  15C3  0822               	movf	i1___aomod@divisor+2,w
 24372  15C4  3BAA               	subwfb	i1___aomod@dividend+2,f
 24373  15C5  0823               	movf	i1___aomod@divisor+3,w
 24374  15C6  3BAB               	subwfb	i1___aomod@dividend+3,f
 24375  15C7  0824               	movf	i1___aomod@divisor+4,w
 24376  15C8  3BAC               	subwfb	i1___aomod@dividend+4,f
 24377  15C9  0825               	movf	i1___aomod@divisor+5,w
 24378  15CA  3BAD               	subwfb	i1___aomod@dividend+5,f
 24379  15CB  0826               	movf	i1___aomod@divisor+6,w
 24380  15CC  3BAE               	subwfb	i1___aomod@dividend+6,f
 24381  15CD  0827               	movf	i1___aomod@divisor+7,w
 24382  15CE  3BAF               	subwfb	i1___aomod@dividend+7,f
 24383  15CF                     i1l6444:
 24384  15CF  36A7               	lsrf	i1___aomod@divisor+7,f
 24385  15D0  0CA6               	rrf	i1___aomod@divisor+6,f
 24386  15D1  0CA5               	rrf	i1___aomod@divisor+5,f
 24387  15D2  0CA4               	rrf	i1___aomod@divisor+4,f
 24388  15D3  0CA3               	rrf	i1___aomod@divisor+3,f
 24389  15D4  0CA2               	rrf	i1___aomod@divisor+2,f
 24390  15D5  0CA1               	rrf	i1___aomod@divisor+1,f
 24391  15D6  0CA0               	rrf	i1___aomod@divisor,f
 24392  15D7  3001               	movlw	1
 24393  15D8  02F1               	subwf	i1___aomod@counter,f
 24394  15D9  1D03               	btfss	3,2
 24395  15DA  2DDC               	goto	u724_21
 24396  15DB  2DDD               	goto	u724_20
 24397  15DC                     u724_21:
 24398  15DC  2D9D               	goto	i1l6440
 24399  15DD                     u724_20:
 24400  15DD                     i1l6446:
 24401  15DD  0872               	movf	i1___aomod@sign,w
 24402  15DE  1903               	btfsc	3,2
 24403  15DF  2DE1               	goto	u725_21
 24404  15E0  2DE2               	goto	u725_20
 24405  15E1                     u725_21:
 24406  15E1  2E00               	goto	i1l1308
 24407  15E2                     u725_20:
 24408  15E2                     i1l6448:
 24409  15E2  09A8               	comf	i1___aomod@dividend,f
 24410  15E3  09A9               	comf	i1___aomod@dividend+1,f
 24411  15E4  09AA               	comf	i1___aomod@dividend+2,f
 24412  15E5  09AB               	comf	i1___aomod@dividend+3,f
 24413  15E6  09AC               	comf	i1___aomod@dividend+4,f
 24414  15E7  09AD               	comf	i1___aomod@dividend+5,f
 24415  15E8  09AE               	comf	i1___aomod@dividend+6,f
 24416  15E9  09AF               	comf	i1___aomod@dividend+7,f
 24417  15EA  0AA8               	incf	i1___aomod@dividend,f
 24418  15EB  1D03               	skipz
 24419  15EC  2E00               	goto	u726_2lld
 24420  15ED  0AA9               	incf	i1___aomod@dividend+1,f
 24421  15EE  1D03               	skipz
 24422  15EF  2E00               	goto	u726_2lld
 24423  15F0  0AAA               	incf	i1___aomod@dividend+2,f
 24424  15F1  1D03               	skipz
 24425  15F2  2E00               	goto	u726_2lld
 24426  15F3  0AAB               	incf	i1___aomod@dividend+3,f
 24427  15F4  1D03               	skipz
 24428  15F5  2E00               	goto	u726_2lld
 24429  15F6  0AAC               	incf	i1___aomod@dividend+4,f
 24430  15F7  1D03               	skipz
 24431  15F8  2E00               	goto	u726_2lld
 24432  15F9  0AAD               	incf	i1___aomod@dividend+5,f
 24433  15FA  1D03               	skipz
 24434  15FB  2E00               	goto	u726_2lld
 24435  15FC  0AAE               	incf	i1___aomod@dividend+6,f
 24436  15FD  1D03               	skipz
 24437  15FE  2E00               	goto	u726_2lld
 24438  15FF  0AAF               	incf	i1___aomod@dividend+7,f
 24439  1600                     u726_2lld:
 24440  1600                     i1l1308:
 24441  1600  0020               	movlb	0	; select bank0
 24442  1601  0828               	movf	i1___aomod@dividend,w
 24443  1602  00A0               	movwf	?i1___aomod
 24444  1603  0829               	movf	i1___aomod@dividend+1,w
 24445  1604  00A1               	movwf	?i1___aomod+1
 24446  1605  082A               	movf	i1___aomod@dividend+2,w
 24447  1606  00A2               	movwf	?i1___aomod+2
 24448  1607  082B               	movf	i1___aomod@dividend+3,w
 24449  1608  00A3               	movwf	?i1___aomod+3
 24450  1609  082C               	movf	i1___aomod@dividend+4,w
 24451  160A  00A4               	movwf	?i1___aomod+4
 24452  160B  082D               	movf	i1___aomod@dividend+5,w
 24453  160C  00A5               	movwf	?i1___aomod+5
 24454  160D  082E               	movf	i1___aomod@dividend+6,w
 24455  160E  00A6               	movwf	?i1___aomod+6
 24456  160F  082F               	movf	i1___aomod@dividend+7,w
 24457  1610  00A7               	movwf	?i1___aomod+7
 24458  1611                     i1l1309:
 24459  1611  0008               	return
 24460  1612                     __end_ofi1___aomod:
 24461                           
 24462                           	psect	text98
 24463  16FF                     __ptext98:	
 24464 ;; *************** function i1___aodiv *****************
 24465 ;; Defined at:
 24466 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aodiv.c"
 24467 ;; Parameters:    Size  Location     Type
 24468 ;;  divisor         8    0[BANK0 ] long long 
 24469 ;;  dividend        8    8[BANK0 ] long long 
 24470 ;; Auto vars:     Size  Location     Type
 24471 ;;  quotient        8    3[COMMON] long long 
 24472 ;;  sign            1    2[COMMON] unsigned char 
 24473 ;;  counter         1    1[COMMON] unsigned char 
 24474 ;; Return value:  Size  Location     Type
 24475 ;;                  8    0[BANK0 ] long long 
 24476 ;; Registers used:
 24477 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24478 ;; Tracked objects:
 24479 ;;		On entry : 0/0
 24480 ;;		On exit  : 0/0
 24481 ;;		Unchanged: 0/0
 24482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24483 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24484 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24486 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24487 ;;Total ram usage:       27 bytes
 24488 ;; Hardware stack levels used:    1
 24489 ;; This function calls:
 24490 ;;		Nothing
 24491 ;; This function is called by:
 24492 ;;		i1_dtoa
 24493 ;; This function uses a non-reentrant model
 24494 ;;
 24495                           
 24496                           
 24497                           ;psect for function i1___aodiv
 24498  16FF                     i1___aodiv:
 24499  16FF                     i1l6382:	
 24500                           ;incstack = 0
 24501                           ; Regs used in i1___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 24502                           
 24503  16FF  01F2               	clrf	i1___aodiv@sign
 24504  1700                     i1l6384:
 24505  1700  3020               	movlw	low i1___aodiv@divisor
 24506  1701  0086               	movwf	6
 24507  1702  3000               	movlw	high i1___aodiv@divisor
 24508  1703  0087               	movwf	7
 24509  1704  3F47               	moviw [7]fsr1
 24510  1705  00F0               	movwf	??i1___aodiv
 24511  1706  1FF0               	btfss	??i1___aodiv,7
 24512  1707  2F09               	goto	u706_21
 24513  1708  2F0A               	goto	u706_20
 24514  1709                     u706_21:
 24515  1709  2F2B               	goto	i1l6388
 24516  170A                     u706_20:
 24517  170A                     i1l6386:
 24518  170A  0020               	movlb	0	; select bank0
 24519  170B  09A0               	comf	i1___aodiv@divisor,f
 24520  170C  09A1               	comf	i1___aodiv@divisor+1,f
 24521  170D  09A2               	comf	i1___aodiv@divisor+2,f
 24522  170E  09A3               	comf	i1___aodiv@divisor+3,f
 24523  170F  09A4               	comf	i1___aodiv@divisor+4,f
 24524  1710  09A5               	comf	i1___aodiv@divisor+5,f
 24525  1711  09A6               	comf	i1___aodiv@divisor+6,f
 24526  1712  09A7               	comf	i1___aodiv@divisor+7,f
 24527  1713  0AA0               	incf	i1___aodiv@divisor,f
 24528  1714  1D03               	skipz
 24529  1715  2F29               	goto	u707_2lld
 24530  1716  0AA1               	incf	i1___aodiv@divisor+1,f
 24531  1717  1D03               	skipz
 24532  1718  2F29               	goto	u707_2lld
 24533  1719  0AA2               	incf	i1___aodiv@divisor+2,f
 24534  171A  1D03               	skipz
 24535  171B  2F29               	goto	u707_2lld
 24536  171C  0AA3               	incf	i1___aodiv@divisor+3,f
 24537  171D  1D03               	skipz
 24538  171E  2F29               	goto	u707_2lld
 24539  171F  0AA4               	incf	i1___aodiv@divisor+4,f
 24540  1720  1D03               	skipz
 24541  1721  2F29               	goto	u707_2lld
 24542  1722  0AA5               	incf	i1___aodiv@divisor+5,f
 24543  1723  1D03               	skipz
 24544  1724  2F29               	goto	u707_2lld
 24545  1725  0AA6               	incf	i1___aodiv@divisor+6,f
 24546  1726  1D03               	skipz
 24547  1727  2F29               	goto	u707_2lld
 24548  1728  0AA7               	incf	i1___aodiv@divisor+7,f
 24549  1729                     u707_2lld:
 24550  1729  01F2               	clrf	i1___aodiv@sign
 24551  172A  0AF2               	incf	i1___aodiv@sign,f
 24552  172B                     i1l6388:
 24553  172B  3028               	movlw	low i1___aodiv@dividend
 24554  172C  0086               	movwf	6
 24555  172D  3000               	movlw	high i1___aodiv@dividend
 24556  172E  0087               	movwf	7
 24557  172F  3F47               	moviw [7]fsr1
 24558  1730  00F0               	movwf	??i1___aodiv
 24559  1731  1FF0               	btfss	??i1___aodiv,7
 24560  1732  2F34               	goto	u708_21
 24561  1733  2F35               	goto	u708_20
 24562  1734                     u708_21:
 24563  1734  2F58               	goto	i1l6394
 24564  1735                     u708_20:
 24565  1735                     i1l6390:
 24566  1735  0020               	movlb	0	; select bank0
 24567  1736  09A8               	comf	i1___aodiv@dividend,f
 24568  1737  09A9               	comf	i1___aodiv@dividend+1,f
 24569  1738  09AA               	comf	i1___aodiv@dividend+2,f
 24570  1739  09AB               	comf	i1___aodiv@dividend+3,f
 24571  173A  09AC               	comf	i1___aodiv@dividend+4,f
 24572  173B  09AD               	comf	i1___aodiv@dividend+5,f
 24573  173C  09AE               	comf	i1___aodiv@dividend+6,f
 24574  173D  09AF               	comf	i1___aodiv@dividend+7,f
 24575  173E  0AA8               	incf	i1___aodiv@dividend,f
 24576  173F  1D03               	skipz
 24577  1740  2F54               	goto	u709_2lld
 24578  1741  0AA9               	incf	i1___aodiv@dividend+1,f
 24579  1742  1D03               	skipz
 24580  1743  2F54               	goto	u709_2lld
 24581  1744  0AAA               	incf	i1___aodiv@dividend+2,f
 24582  1745  1D03               	skipz
 24583  1746  2F54               	goto	u709_2lld
 24584  1747  0AAB               	incf	i1___aodiv@dividend+3,f
 24585  1748  1D03               	skipz
 24586  1749  2F54               	goto	u709_2lld
 24587  174A  0AAC               	incf	i1___aodiv@dividend+4,f
 24588  174B  1D03               	skipz
 24589  174C  2F54               	goto	u709_2lld
 24590  174D  0AAD               	incf	i1___aodiv@dividend+5,f
 24591  174E  1D03               	skipz
 24592  174F  2F54               	goto	u709_2lld
 24593  1750  0AAE               	incf	i1___aodiv@dividend+6,f
 24594  1751  1D03               	skipz
 24595  1752  2F54               	goto	u709_2lld
 24596  1753  0AAF               	incf	i1___aodiv@dividend+7,f
 24597  1754                     u709_2lld:
 24598  1754                     i1l6392:
 24599  1754  3001               	movlw	1
 24600  1755  00F0               	movwf	??i1___aodiv
 24601  1756  0870               	movf	??i1___aodiv,w
 24602  1757  06F2               	xorwf	i1___aodiv@sign,f
 24603  1758                     i1l6394:
 24604  1758  3073               	movlw	low i1___aodiv@quotient
 24605  1759  0086               	movwf	6
 24606  175A  3000               	movlw	high i1___aodiv@quotient
 24607  175B  0087               	movwf	7
 24608  175C  3008               	movlw	8
 24609  175D  00F0               	movwf	??i1___aodiv
 24610  175E  3000               	movlw	0
 24611  175F                     u710_20:
 24612  175F  001E               	movwi fsr1++
 24613  1760  0BF0               	decfsz	??i1___aodiv,f
 24614  1761  2F5F               	goto	u710_20
 24615  1762                     i1l6396:
 24616  1762  0020               	movlb	0	; select bank0
 24617  1763  0820               	movf	i1___aodiv@divisor,w
 24618  1764  0421               	iorwf	i1___aodiv@divisor+1,w
 24619  1765  0422               	iorwf	i1___aodiv@divisor+2,w
 24620  1766  0423               	iorwf	i1___aodiv@divisor+3,w
 24621  1767  0424               	iorwf	i1___aodiv@divisor+4,w
 24622  1768  0425               	iorwf	i1___aodiv@divisor+5,w
 24623  1769  0426               	iorwf	i1___aodiv@divisor+6,w
 24624  176A  0427               	iorwf	i1___aodiv@divisor+7,w
 24625  176B  1903               	skipnz
 24626  176C  2F6E               	goto	u711_21
 24627  176D  2F6F               	goto	u711_20
 24628  176E                     u711_21:
 24629  176E  2FCB               	goto	i1l6416
 24630  176F                     u711_20:
 24631  176F                     i1l6398:
 24632  176F  01F1               	clrf	i1___aodiv@counter
 24633  1770  0AF1               	incf	i1___aodiv@counter,f
 24634  1771  2F7E               	goto	i1l6404
 24635  1772                     i1l6400:
 24636  1772  35A0               	lslf	i1___aodiv@divisor,f
 24637  1773  0DA1               	rlf	i1___aodiv@divisor+1,f
 24638  1774  0DA2               	rlf	i1___aodiv@divisor+2,f
 24639  1775  0DA3               	rlf	i1___aodiv@divisor+3,f
 24640  1776  0DA4               	rlf	i1___aodiv@divisor+4,f
 24641  1777  0DA5               	rlf	i1___aodiv@divisor+5,f
 24642  1778  0DA6               	rlf	i1___aodiv@divisor+6,f
 24643  1779  0DA7               	rlf	i1___aodiv@divisor+7,f
 24644  177A                     i1l6402:
 24645  177A  3001               	movlw	1
 24646  177B  00F0               	movwf	??i1___aodiv
 24647  177C  0870               	movf	??i1___aodiv,w
 24648  177D  07F1               	addwf	i1___aodiv@counter,f
 24649  177E                     i1l6404:
 24650  177E  1FA7               	btfss	i1___aodiv@divisor+7,7
 24651  177F  2F81               	goto	u712_21
 24652  1780  2F82               	goto	u712_20
 24653  1781                     u712_21:
 24654  1781  2F72               	goto	i1l6400
 24655  1782                     u712_20:
 24656  1782                     i1l6406:
 24657  1782  35F3               	lslf	i1___aodiv@quotient,f
 24658  1783  0DF4               	rlf	i1___aodiv@quotient+1,f
 24659  1784  0DF5               	rlf	i1___aodiv@quotient+2,f
 24660  1785  0DF6               	rlf	i1___aodiv@quotient+3,f
 24661  1786  0DF7               	rlf	i1___aodiv@quotient+4,f
 24662  1787  0DF8               	rlf	i1___aodiv@quotient+5,f
 24663  1788  0DF9               	rlf	i1___aodiv@quotient+6,f
 24664  1789  0DFA               	rlf	i1___aodiv@quotient+7,f
 24665  178A                     i1l6408:
 24666  178A  0827               	movf	i1___aodiv@divisor+7,w
 24667  178B  022F               	subwf	i1___aodiv@dividend+7,w
 24668  178C  1D03               	skipz
 24669  178D  2FA8               	goto	u713_25
 24670  178E  0826               	movf	i1___aodiv@divisor+6,w
 24671  178F  022E               	subwf	i1___aodiv@dividend+6,w
 24672  1790  1D03               	skipz
 24673  1791  2FA8               	goto	u713_25
 24674  1792  0825               	movf	i1___aodiv@divisor+5,w
 24675  1793  022D               	subwf	i1___aodiv@dividend+5,w
 24676  1794  1D03               	skipz
 24677  1795  2FA8               	goto	u713_25
 24678  1796  0824               	movf	i1___aodiv@divisor+4,w
 24679  1797  022C               	subwf	i1___aodiv@dividend+4,w
 24680  1798  1D03               	skipz
 24681  1799  2FA8               	goto	u713_25
 24682  179A  0823               	movf	i1___aodiv@divisor+3,w
 24683  179B  022B               	subwf	i1___aodiv@dividend+3,w
 24684  179C  1D03               	skipz
 24685  179D  2FA8               	goto	u713_25
 24686  179E  0822               	movf	i1___aodiv@divisor+2,w
 24687  179F  022A               	subwf	i1___aodiv@dividend+2,w
 24688  17A0  1D03               	skipz
 24689  17A1  2FA8               	goto	u713_25
 24690  17A2  0821               	movf	i1___aodiv@divisor+1,w
 24691  17A3  0229               	subwf	i1___aodiv@dividend+1,w
 24692  17A4  1D03               	skipz
 24693  17A5  2FA8               	goto	u713_25
 24694  17A6  0820               	movf	i1___aodiv@divisor,w
 24695  17A7  0228               	subwf	i1___aodiv@dividend,w
 24696  17A8                     u713_25:
 24697  17A8  1C03               	skipc
 24698  17A9  2FAB               	goto	u713_21
 24699  17AA  2FAC               	goto	u713_20
 24700  17AB                     u713_21:
 24701  17AB  2FBD               	goto	i1l6414
 24702  17AC                     u713_20:
 24703  17AC                     i1l6410:
 24704  17AC  0820               	movf	i1___aodiv@divisor,w
 24705  17AD  02A8               	subwf	i1___aodiv@dividend,f
 24706  17AE  0821               	movf	i1___aodiv@divisor+1,w
 24707  17AF  3BA9               	subwfb	i1___aodiv@dividend+1,f
 24708  17B0  0822               	movf	i1___aodiv@divisor+2,w
 24709  17B1  3BAA               	subwfb	i1___aodiv@dividend+2,f
 24710  17B2  0823               	movf	i1___aodiv@divisor+3,w
 24711  17B3  3BAB               	subwfb	i1___aodiv@dividend+3,f
 24712  17B4  0824               	movf	i1___aodiv@divisor+4,w
 24713  17B5  3BAC               	subwfb	i1___aodiv@dividend+4,f
 24714  17B6  0825               	movf	i1___aodiv@divisor+5,w
 24715  17B7  3BAD               	subwfb	i1___aodiv@dividend+5,f
 24716  17B8  0826               	movf	i1___aodiv@divisor+6,w
 24717  17B9  3BAE               	subwfb	i1___aodiv@dividend+6,f
 24718  17BA  0827               	movf	i1___aodiv@divisor+7,w
 24719  17BB  3BAF               	subwfb	i1___aodiv@dividend+7,f
 24720  17BC                     i1l6412:
 24721  17BC  1473               	bsf	i1___aodiv@quotient,0
 24722  17BD                     i1l6414:
 24723  17BD  36A7               	lsrf	i1___aodiv@divisor+7,f
 24724  17BE  0CA6               	rrf	i1___aodiv@divisor+6,f
 24725  17BF  0CA5               	rrf	i1___aodiv@divisor+5,f
 24726  17C0  0CA4               	rrf	i1___aodiv@divisor+4,f
 24727  17C1  0CA3               	rrf	i1___aodiv@divisor+3,f
 24728  17C2  0CA2               	rrf	i1___aodiv@divisor+2,f
 24729  17C3  0CA1               	rrf	i1___aodiv@divisor+1,f
 24730  17C4  0CA0               	rrf	i1___aodiv@divisor,f
 24731  17C5  3001               	movlw	1
 24732  17C6  02F1               	subwf	i1___aodiv@counter,f
 24733  17C7  1D03               	btfss	3,2
 24734  17C8  2FCA               	goto	u714_21
 24735  17C9  2FCB               	goto	u714_20
 24736  17CA                     u714_21:
 24737  17CA  2F82               	goto	i1l6406
 24738  17CB                     u714_20:
 24739  17CB                     i1l6416:
 24740  17CB  0872               	movf	i1___aodiv@sign,w
 24741  17CC  1903               	btfsc	3,2
 24742  17CD  2FCF               	goto	u715_21
 24743  17CE  2FD0               	goto	u715_20
 24744  17CF                     u715_21:
 24745  17CF  2FEE               	goto	i1l1295
 24746  17D0                     u715_20:
 24747  17D0                     i1l6418:
 24748  17D0  09F3               	comf	i1___aodiv@quotient,f
 24749  17D1  09F4               	comf	i1___aodiv@quotient+1,f
 24750  17D2  09F5               	comf	i1___aodiv@quotient+2,f
 24751  17D3  09F6               	comf	i1___aodiv@quotient+3,f
 24752  17D4  09F7               	comf	i1___aodiv@quotient+4,f
 24753  17D5  09F8               	comf	i1___aodiv@quotient+5,f
 24754  17D6  09F9               	comf	i1___aodiv@quotient+6,f
 24755  17D7  09FA               	comf	i1___aodiv@quotient+7,f
 24756  17D8  0AF3               	incf	i1___aodiv@quotient,f
 24757  17D9  1D03               	skipz
 24758  17DA  2FEE               	goto	u716_2lld
 24759  17DB  0AF4               	incf	i1___aodiv@quotient+1,f
 24760  17DC  1D03               	skipz
 24761  17DD  2FEE               	goto	u716_2lld
 24762  17DE  0AF5               	incf	i1___aodiv@quotient+2,f
 24763  17DF  1D03               	skipz
 24764  17E0  2FEE               	goto	u716_2lld
 24765  17E1  0AF6               	incf	i1___aodiv@quotient+3,f
 24766  17E2  1D03               	skipz
 24767  17E3  2FEE               	goto	u716_2lld
 24768  17E4  0AF7               	incf	i1___aodiv@quotient+4,f
 24769  17E5  1D03               	skipz
 24770  17E6  2FEE               	goto	u716_2lld
 24771  17E7  0AF8               	incf	i1___aodiv@quotient+5,f
 24772  17E8  1D03               	skipz
 24773  17E9  2FEE               	goto	u716_2lld
 24774  17EA  0AF9               	incf	i1___aodiv@quotient+6,f
 24775  17EB  1D03               	skipz
 24776  17EC  2FEE               	goto	u716_2lld
 24777  17ED  0AFA               	incf	i1___aodiv@quotient+7,f
 24778  17EE                     u716_2lld:
 24779  17EE                     i1l1295:
 24780  17EE  0873               	movf	i1___aodiv@quotient,w
 24781  17EF  0020               	movlb	0	; select bank0
 24782  17F0  00A0               	movwf	?i1___aodiv
 24783  17F1  0874               	movf	i1___aodiv@quotient+1,w
 24784  17F2  00A1               	movwf	?i1___aodiv+1
 24785  17F3  0875               	movf	i1___aodiv@quotient+2,w
 24786  17F4  00A2               	movwf	?i1___aodiv+2
 24787  17F5  0876               	movf	i1___aodiv@quotient+3,w
 24788  17F6  00A3               	movwf	?i1___aodiv+3
 24789  17F7  0877               	movf	i1___aodiv@quotient+4,w
 24790  17F8  00A4               	movwf	?i1___aodiv+4
 24791  17F9  0878               	movf	i1___aodiv@quotient+5,w
 24792  17FA  00A5               	movwf	?i1___aodiv+5
 24793  17FB  0879               	movf	i1___aodiv@quotient+6,w
 24794  17FC  00A6               	movwf	?i1___aodiv+6
 24795  17FD  087A               	movf	i1___aodiv@quotient+7,w
 24796  17FE  00A7               	movwf	?i1___aodiv+7
 24797  17FF                     i1l1296:
 24798  17FF  0008               	return
 24799  1800                     __end_ofi1___aodiv:
 24800                           
 24801                           	psect	text99
 24802  2740                     __ptext99:	
 24803 ;; *************** function i1_is_moving *****************
 24804 ;; Defined at:
 24805 ;;		line 26 in file "spd.c"
 24806 ;; Parameters:    Size  Location     Type
 24807 ;;		None
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;		None
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      _Bool 
 24812 ;; Registers used:
 24813 ;;		wreg, status,2, status,0
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/0
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24823 ;;Total ram usage:        0 bytes
 24824 ;; Hardware stack levels used:    1
 24825 ;; This function calls:
 24826 ;;		Nothing
 24827 ;; This function is called by:
 24828 ;;		_frequency_calculation
 24829 ;; This function uses a non-reentrant model
 24830 ;;
 24831                           
 24832                           
 24833                           ;psect for function i1_is_moving
 24834  2740                     i1_is_moving:
 24835                           
 24836                           ;incstack = 0
 24837                           ; Regs used in i1_is_moving: [wreg+status,2+status,0]
 24838  2740                     i1l4988:
 24839                           
 24840                           ;spd.c: 27:     return spd.count == 0 ? 0 : 1;
 24841  2740  0022               	movlb	2	; select bank2
 24842  2741  0866               	movf	(_spd^(0+256)+5),w
 24843  2742  0467               	iorwf	((_spd+1)^(0+256)+5),w
 24844  2743  1D03               	btfss	3,2
 24845  2744  2F46               	goto	u528_21
 24846  2745  2F48               	goto	u528_20
 24847  2746                     u528_21:
 24848  2746  3001               	movlw	1
 24849  2747  2F49               	goto	u529_20
 24850  2748                     u528_20:
 24851  2748  3000               	movlw	0
 24852  2749                     __ccov710_end_blk0:
 24853  2749                     u529_20:
 24854  2749                     __ccov711_start_blk2:
 24855  2749                     i1l856:
 24856  2749  0023               	movlb	3	; select bank3
 24857  274A  1454               	bsf	(__ccovbit2_183/(0+8))^(0+384),__ccovbit2_183& (0+7)	;volatile
 24858  274B  0008               	return
 24859  274C                     __end_ofi1_is_moving:
 24860  274C                     
 24861                           	psect	text100
 24862  1236                     __ptext100:	
 24863 ;; *************** function i1___xxtofl *****************
 24864 ;; Defined at:
 24865 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;  sign            1    wreg     unsigned char 
 24868 ;;  val             4    0[COMMON] long 
 24869 ;; Auto vars:     Size  Location     Type
 24870 ;;  sign            1    8[COMMON] unsigned char 
 24871 ;;  arg             4   10[COMMON] unsigned long 
 24872 ;;  exp             1    9[COMMON] unsigned char 
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  4    0[COMMON] unsigned char 
 24875 ;; Registers used:
 24876 ;;		wreg, status,2, status,0
 24877 ;; Tracked objects:
 24878 ;;		On entry : 0/0
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24883 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24885 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24886 ;;Total ram usage:       14 bytes
 24887 ;; Hardware stack levels used:    1
 24888 ;; This function calls:
 24889 ;;		Nothing
 24890 ;; This function is called by:
 24891 ;;		_frequency_calculation
 24892 ;; This function uses a non-reentrant model
 24893 ;;
 24894                           
 24895                           
 24896                           ;psect for function i1___xxtofl
 24897  1236                     i1___xxtofl:
 24898                           
 24899                           ;incstack = 0
 24900                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 24901                           ;i1___xxtofl@sign stored from wreg
 24902  1236  00F8               	movwf	i1___xxtofl@sign
 24903  1237                     i1l5168:
 24904  1237  0878               	movf	i1___xxtofl@sign,w
 24905  1238  1903               	btfsc	3,2
 24906  1239  2A3B               	goto	u566_21
 24907  123A  2A3C               	goto	u566_20
 24908  123B                     u566_21:
 24909  123B  2A50               	goto	i1l5174
 24910  123C                     u566_20:
 24911  123C                     i1l5170:
 24912  123C  1FF3               	btfss	i1___xxtofl@val+3,7
 24913  123D  2A3F               	goto	u567_21
 24914  123E  2A40               	goto	u567_20
 24915  123F                     u567_21:
 24916  123F  2A50               	goto	i1l5174
 24917  1240                     u567_20:
 24918  1240                     i1l5172:
 24919  1240  0970               	comf	i1___xxtofl@val,w
 24920  1241  00FA               	movwf	i1___xxtofl@arg
 24921  1242  0971               	comf	i1___xxtofl@val+1,w
 24922  1243  00FB               	movwf	i1___xxtofl@arg+1
 24923  1244  0972               	comf	i1___xxtofl@val+2,w
 24924  1245  00FC               	movwf	i1___xxtofl@arg+2
 24925  1246  0973               	comf	i1___xxtofl@val+3,w
 24926  1247  00FD               	movwf	i1___xxtofl@arg+3
 24927  1248  0AFA               	incf	i1___xxtofl@arg,f
 24928  1249  1903               	skipnz
 24929  124A  0AFB               	incf	i1___xxtofl@arg+1,f
 24930  124B  1903               	skipnz
 24931  124C  0AFC               	incf	i1___xxtofl@arg+2,f
 24932  124D  1903               	skipnz
 24933  124E  0AFD               	incf	i1___xxtofl@arg+3,f
 24934  124F  2A58               	goto	i1l1636
 24935  1250                     i1l5174:
 24936  1250  0873               	movf	i1___xxtofl@val+3,w
 24937  1251  00FD               	movwf	i1___xxtofl@arg+3
 24938  1252  0872               	movf	i1___xxtofl@val+2,w
 24939  1253  00FC               	movwf	i1___xxtofl@arg+2
 24940  1254  0871               	movf	i1___xxtofl@val+1,w
 24941  1255  00FB               	movwf	i1___xxtofl@arg+1
 24942  1256  0870               	movf	i1___xxtofl@val,w
 24943  1257  00FA               	movwf	i1___xxtofl@arg
 24944  1258                     i1l1636:
 24945  1258  0873               	movf	i1___xxtofl@val+3,w
 24946  1259  0472               	iorwf	i1___xxtofl@val+2,w
 24947  125A  0471               	iorwf	i1___xxtofl@val+1,w
 24948  125B  0470               	iorwf	i1___xxtofl@val,w
 24949  125C  1D03               	skipz
 24950  125D  2A5F               	goto	u568_21
 24951  125E  2A60               	goto	u568_20
 24952  125F                     u568_21:
 24953  125F  2A69               	goto	i1l5180
 24954  1260                     u568_20:
 24955  1260                     i1l5176:
 24956  1260  3000               	movlw	0
 24957  1261  00F3               	movwf	?i1___xxtofl+3
 24958  1262  3000               	movlw	0
 24959  1263  00F2               	movwf	?i1___xxtofl+2
 24960  1264  3000               	movlw	0
 24961  1265  00F1               	movwf	?i1___xxtofl+1
 24962  1266  3000               	movlw	0
 24963  1267  00F0               	movwf	?i1___xxtofl
 24964  1268  2AE1               	goto	i1l1638
 24965  1269                     i1l5180:
 24966  1269  3096               	movlw	150
 24967  126A  00F4               	movwf	??i1___xxtofl
 24968  126B  0874               	movf	??i1___xxtofl,w
 24969  126C  00F9               	movwf	i1___xxtofl@exp
 24970  126D  2A79               	goto	i1l5184
 24971  126E                     i1l5182:
 24972  126E  3001               	movlw	1
 24973  126F  00F4               	movwf	??i1___xxtofl
 24974  1270  0874               	movf	??i1___xxtofl,w
 24975  1271  07F9               	addwf	i1___xxtofl@exp,f
 24976  1272  3001               	movlw	1
 24977  1273                     u569_25:
 24978  1273  36FD               	lsrf	i1___xxtofl@arg+3,f
 24979  1274  0CFC               	rrf	i1___xxtofl@arg+2,f
 24980  1275  0CFB               	rrf	i1___xxtofl@arg+1,f
 24981  1276  0CFA               	rrf	i1___xxtofl@arg,f
 24982  1277  0B89               	decfsz	9,f
 24983  1278  2A73               	goto	u569_25
 24984  1279                     i1l5184:
 24985  1279  30FE               	movlw	254
 24986  127A  057D               	andwf	i1___xxtofl@arg+3,w
 24987  127B  1D03               	btfss	3,2
 24988  127C  2A7E               	goto	u570_21
 24989  127D  2A7F               	goto	u570_20
 24990  127E                     u570_21:
 24991  127E  2A6E               	goto	i1l5182
 24992  127F                     u570_20:
 24993  127F  2A93               	goto	i1l1642
 24994  1280                     i1l5186:
 24995  1280  3001               	movlw	1
 24996  1281  00F4               	movwf	??i1___xxtofl
 24997  1282  0874               	movf	??i1___xxtofl,w
 24998  1283  07F9               	addwf	i1___xxtofl@exp,f
 24999  1284                     i1l5188:
 25000  1284  3001               	movlw	1
 25001  1285  07FA               	addwf	i1___xxtofl@arg,f
 25002  1286  3000               	movlw	0
 25003  1287  3DFB               	addwfc	i1___xxtofl@arg+1,f
 25004  1288  3000               	movlw	0
 25005  1289  3DFC               	addwfc	i1___xxtofl@arg+2,f
 25006  128A  3000               	movlw	0
 25007  128B  3DFD               	addwfc	i1___xxtofl@arg+3,f
 25008  128C                     i1l5190:
 25009  128C  3001               	movlw	1
 25010  128D                     u571_25:
 25011  128D  36FD               	lsrf	i1___xxtofl@arg+3,f
 25012  128E  0CFC               	rrf	i1___xxtofl@arg+2,f
 25013  128F  0CFB               	rrf	i1___xxtofl@arg+1,f
 25014  1290  0CFA               	rrf	i1___xxtofl@arg,f
 25015  1291  0B89               	decfsz	9,f
 25016  1292  2A8D               	goto	u571_25
 25017  1293                     i1l1642:
 25018  1293  30FF               	movlw	255
 25019  1294  057D               	andwf	i1___xxtofl@arg+3,w
 25020  1295  1D03               	btfss	3,2
 25021  1296  2A98               	goto	u572_21
 25022  1297  2A99               	goto	u572_20
 25023  1298                     u572_21:
 25024  1298  2A80               	goto	i1l5186
 25025  1299                     u572_20:
 25026  1299  2AA3               	goto	i1l5194
 25027  129A                     i1l5192:
 25028  129A  3001               	movlw	1
 25029  129B  02F9               	subwf	i1___xxtofl@exp,f
 25030  129C  3001               	movlw	1
 25031  129D                     u573_25:
 25032  129D  35FA               	lslf	i1___xxtofl@arg,f
 25033  129E  0DFB               	rlf	i1___xxtofl@arg+1,f
 25034  129F  0DFC               	rlf	i1___xxtofl@arg+2,f
 25035  12A0  0DFD               	rlf	i1___xxtofl@arg+3,f
 25036  12A1  0B89               	decfsz	9,f
 25037  12A2  2A9D               	goto	u573_25
 25038  12A3                     i1l5194:
 25039  12A3  1BFC               	btfsc	i1___xxtofl@arg+2,7
 25040  12A4  2AA6               	goto	u574_21
 25041  12A5  2AA7               	goto	u574_20
 25042  12A6                     u574_21:
 25043  12A6  2AAD               	goto	i1l1649
 25044  12A7                     u574_20:
 25045  12A7                     i1l5196:
 25046  12A7  3002               	movlw	2
 25047  12A8  0279               	subwf	i1___xxtofl@exp,w
 25048  12A9  1803               	skipnc
 25049  12AA  2AAC               	goto	u575_21
 25050  12AB  2AAD               	goto	u575_20
 25051  12AC                     u575_21:
 25052  12AC  2A9A               	goto	i1l5192
 25053  12AD                     u575_20:
 25054  12AD                     i1l1649:
 25055  12AD  1879               	btfsc	i1___xxtofl@exp,0
 25056  12AE  2AB0               	goto	u576_21
 25057  12AF  2AB1               	goto	u576_20
 25058  12B0                     u576_21:
 25059  12B0  2AB9               	goto	i1l1650
 25060  12B1                     u576_20:
 25061  12B1                     i1l5198:
 25062  12B1  30FF               	movlw	255
 25063  12B2  05FA               	andwf	i1___xxtofl@arg,f
 25064  12B3  30FF               	movlw	255
 25065  12B4  05FB               	andwf	i1___xxtofl@arg+1,f
 25066  12B5  307F               	movlw	127
 25067  12B6  05FC               	andwf	i1___xxtofl@arg+2,f
 25068  12B7  30FF               	movlw	255
 25069  12B8  05FD               	andwf	i1___xxtofl@arg+3,f
 25070  12B9                     i1l1650:
 25071  12B9  1003               	clrc
 25072  12BA  0CF9               	rrf	i1___xxtofl@exp,f
 25073  12BB                     i1l5200:
 25074  12BB  0879               	movf	i1___xxtofl@exp,w
 25075  12BC  00F4               	movwf	??i1___xxtofl
 25076  12BD  01F5               	clrf	??i1___xxtofl+1
 25077  12BE  01F6               	clrf	??i1___xxtofl+2
 25078  12BF  01F7               	clrf	??i1___xxtofl+3
 25079  12C0  3018               	movlw	24
 25080  12C1                     u577_25:
 25081  12C1  35F4               	lslf	??i1___xxtofl,f
 25082  12C2  0DF5               	rlf	??i1___xxtofl+1,f
 25083  12C3  0DF6               	rlf	??i1___xxtofl+2,f
 25084  12C4  0DF7               	rlf	??i1___xxtofl+3,f
 25085  12C5                     u577_20:
 25086  12C5  0B89               	decfsz	9,f
 25087  12C6  2AC1               	goto	u577_25
 25088  12C7  0874               	movf	??i1___xxtofl,w
 25089  12C8  04FA               	iorwf	i1___xxtofl@arg,f
 25090  12C9  0875               	movf	??i1___xxtofl+1,w
 25091  12CA  04FB               	iorwf	i1___xxtofl@arg+1,f
 25092  12CB  0876               	movf	??i1___xxtofl+2,w
 25093  12CC  04FC               	iorwf	i1___xxtofl@arg+2,f
 25094  12CD  0877               	movf	??i1___xxtofl+3,w
 25095  12CE  04FD               	iorwf	i1___xxtofl@arg+3,f
 25096  12CF                     i1l5202:
 25097  12CF  0878               	movf	i1___xxtofl@sign,w
 25098  12D0  1903               	btfsc	3,2
 25099  12D1  2AD3               	goto	u578_21
 25100  12D2  2AD4               	goto	u578_20
 25101  12D3                     u578_21:
 25102  12D3  2AD9               	goto	i1l5208
 25103  12D4                     u578_20:
 25104  12D4                     i1l5204:
 25105  12D4  1FF3               	btfss	i1___xxtofl@val+3,7
 25106  12D5  2AD7               	goto	u579_21
 25107  12D6  2AD8               	goto	u579_20
 25108  12D7                     u579_21:
 25109  12D7  2AD9               	goto	i1l5208
 25110  12D8                     u579_20:
 25111  12D8                     i1l5206:
 25112  12D8  17FD               	bsf	i1___xxtofl@arg+3,7
 25113  12D9                     i1l5208:
 25114  12D9  087D               	movf	i1___xxtofl@arg+3,w
 25115  12DA  00F3               	movwf	?i1___xxtofl+3
 25116  12DB  087C               	movf	i1___xxtofl@arg+2,w
 25117  12DC  00F2               	movwf	?i1___xxtofl+2
 25118  12DD  087B               	movf	i1___xxtofl@arg+1,w
 25119  12DE  00F1               	movwf	?i1___xxtofl+1
 25120  12DF  087A               	movf	i1___xxtofl@arg,w
 25121  12E0  00F0               	movwf	?i1___xxtofl
 25122  12E1                     i1l1638:
 25123  12E1  0008               	return
 25124  12E2                     __end_ofi1___xxtofl:
 25125                           
 25126                           	psect	text101
 25127  10BA                     __ptext101:	
 25128 ;; *************** function i1___fltol *****************
 25129 ;; Defined at:
 25130 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
 25131 ;; Parameters:    Size  Location     Type
 25132 ;;  f1              4   26[BANK0 ] unsigned char 
 25133 ;; Auto vars:     Size  Location     Type
 25134 ;;  exp1            1   36[BANK0 ] unsigned char 
 25135 ;;  sign1           1   35[BANK0 ] unsigned char 
 25136 ;; Return value:  Size  Location     Type
 25137 ;;                  4   26[BANK0 ] long 
 25138 ;; Registers used:
 25139 ;;		wreg, status,2, status,0
 25140 ;; Tracked objects:
 25141 ;;		On entry : 0/0
 25142 ;;		On exit  : 0/0
 25143 ;;		Unchanged: 0/0
 25144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25147 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25148 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25149 ;;Total ram usage:       11 bytes
 25150 ;; Hardware stack levels used:    1
 25151 ;; This function calls:
 25152 ;;		Nothing
 25153 ;; This function is called by:
 25154 ;;		_frequency_calculation
 25155 ;; This function uses a non-reentrant model
 25156 ;;
 25157                           
 25158                           
 25159                           ;psect for function i1___fltol
 25160  10BA                     i1___fltol:
 25161  10BA                     i1l4992:	
 25162                           ;incstack = 0
 25163                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 25164                           
 25165  10BA  1003               	clrc
 25166  10BB  0020               	movlb	0	; select bank0
 25167  10BC  0D3C               	rlf	i1___fltol@f1+2,w
 25168  10BD  0D3D               	rlf	i1___fltol@f1+3,w
 25169  10BE  00BE               	movwf	??i1___fltol
 25170  10BF  083E               	movf	??i1___fltol,w
 25171  10C0  00C4               	movwf	i1___fltol@exp1
 25172  10C1  0844               	movf	i1___fltol@exp1,w
 25173  10C2  1D03               	btfss	3,2
 25174  10C3  28C5               	goto	u530_21
 25175  10C4  28C6               	goto	u530_20
 25176  10C5                     u530_21:
 25177  10C5  28CF               	goto	i1l4998
 25178  10C6                     u530_20:
 25179  10C6                     i1l4994:
 25180  10C6  3000               	movlw	0
 25181  10C7  00BD               	movwf	?i1___fltol+3
 25182  10C8  3000               	movlw	0
 25183  10C9  00BC               	movwf	?i1___fltol+2
 25184  10CA  3000               	movlw	0
 25185  10CB  00BB               	movwf	?i1___fltol+1
 25186  10CC  3000               	movlw	0
 25187  10CD  00BA               	movwf	?i1___fltol
 25188  10CE  292E               	goto	i1l1389
 25189  10CF                     i1l4998:
 25190  10CF  083A               	movf	i1___fltol@f1,w
 25191  10D0  00BE               	movwf	??i1___fltol
 25192  10D1  083B               	movf	i1___fltol@f1+1,w
 25193  10D2  00BF               	movwf	??i1___fltol+1
 25194  10D3  083C               	movf	i1___fltol@f1+2,w
 25195  10D4  00C0               	movwf	??i1___fltol+2
 25196  10D5  083D               	movf	i1___fltol@f1+3,w
 25197  10D6  00C1               	movwf	??i1___fltol+3
 25198  10D7  301F               	movlw	31
 25199  10D8                     u531_25:
 25200  10D8  36C1               	lsrf	??i1___fltol+3,f
 25201  10D9  0CC0               	rrf	??i1___fltol+2,f
 25202  10DA  0CBF               	rrf	??i1___fltol+1,f
 25203  10DB  0CBE               	rrf	??i1___fltol,f
 25204  10DC                     u531_20:
 25205  10DC  0B89               	decfsz	9,f
 25206  10DD  28D8               	goto	u531_25
 25207  10DE  083E               	movf	??i1___fltol,w
 25208  10DF  00C2               	movwf	??i1___fltol+4
 25209  10E0  0842               	movf	??i1___fltol+4,w
 25210  10E1  00C3               	movwf	i1___fltol@sign1
 25211  10E2                     i1l5000:
 25212  10E2  17BC               	bsf	i1___fltol@f1+2,7
 25213  10E3                     i1l5002:
 25214  10E3  30FF               	movlw	255
 25215  10E4  05BA               	andwf	i1___fltol@f1,f
 25216  10E5  30FF               	movlw	255
 25217  10E6  05BB               	andwf	i1___fltol@f1+1,f
 25218  10E7  30FF               	movlw	255
 25219  10E8  05BC               	andwf	i1___fltol@f1+2,f
 25220  10E9  3000               	movlw	0
 25221  10EA  05BD               	andwf	i1___fltol@f1+3,f
 25222  10EB                     i1l5004:
 25223  10EB  3096               	movlw	150
 25224  10EC  02C4               	subwf	i1___fltol@exp1,f
 25225  10ED                     i1l5006:
 25226  10ED  1FC4               	btfss	i1___fltol@exp1,7
 25227  10EE  28F0               	goto	u532_21
 25228  10EF  28F1               	goto	u532_20
 25229  10F0                     u532_21:
 25230  10F0  2909               	goto	i1l5016
 25231  10F1                     u532_20:
 25232  10F1                     i1l5008:
 25233  10F1  0844               	movf	i1___fltol@exp1,w
 25234  10F2  3A80               	xorlw	128
 25235  10F3  3E97               	addlw	151
 25236  10F4  1803               	skipnc
 25237  10F5  28F7               	goto	u533_21
 25238  10F6  28F8               	goto	u533_20
 25239  10F7                     u533_21:
 25240  10F7  28F9               	goto	i1l5014
 25241  10F8                     u533_20:
 25242  10F8  28C6               	goto	i1l4994
 25243  10F9                     i1l5014:
 25244  10F9  3001               	movlw	1
 25245  10FA                     u534_25:
 25246  10FA  36BD               	lsrf	i1___fltol@f1+3,f
 25247  10FB  0CBC               	rrf	i1___fltol@f1+2,f
 25248  10FC  0CBB               	rrf	i1___fltol@f1+1,f
 25249  10FD  0CBA               	rrf	i1___fltol@f1,f
 25250  10FE  0B89               	decfsz	9,f
 25251  10FF  28FA               	goto	u534_25
 25252  1100  3001               	movlw	1
 25253  1101  00BE               	movwf	??i1___fltol
 25254  1102  083E               	movf	??i1___fltol,w
 25255  1103  07C4               	addwf	i1___fltol@exp1,f
 25256  1104  1D03               	btfss	3,2
 25257  1105  2907               	goto	u535_21
 25258  1106  2908               	goto	u535_20
 25259  1107                     u535_21:
 25260  1107  28F9               	goto	i1l5014
 25261  1108                     u535_20:
 25262  1108  291E               	goto	i1l5024
 25263  1109                     i1l5016:
 25264  1109  3020               	movlw	32
 25265  110A  0244               	subwf	i1___fltol@exp1,w
 25266  110B  1C03               	skipc
 25267  110C  290E               	goto	u536_21
 25268  110D  290F               	goto	u536_20
 25269  110E                     u536_21:
 25270  110E  2919               	goto	i1l1396
 25271  110F                     u536_20:
 25272  110F  28C6               	goto	i1l4994
 25273  1110                     i1l5022:
 25274  1110  3001               	movlw	1
 25275  1111                     u537_25:
 25276  1111  35BA               	lslf	i1___fltol@f1,f
 25277  1112  0DBB               	rlf	i1___fltol@f1+1,f
 25278  1113  0DBC               	rlf	i1___fltol@f1+2,f
 25279  1114  0DBD               	rlf	i1___fltol@f1+3,f
 25280  1115  0B89               	decfsz	9,f
 25281  1116  2911               	goto	u537_25
 25282  1117  3001               	movlw	1
 25283  1118  02C4               	subwf	i1___fltol@exp1,f
 25284  1119                     i1l1396:
 25285  1119  0844               	movf	i1___fltol@exp1,w
 25286  111A  1D03               	btfss	3,2
 25287  111B  291D               	goto	u538_21
 25288  111C  291E               	goto	u538_20
 25289  111D                     u538_21:
 25290  111D  2910               	goto	i1l5022
 25291  111E                     u538_20:
 25292  111E                     i1l5024:
 25293  111E  0843               	movf	i1___fltol@sign1,w
 25294  111F  1903               	btfsc	3,2
 25295  1120  2922               	goto	u539_21
 25296  1121  2923               	goto	u539_20
 25297  1122                     u539_21:
 25298  1122  292E               	goto	i1l1399
 25299  1123                     u539_20:
 25300  1123                     i1l5026:
 25301  1123  09BA               	comf	i1___fltol@f1,f
 25302  1124  09BB               	comf	i1___fltol@f1+1,f
 25303  1125  09BC               	comf	i1___fltol@f1+2,f
 25304  1126  09BD               	comf	i1___fltol@f1+3,f
 25305  1127  0ABA               	incf	i1___fltol@f1,f
 25306  1128  1903               	skipnz
 25307  1129  0ABB               	incf	i1___fltol@f1+1,f
 25308  112A  1903               	skipnz
 25309  112B  0ABC               	incf	i1___fltol@f1+2,f
 25310  112C  1903               	skipnz
 25311  112D  0ABD               	incf	i1___fltol@f1+3,f
 25312  112E                     i1l1399:
 25313  112E                     i1l1389:
 25314  112E  0008               	return
 25315  112F                     __end_ofi1___fltol:
 25316                           
 25317                           	psect	text102
 25318  02D3                     __ptext102:	
 25319 ;; *************** function i1___flmul *****************
 25320 ;; Defined at:
 25321 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
 25322 ;; Parameters:    Size  Location     Type
 25323 ;;  b               4    0[BANK0 ] long 
 25324 ;;  a               4    4[BANK0 ] long 
 25325 ;; Auto vars:     Size  Location     Type
 25326 ;;  prod            4   20[BANK0 ] struct .
 25327 ;;  grs             4   14[BANK0 ] unsigned long 
 25328 ;;  temp            2   24[BANK0 ] struct .
 25329 ;;  bexp            1   19[BANK0 ] unsigned char 
 25330 ;;  aexp            1   18[BANK0 ] unsigned char 
 25331 ;;  sign            1   13[BANK0 ] unsigned char 
 25332 ;; Return value:  Size  Location     Type
 25333 ;;                  4    0[BANK0 ] unsigned char 
 25334 ;; Registers used:
 25335 ;;		wreg, status,2, status,0, pclath, cstack
 25336 ;; Tracked objects:
 25337 ;;		On entry : 0/0
 25338 ;;		On exit  : 0/0
 25339 ;;		Unchanged: 0/0
 25340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25341 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25342 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25343 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25344 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25345 ;;Total ram usage:       26 bytes
 25346 ;; Hardware stack levels used:    1
 25347 ;; Hardware stack levels required when called:    1
 25348 ;; This function calls:
 25349 ;;		i1__Umul8_16
 25350 ;; This function is called by:
 25351 ;;		_frequency_calculation
 25352 ;; This function uses a non-reentrant model
 25353 ;;
 25354                           
 25355                           
 25356                           ;psect for function i1___flmul
 25357  02D3                     i1___flmul:
 25358  02D3                     i1l5028:	
 25359                           ;incstack = 0
 25360                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 25361                           
 25362  02D3  0020               	movlb	0	; select bank0
 25363  02D4  0823               	movf	i1___flmul@b+3,w
 25364  02D5  3980               	andlw	128
 25365  02D6  00A8               	movwf	??i1___flmul
 25366  02D7  0828               	movf	??i1___flmul,w
 25367  02D8  00AD               	movwf	i1___flmul@sign
 25368  02D9                     i1l5030:
 25369  02D9  3523               	lslf	i1___flmul@b+3,w
 25370  02DA  00A8               	movwf	??i1___flmul
 25371  02DB  0828               	movf	??i1___flmul,w
 25372  02DC  00B3               	movwf	i1___flmul@bexp
 25373  02DD                     i1l5032:
 25374  02DD  1FA2               	btfss	i1___flmul@b+2,7
 25375  02DE  2AE0               	goto	u540_21
 25376  02DF  2AE1               	goto	u540_20
 25377  02E0                     u540_21:
 25378  02E0  2AE2               	goto	i1l5036
 25379  02E1                     u540_20:
 25380  02E1                     i1l5034:
 25381  02E1  1433               	bsf	i1___flmul@bexp,0
 25382  02E2                     i1l5036:
 25383  02E2  0833               	movf	i1___flmul@bexp,w
 25384  02E3  1903               	btfsc	3,2
 25385  02E4  2AE6               	goto	u541_21
 25386  02E5  2AE7               	goto	u541_20
 25387  02E6                     u541_21:
 25388  02E6  2AF6               	goto	i1l5044
 25389  02E7                     u541_20:
 25390  02E7                     i1l5038:
 25391  02E7  0A33               	incf	i1___flmul@bexp,w
 25392  02E8  1D03               	btfss	3,2
 25393  02E9  2AEB               	goto	u542_21
 25394  02EA  2AEC               	goto	u542_20
 25395  02EB                     u542_21:
 25396  02EB  2AF4               	goto	i1l5042
 25397  02EC                     u542_20:
 25398  02EC                     i1l5040:
 25399  02EC  3000               	movlw	0
 25400  02ED  00A3               	movwf	i1___flmul@b+3
 25401  02EE  3000               	movlw	0
 25402  02EF  00A2               	movwf	i1___flmul@b+2
 25403  02F0  3000               	movlw	0
 25404  02F1  00A1               	movwf	i1___flmul@b+1
 25405  02F2  3000               	movlw	0
 25406  02F3  00A0               	movwf	i1___flmul@b
 25407  02F4                     i1l5042:
 25408  02F4  17A2               	bsf	i1___flmul@b+2,7
 25409  02F5  2AFE               	goto	i1l5046
 25410  02F6                     i1l5044:
 25411  02F6  3000               	movlw	0
 25412  02F7  00A3               	movwf	i1___flmul@b+3
 25413  02F8  3000               	movlw	0
 25414  02F9  00A2               	movwf	i1___flmul@b+2
 25415  02FA  3000               	movlw	0
 25416  02FB  00A1               	movwf	i1___flmul@b+1
 25417  02FC  3000               	movlw	0
 25418  02FD  00A0               	movwf	i1___flmul@b
 25419  02FE                     i1l5046:
 25420  02FE  0827               	movf	i1___flmul@a+3,w
 25421  02FF  3980               	andlw	128
 25422  0300  00A8               	movwf	??i1___flmul
 25423  0301  0828               	movf	??i1___flmul,w
 25424  0302  06AD               	xorwf	i1___flmul@sign,f
 25425  0303                     i1l5048:
 25426  0303  3527               	lslf	i1___flmul@a+3,w
 25427  0304  00A8               	movwf	??i1___flmul
 25428  0305  0828               	movf	??i1___flmul,w
 25429  0306  00B2               	movwf	i1___flmul@aexp
 25430  0307                     i1l5050:
 25431  0307  1FA6               	btfss	i1___flmul@a+2,7
 25432  0308  2B0A               	goto	u543_21
 25433  0309  2B0B               	goto	u543_20
 25434  030A                     u543_21:
 25435  030A  2B0C               	goto	i1l5054
 25436  030B                     u543_20:
 25437  030B                     i1l5052:
 25438  030B  1432               	bsf	i1___flmul@aexp,0
 25439  030C                     i1l5054:
 25440  030C  0832               	movf	i1___flmul@aexp,w
 25441  030D  1903               	btfsc	3,2
 25442  030E  2B10               	goto	u544_21
 25443  030F  2B11               	goto	u544_20
 25444  0310                     u544_21:
 25445  0310  2B20               	goto	i1l5062
 25446  0311                     u544_20:
 25447  0311                     i1l5056:
 25448  0311  0A32               	incf	i1___flmul@aexp,w
 25449  0312  1D03               	btfss	3,2
 25450  0313  2B15               	goto	u545_21
 25451  0314  2B16               	goto	u545_20
 25452  0315                     u545_21:
 25453  0315  2B1E               	goto	i1l5060
 25454  0316                     u545_20:
 25455  0316                     i1l5058:
 25456  0316  3000               	movlw	0
 25457  0317  00A7               	movwf	i1___flmul@a+3
 25458  0318  3000               	movlw	0
 25459  0319  00A6               	movwf	i1___flmul@a+2
 25460  031A  3000               	movlw	0
 25461  031B  00A5               	movwf	i1___flmul@a+1
 25462  031C  3000               	movlw	0
 25463  031D  00A4               	movwf	i1___flmul@a
 25464  031E                     i1l5060:
 25465  031E  17A6               	bsf	i1___flmul@a+2,7
 25466  031F  2B28               	goto	i1l5064
 25467  0320                     i1l5062:
 25468  0320  3000               	movlw	0
 25469  0321  00A7               	movwf	i1___flmul@a+3
 25470  0322  3000               	movlw	0
 25471  0323  00A6               	movwf	i1___flmul@a+2
 25472  0324  3000               	movlw	0
 25473  0325  00A5               	movwf	i1___flmul@a+1
 25474  0326  3000               	movlw	0
 25475  0327  00A4               	movwf	i1___flmul@a
 25476  0328                     i1l5064:
 25477  0328  0832               	movf	i1___flmul@aexp,w
 25478  0329  1903               	btfsc	3,2
 25479  032A  2B2C               	goto	u546_21
 25480  032B  2B2D               	goto	u546_20
 25481  032C                     u546_21:
 25482  032C  2B32               	goto	i1l5068
 25483  032D                     u546_20:
 25484  032D                     i1l5066:
 25485  032D  0833               	movf	i1___flmul@bexp,w
 25486  032E  1D03               	btfss	3,2
 25487  032F  2B31               	goto	u547_21
 25488  0330  2B32               	goto	u547_20
 25489  0331                     u547_21:
 25490  0331  2B3B               	goto	i1l5072
 25491  0332                     u547_20:
 25492  0332                     i1l5068:
 25493  0332  3000               	movlw	0
 25494  0333  00A3               	movwf	?i1___flmul+3
 25495  0334  3000               	movlw	0
 25496  0335  00A2               	movwf	?i1___flmul+2
 25497  0336  3000               	movlw	0
 25498  0337  00A1               	movwf	?i1___flmul+1
 25499  0338  3000               	movlw	0
 25500  0339  00A0               	movwf	?i1___flmul
 25501  033A  2D29               	goto	i1l1592
 25502  033B                     i1l5072:
 25503  033B  0820               	movf	i1___flmul@b,w
 25504  033C  00A8               	movwf	??i1___flmul
 25505  033D  0828               	movf	??i1___flmul,w
 25506  033E  00F0               	movwf	i1__Umul8_16@multiplicand
 25507  033F  0826               	movf	i1___flmul@a+2,w
 25508  0340  319A  22BB  3182   	fcall	i1__Umul8_16
 25509  0343  0871               	movf	?i1__Umul8_16+1,w
 25510  0344  0020               	movlb	0	; select bank0
 25511  0345  00B9               	movwf	i1___flmul@temp+1
 25512  0346  0870               	movf	?i1__Umul8_16,w
 25513  0347  00B8               	movwf	i1___flmul@temp
 25514  0348                     i1l5074:
 25515  0348  0838               	movf	i1___flmul@temp,w
 25516  0349  00A8               	movwf	??i1___flmul
 25517  034A  01A9               	clrf	??i1___flmul+1
 25518  034B  01AA               	clrf	??i1___flmul+2
 25519  034C  01AB               	clrf	??i1___flmul+3
 25520  034D  082B               	movf	??i1___flmul+3,w
 25521  034E  00B1               	movwf	i1___flmul@grs+3
 25522  034F  082A               	movf	??i1___flmul+2,w
 25523  0350  00B0               	movwf	i1___flmul@grs+2
 25524  0351  0829               	movf	??i1___flmul+1,w
 25525  0352  00AF               	movwf	i1___flmul@grs+1
 25526  0353  0828               	movf	??i1___flmul,w
 25527  0354  00AE               	movwf	i1___flmul@grs
 25528  0355                     i1l5076:
 25529  0355  0839               	movf	i1___flmul@temp+1,w
 25530  0356  00A8               	movwf	??i1___flmul
 25531  0357  01A9               	clrf	??i1___flmul+1
 25532  0358  01AA               	clrf	??i1___flmul+2
 25533  0359  01AB               	clrf	??i1___flmul+3
 25534  035A  082B               	movf	??i1___flmul+3,w
 25535  035B  00B7               	movwf	i1___flmul@prod+3
 25536  035C  082A               	movf	??i1___flmul+2,w
 25537  035D  00B6               	movwf	i1___flmul@prod+2
 25538  035E  0829               	movf	??i1___flmul+1,w
 25539  035F  00B5               	movwf	i1___flmul@prod+1
 25540  0360  0828               	movf	??i1___flmul,w
 25541  0361  00B4               	movwf	i1___flmul@prod
 25542  0362  0821               	movf	i1___flmul@b+1,w
 25543  0363  00A8               	movwf	??i1___flmul
 25544  0364  0828               	movf	??i1___flmul,w
 25545  0365  00F0               	movwf	i1__Umul8_16@multiplicand
 25546  0366  0825               	movf	i1___flmul@a+1,w
 25547  0367  319A  22BB  3182   	fcall	i1__Umul8_16
 25548  036A  0871               	movf	?i1__Umul8_16+1,w
 25549  036B  0020               	movlb	0	; select bank0
 25550  036C  00B9               	movwf	i1___flmul@temp+1
 25551  036D  0870               	movf	?i1__Umul8_16,w
 25552  036E  00B8               	movwf	i1___flmul@temp
 25553  036F                     i1l5078:
 25554  036F  0838               	movf	i1___flmul@temp,w
 25555  0370  00A8               	movwf	??i1___flmul
 25556  0371  01A9               	clrf	??i1___flmul+1
 25557  0372  01AA               	clrf	??i1___flmul+2
 25558  0373  01AB               	clrf	??i1___flmul+3
 25559  0374  0828               	movf	??i1___flmul,w
 25560  0375  07AE               	addwf	i1___flmul@grs,f
 25561  0376  0829               	movf	??i1___flmul+1,w
 25562  0377  3DAF               	addwfc	i1___flmul@grs+1,f
 25563  0378  082A               	movf	??i1___flmul+2,w
 25564  0379  3DB0               	addwfc	i1___flmul@grs+2,f
 25565  037A  082B               	movf	??i1___flmul+3,w
 25566  037B  3DB1               	addwfc	i1___flmul@grs+3,f
 25567  037C                     i1l5080:
 25568  037C  0839               	movf	i1___flmul@temp+1,w
 25569  037D  00A8               	movwf	??i1___flmul
 25570  037E  01A9               	clrf	??i1___flmul+1
 25571  037F  01AA               	clrf	??i1___flmul+2
 25572  0380  01AB               	clrf	??i1___flmul+3
 25573  0381  0828               	movf	??i1___flmul,w
 25574  0382  07B4               	addwf	i1___flmul@prod,f
 25575  0383  0829               	movf	??i1___flmul+1,w
 25576  0384  3DB5               	addwfc	i1___flmul@prod+1,f
 25577  0385  082A               	movf	??i1___flmul+2,w
 25578  0386  3DB6               	addwfc	i1___flmul@prod+2,f
 25579  0387  082B               	movf	??i1___flmul+3,w
 25580  0388  3DB7               	addwfc	i1___flmul@prod+3,f
 25581  0389  0822               	movf	i1___flmul@b+2,w
 25582  038A  00A8               	movwf	??i1___flmul
 25583  038B  0828               	movf	??i1___flmul,w
 25584  038C  00F0               	movwf	i1__Umul8_16@multiplicand
 25585  038D  0824               	movf	i1___flmul@a,w
 25586  038E  319A  22BB  3182   	fcall	i1__Umul8_16
 25587  0391  0871               	movf	?i1__Umul8_16+1,w
 25588  0392  0020               	movlb	0	; select bank0
 25589  0393  00B9               	movwf	i1___flmul@temp+1
 25590  0394  0870               	movf	?i1__Umul8_16,w
 25591  0395  00B8               	movwf	i1___flmul@temp
 25592  0396                     i1l5082:
 25593  0396  0838               	movf	i1___flmul@temp,w
 25594  0397  00A8               	movwf	??i1___flmul
 25595  0398  01A9               	clrf	??i1___flmul+1
 25596  0399  01AA               	clrf	??i1___flmul+2
 25597  039A  01AB               	clrf	??i1___flmul+3
 25598  039B  0828               	movf	??i1___flmul,w
 25599  039C  07AE               	addwf	i1___flmul@grs,f
 25600  039D  0829               	movf	??i1___flmul+1,w
 25601  039E  3DAF               	addwfc	i1___flmul@grs+1,f
 25602  039F  082A               	movf	??i1___flmul+2,w
 25603  03A0  3DB0               	addwfc	i1___flmul@grs+2,f
 25604  03A1  082B               	movf	??i1___flmul+3,w
 25605  03A2  3DB1               	addwfc	i1___flmul@grs+3,f
 25606  03A3                     i1l5084:
 25607  03A3  0839               	movf	i1___flmul@temp+1,w
 25608  03A4  00A8               	movwf	??i1___flmul
 25609  03A5  01A9               	clrf	??i1___flmul+1
 25610  03A6  01AA               	clrf	??i1___flmul+2
 25611  03A7  01AB               	clrf	??i1___flmul+3
 25612  03A8  0828               	movf	??i1___flmul,w
 25613  03A9  07B4               	addwf	i1___flmul@prod,f
 25614  03AA  0829               	movf	??i1___flmul+1,w
 25615  03AB  3DB5               	addwfc	i1___flmul@prod+1,f
 25616  03AC  082A               	movf	??i1___flmul+2,w
 25617  03AD  3DB6               	addwfc	i1___flmul@prod+2,f
 25618  03AE  082B               	movf	??i1___flmul+3,w
 25619  03AF  3DB7               	addwfc	i1___flmul@prod+3,f
 25620  03B0                     i1l5086:
 25621  03B0  3008               	movlw	8
 25622  03B1                     u548_25:
 25623  03B1  35AE               	lslf	i1___flmul@grs,f
 25624  03B2  0DAF               	rlf	i1___flmul@grs+1,f
 25625  03B3  0DB0               	rlf	i1___flmul@grs+2,f
 25626  03B4  0DB1               	rlf	i1___flmul@grs+3,f
 25627  03B5  0B89               	decfsz	9,f
 25628  03B6  2BB1               	goto	u548_25
 25629  03B7                     i1l5088:
 25630  03B7  0821               	movf	i1___flmul@b+1,w
 25631  03B8  00A8               	movwf	??i1___flmul
 25632  03B9  0828               	movf	??i1___flmul,w
 25633  03BA  00F0               	movwf	i1__Umul8_16@multiplicand
 25634  03BB  0824               	movf	i1___flmul@a,w
 25635  03BC  319A  22BB  3182   	fcall	i1__Umul8_16
 25636  03BF  0871               	movf	?i1__Umul8_16+1,w
 25637  03C0  0020               	movlb	0	; select bank0
 25638  03C1  00B9               	movwf	i1___flmul@temp+1
 25639  03C2  0870               	movf	?i1__Umul8_16,w
 25640  03C3  00B8               	movwf	i1___flmul@temp
 25641  03C4                     i1l5090:
 25642  03C4  0838               	movf	i1___flmul@temp,w
 25643  03C5  07AE               	addwf	i1___flmul@grs,f
 25644  03C6  0839               	movf	i1___flmul@temp+1,w
 25645  03C7  3DAF               	addwfc	i1___flmul@grs+1,f
 25646  03C8  3000               	movlw	0
 25647  03C9  3DB0               	addwfc	i1___flmul@grs+2,f
 25648  03CA  3DB1               	addwfc	i1___flmul@grs+3,f
 25649  03CB                     i1l5092:
 25650  03CB  0820               	movf	i1___flmul@b,w
 25651  03CC  00A8               	movwf	??i1___flmul
 25652  03CD  0828               	movf	??i1___flmul,w
 25653  03CE  00F0               	movwf	i1__Umul8_16@multiplicand
 25654  03CF  0825               	movf	i1___flmul@a+1,w
 25655  03D0  319A  22BB  3182   	fcall	i1__Umul8_16
 25656  03D3  0871               	movf	?i1__Umul8_16+1,w
 25657  03D4  0020               	movlb	0	; select bank0
 25658  03D5  00B9               	movwf	i1___flmul@temp+1
 25659  03D6  0870               	movf	?i1__Umul8_16,w
 25660  03D7  00B8               	movwf	i1___flmul@temp
 25661  03D8                     i1l5094:
 25662  03D8  0838               	movf	i1___flmul@temp,w
 25663  03D9  07AE               	addwf	i1___flmul@grs,f
 25664  03DA  0839               	movf	i1___flmul@temp+1,w
 25665  03DB  3DAF               	addwfc	i1___flmul@grs+1,f
 25666  03DC  3000               	movlw	0
 25667  03DD  3DB0               	addwfc	i1___flmul@grs+2,f
 25668  03DE  3DB1               	addwfc	i1___flmul@grs+3,f
 25669  03DF                     i1l5096:
 25670  03DF  3008               	movlw	8
 25671  03E0                     u549_25:
 25672  03E0  35AE               	lslf	i1___flmul@grs,f
 25673  03E1  0DAF               	rlf	i1___flmul@grs+1,f
 25674  03E2  0DB0               	rlf	i1___flmul@grs+2,f
 25675  03E3  0DB1               	rlf	i1___flmul@grs+3,f
 25676  03E4  0B89               	decfsz	9,f
 25677  03E5  2BE0               	goto	u549_25
 25678  03E6  0820               	movf	i1___flmul@b,w
 25679  03E7  00A8               	movwf	??i1___flmul
 25680  03E8  0828               	movf	??i1___flmul,w
 25681  03E9  00F0               	movwf	i1__Umul8_16@multiplicand
 25682  03EA  0824               	movf	i1___flmul@a,w
 25683  03EB  319A  22BB  3182   	fcall	i1__Umul8_16
 25684  03EE  0871               	movf	?i1__Umul8_16+1,w
 25685  03EF  0020               	movlb	0	; select bank0
 25686  03F0  00B9               	movwf	i1___flmul@temp+1
 25687  03F1  0870               	movf	?i1__Umul8_16,w
 25688  03F2  00B8               	movwf	i1___flmul@temp
 25689  03F3                     i1l5098:
 25690  03F3  0838               	movf	i1___flmul@temp,w
 25691  03F4  07AE               	addwf	i1___flmul@grs,f
 25692  03F5  0839               	movf	i1___flmul@temp+1,w
 25693  03F6  3DAF               	addwfc	i1___flmul@grs+1,f
 25694  03F7  3000               	movlw	0
 25695  03F8  3DB0               	addwfc	i1___flmul@grs+2,f
 25696  03F9  3DB1               	addwfc	i1___flmul@grs+3,f
 25697  03FA                     i1l5100:
 25698  03FA  0821               	movf	i1___flmul@b+1,w
 25699  03FB  00A8               	movwf	??i1___flmul
 25700  03FC  0828               	movf	??i1___flmul,w
 25701  03FD  00F0               	movwf	i1__Umul8_16@multiplicand
 25702  03FE  0826               	movf	i1___flmul@a+2,w
 25703  03FF  319A  22BB  3182   	fcall	i1__Umul8_16
 25704  0402  0871               	movf	?i1__Umul8_16+1,w
 25705  0403  0020               	movlb	0	; select bank0
 25706  0404  00B9               	movwf	i1___flmul@temp+1
 25707  0405  0870               	movf	?i1__Umul8_16,w
 25708  0406  00B8               	movwf	i1___flmul@temp
 25709  0407  0838               	movf	i1___flmul@temp,w
 25710  0408  07B4               	addwf	i1___flmul@prod,f
 25711  0409  0839               	movf	i1___flmul@temp+1,w
 25712  040A  3DB5               	addwfc	i1___flmul@prod+1,f
 25713  040B  3000               	movlw	0
 25714  040C  3DB6               	addwfc	i1___flmul@prod+2,f
 25715  040D  3DB7               	addwfc	i1___flmul@prod+3,f
 25716  040E                     i1l5102:
 25717  040E  0822               	movf	i1___flmul@b+2,w
 25718  040F  00A8               	movwf	??i1___flmul
 25719  0410  0828               	movf	??i1___flmul,w
 25720  0411  00F0               	movwf	i1__Umul8_16@multiplicand
 25721  0412  0825               	movf	i1___flmul@a+1,w
 25722  0413  319A  22BB  3182   	fcall	i1__Umul8_16
 25723  0416  0871               	movf	?i1__Umul8_16+1,w
 25724  0417  0020               	movlb	0	; select bank0
 25725  0418  00B9               	movwf	i1___flmul@temp+1
 25726  0419  0870               	movf	?i1__Umul8_16,w
 25727  041A  00B8               	movwf	i1___flmul@temp
 25728  041B                     i1l5104:
 25729  041B  0838               	movf	i1___flmul@temp,w
 25730  041C  07B4               	addwf	i1___flmul@prod,f
 25731  041D  0839               	movf	i1___flmul@temp+1,w
 25732  041E  3DB5               	addwfc	i1___flmul@prod+1,f
 25733  041F  3000               	movlw	0
 25734  0420  3DB6               	addwfc	i1___flmul@prod+2,f
 25735  0421  3DB7               	addwfc	i1___flmul@prod+3,f
 25736  0422  0822               	movf	i1___flmul@b+2,w
 25737  0423  00A8               	movwf	??i1___flmul
 25738  0424  0828               	movf	??i1___flmul,w
 25739  0425  00F0               	movwf	i1__Umul8_16@multiplicand
 25740  0426  0826               	movf	i1___flmul@a+2,w
 25741  0427  319A  22BB  3182   	fcall	i1__Umul8_16
 25742  042A  0871               	movf	?i1__Umul8_16+1,w
 25743  042B  0020               	movlb	0	; select bank0
 25744  042C  00B9               	movwf	i1___flmul@temp+1
 25745  042D  0870               	movf	?i1__Umul8_16,w
 25746  042E  00B8               	movwf	i1___flmul@temp
 25747  042F                     i1l5106:
 25748  042F  0838               	movf	i1___flmul@temp,w
 25749  0430  00A8               	movwf	??i1___flmul
 25750  0431  0839               	movf	i1___flmul@temp+1,w
 25751  0432  00A9               	movwf	??i1___flmul+1
 25752  0433  01AA               	clrf	??i1___flmul+2
 25753  0434  01AB               	clrf	??i1___flmul+3
 25754  0435  3008               	movlw	8
 25755  0436                     u550_25:
 25756  0436  35A8               	lslf	??i1___flmul,f
 25757  0437  0DA9               	rlf	??i1___flmul+1,f
 25758  0438  0DAA               	rlf	??i1___flmul+2,f
 25759  0439  0DAB               	rlf	??i1___flmul+3,f
 25760  043A                     u550_20:
 25761  043A  0B89               	decfsz	9,f
 25762  043B  2C36               	goto	u550_25
 25763  043C  0828               	movf	??i1___flmul,w
 25764  043D  07B4               	addwf	i1___flmul@prod,f
 25765  043E  0829               	movf	??i1___flmul+1,w
 25766  043F  3DB5               	addwfc	i1___flmul@prod+1,f
 25767  0440  082A               	movf	??i1___flmul+2,w
 25768  0441  3DB6               	addwfc	i1___flmul@prod+2,f
 25769  0442  082B               	movf	??i1___flmul+3,w
 25770  0443  3DB7               	addwfc	i1___flmul@prod+3,f
 25771  0444                     i1l5108:
 25772  0444  082E               	movf	i1___flmul@grs,w
 25773  0445  00A8               	movwf	??i1___flmul
 25774  0446  082F               	movf	i1___flmul@grs+1,w
 25775  0447  00A9               	movwf	??i1___flmul+1
 25776  0448  0830               	movf	i1___flmul@grs+2,w
 25777  0449  00AA               	movwf	??i1___flmul+2
 25778  044A  0831               	movf	i1___flmul@grs+3,w
 25779  044B  00AB               	movwf	??i1___flmul+3
 25780  044C  3018               	movlw	24
 25781  044D                     u551_25:
 25782  044D  36AB               	lsrf	??i1___flmul+3,f
 25783  044E  0CAA               	rrf	??i1___flmul+2,f
 25784  044F  0CA9               	rrf	??i1___flmul+1,f
 25785  0450  0CA8               	rrf	??i1___flmul,f
 25786  0451                     u551_20:
 25787  0451  0B89               	decfsz	9,f
 25788  0452  2C4D               	goto	u551_25
 25789  0453  0828               	movf	??i1___flmul,w
 25790  0454  07B4               	addwf	i1___flmul@prod,f
 25791  0455  0829               	movf	??i1___flmul+1,w
 25792  0456  3DB5               	addwfc	i1___flmul@prod+1,f
 25793  0457  082A               	movf	??i1___flmul+2,w
 25794  0458  3DB6               	addwfc	i1___flmul@prod+2,f
 25795  0459  082B               	movf	??i1___flmul+3,w
 25796  045A  3DB7               	addwfc	i1___flmul@prod+3,f
 25797  045B                     i1l5110:
 25798  045B  3008               	movlw	8
 25799  045C                     u552_25:
 25800  045C  35AE               	lslf	i1___flmul@grs,f
 25801  045D  0DAF               	rlf	i1___flmul@grs+1,f
 25802  045E  0DB0               	rlf	i1___flmul@grs+2,f
 25803  045F  0DB1               	rlf	i1___flmul@grs+3,f
 25804  0460  0B89               	decfsz	9,f
 25805  0461  2C5C               	goto	u552_25
 25806  0462                     i1l5112:
 25807  0462  0833               	movf	i1___flmul@bexp,w
 25808  0463  0732               	addwf	i1___flmul@aexp,w
 25809  0464  00A8               	movwf	??i1___flmul
 25810  0465  01A9               	clrf	??i1___flmul+1
 25811  0466  0DA9               	rlf	??i1___flmul+1,f
 25812  0467  0828               	movf	??i1___flmul,w
 25813  0468  3E82               	addlw	130
 25814  0469  00B8               	movwf	i1___flmul@temp
 25815  046A  30FF               	movlw	255
 25816  046B  3D29               	addwfc	??i1___flmul+1,w
 25817  046C  00B9               	movwf	i1___flmul@temp+1
 25818  046D  2C85               	goto	i1l5124
 25819  046E                     i1l5114:
 25820  046E  3001               	movlw	1
 25821  046F                     u553_25:
 25822  046F  35B4               	lslf	i1___flmul@prod,f
 25823  0470  0DB5               	rlf	i1___flmul@prod+1,f
 25824  0471  0DB6               	rlf	i1___flmul@prod+2,f
 25825  0472  0DB7               	rlf	i1___flmul@prod+3,f
 25826  0473  0B89               	decfsz	9,f
 25827  0474  2C6F               	goto	u553_25
 25828  0475                     i1l5116:
 25829  0475  1FB1               	btfss	i1___flmul@grs+3,7
 25830  0476  2C78               	goto	u554_21
 25831  0477  2C79               	goto	u554_20
 25832  0478                     u554_21:
 25833  0478  2C7A               	goto	i1l5120
 25834  0479                     u554_20:
 25835  0479                     i1l5118:
 25836  0479  1434               	bsf	i1___flmul@prod,0
 25837  047A                     i1l5120:
 25838  047A  3001               	movlw	1
 25839  047B                     u555_25:
 25840  047B  35AE               	lslf	i1___flmul@grs,f
 25841  047C  0DAF               	rlf	i1___flmul@grs+1,f
 25842  047D  0DB0               	rlf	i1___flmul@grs+2,f
 25843  047E  0DB1               	rlf	i1___flmul@grs+3,f
 25844  047F  0B89               	decfsz	9,f
 25845  0480  2C7B               	goto	u555_25
 25846  0481                     i1l5122:
 25847  0481  30FF               	movlw	255
 25848  0482  07B8               	addwf	i1___flmul@temp,f
 25849  0483  30FF               	movlw	255
 25850  0484  3DB9               	addwfc	i1___flmul@temp+1,f
 25851  0485                     i1l5124:
 25852  0485  1FB6               	btfss	i1___flmul@prod+2,7
 25853  0486  2C88               	goto	u556_21
 25854  0487  2C89               	goto	u556_20
 25855  0488                     u556_21:
 25856  0488  2C6E               	goto	i1l5114
 25857  0489                     u556_20:
 25858  0489                     i1l5126:
 25859  0489  01B2               	clrf	i1___flmul@aexp
 25860  048A                     i1l5128:
 25861  048A  1FB1               	btfss	i1___flmul@grs+3,7
 25862  048B  2C8D               	goto	u557_21
 25863  048C  2C8E               	goto	u557_20
 25864  048D                     u557_21:
 25865  048D  2CAA               	goto	i1l5136
 25866  048E                     u557_20:
 25867  048E                     i1l5130:
 25868  048E  30FF               	movlw	255
 25869  048F  052E               	andwf	i1___flmul@grs,w
 25870  0490  00A8               	movwf	??i1___flmul
 25871  0491  30FF               	movlw	255
 25872  0492  052F               	andwf	i1___flmul@grs+1,w
 25873  0493  00A9               	movwf	??i1___flmul+1
 25874  0494  30FF               	movlw	255
 25875  0495  0530               	andwf	i1___flmul@grs+2,w
 25876  0496  00AA               	movwf	??i1___flmul+2
 25877  0497  307F               	movlw	127
 25878  0498  0531               	andwf	i1___flmul@grs+3,w
 25879  0499  00AB               	movwf	??i1___flmul+3
 25880  049A  082B               	movf	??i1___flmul+3,w
 25881  049B  042A               	iorwf	??i1___flmul+2,w
 25882  049C  0429               	iorwf	??i1___flmul+1,w
 25883  049D  0428               	iorwf	??i1___flmul,w
 25884  049E  1903               	skipnz
 25885  049F  2CA1               	goto	u558_21
 25886  04A0  2CA2               	goto	u558_20
 25887  04A1                     u558_21:
 25888  04A1  2CA5               	goto	i1l1598
 25889  04A2                     u558_20:
 25890  04A2                     i1l5132:
 25891  04A2  01B2               	clrf	i1___flmul@aexp
 25892  04A3  0AB2               	incf	i1___flmul@aexp,f
 25893  04A4  2CAA               	goto	i1l5136
 25894  04A5                     i1l1598:
 25895  04A5  1C34               	btfss	i1___flmul@prod,0
 25896  04A6  2CA8               	goto	u559_21
 25897  04A7  2CA9               	goto	u559_20
 25898  04A8                     u559_21:
 25899  04A8  2CAA               	goto	i1l5136
 25900  04A9                     u559_20:
 25901  04A9  2CA2               	goto	i1l5132
 25902  04AA                     i1l5136:
 25903  04AA  0832               	movf	i1___flmul@aexp,w
 25904  04AB  1903               	btfsc	3,2
 25905  04AC  2CAE               	goto	u560_21
 25906  04AD  2CAF               	goto	u560_20
 25907  04AE                     u560_21:
 25908  04AE  2CD7               	goto	i1l5146
 25909  04AF                     u560_20:
 25910  04AF                     i1l5138:
 25911  04AF  3001               	movlw	1
 25912  04B0  07B4               	addwf	i1___flmul@prod,f
 25913  04B1  3000               	movlw	0
 25914  04B2  3DB5               	addwfc	i1___flmul@prod+1,f
 25915  04B3  3000               	movlw	0
 25916  04B4  3DB6               	addwfc	i1___flmul@prod+2,f
 25917  04B5  3000               	movlw	0
 25918  04B6  3DB7               	addwfc	i1___flmul@prod+3,f
 25919  04B7                     i1l5140:
 25920  04B7  1C37               	btfss	i1___flmul@prod+3,0
 25921  04B8  2CBA               	goto	u561_21
 25922  04B9  2CBB               	goto	u561_20
 25923  04BA                     u561_21:
 25924  04BA  2CD7               	goto	i1l5146
 25925  04BB                     u561_20:
 25926  04BB                     i1l5142:
 25927  04BB  0834               	movf	i1___flmul@prod,w
 25928  04BC  00A8               	movwf	??i1___flmul
 25929  04BD  0835               	movf	i1___flmul@prod+1,w
 25930  04BE  00A9               	movwf	??i1___flmul+1
 25931  04BF  0836               	movf	i1___flmul@prod+2,w
 25932  04C0  00AA               	movwf	??i1___flmul+2
 25933  04C1  0837               	movf	i1___flmul@prod+3,w
 25934  04C2  00AB               	movwf	??i1___flmul+3
 25935  04C3  3001               	movlw	1
 25936  04C4  00AC               	movwf	??i1___flmul+4
 25937  04C5                     u562_25:
 25938  04C5  37AB               	asrf	??i1___flmul+3,f
 25939  04C6  0CAA               	rrf	??i1___flmul+2,f
 25940  04C7  0CA9               	rrf	??i1___flmul+1,f
 25941  04C8  0CA8               	rrf	??i1___flmul,f
 25942  04C9                     u562_20:
 25943  04C9  0BAC               	decfsz	??i1___flmul+4,f
 25944  04CA  2CC5               	goto	u562_25
 25945  04CB  082B               	movf	??i1___flmul+3,w
 25946  04CC  00B7               	movwf	i1___flmul@prod+3
 25947  04CD  082A               	movf	??i1___flmul+2,w
 25948  04CE  00B6               	movwf	i1___flmul@prod+2
 25949  04CF  0829               	movf	??i1___flmul+1,w
 25950  04D0  00B5               	movwf	i1___flmul@prod+1
 25951  04D1  0828               	movf	??i1___flmul,w
 25952  04D2  00B4               	movwf	i1___flmul@prod
 25953  04D3                     i1l5144:
 25954  04D3  3001               	movlw	1
 25955  04D4  07B8               	addwf	i1___flmul@temp,f
 25956  04D5  3000               	movlw	0
 25957  04D6  3DB9               	addwfc	i1___flmul@temp+1,f
 25958  04D7                     i1l5146:
 25959  04D7  0839               	movf	i1___flmul@temp+1,w
 25960  04D8  3A80               	xorlw	128
 25961  04D9  00A8               	movwf	??i1___flmul
 25962  04DA  3080               	movlw	128
 25963  04DB  0228               	subwf	??i1___flmul,w
 25964  04DC  1D03               	skipz
 25965  04DD  2CE0               	goto	u563_25
 25966  04DE  30FF               	movlw	255
 25967  04DF  0238               	subwf	i1___flmul@temp,w
 25968  04E0                     u563_25:
 25969  04E0  1C03               	skipc
 25970  04E1  2CE3               	goto	u563_21
 25971  04E2  2CE4               	goto	u563_20
 25972  04E3                     u563_21:
 25973  04E3  2CEE               	goto	i1l5150
 25974  04E4                     u563_20:
 25975  04E4                     i1l5148:
 25976  04E4  307F               	movlw	127
 25977  04E5  0020               	movlb	0	; select bank0
 25978  04E6  00B7               	movwf	i1___flmul@prod+3
 25979  04E7  3080               	movlw	128
 25980  04E8  00B6               	movwf	i1___flmul@prod+2
 25981  04E9  3000               	movlw	0
 25982  04EA  00B5               	movwf	i1___flmul@prod+1
 25983  04EB  3000               	movlw	0
 25984  04EC  00B4               	movwf	i1___flmul@prod
 25985  04ED  2D1D               	goto	i1l1604
 25986  04EE                     i1l5150:
 25987  04EE  0020               	movlb	0	; select bank0
 25988  04EF  0839               	movf	i1___flmul@temp+1,w
 25989  04F0  3A80               	xorlw	128
 25990  04F1  00A8               	movwf	??i1___flmul
 25991  04F2  3080               	movlw	128
 25992  04F3  0228               	subwf	??i1___flmul,w
 25993  04F4  1D03               	skipz
 25994  04F5  2CF8               	goto	u564_25
 25995  04F6  3001               	movlw	1
 25996  04F7  0238               	subwf	i1___flmul@temp,w
 25997  04F8                     u564_25:
 25998  04F8  1803               	skipnc
 25999  04F9  2CFB               	goto	u564_21
 26000  04FA  2CFC               	goto	u564_20
 26001  04FB                     u564_21:
 26002  04FB  2D07               	goto	i1l5156
 26003  04FC                     u564_20:
 26004  04FC                     i1l5152:
 26005  04FC  3000               	movlw	0
 26006  04FD  0020               	movlb	0	; select bank0
 26007  04FE  00B7               	movwf	i1___flmul@prod+3
 26008  04FF  3000               	movlw	0
 26009  0500  00B6               	movwf	i1___flmul@prod+2
 26010  0501  3000               	movlw	0
 26011  0502  00B5               	movwf	i1___flmul@prod+1
 26012  0503  3000               	movlw	0
 26013  0504  00B4               	movwf	i1___flmul@prod
 26014  0505                     i1l5154:
 26015  0505  01AD               	clrf	i1___flmul@sign
 26016  0506  2D1D               	goto	i1l1604
 26017  0507                     i1l5156:
 26018  0507  0020               	movlb	0	; select bank0
 26019  0508  0838               	movf	i1___flmul@temp,w
 26020  0509  00A8               	movwf	??i1___flmul
 26021  050A  0828               	movf	??i1___flmul,w
 26022  050B  00B3               	movwf	i1___flmul@bexp
 26023  050C  30FF               	movlw	255
 26024  050D  05B4               	andwf	i1___flmul@prod,f
 26025  050E  30FF               	movlw	255
 26026  050F  05B5               	andwf	i1___flmul@prod+1,f
 26027  0510  307F               	movlw	127
 26028  0511  05B6               	andwf	i1___flmul@prod+2,f
 26029  0512  3000               	movlw	0
 26030  0513  05B7               	andwf	i1___flmul@prod+3,f
 26031  0514                     i1l5158:
 26032  0514  1C33               	btfss	i1___flmul@bexp,0
 26033  0515  2D17               	goto	u565_21
 26034  0516  2D18               	goto	u565_20
 26035  0517                     u565_21:
 26036  0517  2D19               	goto	i1l5162
 26037  0518                     u565_20:
 26038  0518                     i1l5160:
 26039  0518  17B6               	bsf	i1___flmul@prod+2,7
 26040  0519                     i1l5162:
 26041  0519  3633               	lsrf	i1___flmul@bexp,w
 26042  051A  00A8               	movwf	??i1___flmul
 26043  051B  0828               	movf	??i1___flmul,w
 26044  051C  00B7               	movwf	i1___flmul@prod+3
 26045  051D                     i1l1604:
 26046  051D  082D               	movf	i1___flmul@sign,w
 26047  051E  00A8               	movwf	??i1___flmul
 26048  051F  0828               	movf	??i1___flmul,w
 26049  0520  04B7               	iorwf	i1___flmul@prod+3,f
 26050  0521                     i1l5164:
 26051  0521  0837               	movf	i1___flmul@prod+3,w
 26052  0522  00A3               	movwf	?i1___flmul+3
 26053  0523  0836               	movf	i1___flmul@prod+2,w
 26054  0524  00A2               	movwf	?i1___flmul+2
 26055  0525  0835               	movf	i1___flmul@prod+1,w
 26056  0526  00A1               	movwf	?i1___flmul+1
 26057  0527  0834               	movf	i1___flmul@prod,w
 26058  0528  00A0               	movwf	?i1___flmul
 26059  0529                     i1l1592:
 26060  0529  0008               	return
 26061  052A                     __end_ofi1___flmul:
 26062                           
 26063                           	psect	text103
 26064  1ABB                     __ptext103:	
 26065 ;; *************** function i1__Umul8_16 *****************
 26066 ;; Defined at:
 26067 ;;		line 4 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul8_16.c"
 26068 ;; Parameters:    Size  Location     Type
 26069 ;;  multiplier      1    wreg     unsigned char 
 26070 ;;  multiplicand    1    0[COMMON] unsigned char 
 26071 ;; Auto vars:     Size  Location     Type
 26072 ;;  multiplier      1    8[COMMON] unsigned char 
 26073 ;;  word_mpld       2    6[COMMON] unsigned int 
 26074 ;;  product         2    4[COMMON] unsigned int 
 26075 ;; Return value:  Size  Location     Type
 26076 ;;                  2    0[COMMON] unsigned int 
 26077 ;; Registers used:
 26078 ;;		wreg, status,2, status,0
 26079 ;; Tracked objects:
 26080 ;;		On entry : 0/0
 26081 ;;		On exit  : 0/0
 26082 ;;		Unchanged: 0/0
 26083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26085 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26087 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26088 ;;Total ram usage:        9 bytes
 26089 ;; Hardware stack levels used:    1
 26090 ;; This function calls:
 26091 ;;		Nothing
 26092 ;; This function is called by:
 26093 ;;		i1___flmul
 26094 ;; This function uses a non-reentrant model
 26095 ;;
 26096                           
 26097                           
 26098                           ;psect for function i1__Umul8_16
 26099  1ABB                     i1__Umul8_16:
 26100                           
 26101                           ;incstack = 0
 26102                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 26103                           ;i1__Umul8_16@multiplier stored from wreg
 26104  1ABB  00F8               	movwf	i1__Umul8_16@multiplier
 26105  1ABC                     i1l4644:
 26106  1ABC  01F4               	clrf	i1__Umul8_16@product
 26107  1ABD  01F5               	clrf	i1__Umul8_16@product+1
 26108  1ABE                     i1l4646:
 26109  1ABE  0870               	movf	i1__Umul8_16@multiplicand,w
 26110  1ABF  00F2               	movwf	??i1__Umul8_16
 26111  1AC0  01F3               	clrf	??i1__Umul8_16+1
 26112  1AC1  0872               	movf	??i1__Umul8_16,w
 26113  1AC2  00F6               	movwf	i1__Umul8_16@word_mpld
 26114  1AC3  0873               	movf	??i1__Umul8_16+1,w
 26115  1AC4  00F7               	movwf	i1__Umul8_16@word_mpld+1
 26116  1AC5                     i1l4648:
 26117  1AC5  1C78               	btfss	i1__Umul8_16@multiplier,0
 26118  1AC6  2AC8               	goto	u463_21
 26119  1AC7  2AC9               	goto	u463_20
 26120  1AC8                     u463_21:
 26121  1AC8  2ACD               	goto	i1l1611
 26122  1AC9                     u463_20:
 26123  1AC9                     i1l4650:
 26124  1AC9  0876               	movf	i1__Umul8_16@word_mpld,w
 26125  1ACA  07F4               	addwf	i1__Umul8_16@product,f
 26126  1ACB  0877               	movf	i1__Umul8_16@word_mpld+1,w
 26127  1ACC  3DF5               	addwfc	i1__Umul8_16@product+1,f
 26128  1ACD                     i1l1611:
 26129  1ACD  3001               	movlw	1
 26130  1ACE                     u464_25:
 26131  1ACE  35F6               	lslf	i1__Umul8_16@word_mpld,f
 26132  1ACF  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 26133  1AD0  0B89               	decfsz	9,f
 26134  1AD1  2ACE               	goto	u464_25
 26135  1AD2  1003               	clrc
 26136  1AD3  0CF8               	rrf	i1__Umul8_16@multiplier,f
 26137  1AD4                     i1l4652:
 26138  1AD4  0878               	movf	i1__Umul8_16@multiplier,w
 26139  1AD5  1D03               	btfss	3,2
 26140  1AD6  2AD8               	goto	u465_21
 26141  1AD7  2AD9               	goto	u465_20
 26142  1AD8                     u465_21:
 26143  1AD8  2AC5               	goto	i1l4648
 26144  1AD9                     u465_20:
 26145  1AD9                     i1l4654:
 26146  1AD9  0875               	movf	i1__Umul8_16@product+1,w
 26147  1ADA  00F1               	movwf	?i1__Umul8_16+1
 26148  1ADB  0874               	movf	i1__Umul8_16@product,w
 26149  1ADC  00F0               	movwf	?i1__Umul8_16
 26150  1ADD                     i1l1613:
 26151  1ADD  0008               	return
 26152  1ADE                     __end_ofi1__Umul8_16:
 26153                           
 26154                           	psect	text104
 26155  267A                     __ptext104:	
 26156 ;; *************** function i1_TMR6_LoadPeriodRegister *****************
 26157 ;; Defined at:
 26158 ;;		line 106 in file "mcc_generated_files/tmr6.c"
 26159 ;; Parameters:    Size  Location     Type
 26160 ;;  periodVal       1    wreg     unsigned char 
 26161 ;; Auto vars:     Size  Location     Type
 26162 ;;  periodVal       1    0[COMMON] unsigned char 
 26163 ;; Return value:  Size  Location     Type
 26164 ;;                  1    wreg      void 
 26165 ;; Registers used:
 26166 ;;		wreg
 26167 ;; Tracked objects:
 26168 ;;		On entry : 0/0
 26169 ;;		On exit  : 0/0
 26170 ;;		Unchanged: 0/0
 26171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26176 ;;Total ram usage:        1 bytes
 26177 ;; Hardware stack levels used:    1
 26178 ;; This function calls:
 26179 ;;		Nothing
 26180 ;; This function is called by:
 26181 ;;		_frequency_calculation
 26182 ;; This function uses a non-reentrant model
 26183 ;;
 26184                           
 26185                           
 26186                           ;psect for function i1_TMR6_LoadPeriodRegister
 26187  267A                     i1_TMR6_LoadPeriodRegister:
 26188                           
 26189                           ;incstack = 0
 26190                           ; Regs used in i1_TMR6_LoadPeriodRegister: [wreg]
 26191                           ;i1TMR6_LoadPeriodRegister@periodVal stored from wreg
 26192  267A  00F0               	movwf	i1TMR6_LoadPeriodRegister@periodVal
 26193  267B                     i1l4984:
 26194                           
 26195                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
 26196  267B  0870               	movf	i1TMR6_LoadPeriodRegister@periodVal,w
 26197  267C  0028               	movlb	8	; select bank8
 26198  267D  009D               	movwf	29	;volatile
 26199  267E                     __ccov706_end_blk0:
 26200  267E                     __ccov707_start_blk1:
 26201  267E                     i1l615:
 26202  267E  0023               	movlb	3	; select bank3
 26203  267F  1554               	bsf	(__ccovbit1_181/(0+8))^(0+384),__ccovbit1_181& (0+7)	;volatile
 26204  2680  0008               	return
 26205  2681                     __end_ofi1_TMR6_LoadPeriodRegister:
 26206  2681                     
 26207                           	psect	text105
 26208  18FB                     __ptext105:	
 26209 ;; *************** function i1_PWM6_LoadDutyValue *****************
 26210 ;; Defined at:
 26211 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 26212 ;; Parameters:    Size  Location     Type
 26213 ;;  dutyValue       2    0[COMMON] unsigned short 
 26214 ;; Auto vars:     Size  Location     Type
 26215 ;;		None
 26216 ;; Return value:  Size  Location     Type
 26217 ;;                  1    wreg      void 
 26218 ;; Registers used:
 26219 ;;		wreg, status,2, status,0
 26220 ;; Tracked objects:
 26221 ;;		On entry : 0/0
 26222 ;;		On exit  : 0/0
 26223 ;;		Unchanged: 0/0
 26224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26229 ;;Total ram usage:        4 bytes
 26230 ;; Hardware stack levels used:    1
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_frequency_calculation
 26235 ;; This function uses a non-reentrant model
 26236 ;;
 26237                           
 26238                           
 26239                           ;psect for function i1_PWM6_LoadDutyValue
 26240  18FB                     i1_PWM6_LoadDutyValue:
 26241                           
 26242                           ;incstack = 0
 26243                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 26244  18FB                     i1l4982:
 26245                           
 26246                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 26247  18FB  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 26248  18FC  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 26249  18FD  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 26250  18FE  00F2               	movwf	??i1_PWM6_LoadDutyValue
 26251  18FF  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 26252  1900  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 26253  1901  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 26254  1902  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 26255  1903  0872               	movf	??i1_PWM6_LoadDutyValue,w
 26256  1904  002C               	movlb	12	; select bank12
 26257  1905  009B               	movwf	27	;volatile
 26258                           
 26259                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 26260  1906  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 26261  1907  3903               	andlw	3
 26262  1908  00F2               	movwf	??i1_PWM6_LoadDutyValue
 26263  1909  3005               	movlw	5
 26264  190A                     u527_25:
 26265  190A  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 26266  190B  3EFF               	addlw	-1
 26267  190C  1D03               	skipz
 26268  190D  290A               	goto	u527_25
 26269  190E  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 26270  190F  009A               	movwf	26	;volatile
 26271  1910                     __ccov698_end_blk0:
 26272  1910                     __ccov699_start_blk1:
 26273  1910                     i1l14:
 26274  1910  0023               	movlb	3	; select bank3
 26275  1911  16D4               	bsf	(__ccovbit1_178/(0+8))^(0+384),__ccovbit1_178& (0+7)	;volatile
 26276  1912  0008               	return
 26277  1913                     __end_ofi1_PWM6_LoadDutyValue:
 26278  1913                     
 26279                           	psect	text106
 26280  26D2                     __ptext106:	
 26281 ;; *************** function _TMR0_Reload *****************
 26282 ;; Defined at:
 26283 ;;		line 128 in file "mcc_generated_files/tmr0.c"
 26284 ;; Parameters:    Size  Location     Type
 26285 ;;		None
 26286 ;; Auto vars:     Size  Location     Type
 26287 ;;		None
 26288 ;; Return value:  Size  Location     Type
 26289 ;;                  1    wreg      void 
 26290 ;; Registers used:
 26291 ;;		wreg, status,2
 26292 ;; Tracked objects:
 26293 ;;		On entry : 0/0
 26294 ;;		On exit  : 0/0
 26295 ;;		Unchanged: 0/0
 26296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26301 ;;Total ram usage:        0 bytes
 26302 ;; Hardware stack levels used:    1
 26303 ;; This function calls:
 26304 ;;		Nothing
 26305 ;; This function is called by:
 26306 ;;		_frequency_calculation
 26307 ;; This function uses a non-reentrant model
 26308 ;;
 26309                           
 26310                           
 26311                           ;psect for function _TMR0_Reload
 26312  26D2                     _TMR0_Reload:
 26313                           
 26314                           ;incstack = 0
 26315                           ; Regs used in _TMR0_Reload: [wreg+status,2]
 26316  26D2                     i1l4716:
 26317                           
 26318                           ;mcc_generated_files/tmr0.c: 131:     TMR0H = timer0ReloadVal16bit >> 8;
 26319  26D2  0022               	movlb	2	; select bank2
 26320  26D3  086E               	movf	(_timer0ReloadVal16bit+1)^(0+256),w	;volatile
 26321  26D4  0020               	movlb	0	; select bank0
 26322  26D5  0096               	movwf	22	;volatile
 26323  26D6                     __ccov254_end_blk0:
 26324  26D6                     __ccov255_start_blk1:
 26325  26D6                     i1l4718:
 26326                           
 26327                           ;mcc_generated_files/tmr0.c: 132:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 26328  26D6  0022               	movlb	2	; select bank2
 26329  26D7  086D               	movf	_timer0ReloadVal16bit^(0+256),w	;volatile
 26330  26D8  0020               	movlb	0	; select bank0
 26331  26D9  0095               	movwf	21	;volatile
 26332  26DA                     __ccov255_end_blk1:
 26333  26DA                     __ccov256_start_blk2:
 26334  26DA                     i1l454:
 26335  26DA  0021               	movlb	1	; select bank1
 26336  26DB  14E9               	bsf	(__ccovbit2_39/(0+8))^(0+128),__ccovbit2_39& (0+7)	;volatile
 26337  26DC  0008               	return
 26338  26DD                     __end_of_TMR0_Reload:
 26339  26DD                     
 26340                           	psect	text107
 26341  1913                     __ptext107:	
 26342 ;; *************** function _TMR1_WriteTimer *****************
 26343 ;; Defined at:
 26344 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 26345 ;; Parameters:    Size  Location     Type
 26346 ;;  timerVal        2    0[COMMON] unsigned short 
 26347 ;; Auto vars:     Size  Location     Type
 26348 ;;		None
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  1    wreg      void 
 26351 ;; Registers used:
 26352 ;;		wreg, status,2
 26353 ;; Tracked objects:
 26354 ;;		On entry : 0/0
 26355 ;;		On exit  : 0/0
 26356 ;;		Unchanged: 0/0
 26357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26362 ;;Total ram usage:        2 bytes
 26363 ;; Hardware stack levels used:    1
 26364 ;; This function calls:
 26365 ;;		Nothing
 26366 ;; This function is called by:
 26367 ;;		_TMR1_ISR
 26368 ;;		_TMR1_Reload
 26369 ;; This function uses a non-reentrant model
 26370 ;;
 26371                           
 26372                           
 26373                           ;psect for function _TMR1_WriteTimer
 26374  1913                     _TMR1_WriteTimer:
 26375                           
 26376                           ;incstack = 0
 26377                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 26378  1913                     i1l5382:
 26379                           
 26380                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
 26381  1913  0020               	movlb	0	; select bank0
 26382  1914  1D1B               	btfss	27,2	;volatile
 26383  1915  2917               	goto	u585_21
 26384  1916  2918               	goto	u585_20
 26385  1917                     u585_21:
 26386  1917  2922               	goto	i1l5392
 26387  1918                     __ccov214_end_blk0:
 26388  1918                     u585_20:
 26389  1918                     __ccov215_start_blk1:
 26390  1918                     i1l5384:
 26391                           
 26392                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 26393  1918  101B               	bcf	27,0	;volatile
 26394  1919                     __ccov215_end_blk1:
 26395  1919                     __ccov216_start_blk2:
 26396  1919                     i1l5386:
 26397                           
 26398                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 26399  1919  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 26400  191A  009A               	movwf	26	;volatile
 26401  191B                     __ccov216_end_blk2:
 26402  191B                     __ccov217_start_blk3:
 26403  191B                     i1l5388:
 26404                           
 26405                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 26406  191B  0870               	movf	TMR1_WriteTimer@timerVal,w
 26407  191C  0099               	movwf	25	;volatile
 26408  191D                     __ccov217_end_blk3:
 26409  191D                     __ccov218_start_blk4:
 26410  191D                     i1l5390:
 26411  191D  0021               	movlb	1	; select bank1
 26412  191E  14EA               	bsf	(__ccovbit4_31/(0+8))^(0+128),__ccovbit4_31& (0+7)	;volatile
 26413                           
 26414                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 26415  191F  0020               	movlb	0	; select bank0
 26416  1920  141B               	bsf	27,0	;volatile
 26417                           
 26418                           ;mcc_generated_files/tmr1.c: 133:     }
 26419  1921  2929               	goto	i1l393
 26420  1922                     __ccov218_end_blk4:
 26421  1922                     __ccov219_start_blk6:
 26422  1922                     i1l5392:
 26423                           
 26424                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 26425  1922  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 26426  1923  009A               	movwf	26	;volatile
 26427  1924                     __ccov219_end_blk6:
 26428  1924                     __ccov220_start_blk7:
 26429  1924                     i1l5394:
 26430  1924  0021               	movlb	1	; select bank1
 26431  1925  146A               	bsf	(__ccovbit7_32/(0+8))^(0+128),__ccovbit7_32& (0+7)	;volatile
 26432                           
 26433                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 26434  1926  0870               	movf	TMR1_WriteTimer@timerVal,w
 26435  1927  0020               	movlb	0	; select bank0
 26436  1928  0099               	movwf	25	;volatile
 26437  1929                     __ccov220_end_blk7:
 26438  1929                     __ccov221_start_blk9:
 26439  1929                     i1l393:
 26440  1929  0021               	movlb	1	; select bank1
 26441  192A  17E9               	bsf	(__ccovbit9_33/(0+8))^(0+128),__ccovbit9_33& (0+7)	;volatile
 26442  192B  0008               	return
 26443  192C                     __end_of_TMR1_WriteTimer:
 26444  192C                     
 26445                           	psect	text108
 26446  19CC                     __ptext108:	
 26447 ;; *************** function _TMR0_ISR *****************
 26448 ;; Defined at:
 26449 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 26450 ;; Parameters:    Size  Location     Type
 26451 ;;		None
 26452 ;; Auto vars:     Size  Location     Type
 26453 ;;		None
 26454 ;; Return value:  Size  Location     Type
 26455 ;;                  1    wreg      void 
 26456 ;; Registers used:
 26457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26458 ;; Tracked objects:
 26459 ;;		On entry : 0/0
 26460 ;;		On exit  : 0/0
 26461 ;;		Unchanged: 0/0
 26462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26467 ;;Total ram usage:        0 bytes
 26468 ;; Hardware stack levels used:    1
 26469 ;; Hardware stack levels required when called:    6
 26470 ;; This function calls:
 26471 ;;		Absolute function
 26472 ;;		_TMR0_DefaultInterruptHandler
 26473 ;; This function is called by:
 26474 ;;		_INTERRUPT_InterruptManager
 26475 ;; This function uses a non-reentrant model
 26476 ;;
 26477                           
 26478                           
 26479                           ;psect for function _TMR0_ISR
 26480  19CC                     _TMR0_ISR:
 26481                           
 26482                           ;incstack = 0
 26483                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26484  19CC                     i1l7626:
 26485                           
 26486                           ;mcc_generated_files/tmr0.c: 138:     PIR0bits.TMR0IF = 0;
 26487  19CC  0020               	movlb	0	; select bank0
 26488  19CD  1290               	bcf	16,5	;volatile
 26489  19CE                     __ccov257_end_blk0:
 26490  19CE                     __ccov258_start_blk1:
 26491  19CE                     i1l7628:
 26492                           
 26493                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 26494  19CE  0022               	movlb	2	; select bank2
 26495  19CF  086E               	movf	(_timer0ReloadVal16bit+1)^(0+256),w	;volatile
 26496  19D0  0020               	movlb	0	; select bank0
 26497  19D1  0096               	movwf	22	;volatile
 26498  19D2                     __ccov258_end_blk1:
 26499  19D2                     __ccov259_start_blk2:
 26500  19D2                     i1l7630:
 26501                           
 26502                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 26503  19D2  0022               	movlb	2	; select bank2
 26504  19D3  086D               	movf	_timer0ReloadVal16bit^(0+256),w	;volatile
 26505  19D4  0020               	movlb	0	; select bank0
 26506  19D5  0095               	movwf	21	;volatile
 26507  19D6                     __ccov259_end_blk2:
 26508  19D6                     __ccov260_start_blk3:
 26509  19D6                     i1l7632:
 26510                           
 26511                           ;mcc_generated_files/tmr0.c: 143:     if(TMR0_InterruptHandler)
 26512  19D6  0023               	movlb	3	; select bank3
 26513  19D7  085C               	movf	_TMR0_InterruptHandler^(0+384),w
 26514  19D8  045D               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 26515  19D9  1903               	btfsc	3,2
 26516  19DA  29DC               	goto	u908_21
 26517  19DB  29DD               	goto	u908_20
 26518  19DC                     u908_21:
 26519  19DC  29E5               	goto	i1l458
 26520  19DD                     __ccov260_end_blk3:
 26521  19DD                     u908_20:
 26522  19DD                     __ccov261_start_blk4:
 26523  19DD                     i1l7634:
 26524  19DD  0021               	movlb	1	; select bank1
 26525  19DE  1469               	bsf	(__ccovbit4_40/(0+8))^(0+128),__ccovbit4_40& (0+7)	;volatile
 26526                           
 26527                           ;mcc_generated_files/tmr0.c: 144:     {;mcc_generated_files/tmr0.c: 145:         TMR0_In
      +                          terruptHandler();
 26528  19DF  0023               	movlb	3	; select bank3
 26529  19E0  085D               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 26530  19E1  008A               	movwf	10
 26531  19E2  085C               	movf	_TMR0_InterruptHandler^(0+384),w
 26532  19E3  000A               	callw
 26533  19E4  3199               	pagesel	$
 26534  19E5                     __ccov261_end_blk4:
 26535  19E5                     __ccov262_start_blk6:
 26536  19E5                     i1l458:
 26537  19E5  0021               	movlb	1	; select bank1
 26538  19E6  17E8               	bsf	(__ccovbit6_41/(0+8))^(0+128),__ccovbit6_41& (0+7)	;volatile
 26539  19E7  0008               	return
 26540  19E8                     __end_of_TMR0_ISR:
 26541  19E8                     
 26542                           	psect	text109
 26543  26C7                     __ptext109:	
 26544 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 26545 ;; Defined at:
 26546 ;;		line 159 in file "mcc_generated_files/tmr0.c"
 26547 ;; Parameters:    Size  Location     Type
 26548 ;;		None
 26549 ;; Auto vars:     Size  Location     Type
 26550 ;;		None
 26551 ;; Return value:  Size  Location     Type
 26552 ;;                  1    wreg      void 
 26553 ;; Registers used:
 26554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26555 ;; Tracked objects:
 26556 ;;		On entry : 0/0
 26557 ;;		On exit  : 0/0
 26558 ;;		Unchanged: 0/0
 26559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26564 ;;Total ram usage:        0 bytes
 26565 ;; Hardware stack levels used:    1
 26566 ;; Hardware stack levels required when called:    5
 26567 ;; This function calls:
 26568 ;;		i1_puts
 26569 ;; This function is called by:
 26570 ;;		_TMR0_Initialize
 26571 ;;		_TMR0_ISR
 26572 ;; This function uses a non-reentrant model
 26573 ;;
 26574                           
 26575                           
 26576                           ;psect for function _TMR0_DefaultInterruptHandler
 26577  26C7                     _TMR0_DefaultInterruptHandler:
 26578                           
 26579                           ;incstack = 0
 26580                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 26581  26C7                     i1l7284:
 26582                           
 26583                           ;mcc_generated_files/tmr0.c: 161:    puts ("Error: SPD counter overflow!");
 26584  26C7  30F7               	movlw	low (STR_1| (0+32768))
 26585  26C8  0020               	movlb	0	; select bank0
 26586  26C9  00A6               	movwf	i1puts@s
 26587  26CA  30A1               	movlw	high (STR_1| (0+32768))
 26588  26CB  00A7               	movwf	i1puts@s+1
 26589  26CC  319A  225A  31A6   	fcall	i1_puts
 26590  26CF                     __ccov265_end_blk0:
 26591  26CF                     __ccov266_start_blk1:
 26592  26CF                     i1l464:
 26593  26CF  0021               	movlb	1	; select bank1
 26594  26D0  16E8               	bsf	(__ccovbit1_43/(0+8))^(0+128),__ccovbit1_43& (0+7)	;volatile
 26595  26D1  0008               	return
 26596  26D2                     __end_of_TMR0_DefaultInterruptHandler:
 26597  26D2                     
 26598                           	psect	text110
 26599  1A5A                     __ptext110:	
 26600 ;; *************** function i1_puts *****************
 26601 ;; Defined at:
 26602 ;;		line 3 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/puts.c"
 26603 ;; Parameters:    Size  Location     Type
 26604 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 26605 ;;		 -> STR_22(44), STR_21(48), STR_20(33), STR_19(39), 
 26606 ;;		 -> STR_18(36), STR_17(48), STR_16(30), STR_15(33), 
 26607 ;;		 -> STR_14(33), STR_13(46), STR_10(31), STR_8(34), 
 26608 ;;		 -> STR_7(25), STR_6(23), STR_5(29), STR_4(38), 
 26609 ;;		 -> STR_3(27), STR_1(29), 
 26610 ;; Auto vars:     Size  Location     Type
 26611 ;;  r               2    0        int 
 26612 ;; Return value:  Size  Location     Type
 26613 ;;                  2    6[BANK0 ] int 
 26614 ;; Registers used:
 26615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26616 ;; Tracked objects:
 26617 ;;		On entry : 0/0
 26618 ;;		On exit  : 0/0
 26619 ;;		Unchanged: 0/0
 26620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26622 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26624 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26625 ;;Total ram usage:        5 bytes
 26626 ;; Hardware stack levels used:    1
 26627 ;; Hardware stack levels required when called:    4
 26628 ;; This function calls:
 26629 ;;		i1_fputc
 26630 ;;		i1_fputs
 26631 ;; This function is called by:
 26632 ;;		_TMR0_DefaultInterruptHandler
 26633 ;;		_led_indicate
 26634 ;; This function uses a non-reentrant model
 26635 ;;
 26636                           
 26637                           
 26638                           ;psect for function i1_puts
 26639  1A5A                     i1_puts:
 26640  1A5A                     i1l7120:	
 26641                           ;incstack = 0
 26642                           ; Regs used in i1_puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26643                           
 26644  1A5A  0020               	movlb	0	; select bank0
 26645  1A5B  01AA               	clrf	i1_puts$2235
 26646  1A5C  0AAA               	incf	i1_puts$2235,f
 26647  1A5D                     i1l7122:
 26648  1A5D  0827               	movf	i1puts@s+1,w
 26649  1A5E  00FB               	movwf	i1fputs@s+1
 26650  1A5F  0826               	movf	i1puts@s,w
 26651  1A60  00FA               	movwf	i1fputs@s
 26652  1A61  01FC               	clrf	i1fputs@fp
 26653  1A62  319B  2398  319A   	fcall	i1_fputs
 26654  1A65  1BFB               	btfsc	?i1_fputs+1,7
 26655  1A66  2A68               	goto	u864_21
 26656  1A67  2A69               	goto	u864_20
 26657  1A68                     u864_21:
 26658  1A68  2A77               	goto	i1l7128
 26659  1A69                     u864_20:
 26660  1A69                     i1l7124:
 26661  1A69  300A               	movlw	10
 26662  1A6A  00F2               	movwf	i1fputc@c
 26663  1A6B  3000               	movlw	0
 26664  1A6C  00F3               	movwf	i1fputc@c+1
 26665  1A6D  01F4               	clrf	i1fputc@fp
 26666  1A6E  3190  2001  319A   	fcall	i1_fputc
 26667  1A71  1BF3               	btfsc	?i1_fputc+1,7
 26668  1A72  2A74               	goto	u865_21
 26669  1A73  2A75               	goto	u865_20
 26670  1A74                     u865_21:
 26671  1A74  2A77               	goto	i1l7128
 26672  1A75                     u865_20:
 26673  1A75                     i1l7126:
 26674  1A75  0020               	movlb	0	; select bank0
 26675  1A76  01AA               	clrf	i1_puts$2235
 26676  1A77                     i1l7128:
 26677  1A77                     i1l1766:
 26678  1A77  0008               	return
 26679  1A78                     __end_ofi1_puts:
 26680                           
 26681                           	psect	text111
 26682  1B98                     __ptext111:	
 26683 ;; *************** function i1_fputs *****************
 26684 ;; Defined at:
 26685 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputs.c"
 26686 ;; Parameters:    Size  Location     Type
 26687 ;;  s               2   10[COMMON] PTR const unsigned char 
 26688 ;;		 -> dbuf(32), STR_22(44), STR_21(48), STR_20(33), 
 26689 ;;		 -> STR_19(39), STR_18(36), STR_17(48), STR_16(30), 
 26690 ;;		 -> STR_15(33), STR_14(33), STR_13(46), STR_10(31), 
 26691 ;;		 -> STR_8(34), STR_7(25), STR_6(23), STR_5(29), 
 26692 ;;		 -> STR_4(38), STR_3(27), STR_1(29), 
 26693 ;;  fp              1   12[COMMON] PTR struct _IO_FILE
 26694 ;;		 -> NULL(0), 
 26695 ;; Auto vars:     Size  Location     Type
 26696 ;;  i               2    4[BANK0 ] int 
 26697 ;;  c               1    3[BANK0 ] unsigned char 
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  2   10[COMMON] int 
 26700 ;; Registers used:
 26701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26707 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26708 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26709 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26710 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26711 ;;Total ram usage:        9 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:    3
 26714 ;; This function calls:
 26715 ;;		i1_fputc
 26716 ;; This function is called by:
 26717 ;;		i1_pad
 26718 ;;		i1_puts
 26719 ;; This function uses a non-reentrant model
 26720 ;;
 26721                           
 26722                           
 26723                           ;psect for function i1_fputs
 26724  1B98                     i1_fputs:
 26725  1B98                     i1l6338:	
 26726                           ;incstack = 0
 26727                           ; Regs used in i1_fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26728                           
 26729  1B98  0020               	movlb	0	; select bank0
 26730  1B99  01A4               	clrf	i1fputs@i
 26731  1B9A  01A5               	clrf	i1fputs@i+1
 26732  1B9B  2BAF               	goto	i1l6344
 26733  1B9C                     i1l6340:
 26734  1B9C  0823               	movf	i1fputs@c,w
 26735  1B9D  00A0               	movwf	??i1_fputs
 26736  1B9E  01A1               	clrf	??i1_fputs+1
 26737  1B9F  0820               	movf	??i1_fputs,w
 26738  1BA0  00F2               	movwf	i1fputc@c
 26739  1BA1  0821               	movf	??i1_fputs+1,w
 26740  1BA2  00F3               	movwf	i1fputc@c+1
 26741  1BA3  087C               	movf	i1fputs@fp,w
 26742  1BA4  00A2               	movwf	??i1_fputs+2
 26743  1BA5  0822               	movf	??i1_fputs+2,w
 26744  1BA6  00F4               	movwf	i1fputc@fp
 26745  1BA7  3190  2001  319B   	fcall	i1_fputc
 26746  1BAA                     i1l6342:
 26747  1BAA  3001               	movlw	1
 26748  1BAB  0020               	movlb	0	; select bank0
 26749  1BAC  07A4               	addwf	i1fputs@i,f
 26750  1BAD  3000               	movlw	0
 26751  1BAE  3DA5               	addwfc	i1fputs@i+1,f
 26752  1BAF                     i1l6344:
 26753  1BAF  087A               	movf	i1fputs@s,w
 26754  1BB0  0724               	addwf	i1fputs@i,w
 26755  1BB1  0084               	movwf	4
 26756  1BB2  087B               	movf	i1fputs@s+1,w
 26757  1BB3  3D25               	addwfc	i1fputs@i+1,w
 26758  1BB4  0085               	movwf	5
 26759  1BB5  0800               	movf	0,w	;code access
 26760  1BB6  00A0               	movwf	??i1_fputs
 26761  1BB7  0820               	movf	??i1_fputs,w
 26762  1BB8  00A3               	movwf	i1fputs@c
 26763  1BB9  0823               	movf	i1fputs@c,w
 26764  1BBA  1D03               	btfss	3,2
 26765  1BBB  2BBD               	goto	u702_21
 26766  1BBC  2BBE               	goto	u702_20
 26767  1BBD                     u702_21:
 26768  1BBD  2B9C               	goto	i1l6340
 26769  1BBE                     u702_20:
 26770  1BBE                     i1l6346:
 26771  1BBE  0825               	movf	i1fputs@i+1,w
 26772  1BBF  00FB               	movwf	?i1_fputs+1
 26773  1BC0  0824               	movf	i1fputs@i,w
 26774  1BC1  00FA               	movwf	?i1_fputs
 26775  1BC2                     i1l1757:
 26776  1BC2  0008               	return
 26777  1BC3                     __end_ofi1_fputs:
 26778                           
 26779                           	psect	text112
 26780  1001                     __ptext112:	
 26781 ;; *************** function i1_fputc *****************
 26782 ;; Defined at:
 26783 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/nf_fputc.c"
 26784 ;; Parameters:    Size  Location     Type
 26785 ;;  c               2    2[COMMON] int 
 26786 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
 26787 ;;		 -> NULL(0), 
 26788 ;; Auto vars:     Size  Location     Type
 26789 ;;		None
 26790 ;; Return value:  Size  Location     Type
 26791 ;;                  2    2[COMMON] int 
 26792 ;; Registers used:
 26793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26794 ;; Tracked objects:
 26795 ;;		On entry : 0/0
 26796 ;;		On exit  : 0/0
 26797 ;;		Unchanged: 0/0
 26798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26799 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26801 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26802 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26803 ;;Total ram usage:        8 bytes
 26804 ;; Hardware stack levels used:    1
 26805 ;; Hardware stack levels required when called:    2
 26806 ;; This function calls:
 26807 ;;		i1_putch
 26808 ;; This function is called by:
 26809 ;;		i1_pad
 26810 ;;		i1_vfpfcnvrt
 26811 ;;		i1_fputs
 26812 ;;		i1_puts
 26813 ;; This function uses a non-reentrant model
 26814 ;;
 26815                           
 26816                           
 26817                           ;psect for function i1_fputc
 26818  1001                     i1_fputc:
 26819  1001                     i1l6306:	
 26820                           ;incstack = 0
 26821                           ; Regs used in i1_fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 26822                           
 26823  1001  0874               	movf	i1fputc@fp,w
 26824  1002  1903               	btfsc	3,2
 26825  1003  2805               	goto	u694_21
 26826  1004  2806               	goto	u694_20
 26827  1005                     u694_21:
 26828  1005  280B               	goto	i1l6310
 26829  1006                     u694_20:
 26830  1006                     i1l6308:
 26831  1006  0874               	movf	i1fputc@fp,w
 26832  1007  1D03               	btfss	3,2
 26833  1008  280A               	goto	u695_21
 26834  1009  280B               	goto	u695_20
 26835  100A                     u695_21:
 26836  100A  2810               	goto	i1l6312
 26837  100B                     u695_20:
 26838  100B                     i1l6310:
 26839  100B  0872               	movf	i1fputc@c,w
 26840  100C  31A6  2681  3190   	fcall	i1_putch
 26841  100F  283F               	goto	i1l6318
 26842  1010                     i1l6312:
 26843  1010  0874               	movf	i1fputc@fp,w
 26844  1011  3E03               	addlw	3
 26845  1012  0086               	movwf	6
 26846  1013  0187               	clrf	7
 26847  1014  0016               	moviw fsr1++
 26848  1015  0401               	iorwf	1,w
 26849  1016  1903               	btfsc	3,2
 26850  1017  2819               	goto	u696_21
 26851  1018  281A               	goto	u696_20
 26852  1019                     u696_21:
 26853  1019  2837               	goto	i1l6316
 26854  101A                     u696_20:
 26855  101A                     i1l6314:
 26856  101A  0874               	movf	i1fputc@fp,w
 26857  101B  3E03               	addlw	3
 26858  101C  0086               	movwf	6
 26859  101D  0187               	clrf	7
 26860  101E  3F40               	moviw [0]fsr1
 26861  101F  00F5               	movwf	??i1_fputc
 26862  1020  3F41               	moviw [1]fsr1
 26863  1021  00F6               	movwf	??i1_fputc+1
 26864  1022  0A74               	incf	i1fputc@fp,w
 26865  1023  0086               	movwf	6
 26866  1024  0187               	clrf	7
 26867  1025  3F40               	moviw [0]fsr1
 26868  1026  00F7               	movwf	??i1_fputc+2
 26869  1027  3F41               	moviw [1]fsr1
 26870  1028  00F8               	movwf	??i1_fputc+3
 26871  1029  0878               	movf	??i1_fputc+3,w
 26872  102A  3A80               	xorlw	128
 26873  102B  00F9               	movwf	??i1_fputc+4
 26874  102C  0876               	movf	??i1_fputc+1,w
 26875  102D  3A80               	xorlw	128
 26876  102E  0279               	subwf	??i1_fputc+4,w
 26877  102F  1D03               	skipz
 26878  1030  2833               	goto	u697_25
 26879  1031  0875               	movf	??i1_fputc,w
 26880  1032  0277               	subwf	??i1_fputc+2,w
 26881  1033                     u697_25:
 26882  1033  1803               	skipnc
 26883  1034  2836               	goto	u697_21
 26884  1035  2837               	goto	u697_20
 26885  1036                     u697_21:
 26886  1036  283F               	goto	i1l6318
 26887  1037                     u697_20:
 26888  1037                     i1l6316:
 26889  1037  0A74               	incf	i1fputc@fp,w
 26890  1038  0086               	movwf	6
 26891  1039  0187               	clrf	7
 26892  103A  3001               	movlw	1
 26893  103B  0781               	addwf	1,f
 26894  103C  3141               	addfsr 1,1
 26895  103D  1803               	skipnc
 26896  103E  0A81               	incf	1,f
 26897  103F                     i1l6318:
 26898  103F  0872               	movf	i1fputc@c,w
 26899  1040  00F5               	movwf	??i1_fputc
 26900  1041  01F6               	clrf	??i1_fputc+1
 26901  1042  0875               	movf	??i1_fputc,w
 26902  1043  00F2               	movwf	?i1_fputc
 26903  1044  0876               	movf	??i1_fputc+1,w
 26904  1045  00F3               	movwf	?i1_fputc+1
 26905  1046                     i1l1749:
 26906  1046  0008               	return
 26907  1047                     __end_ofi1_fputc:
 26908                           
 26909                           	psect	text113
 26910  2681                     __ptext113:	
 26911 ;; *************** function i1_putch *****************
 26912 ;; Defined at:
 26913 ;;		line 154 in file "mcc_generated_files/eusart.c"
 26914 ;; Parameters:    Size  Location     Type
 26915 ;;  txData          1    wreg     unsigned char 
 26916 ;; Auto vars:     Size  Location     Type
 26917 ;;  txData          1    1[COMMON] unsigned char 
 26918 ;; Return value:  Size  Location     Type
 26919 ;;                  1    wreg      void 
 26920 ;; Registers used:
 26921 ;;		wreg, status,2, status,0, pclath, cstack
 26922 ;; Tracked objects:
 26923 ;;		On entry : 0/0
 26924 ;;		On exit  : 0/0
 26925 ;;		Unchanged: 0/0
 26926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26931 ;;Total ram usage:        1 bytes
 26932 ;; Hardware stack levels used:    1
 26933 ;; Hardware stack levels required when called:    1
 26934 ;; This function calls:
 26935 ;;		i1_EUSART_Write
 26936 ;; This function is called by:
 26937 ;;		i1_fputc
 26938 ;; This function uses a non-reentrant model
 26939 ;;
 26940                           
 26941                           
 26942                           ;psect for function i1_putch
 26943  2681                     i1_putch:
 26944                           
 26945                           ;incstack = 0
 26946                           ; Regs used in i1_putch: [wreg+status,2+status,0+pclath+cstack]
 26947                           ;i1putch@txData stored from wreg
 26948  2681  00F1               	movwf	i1putch@txData
 26949  2682                     i1l6302:
 26950                           
 26951                           ;mcc_generated_files/eusart.c: 154: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 155: {;mcc_generated_files/eusart.c: 156:     EUSART_Write(txData);
 26952  2682  0871               	movf	i1putch@txData,w
 26953  2683  31A7  27A0  31A6   	fcall	i1_EUSART_Write
 26954  2686                     __ccov704_end_blk0:
 26955  2686                     __ccov705_start_blk1:
 26956  2686                     i1l106:
 26957  2686  0023               	movlb	3	; select bank3
 26958  2687  15D4               	bsf	(__ccovbit1_180/(0+8))^(0+384),__ccovbit1_180& (0+7)	;volatile
 26959  2688  0008               	return
 26960  2689                     __end_ofi1_putch:
 26961  2689                     
 26962                           	psect	text114
 26963  27A0                     __ptext114:	
 26964 ;; *************** function i1_EUSART_Write *****************
 26965 ;; Defined at:
 26966 ;;		line 138 in file "mcc_generated_files/eusart.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  txData          1    wreg     unsigned char 
 26969 ;; Auto vars:     Size  Location     Type
 26970 ;;  txData          1    0[COMMON] unsigned char 
 26971 ;; Return value:  Size  Location     Type
 26972 ;;                  1    wreg      void 
 26973 ;; Registers used:
 26974 ;;		wreg
 26975 ;; Tracked objects:
 26976 ;;		On entry : 0/0
 26977 ;;		On exit  : 0/0
 26978 ;;		Unchanged: 0/0
 26979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26984 ;;Total ram usage:        1 bytes
 26985 ;; Hardware stack levels used:    1
 26986 ;; This function calls:
 26987 ;;		Nothing
 26988 ;; This function is called by:
 26989 ;;		i1_putch
 26990 ;; This function uses a non-reentrant model
 26991 ;;
 26992                           
 26993                           
 26994                           ;psect for function i1_EUSART_Write
 26995  27A0                     i1_EUSART_Write:
 26996                           
 26997                           ;incstack = 0
 26998                           ; Regs used in i1_EUSART_Write: [wreg]
 26999                           ;i1EUSART_Write@txData stored from wreg
 27000  27A0  00F0               	movwf	i1EUSART_Write@txData
 27001  27A1                     i1l6294:
 27002                           
 27003                           ;mcc_generated_files/eusart.c: 138: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 139: {;mcc_generated_files/eusart.c: 140:     RC1STAbits.SREN = 0;
 27004  27A1  0023               	movlb	3	; select bank3
 27005  27A2  129D               	bcf	29,5	;volatile
 27006                           
 27007                           ;mcc_generated_files/eusart.c: 141:     RC1STAbits.CREN = 0;
 27008  27A3  121D               	bcf	29,4	;volatile
 27009  27A4                     __ccov700_end_blk0:
 27010  27A4                     __ccov701_start_blk2:
 27011  27A4                     i1l97:	
 27012                           ;mcc_generated_files/eusart.c: 143:     {;mcc_generated_files/eusart.c: 144:     }
 27013                           
 27014                           
 27015                           ;mcc_generated_files/eusart.c: 142:     while(0 == PIR1bits.TXIF)
 27016  27A4  0020               	movlb	0	; select bank0
 27017  27A5  1E11               	btfss	17,4	;volatile
 27018  27A6  2FA8               	goto	u692_21
 27019  27A7  2FA9               	goto	u692_20
 27020  27A8                     u692_21:
 27021  27A8  2FA4               	goto	i1l97
 27022  27A9                     __ccov701_end_blk2:
 27023  27A9                     u692_20:
 27024  27A9                     __ccov702_start_blk4:
 27025  27A9                     i1l6296:
 27026                           
 27027                           ;mcc_generated_files/eusart.c: 146:     TX1REG = txData;
 27028  27A9  0870               	movf	i1EUSART_Write@txData,w
 27029  27AA  0023               	movlb	3	; select bank3
 27030  27AB  009A               	movwf	26	;volatile
 27031  27AC                     __ccov702_end_blk4:
 27032  27AC                     __ccov703_start_blk5:
 27033  27AC                     i1l100:
 27034  27AC  1654               	bsf	(__ccovbit5_179/(0+8))^(0+384),__ccovbit5_179& (0+7)	;volatile
 27035  27AD  0008               	return
 27036  27AE                     __end_ofi1_EUSART_Write:
 27037  27AE                     
 27038                           	psect	codecov_info_hdr
 27039  0000                     __pcodecov_info_hdr:	
 27040                           ;
 27041                           ; Code-coverage Info Header
 27042                           ;
 27043                           
 27044  0000  0010               	db	16	; SIZE
 27045  0001  00000001           	ddw	1	; VERSION
 27046  0005  0001               	db	1	; POINTSIZE
 27047  0006  0008               	db	8	; UNITSIZE
 27048  0007  0001               	db	1	; FLAGS=SET
 27049  0008  00000000           	ddw	0	; Reserved
 27050  000C  00000000           	ddw	0	; Reserved
 27051                           
 27052                           	psect	codecov_info
 27053  0000                     __pcodecov_info:	
 27054                           ;
 27055                           ; Code-coverage Info
 27056                           ;
 27057                           
 27058                           
 27059                           ; Function: PWM6_Initialize, coverage: 2,1,0
 27060  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27061  0004  0000006F           	ddw	__ccovbit2_1/(0+8)	; CC_ADDR
 27062  0008  00000001           	ddw	1	; NUM_POINTS
 27063  000C  00000007           	ddw	__ccovbit2_1& (0+7)	; OFFSET
 27064  0010  00000000           	ddw	0	; Reserved
 27065  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27066  0018  00000003           	ddw	3	; NUM_RANGES
 27067  001C  00002761           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
 27068  0020  00002764           	ddw	__end_of_PWM6_Initialize	; block 2 END_ADDR
 27069  0024  0000275F           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
 27070  0028  00002761           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
 27071  002C  00002758           	ddw	_PWM6_Initialize	; block 0 START_ADDR
 27072  0030  0000275F           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
 27073                           
 27074                           ; Function: PWM6_LoadDutyValue, coverage: 1,0
 27075  0034  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27076  0038  0000006F           	ddw	__ccovbit1_2/(0+8)	; CC_ADDR
 27077  003C  00000001           	ddw	1	; NUM_POINTS
 27078  0040  00000006           	ddw	__ccovbit1_2& (0+7)	; OFFSET
 27079  0044  00000000           	ddw	0	; Reserved
 27080  0048  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27081  004C  00000002           	ddw	2	; NUM_RANGES
 27082  0050  000019C9           	ddw	__ccov5_start_blk1	; block 1 START_ADDR
 27083  0054  000019CC           	ddw	__end_of_PWM6_LoadDutyValue	; block 1 END_ADDR
 27084  0058  000019B1           	ddw	_PWM6_LoadDutyValue	; block 0 START_ADDR
 27085  005C  000019C9           	ddw	__ccov4_end_blk0	; block 0 END_ADDR
 27086                           
 27087                           ; Function: PWM5_Initialize, coverage: 4,3,2,1,0
 27088  0060  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27089  0064  0000006F           	ddw	__ccovbit4_3/(0+8)	; CC_ADDR
 27090  0068  00000001           	ddw	1	; NUM_POINTS
 27091  006C  00000005           	ddw	__ccovbit4_3& (0+7)	; OFFSET
 27092  0070  00000000           	ddw	0	; Reserved
 27093  0074  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27094  0078  00000005           	ddw	5	; NUM_RANGES
 27095  007C  00002755           	ddw	__ccov10_start_blk4	; block 4 START_ADDR
 27096  0080  00002758           	ddw	__end_of_PWM5_Initialize	; block 4 END_ADDR
 27097  0084  00002751           	ddw	__ccov9_start_blk3	; block 3 START_ADDR
 27098  0088  00002755           	ddw	__ccov9_end_blk3	; block 3 END_ADDR
 27099  008C  00002750           	ddw	__ccov8_start_blk2	; block 2 START_ADDR
 27100  0090  00002751           	ddw	__ccov8_end_blk2	; block 2 END_ADDR
 27101  0094  0000274F           	ddw	__ccov7_start_blk1	; block 1 START_ADDR
 27102  0098  00002750           	ddw	__ccov7_end_blk1	; block 1 END_ADDR
 27103  009C  0000274C           	ddw	_PWM5_Initialize	; block 0 START_ADDR
 27104  00A0  0000274F           	ddw	__ccov6_end_blk0	; block 0 END_ADDR
 27105                           
 27106                           ; Function: PWM5_LoadDutyValue, coverage: 1,0
 27107  00A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27108  00A8  0000006F           	ddw	__ccovbit1_4/(0+8)	; CC_ADDR
 27109  00AC  00000001           	ddw	1	; NUM_POINTS
 27110  00B0  00000004           	ddw	__ccovbit1_4& (0+7)	; OFFSET
 27111  00B4  00000000           	ddw	0	; Reserved
 27112  00B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27113  00BC  00000002           	ddw	2	; NUM_RANGES
 27114  00C0  000019AE           	ddw	__ccov12_start_blk1	; block 1 START_ADDR
 27115  00C4  000019B1           	ddw	__end_of_PWM5_LoadDutyValue	; block 1 END_ADDR
 27116  00C8  00001996           	ddw	_PWM5_LoadDutyValue	; block 0 START_ADDR
 27117  00CC  000019AE           	ddw	__ccov11_end_blk0	; block 0 END_ADDR
 27118                           
 27119                           ; Function: EUSART_Initialize, coverage: 6,5,4,3,2,1,0
 27120  00D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27121  00D4  0000006F           	ddw	__ccovbit6_5/(0+8)	; CC_ADDR
 27122  00D8  00000001           	ddw	1	; NUM_POINTS
 27123  00DC  00000003           	ddw	__ccovbit6_5& (0+7)	; OFFSET
 27124  00E0  00000000           	ddw	0	; Reserved
 27125  00E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27126  00E8  00000007           	ddw	7	; NUM_RANGES
 27127  00EC  00001B6E           	ddw	__ccov19_start_blk6	; block 6 START_ADDR
 27128  00F0  00001B71           	ddw	__end_of_EUSART_Initialize	; block 6 END_ADDR
 27129  00F4  00001B6C           	ddw	__ccov18_start_blk5	; block 5 START_ADDR
 27130  00F8  00001B6E           	ddw	__ccov18_end_blk5	; block 5 END_ADDR
 27131  00FC  00001B64           	ddw	__ccov17_start_blk4	; block 4 START_ADDR
 27132  0100  00001B6C           	ddw	__ccov17_end_blk4	; block 4 END_ADDR
 27133  0104  00001B5C           	ddw	__ccov16_start_blk3	; block 3 START_ADDR
 27134  0108  00001B64           	ddw	__ccov16_end_blk3	; block 3 END_ADDR
 27135  010C  00001B54           	ddw	__ccov15_start_blk2	; block 2 START_ADDR
 27136  0110  00001B5C           	ddw	__ccov15_end_blk2	; block 2 END_ADDR
 27137  0114  00001B53           	ddw	__ccov14_start_blk1	; block 1 START_ADDR
 27138  0118  00001B54           	ddw	__ccov14_end_blk1	; block 1 END_ADDR
 27139  011C  00001B4A           	ddw	_EUSART_Initialize	; block 0 START_ADDR
 27140  0120  00001B53           	ddw	__ccov13_end_blk0	; block 0 END_ADDR
 27141                           
 27142                           ; Function: EUSART_Write, coverage: 5,4,2,0
 27143  0124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27144  0128  0000006F           	ddw	__ccovbit5_6/(0+8)	; CC_ADDR
 27145  012C  00000001           	ddw	1	; NUM_POINTS
 27146  0130  00000002           	ddw	__ccovbit5_6& (0+7)	; OFFSET
 27147  0134  00000000           	ddw	0	; Reserved
 27148  0138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27149  013C  00000004           	ddw	4	; NUM_RANGES
 27150  0140  000027DB           	ddw	__ccov47_start_blk5	; block 5 START_ADDR
 27151  0144  000027DE           	ddw	__end_of_EUSART_Write	; block 5 END_ADDR
 27152  0148  000027D7           	ddw	__ccov46_start_blk4	; block 4 START_ADDR
 27153  014C  000027DB           	ddw	__ccov46_end_blk4	; block 4 END_ADDR
 27154  0150  000027D2           	ddw	__ccov45_start_blk2	; block 2 START_ADDR
 27155  0154  000027D7           	ddw	__ccov45_end_blk2	; block 2 END_ADDR
 27156  0158  000027CD           	ddw	_EUSART_Write	; block 0 START_ADDR
 27157  015C  000027D2           	ddw	__ccov44_end_blk0	; block 0 END_ADDR
 27158                           
 27159                           ; Function: putch, coverage: 1,0
 27160  0160  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27161  0164  0000006F           	ddw	__ccovbit1_7/(0+8)	; CC_ADDR
 27162  0168  00000001           	ddw	1	; NUM_POINTS
 27163  016C  00000001           	ddw	__ccovbit1_7& (0+7)	; OFFSET
 27164  0170  00000000           	ddw	0	; Reserved
 27165  0174  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27166  0178  00000002           	ddw	2	; NUM_RANGES
 27167  017C  000026A7           	ddw	__ccov51_start_blk1	; block 1 START_ADDR
 27168  0180  000026AA           	ddw	__end_of_putch	; block 1 END_ADDR
 27169  0184  000026A1           	ddw	_putch	; block 0 START_ADDR
 27170  0188  000026A7           	ddw	__ccov50_end_blk0	; block 0 END_ADDR
 27171                           
 27172                           ; Function: EUSART_SetFramingErrorHandler, coverage: 1,0
 27173  018C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27174  0190  0000006F           	ddw	__ccovbit1_8/(0+8)	; CC_ADDR
 27175  0194  00000001           	ddw	1	; NUM_POINTS
 27176  0198  00000000           	ddw	__ccovbit1_8& (0+7)	; OFFSET
 27177  019C  00000000           	ddw	0	; Reserved
 27178  01A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27179  01A4  00000002           	ddw	2	; NUM_RANGES
 27180  01A8  000026FB           	ddw	__ccov57_start_blk1	; block 1 START_ADDR
 27181  01AC  000026FE           	ddw	__end_of_EUSART_SetFramingErrorHandler	; block 1 END_ADDR
 27182  01B0  000026F3           	ddw	_EUSART_SetFramingErrorHandler	; block 0 START_ADDR
 27183  01B4  000026FB           	ddw	__ccov56_end_blk0	; block 0 END_ADDR
 27184                           
 27185                           ; Function: EUSART_SetOverrunErrorHandler, coverage: 1,0
 27186  01B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27187  01BC  0000006E           	ddw	__ccovbit1_9/(0+8)	; CC_ADDR
 27188  01C0  00000001           	ddw	1	; NUM_POINTS
 27189  01C4  00000007           	ddw	__ccovbit1_9& (0+7)	; OFFSET
 27190  01C8  00000000           	ddw	0	; Reserved
 27191  01CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27192  01D0  00000002           	ddw	2	; NUM_RANGES
 27193  01D4  00002706           	ddw	__ccov59_start_blk1	; block 1 START_ADDR
 27194  01D8  00002709           	ddw	__end_of_EUSART_SetOverrunErrorHandler	; block 1 END_ADDR
 27195  01DC  000026FE           	ddw	_EUSART_SetOverrunErrorHandler	; block 0 START_ADDR
 27196  01E0  00002706           	ddw	__ccov58_end_blk0	; block 0 END_ADDR
 27197                           
 27198                           ; Function: EUSART_SetErrorHandler, coverage: 1,0
 27199  01E4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27200  01E8  0000006E           	ddw	__ccovbit1_10/(0+8)	; CC_ADDR
 27201  01EC  00000001           	ddw	1	; NUM_POINTS
 27202  01F0  00000006           	ddw	__ccovbit1_10& (0+7)	; OFFSET
 27203  01F4  00000000           	ddw	0	; Reserved
 27204  01F8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27205  01FC  00000002           	ddw	2	; NUM_RANGES
 27206  0200  000026F0           	ddw	__ccov61_start_blk1	; block 1 START_ADDR
 27207  0204  000026F3           	ddw	__end_of_EUSART_SetErrorHandler	; block 1 END_ADDR
 27208  0208  000026E8           	ddw	_EUSART_SetErrorHandler	; block 0 START_ADDR
 27209  020C  000026F0           	ddw	__ccov60_end_blk0	; block 0 END_ADDR
 27210                           
 27211                           ; Function: ADC_Initialize, coverage: 5,4,3,2,1,0
 27212  0210  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27213  0214  0000006E           	ddw	__ccovbit5_11/(0+8)	; CC_ADDR
 27214  0218  00000001           	ddw	1	; NUM_POINTS
 27215  021C  00000005           	ddw	__ccovbit5_11& (0+7)	; OFFSET
 27216  0220  00000000           	ddw	0	; Reserved
 27217  0224  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27218  0228  00000006           	ddw	6	; NUM_RANGES
 27219  022C  000026E5           	ddw	__ccov67_start_blk5	; block 5 START_ADDR
 27220  0230  000026E8           	ddw	__end_of_ADC_Initialize	; block 5 END_ADDR
 27221  0234  000026E3           	ddw	__ccov66_start_blk4	; block 4 START_ADDR
 27222  0238  000026E5           	ddw	__ccov66_end_blk4	; block 4 END_ADDR
 27223  023C  000026E2           	ddw	__ccov65_start_blk3	; block 3 START_ADDR
 27224  0240  000026E3           	ddw	__ccov65_end_blk3	; block 3 END_ADDR
 27225  0244  000026E1           	ddw	__ccov64_start_blk2	; block 2 START_ADDR
 27226  0248  000026E2           	ddw	__ccov64_end_blk2	; block 2 END_ADDR
 27227  024C  000026E0           	ddw	__ccov63_start_blk1	; block 1 START_ADDR
 27228  0250  000026E1           	ddw	__ccov63_end_blk1	; block 1 END_ADDR
 27229  0254  000026DD           	ddw	_ADC_Initialize	; block 0 START_ADDR
 27230  0258  000026E0           	ddw	__ccov62_end_blk0	; block 0 END_ADDR
 27231                           
 27232                           ; Function: ADC_GetConversion, coverage: 9,7,5,3,2,1,0
 27233  025C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27234  0260  0000006E           	ddw	__ccovbit9_12/(0+8)	; CC_ADDR
 27235  0264  00000001           	ddw	1	; NUM_POINTS
 27236  0268  00000004           	ddw	__ccovbit9_12& (0+7)	; OFFSET
 27237  026C  00000000           	ddw	0	; Reserved
 27238  0270  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27239  0274  00000007           	ddw	7	; NUM_RANGES
 27240  0278  00001A57           	ddw	__ccov83_start_blk9	; block 9 START_ADDR
 27241  027C  00001A5A           	ddw	__end_of_ADC_GetConversion	; block 9 END_ADDR
 27242  0280  00001A53           	ddw	__ccov82_start_blk7	; block 7 START_ADDR
 27243  0284  00001A57           	ddw	__ccov82_end_blk7	; block 7 END_ADDR
 27244  0288  00001A4F           	ddw	__ccov81_start_blk5	; block 5 START_ADDR
 27245  028C  00001A53           	ddw	__ccov81_end_blk5	; block 5 END_ADDR
 27246  0290  00001A4D           	ddw	__ccov80_start_blk3	; block 3 START_ADDR
 27247  0294  00001A4F           	ddw	__ccov80_end_blk3	; block 3 END_ADDR
 27248  0298  00001A49           	ddw	__ccov79_start_blk2	; block 2 START_ADDR
 27249  029C  00001A4D           	ddw	__ccov79_end_blk2	; block 2 END_ADDR
 27250  02A0  00001A48           	ddw	__ccov78_start_blk1	; block 1 START_ADDR
 27251  02A4  00001A49           	ddw	__ccov78_end_blk1	; block 1 END_ADDR
 27252  02A8  00001A3D           	ddw	_ADC_GetConversion	; block 0 START_ADDR
 27253  02AC  00001A48           	ddw	__ccov77_end_blk0	; block 0 END_ADDR
 27254                           
 27255                           ; Function: INTERRUPT_InterruptManager, coverage: 1,0
 27256  02B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27257  02B4  0000006E           	ddw	__ccovbit1_13/(0+8)	; CC_ADDR
 27258  02B8  00000001           	ddw	1	; NUM_POINTS
 27259  02BC  00000003           	ddw	__ccovbit1_13& (0+7)	; OFFSET
 27260  02C0  00000000           	ddw	0	; Reserved
 27261  02C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27262  02C8  00000002           	ddw	2	; NUM_RANGES
 27263  02CC  0000000B           	ddw	__ccov87_start_blk1	; block 1 START_ADDR
 27264  02D0  00000011           	ddw	__ccov87_end_blk1	; block 1 END_ADDR
 27265  02D4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27266  02D8  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27267                           
 27268                           ; Function: INTERRUPT_InterruptManager, coverage: 2,1,0
 27269  02DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27270  02E0  0000006E           	ddw	__ccovbit2_14/(0+8)	; CC_ADDR
 27271  02E4  00000001           	ddw	1	; NUM_POINTS
 27272  02E8  00000002           	ddw	__ccovbit2_14& (0+7)	; OFFSET
 27273  02EC  00000000           	ddw	0	; Reserved
 27274  02F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27275  02F4  00000003           	ddw	3	; NUM_RANGES
 27276  02F8  00000011           	ddw	__ccov88_start_blk2	; block 2 START_ADDR
 27277  02FC  00000016           	ddw	__ccov88_end_blk2	; block 2 END_ADDR
 27278  0300  0000000B           	ddw	__ccov87_start_blk1	; block 1 START_ADDR
 27279  0304  00000011           	ddw	__ccov87_end_blk1	; block 1 END_ADDR
 27280  0308  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27281  030C  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27282                           
 27283                           ; Function: INTERRUPT_InterruptManager, coverage: 3,0
 27284  0310  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27285  0314  0000006E           	ddw	__ccovbit3_15/(0+8)	; CC_ADDR
 27286  0318  00000001           	ddw	1	; NUM_POINTS
 27287  031C  00000001           	ddw	__ccovbit3_15& (0+7)	; OFFSET
 27288  0320  00000000           	ddw	0	; Reserved
 27289  0324  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27290  0328  00000002           	ddw	2	; NUM_RANGES
 27291  032C  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27292  0330  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27293  0334  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27294  0338  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27295                           
 27296                           ; Function: INTERRUPT_InterruptManager, coverage: 5,4,3,0
 27297  033C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27298  0340  0000006E           	ddw	__ccovbit5_16/(0+8)	; CC_ADDR
 27299  0344  00000001           	ddw	1	; NUM_POINTS
 27300  0348  00000000           	ddw	__ccovbit5_16& (0+7)	; OFFSET
 27301  034C  00000000           	ddw	0	; Reserved
 27302  0350  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27303  0354  00000004           	ddw	4	; NUM_RANGES
 27304  0358  00000021           	ddw	__ccov91_start_blk5	; block 5 START_ADDR
 27305  035C  00000027           	ddw	__ccov91_end_blk5	; block 5 END_ADDR
 27306  0360  0000001C           	ddw	__ccov90_start_blk4	; block 4 START_ADDR
 27307  0364  00000021           	ddw	__ccov90_end_blk4	; block 4 END_ADDR
 27308  0368  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27309  036C  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27310  0370  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27311  0374  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27312                           
 27313                           ; Function: INTERRUPT_InterruptManager, coverage: 6,5,4,3,0
 27314  0378  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27315  037C  000000EB           	ddw	__ccovbit6_17/(0+8)	; CC_ADDR
 27316  0380  00000001           	ddw	1	; NUM_POINTS
 27317  0384  00000007           	ddw	__ccovbit6_17& (0+7)	; OFFSET
 27318  0388  00000000           	ddw	0	; Reserved
 27319  038C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27320  0390  00000005           	ddw	5	; NUM_RANGES
 27321  0394  00000027           	ddw	__ccov92_start_blk6	; block 6 START_ADDR
 27322  0398  0000002D           	ddw	__ccov92_end_blk6	; block 6 END_ADDR
 27323  039C  00000021           	ddw	__ccov91_start_blk5	; block 5 START_ADDR
 27324  03A0  00000027           	ddw	__ccov91_end_blk5	; block 5 END_ADDR
 27325  03A4  0000001C           	ddw	__ccov90_start_blk4	; block 4 START_ADDR
 27326  03A8  00000021           	ddw	__ccov90_end_blk4	; block 4 END_ADDR
 27327  03AC  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27328  03B0  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27329  03B4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27330  03B8  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27331                           
 27332                           ; Function: INTERRUPT_InterruptManager, coverage: 8,7,4,3,0
 27333  03BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27334  03C0  000000EB           	ddw	__ccovbit8_18/(0+8)	; CC_ADDR
 27335  03C4  00000001           	ddw	1	; NUM_POINTS
 27336  03C8  00000006           	ddw	__ccovbit8_18& (0+7)	; OFFSET
 27337  03CC  00000000           	ddw	0	; Reserved
 27338  03D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27339  03D4  00000005           	ddw	5	; NUM_RANGES
 27340  03D8  00000032           	ddw	__ccov94_start_blk8	; block 8 START_ADDR
 27341  03DC  00000038           	ddw	__ccov94_end_blk8	; block 8 END_ADDR
 27342  03E0  0000002D           	ddw	__ccov93_start_blk7	; block 7 START_ADDR
 27343  03E4  00000032           	ddw	__ccov93_end_blk7	; block 7 END_ADDR
 27344  03E8  0000001C           	ddw	__ccov90_start_blk4	; block 4 START_ADDR
 27345  03EC  00000021           	ddw	__ccov90_end_blk4	; block 4 END_ADDR
 27346  03F0  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27347  03F4  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27348  03F8  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27349  03FC  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27350                           
 27351                           ; Function: INTERRUPT_InterruptManager, coverage: 9,8,7,4,3,0
 27352  0400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27353  0404  000000EB           	ddw	__ccovbit9_19/(0+8)	; CC_ADDR
 27354  0408  00000001           	ddw	1	; NUM_POINTS
 27355  040C  00000005           	ddw	__ccovbit9_19& (0+7)	; OFFSET
 27356  0410  00000000           	ddw	0	; Reserved
 27357  0414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27358  0418  00000006           	ddw	6	; NUM_RANGES
 27359  041C  00000038           	ddw	__ccov95_start_blk9	; block 9 START_ADDR
 27360  0420  0000003E           	ddw	__ccov95_end_blk9	; block 9 END_ADDR
 27361  0424  00000032           	ddw	__ccov94_start_blk8	; block 8 START_ADDR
 27362  0428  00000038           	ddw	__ccov94_end_blk8	; block 8 END_ADDR
 27363  042C  0000002D           	ddw	__ccov93_start_blk7	; block 7 START_ADDR
 27364  0430  00000032           	ddw	__ccov93_end_blk7	; block 7 END_ADDR
 27365  0434  0000001C           	ddw	__ccov90_start_blk4	; block 4 START_ADDR
 27366  0438  00000021           	ddw	__ccov90_end_blk4	; block 4 END_ADDR
 27367  043C  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27368  0440  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27369  0444  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27370  0448  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27371                           
 27372                           ; Function: INTERRUPT_InterruptManager, coverage: 14,7,4,3,0
 27373  044C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27374  0450  000000EB           	ddw	__ccovbit14_20/(0+8)	; CC_ADDR
 27375  0454  00000001           	ddw	1	; NUM_POINTS
 27376  0458  00000004           	ddw	__ccovbit14_20& (0+7)	; OFFSET
 27377  045C  00000000           	ddw	0	; Reserved
 27378  0460  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27379  0464  00000005           	ddw	5	; NUM_RANGES
 27380  0468  0000003E           	ddw	__ccov96_start_blk14	; block 14 START_ADDR
 27381  046C  00000040           	ddw	__ccov96_end_blk14	; block 14 END_ADDR
 27382  0470  0000002D           	ddw	__ccov93_start_blk7	; block 7 START_ADDR
 27383  0474  00000032           	ddw	__ccov93_end_blk7	; block 7 END_ADDR
 27384  0478  0000001C           	ddw	__ccov90_start_blk4	; block 4 START_ADDR
 27385  047C  00000021           	ddw	__ccov90_end_blk4	; block 4 END_ADDR
 27386  0480  00000016           	ddw	__ccov89_start_blk3	; block 3 START_ADDR
 27387  0484  0000001C           	ddw	__ccov89_end_blk3	; block 3 END_ADDR
 27388  0488  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27389  048C  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27390                           
 27391                           ; Function: INTERRUPT_InterruptManager, coverage: 16,0
 27392  0490  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27393  0494  000000EB           	ddw	__ccovbit16_21/(0+8)	; CC_ADDR
 27394  0498  00000001           	ddw	1	; NUM_POINTS
 27395  049C  00000003           	ddw	__ccovbit16_21& (0+7)	; OFFSET
 27396  04A0  00000000           	ddw	0	; Reserved
 27397  04A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27398  04A8  00000002           	ddw	2	; NUM_RANGES
 27399  04AC  00000040           	ddw	__ccov97_start_blk16	; block 16 START_ADDR
 27400  04B0  00000044           	ddw	__end_of_INTERRUPT_InterruptManager	; block 16 END_ADDR
 27401  04B4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
 27402  04B8  0000000B           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
 27403                           
 27404                           ; Function: SYSTEM_Initialize, coverage: 1,0
 27405  04BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27406  04C0  000000EB           	ddw	__ccovbit1_22/(0+8)	; CC_ADDR
 27407  04C4  00000001           	ddw	1	; NUM_POINTS
 27408  04C8  00000002           	ddw	__ccovbit1_22& (0+7)	; OFFSET
 27409  04CC  00000000           	ddw	0	; Reserved
 27410  04D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27411  04D4  00000002           	ddw	2	; NUM_RANGES
 27412  04D8  00001C6E           	ddw	__ccov99_start_blk1	; block 1 START_ADDR
 27413  04DC  00001C71           	ddw	__end_of_SYSTEM_Initialize	; block 1 END_ADDR
 27414  04E0  00001C44           	ddw	_SYSTEM_Initialize	; block 0 START_ADDR
 27415  04E4  00001C6E           	ddw	__ccov98_end_blk0	; block 0 END_ADDR
 27416                           
 27417                           ; Function: OSCILLATOR_Initialize, coverage: 4,3,2,1,0
 27418  04E8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27419  04EC  000000EB           	ddw	__ccovbit4_23/(0+8)	; CC_ADDR
 27420  04F0  00000001           	ddw	1	; NUM_POINTS
 27421  04F4  00000001           	ddw	__ccovbit4_23& (0+7)	; OFFSET
 27422  04F8  00000000           	ddw	0	; Reserved
 27423  04FC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27424  0500  00000005           	ddw	5	; NUM_RANGES
 27425  0504  00002711           	ddw	__ccov104_start_blk4	; block 4 START_ADDR
 27426  0508  00002714           	ddw	__end_of_OSCILLATOR_Initialize	; block 4 END_ADDR
 27427  050C  00002710           	ddw	__ccov103_start_blk3	; block 3 START_ADDR
 27428  0510  00002711           	ddw	__ccov103_end_blk3	; block 3 END_ADDR
 27429  0514  0000270D           	ddw	__ccov102_start_blk2	; block 2 START_ADDR
 27430  0518  00002710           	ddw	__ccov102_end_blk2	; block 2 END_ADDR
 27431  051C  0000270C           	ddw	__ccov101_start_blk1	; block 1 START_ADDR
 27432  0520  0000270D           	ddw	__ccov101_end_blk1	; block 1 END_ADDR
 27433  0524  00002709           	ddw	_OSCILLATOR_Initialize	; block 0 START_ADDR
 27434  0528  0000270C           	ddw	__ccov100_end_blk0	; block 0 END_ADDR
 27435                           
 27436                           ; Function: WDT_Initialize, coverage: 1,0
 27437  052C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27438  0530  000000EB           	ddw	__ccovbit1_24/(0+8)	; CC_ADDR
 27439  0534  00000001           	ddw	1	; NUM_POINTS
 27440  0538  00000000           	ddw	__ccovbit1_24& (0+7)	; OFFSET
 27441  053C  00000000           	ddw	0	; Reserved
 27442  0540  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27443  0544  00000002           	ddw	2	; NUM_RANGES
 27444  0548  000007FE           	ddw	__ccov106_start_blk1	; block 1 START_ADDR
 27445  054C  00000800           	ddw	__end_of_WDT_Initialize	; block 1 END_ADDR
 27446  0550  000007FB           	ddw	_WDT_Initialize	; block 0 START_ADDR
 27447  0554  000007FE           	ddw	__ccov105_end_blk0	; block 0 END_ADDR
 27448                           
 27449                           ; Function: PMD_Initialize, coverage: 1,0
 27450  0558  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27451  055C  000000EA           	ddw	__ccovbit1_25/(0+8)	; CC_ADDR
 27452  0560  00000001           	ddw	1	; NUM_POINTS
 27453  0564  00000007           	ddw	__ccovbit1_25& (0+7)	; OFFSET
 27454  0568  00000000           	ddw	0	; Reserved
 27455  056C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27456  0570  00000002           	ddw	2	; NUM_RANGES
 27457  0574  000027CA           	ddw	__ccov108_start_blk1	; block 1 START_ADDR
 27458  0578  000027CD           	ddw	__end_of_PMD_Initialize	; block 1 END_ADDR
 27459  057C  000027BD           	ddw	_PMD_Initialize	; block 0 START_ADDR
 27460  0580  000027CA           	ddw	__ccov107_end_blk0	; block 0 END_ADDR
 27461                           
 27462                           ; Function: FLASH_ReadWord, coverage: 11,9,8,7,6,5,4,3,2,1,0
 27463  0584  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27464  0588  000000EA           	ddw	__ccovbit11_26/(0+8)	; CC_ADDR
 27465  058C  00000001           	ddw	1	; NUM_POINTS
 27466  0590  00000006           	ddw	__ccovbit11_26& (0+7)	; OFFSET
 27467  0594  00000000           	ddw	0	; Reserved
 27468  0598  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27469  059C  0000000B           	ddw	11	; NUM_RANGES
 27470  05A0  00001A97           	ddw	__ccov119_start_blk11	; block 11 START_ADDR
 27471  05A4  00001A99           	ddw	__end_of_FLASH_ReadWord	; block 11 END_ADDR
 27472  05A8  00001A8F           	ddw	__ccov118_start_blk9	; block 9 START_ADDR
 27473  05AC  00001A97           	ddw	__ccov118_end_blk9	; block 9 END_ADDR
 27474  05B0  00001A89           	ddw	__ccov117_start_blk8	; block 8 START_ADDR
 27475  05B4  00001A8F           	ddw	__ccov117_end_blk8	; block 8 END_ADDR
 27476  05B8  00001A88           	ddw	__ccov116_start_blk7	; block 7 START_ADDR
 27477  05BC  00001A89           	ddw	__ccov116_end_blk7	; block 7 END_ADDR
 27478  05C0  00001A87           	ddw	__ccov115_start_blk6	; block 6 START_ADDR
 27479  05C4  00001A88           	ddw	__ccov115_end_blk6	; block 6 END_ADDR
 27480  05C8  00001A86           	ddw	__ccov114_start_blk5	; block 5 START_ADDR
 27481  05CC  00001A87           	ddw	__ccov114_end_blk5	; block 5 END_ADDR
 27482  05D0  00001A85           	ddw	__ccov113_start_blk4	; block 4 START_ADDR
 27483  05D4  00001A86           	ddw	__ccov113_end_blk4	; block 4 END_ADDR
 27484  05D8  00001A81           	ddw	__ccov112_start_blk3	; block 3 START_ADDR
 27485  05DC  00001A85           	ddw	__ccov112_end_blk3	; block 3 END_ADDR
 27486  05E0  00001A7E           	ddw	__ccov111_start_blk2	; block 2 START_ADDR
 27487  05E4  00001A81           	ddw	__ccov111_end_blk2	; block 2 END_ADDR
 27488  05E8  00001A7D           	ddw	__ccov110_start_blk1	; block 1 START_ADDR
 27489  05EC  00001A7E           	ddw	__ccov110_end_blk1	; block 1 END_ADDR
 27490  05F0  00001A78           	ddw	_FLASH_ReadWord	; block 0 START_ADDR
 27491  05F4  00001A7D           	ddw	__ccov109_end_blk0	; block 0 END_ADDR
 27492                           
 27493                           ; Function: DATAEE_WriteByte, coverage: 13,12,11,10,8,7,6,5,4,3,2,1,0
 27494  05F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27495  05FC  000000EA           	ddw	__ccovbit13_27/(0+8)	; CC_ADDR
 27496  0600  00000001           	ddw	1	; NUM_POINTS
 27497  0604  00000005           	ddw	__ccovbit13_27& (0+7)	; OFFSET
 27498  0608  00000000           	ddw	0	; Reserved
 27499  060C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27500  0610  0000000D           	ddw	13	; NUM_RANGES
 27501  0614  00001B48           	ddw	__ccov176_start_blk13	; block 13 START_ADDR
 27502  0618  00001B4A           	ddw	__end_of_DATAEE_WriteByte	; block 13 END_ADDR
 27503  061C  00001B42           	ddw	__ccov175_start_blk12	; block 12 START_ADDR
 27504  0620  00001B48           	ddw	__ccov175_end_blk12	; block 12 END_ADDR
 27505  0624  00001B41           	ddw	__ccov174_start_blk11	; block 11 START_ADDR
 27506  0628  00001B42           	ddw	__ccov174_end_blk11	; block 11 END_ADDR
 27507  062C  00001B3D           	ddw	__ccov173_start_blk10	; block 10 START_ADDR
 27508  0630  00001B41           	ddw	__ccov173_end_blk10	; block 10 END_ADDR
 27509  0634  00001B3C           	ddw	__ccov172_start_blk8	; block 8 START_ADDR
 27510  0638  00001B3D           	ddw	__ccov172_end_blk8	; block 8 END_ADDR
 27511  063C  00001B3A           	ddw	__ccov171_start_blk7	; block 7 START_ADDR
 27512  0640  00001B3C           	ddw	__ccov171_end_blk7	; block 7 END_ADDR
 27513  0644  00001B38           	ddw	__ccov170_start_blk6	; block 6 START_ADDR
 27514  0648  00001B3A           	ddw	__ccov170_end_blk6	; block 6 END_ADDR
 27515  064C  00001B37           	ddw	__ccov169_start_blk5	; block 5 START_ADDR
 27516  0650  00001B38           	ddw	__ccov169_end_blk5	; block 5 END_ADDR
 27517  0654  00001B36           	ddw	__ccov168_start_blk4	; block 4 START_ADDR
 27518  0658  00001B37           	ddw	__ccov168_end_blk4	; block 4 END_ADDR
 27519  065C  00001B35           	ddw	__ccov167_start_blk3	; block 3 START_ADDR
 27520  0660  00001B36           	ddw	__ccov167_end_blk3	; block 3 END_ADDR
 27521  0664  00001B31           	ddw	__ccov166_start_blk2	; block 2 START_ADDR
 27522  0668  00001B35           	ddw	__ccov166_end_blk2	; block 2 END_ADDR
 27523  066C  00001B2D           	ddw	__ccov165_start_blk1	; block 1 START_ADDR
 27524  0670  00001B31           	ddw	__ccov165_end_blk1	; block 1 END_ADDR
 27525  0674  00001B25           	ddw	_DATAEE_WriteByte	; block 0 START_ADDR
 27526  0678  00001B2D           	ddw	__ccov164_end_blk0	; block 0 END_ADDR
 27527                           
 27528                           ; Function: DATAEE_ReadByte, coverage: 8,6,5,4,3,2,1,0
 27529  067C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27530  0680  000000EA           	ddw	__ccovbit8_28/(0+8)	; CC_ADDR
 27531  0684  00000001           	ddw	1	; NUM_POINTS
 27532  0688  00000004           	ddw	__ccovbit8_28& (0+7)	; OFFSET
 27533  068C  00000000           	ddw	0	; Reserved
 27534  0690  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27535  0694  00000008           	ddw	8	; NUM_RANGES
 27536  0698  0000182F           	ddw	__ccov184_start_blk8	; block 8 START_ADDR
 27537  069C  00001832           	ddw	__end_of_DATAEE_ReadByte	; block 8 END_ADDR
 27538  06A0  0000182D           	ddw	__ccov183_start_blk6	; block 6 START_ADDR
 27539  06A4  0000182F           	ddw	__ccov183_end_blk6	; block 6 END_ADDR
 27540  06A8  0000182C           	ddw	__ccov182_start_blk5	; block 5 START_ADDR
 27541  06AC  0000182D           	ddw	__ccov182_end_blk5	; block 5 END_ADDR
 27542  06B0  0000182B           	ddw	__ccov181_start_blk4	; block 4 START_ADDR
 27543  06B4  0000182C           	ddw	__ccov181_end_blk4	; block 4 END_ADDR
 27544  06B8  0000182A           	ddw	__ccov180_start_blk3	; block 3 START_ADDR
 27545  06BC  0000182B           	ddw	__ccov180_end_blk3	; block 3 END_ADDR
 27546  06C0  00001829           	ddw	__ccov179_start_blk2	; block 2 START_ADDR
 27547  06C4  0000182A           	ddw	__ccov179_end_blk2	; block 2 END_ADDR
 27548  06C8  00001825           	ddw	__ccov178_start_blk1	; block 1 START_ADDR
 27549  06CC  00001829           	ddw	__ccov178_end_blk1	; block 1 END_ADDR
 27550  06D0  00001821           	ddw	_DATAEE_ReadByte	; block 0 START_ADDR
 27551  06D4  00001825           	ddw	__ccov177_end_blk0	; block 0 END_ADDR
 27552                           
 27553                           ; Function: PIN_MANAGER_Initialize, coverage: 14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
 27554  06D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27555  06DC  000000EA           	ddw	__ccovbit14_29/(0+8)	; CC_ADDR
 27556  06E0  00000001           	ddw	1	; NUM_POINTS
 27557  06E4  00000003           	ddw	__ccovbit14_29& (0+7)	; OFFSET
 27558  06E8  00000000           	ddw	0	; Reserved
 27559  06EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27560  06F0  0000000F           	ddw	15	; NUM_RANGES
 27561  06F4  00001D04           	ddw	__ccov199_start_blk14	; block 14 START_ADDR
 27562  06F8  00001D07           	ddw	__end_of_PIN_MANAGER_Initialize	; block 14 END_ADDR
 27563  06FC  00001D01           	ddw	__ccov198_start_blk13	; block 13 START_ADDR
 27564  0700  00001D04           	ddw	__ccov198_end_blk13	; block 13 END_ADDR
 27565  0704  00001CFF           	ddw	__ccov197_start_blk12	; block 12 START_ADDR
 27566  0708  00001D01           	ddw	__ccov197_end_blk12	; block 12 END_ADDR
 27567  070C  00001CFD           	ddw	__ccov196_start_blk11	; block 11 START_ADDR
 27568  0710  00001CFF           	ddw	__ccov196_end_blk11	; block 11 END_ADDR
 27569  0714  00001CFA           	ddw	__ccov195_start_blk10	; block 10 START_ADDR
 27570  0718  00001CFD           	ddw	__ccov195_end_blk10	; block 10 END_ADDR
 27571  071C  00001CF8           	ddw	__ccov194_start_blk9	; block 9 START_ADDR
 27572  0720  00001CFA           	ddw	__ccov194_end_blk9	; block 9 END_ADDR
 27573  0724  00001CE7           	ddw	__ccov193_start_blk8	; block 8 START_ADDR
 27574  0728  00001CF8           	ddw	__ccov193_end_blk8	; block 8 END_ADDR
 27575  072C  00001CE5           	ddw	__ccov192_start_blk7	; block 7 START_ADDR
 27576  0730  00001CE7           	ddw	__ccov192_end_blk7	; block 7 END_ADDR
 27577  0734  00001CE4           	ddw	__ccov191_start_blk6	; block 6 START_ADDR
 27578  0738  00001CE5           	ddw	__ccov191_end_blk6	; block 6 END_ADDR
 27579  073C  00001CE1           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
 27580  0740  00001CE4           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
 27581  0744  00001CDF           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
 27582  0748  00001CE1           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
 27583  074C  00001CDC           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
 27584  0750  00001CDF           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
 27585  0754  00001CDA           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
 27586  0758  00001CDC           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
 27587  075C  00001CD7           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
 27588  0760  00001CDA           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
 27589  0764  00001CD4           	ddw	_PIN_MANAGER_Initialize	; block 0 START_ADDR
 27590  0768  00001CD7           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
 27591                           
 27592                           ; Function: TMR1_Initialize, coverage: 6,5,4,3,2,1,0
 27593  076C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27594  0770  000000EA           	ddw	__ccovbit6_30/(0+8)	; CC_ADDR
 27595  0774  00000001           	ddw	1	; NUM_POINTS
 27596  0778  00000002           	ddw	__ccovbit6_30& (0+7)	; OFFSET
 27597  077C  00000000           	ddw	0	; Reserved
 27598  0780  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27599  0784  00000007           	ddw	7	; NUM_RANGES
 27600  0788  00001978           	ddw	__ccov207_start_blk6	; block 6 START_ADDR
 27601  078C  0000197B           	ddw	__end_of_TMR1_Initialize	; block 6 END_ADDR
 27602  0790  00001975           	ddw	__ccov206_start_blk5	; block 5 START_ADDR
 27603  0794  00001978           	ddw	__ccov206_end_blk5	; block 5 END_ADDR
 27604  0798  0000196E           	ddw	__ccov205_start_blk4	; block 4 START_ADDR
 27605  079C  00001975           	ddw	__ccov205_end_blk4	; block 4 END_ADDR
 27606  07A0  0000196C           	ddw	__ccov204_start_blk3	; block 3 START_ADDR
 27607  07A4  0000196E           	ddw	__ccov204_end_blk3	; block 3 END_ADDR
 27608  07A8  00001965           	ddw	__ccov203_start_blk2	; block 2 START_ADDR
 27609  07AC  0000196C           	ddw	__ccov203_end_blk2	; block 2 END_ADDR
 27610  07B0  00001964           	ddw	__ccov202_start_blk1	; block 1 START_ADDR
 27611  07B4  00001965           	ddw	__ccov202_end_blk1	; block 1 END_ADDR
 27612  07B8  00001960           	ddw	_TMR1_Initialize	; block 0 START_ADDR
 27613  07BC  00001964           	ddw	__ccov201_end_blk0	; block 0 END_ADDR
 27614                           
 27615                           ; Function: TMR1_WriteTimer, coverage: 4,3,2,1,0
 27616  07C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27617  07C4  000000EA           	ddw	__ccovbit4_31/(0+8)	; CC_ADDR
 27618  07C8  00000001           	ddw	1	; NUM_POINTS
 27619  07CC  00000001           	ddw	__ccovbit4_31& (0+7)	; OFFSET
 27620  07D0  00000000           	ddw	0	; Reserved
 27621  07D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27622  07D8  00000005           	ddw	5	; NUM_RANGES
 27623  07DC  0000191D           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
 27624  07E0  00001922           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
 27625  07E4  0000191B           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
 27626  07E8  0000191D           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
 27627  07EC  00001919           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
 27628  07F0  0000191B           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
 27629  07F4  00001918           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
 27630  07F8  00001919           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
 27631  07FC  00001913           	ddw	_TMR1_WriteTimer	; block 0 START_ADDR
 27632  0800  00001918           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
 27633                           
 27634                           ; Function: TMR1_WriteTimer, coverage: 7,6,0
 27635  0804  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27636  0808  000000EA           	ddw	__ccovbit7_32/(0+8)	; CC_ADDR
 27637  080C  00000001           	ddw	1	; NUM_POINTS
 27638  0810  00000000           	ddw	__ccovbit7_32& (0+7)	; OFFSET
 27639  0814  00000000           	ddw	0	; Reserved
 27640  0818  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27641  081C  00000003           	ddw	3	; NUM_RANGES
 27642  0820  00001924           	ddw	__ccov220_start_blk7	; block 7 START_ADDR
 27643  0824  00001929           	ddw	__ccov220_end_blk7	; block 7 END_ADDR
 27644  0828  00001922           	ddw	__ccov219_start_blk6	; block 6 START_ADDR
 27645  082C  00001924           	ddw	__ccov219_end_blk6	; block 6 END_ADDR
 27646  0830  00001913           	ddw	_TMR1_WriteTimer	; block 0 START_ADDR
 27647  0834  00001918           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
 27648                           
 27649                           ; Function: TMR1_WriteTimer, coverage: 9,0
 27650  0838  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27651  083C  000000E9           	ddw	__ccovbit9_33/(0+8)	; CC_ADDR
 27652  0840  00000001           	ddw	1	; NUM_POINTS
 27653  0844  00000007           	ddw	__ccovbit9_33& (0+7)	; OFFSET
 27654  0848  00000000           	ddw	0	; Reserved
 27655  084C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27656  0850  00000002           	ddw	2	; NUM_RANGES
 27657  0854  00001929           	ddw	__ccov221_start_blk9	; block 9 START_ADDR
 27658  0858  0000192C           	ddw	__end_of_TMR1_WriteTimer	; block 9 END_ADDR
 27659  085C  00001913           	ddw	_TMR1_WriteTimer	; block 0 START_ADDR
 27660  0860  00001918           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
 27661                           
 27662                           ; Function: TMR1_ISR, coverage: 3,2,1,0
 27663  0864  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27664  0868  000000E9           	ddw	__ccovbit3_34/(0+8)	; CC_ADDR
 27665  086C  00000001           	ddw	1	; NUM_POINTS
 27666  0870  00000006           	ddw	__ccovbit3_34& (0+7)	; OFFSET
 27667  0874  00000000           	ddw	0	; Reserved
 27668  0878  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27669  087C  00000004           	ddw	4	; NUM_RANGES
 27670  0880  000019F9           	ddw	__ccov231_start_blk3	; block 3 START_ADDR
 27671  0884  00001A01           	ddw	__ccov231_end_blk3	; block 3 END_ADDR
 27672  0888  000019F2           	ddw	__ccov230_start_blk2	; block 2 START_ADDR
 27673  088C  000019F9           	ddw	__ccov230_end_blk2	; block 2 END_ADDR
 27674  0890  000019EA           	ddw	__ccov229_start_blk1	; block 1 START_ADDR
 27675  0894  000019F2           	ddw	__ccov229_end_blk1	; block 1 END_ADDR
 27676  0898  000019E8           	ddw	_TMR1_ISR	; block 0 START_ADDR
 27677  089C  000019EA           	ddw	__ccov228_end_blk0	; block 0 END_ADDR
 27678                           
 27679                           ; Function: TMR1_ISR, coverage: 5,2,1,0
 27680  08A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27681  08A4  000000E9           	ddw	__ccovbit5_35/(0+8)	; CC_ADDR
 27682  08A8  00000001           	ddw	1	; NUM_POINTS
 27683  08AC  00000005           	ddw	__ccovbit5_35& (0+7)	; OFFSET
 27684  08B0  00000000           	ddw	0	; Reserved
 27685  08B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27686  08B8  00000004           	ddw	4	; NUM_RANGES
 27687  08BC  00001A01           	ddw	__ccov232_start_blk5	; block 5 START_ADDR
 27688  08C0  00001A04           	ddw	__end_of_TMR1_ISR	; block 5 END_ADDR
 27689  08C4  000019F2           	ddw	__ccov230_start_blk2	; block 2 START_ADDR
 27690  08C8  000019F9           	ddw	__ccov230_end_blk2	; block 2 END_ADDR
 27691  08CC  000019EA           	ddw	__ccov229_start_blk1	; block 1 START_ADDR
 27692  08D0  000019F2           	ddw	__ccov229_end_blk1	; block 1 END_ADDR
 27693  08D4  000019E8           	ddw	_TMR1_ISR	; block 0 START_ADDR
 27694  08D8  000019EA           	ddw	__ccov228_end_blk0	; block 0 END_ADDR
 27695                           
 27696                           ; Function: TMR1_SetInterruptHandler, coverage: 1,0
 27697  08DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27698  08E0  000000E9           	ddw	__ccovbit1_36/(0+8)	; CC_ADDR
 27699  08E4  00000001           	ddw	1	; NUM_POINTS
 27700  08E8  00000004           	ddw	__ccovbit1_36& (0+7)	; OFFSET
 27701  08EC  00000000           	ddw	0	; Reserved
 27702  08F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27703  08F4  00000002           	ddw	2	; NUM_RANGES
 27704  08F8  00002727           	ddw	__ccov234_start_blk1	; block 1 START_ADDR
 27705  08FC  0000272A           	ddw	__end_of_TMR1_SetInterruptHandler	; block 1 END_ADDR
 27706  0900  0000271F           	ddw	_TMR1_SetInterruptHandler	; block 0 START_ADDR
 27707  0904  00002727           	ddw	__ccov233_end_blk0	; block 0 END_ADDR
 27708                           
 27709                           ; Function: TMR1_DefaultInterruptHandler, coverage: 0
 27710  0908  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27711  090C  000000E9           	ddw	__ccovbit0_37/(0+8)	; CC_ADDR
 27712  0910  00000001           	ddw	1	; NUM_POINTS
 27713  0914  00000003           	ddw	__ccovbit0_37& (0+7)	; OFFSET
 27714  0918  00000000           	ddw	0	; Reserved
 27715  091C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27716  0920  00000001           	ddw	1	; NUM_RANGES
 27717  0924  0000266C           	ddw	_TMR1_DefaultInterruptHandler	; block 0 START_ADDR
 27718  0928  0000266F           	ddw	__end_of_TMR1_DefaultInterruptHandler	; block 0 END_ADDR
 27719                           
 27720                           ; Function: TMR0_Initialize, coverage: 7,6,5,4,3,2,1,0
 27721  092C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27722  0930  000000E9           	ddw	__ccovbit7_38/(0+8)	; CC_ADDR
 27723  0934  00000001           	ddw	1	; NUM_POINTS
 27724  0938  00000002           	ddw	__ccovbit7_38& (0+7)	; OFFSET
 27725  093C  00000000           	ddw	0	; Reserved
 27726  0940  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27727  0944  00000008           	ddw	8	; NUM_RANGES
 27728  0948  00001A3A           	ddw	__ccov243_start_blk7	; block 7 START_ADDR
 27729  094C  00001A3D           	ddw	__end_of_TMR0_Initialize	; block 7 END_ADDR
 27730  0950  00001A37           	ddw	__ccov242_start_blk6	; block 6 START_ADDR
 27731  0954  00001A3A           	ddw	__ccov242_end_blk6	; block 6 END_ADDR
 27732  0958  00001A30           	ddw	__ccov241_start_blk5	; block 5 START_ADDR
 27733  095C  00001A37           	ddw	__ccov241_end_blk5	; block 5 END_ADDR
 27734  0960  00001A2E           	ddw	__ccov240_start_blk4	; block 4 START_ADDR
 27735  0964  00001A30           	ddw	__ccov240_end_blk4	; block 4 END_ADDR
 27736  0968  00001A2C           	ddw	__ccov239_start_blk3	; block 3 START_ADDR
 27737  096C  00001A2E           	ddw	__ccov239_end_blk3	; block 3 END_ADDR
 27738  0970  00001A24           	ddw	__ccov238_start_blk2	; block 2 START_ADDR
 27739  0974  00001A2C           	ddw	__ccov238_end_blk2	; block 2 END_ADDR
 27740  0978  00001A23           	ddw	__ccov237_start_blk1	; block 1 START_ADDR
 27741  097C  00001A24           	ddw	__ccov237_end_blk1	; block 1 END_ADDR
 27742  0980  00001A20           	ddw	_TMR0_Initialize	; block 0 START_ADDR
 27743  0984  00001A23           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
 27744                           
 27745                           ; Function: TMR0_Reload, coverage: 2,1,0
 27746  0988  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27747  098C  000000E9           	ddw	__ccovbit2_39/(0+8)	; CC_ADDR
 27748  0990  00000001           	ddw	1	; NUM_POINTS
 27749  0994  00000001           	ddw	__ccovbit2_39& (0+7)	; OFFSET
 27750  0998  00000000           	ddw	0	; Reserved
 27751  099C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27752  09A0  00000003           	ddw	3	; NUM_RANGES
 27753  09A4  000026DA           	ddw	__ccov256_start_blk2	; block 2 START_ADDR
 27754  09A8  000026DD           	ddw	__end_of_TMR0_Reload	; block 2 END_ADDR
 27755  09AC  000026D6           	ddw	__ccov255_start_blk1	; block 1 START_ADDR
 27756  09B0  000026DA           	ddw	__ccov255_end_blk1	; block 1 END_ADDR
 27757  09B4  000026D2           	ddw	_TMR0_Reload	; block 0 START_ADDR
 27758  09B8  000026D6           	ddw	__ccov254_end_blk0	; block 0 END_ADDR
 27759                           
 27760                           ; Function: TMR0_ISR, coverage: 4,3,2,1,0
 27761  09BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27762  09C0  000000E9           	ddw	__ccovbit4_40/(0+8)	; CC_ADDR
 27763  09C4  00000001           	ddw	1	; NUM_POINTS
 27764  09C8  00000000           	ddw	__ccovbit4_40& (0+7)	; OFFSET
 27765  09CC  00000000           	ddw	0	; Reserved
 27766  09D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27767  09D4  00000005           	ddw	5	; NUM_RANGES
 27768  09D8  000019DD           	ddw	__ccov261_start_blk4	; block 4 START_ADDR
 27769  09DC  000019E5           	ddw	__ccov261_end_blk4	; block 4 END_ADDR
 27770  09E0  000019D6           	ddw	__ccov260_start_blk3	; block 3 START_ADDR
 27771  09E4  000019DD           	ddw	__ccov260_end_blk3	; block 3 END_ADDR
 27772  09E8  000019D2           	ddw	__ccov259_start_blk2	; block 2 START_ADDR
 27773  09EC  000019D6           	ddw	__ccov259_end_blk2	; block 2 END_ADDR
 27774  09F0  000019CE           	ddw	__ccov258_start_blk1	; block 1 START_ADDR
 27775  09F4  000019D2           	ddw	__ccov258_end_blk1	; block 1 END_ADDR
 27776  09F8  000019CC           	ddw	_TMR0_ISR	; block 0 START_ADDR
 27777  09FC  000019CE           	ddw	__ccov257_end_blk0	; block 0 END_ADDR
 27778                           
 27779                           ; Function: TMR0_ISR, coverage: 6,3,2,1,0
 27780  0A00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27781  0A04  000000E8           	ddw	__ccovbit6_41/(0+8)	; CC_ADDR
 27782  0A08  00000001           	ddw	1	; NUM_POINTS
 27783  0A0C  00000007           	ddw	__ccovbit6_41& (0+7)	; OFFSET
 27784  0A10  00000000           	ddw	0	; Reserved
 27785  0A14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27786  0A18  00000005           	ddw	5	; NUM_RANGES
 27787  0A1C  000019E5           	ddw	__ccov262_start_blk6	; block 6 START_ADDR
 27788  0A20  000019E8           	ddw	__end_of_TMR0_ISR	; block 6 END_ADDR
 27789  0A24  000019D6           	ddw	__ccov260_start_blk3	; block 3 START_ADDR
 27790  0A28  000019DD           	ddw	__ccov260_end_blk3	; block 3 END_ADDR
 27791  0A2C  000019D2           	ddw	__ccov259_start_blk2	; block 2 START_ADDR
 27792  0A30  000019D6           	ddw	__ccov259_end_blk2	; block 2 END_ADDR
 27793  0A34  000019CE           	ddw	__ccov258_start_blk1	; block 1 START_ADDR
 27794  0A38  000019D2           	ddw	__ccov258_end_blk1	; block 1 END_ADDR
 27795  0A3C  000019CC           	ddw	_TMR0_ISR	; block 0 START_ADDR
 27796  0A40  000019CE           	ddw	__ccov257_end_blk0	; block 0 END_ADDR
 27797                           
 27798                           ; Function: TMR0_SetInterruptHandler, coverage: 1,0
 27799  0A44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27800  0A48  000000E8           	ddw	__ccovbit1_42/(0+8)	; CC_ADDR
 27801  0A4C  00000001           	ddw	1	; NUM_POINTS
 27802  0A50  00000006           	ddw	__ccovbit1_42& (0+7)	; OFFSET
 27803  0A54  00000000           	ddw	0	; Reserved
 27804  0A58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27805  0A5C  00000002           	ddw	2	; NUM_RANGES
 27806  0A60  0000271C           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 27807  0A64  0000271F           	ddw	__end_of_TMR0_SetInterruptHandler	; block 1 END_ADDR
 27808  0A68  00002714           	ddw	_TMR0_SetInterruptHandler	; block 0 START_ADDR
 27809  0A6C  0000271C           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 27810                           
 27811                           ; Function: TMR0_DefaultInterruptHandler, coverage: 1,0
 27812  0A70  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27813  0A74  000000E8           	ddw	__ccovbit1_43/(0+8)	; CC_ADDR
 27814  0A78  00000001           	ddw	1	; NUM_POINTS
 27815  0A7C  00000005           	ddw	__ccovbit1_43& (0+7)	; OFFSET
 27816  0A80  00000000           	ddw	0	; Reserved
 27817  0A84  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27818  0A88  00000002           	ddw	2	; NUM_RANGES
 27819  0A8C  000026CF           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 27820  0A90  000026D2           	ddw	__end_of_TMR0_DefaultInterruptHandler	; block 1 END_ADDR
 27821  0A94  000026C7           	ddw	_TMR0_DefaultInterruptHandler	; block 0 START_ADDR
 27822  0A98  000026CF           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 27823                           
 27824                           ; Function: TMR3_Initialize, coverage: 4,3,2,1,0
 27825  0A9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27826  0AA0  000000E8           	ddw	__ccovbit4_44/(0+8)	; CC_ADDR
 27827  0AA4  00000001           	ddw	1	; NUM_POINTS
 27828  0AA8  00000004           	ddw	__ccovbit4_44& (0+7)	; OFFSET
 27829  0AAC  00000000           	ddw	0	; Reserved
 27830  0AB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27831  0AB4  00000005           	ddw	5	; NUM_RANGES
 27832  0AB8  000018B6           	ddw	__ccov271_start_blk4	; block 4 START_ADDR
 27833  0ABC  000018B9           	ddw	__end_of_TMR3_Initialize	; block 4 END_ADDR
 27834  0AC0  000018A9           	ddw	__ccov270_start_blk3	; block 3 START_ADDR
 27835  0AC4  000018B6           	ddw	__ccov270_end_blk3	; block 3 END_ADDR
 27836  0AC8  000018A8           	ddw	__ccov269_start_blk2	; block 2 START_ADDR
 27837  0ACC  000018A9           	ddw	__ccov269_end_blk2	; block 2 END_ADDR
 27838  0AD0  000018A6           	ddw	__ccov268_start_blk1	; block 1 START_ADDR
 27839  0AD4  000018A8           	ddw	__ccov268_end_blk1	; block 1 END_ADDR
 27840  0AD8  000018A4           	ddw	_TMR3_Initialize	; block 0 START_ADDR
 27841  0ADC  000018A6           	ddw	__ccov267_end_blk0	; block 0 END_ADDR
 27842                           
 27843                           ; Function: TMR2_Initialize, coverage: 6,5,4,3,2,1,0
 27844  0AE0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27845  0AE4  000000E8           	ddw	__ccovbit6_45/(0+8)	; CC_ADDR
 27846  0AE8  00000001           	ddw	1	; NUM_POINTS
 27847  0AEC  00000003           	ddw	__ccovbit6_45& (0+7)	; OFFSET
 27848  0AF0  00000000           	ddw	0	; Reserved
 27849  0AF4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27850  0AF8  00000007           	ddw	7	; NUM_RANGES
 27851  0AFC  000018A1           	ddw	__ccov300_start_blk6	; block 6 START_ADDR
 27852  0B00  000018A4           	ddw	__end_of_TMR2_Initialize	; block 6 END_ADDR
 27853  0B04  0000189E           	ddw	__ccov299_start_blk5	; block 5 START_ADDR
 27854  0B08  000018A1           	ddw	__ccov299_end_blk5	; block 5 END_ADDR
 27855  0B0C  00001897           	ddw	__ccov298_start_blk4	; block 4 START_ADDR
 27856  0B10  0000189E           	ddw	__ccov298_end_blk4	; block 4 END_ADDR
 27857  0B14  00001895           	ddw	__ccov297_start_blk3	; block 3 START_ADDR
 27858  0B18  00001897           	ddw	__ccov297_end_blk3	; block 3 END_ADDR
 27859  0B1C  00001894           	ddw	__ccov296_start_blk2	; block 2 START_ADDR
 27860  0B20  00001895           	ddw	__ccov296_end_blk2	; block 2 END_ADDR
 27861  0B24  00001893           	ddw	__ccov295_start_blk1	; block 1 START_ADDR
 27862  0B28  00001894           	ddw	__ccov295_end_blk1	; block 1 END_ADDR
 27863  0B2C  00001890           	ddw	_TMR2_Initialize	; block 0 START_ADDR
 27864  0B30  00001893           	ddw	__ccov294_end_blk0	; block 0 END_ADDR
 27865                           
 27866                           ; Function: TMR2_ISR, coverage: 2,1,0
 27867  0B34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27868  0B38  000000E8           	ddw	__ccovbit2_46/(0+8)	; CC_ADDR
 27869  0B3C  00000001           	ddw	1	; NUM_POINTS
 27870  0B40  00000002           	ddw	__ccovbit2_46& (0+7)	; OFFSET
 27871  0B44  00000000           	ddw	0	; Reserved
 27872  0B48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27873  0B4C  00000003           	ddw	3	; NUM_RANGES
 27874  0B50  00001885           	ddw	__ccov313_start_blk2	; block 2 START_ADDR
 27875  0B54  0000188D           	ddw	__ccov313_end_blk2	; block 2 END_ADDR
 27876  0B58  0000187E           	ddw	__ccov312_start_blk1	; block 1 START_ADDR
 27877  0B5C  00001885           	ddw	__ccov312_end_blk1	; block 1 END_ADDR
 27878  0B60  0000187C           	ddw	_TMR2_ISR	; block 0 START_ADDR
 27879  0B64  0000187E           	ddw	__ccov311_end_blk0	; block 0 END_ADDR
 27880                           
 27881                           ; Function: TMR2_ISR, coverage: 4,1,0
 27882  0B68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27883  0B6C  000000E8           	ddw	__ccovbit4_47/(0+8)	; CC_ADDR
 27884  0B70  00000001           	ddw	1	; NUM_POINTS
 27885  0B74  00000001           	ddw	__ccovbit4_47& (0+7)	; OFFSET
 27886  0B78  00000000           	ddw	0	; Reserved
 27887  0B7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27888  0B80  00000003           	ddw	3	; NUM_RANGES
 27889  0B84  0000188D           	ddw	__ccov314_start_blk4	; block 4 START_ADDR
 27890  0B88  00001890           	ddw	__end_of_TMR2_ISR	; block 4 END_ADDR
 27891  0B8C  0000187E           	ddw	__ccov312_start_blk1	; block 1 START_ADDR
 27892  0B90  00001885           	ddw	__ccov312_end_blk1	; block 1 END_ADDR
 27893  0B94  0000187C           	ddw	_TMR2_ISR	; block 0 START_ADDR
 27894  0B98  0000187E           	ddw	__ccov311_end_blk0	; block 0 END_ADDR
 27895                           
 27896                           ; Function: TMR2_SetInterruptHandler, coverage: 1,0
 27897  0B9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27898  0BA0  000000E8           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
 27899  0BA4  00000001           	ddw	1	; NUM_POINTS
 27900  0BA8  00000000           	ddw	__ccovbit1_48& (0+7)	; OFFSET
 27901  0BAC  00000000           	ddw	0	; Reserved
 27902  0BB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27903  0BB4  00000002           	ddw	2	; NUM_RANGES
 27904  0BB8  00002732           	ddw	__ccov316_start_blk1	; block 1 START_ADDR
 27905  0BBC  00002735           	ddw	__end_of_TMR2_SetInterruptHandler	; block 1 END_ADDR
 27906  0BC0  0000272A           	ddw	_TMR2_SetInterruptHandler	; block 0 START_ADDR
 27907  0BC4  00002732           	ddw	__ccov315_end_blk0	; block 0 END_ADDR
 27908                           
 27909                           ; Function: TMR2_DefaultInterruptHandler, coverage: 0
 27910  0BC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27911  0BCC  000000E7           	ddw	__ccovbit0_49/(0+8)	; CC_ADDR
 27912  0BD0  00000001           	ddw	1	; NUM_POINTS
 27913  0BD4  00000007           	ddw	__ccovbit0_49& (0+7)	; OFFSET
 27914  0BD8  00000000           	ddw	0	; Reserved
 27915  0BDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27916  0BE0  00000001           	ddw	1	; NUM_RANGES
 27917  0BE4  0000266F           	ddw	_TMR2_DefaultInterruptHandler	; block 0 START_ADDR
 27918  0BE8  00002672           	ddw	__end_of_TMR2_DefaultInterruptHandler	; block 0 END_ADDR
 27919                           
 27920                           ; Function: TMR4_Initialize, coverage: 4,3,2,1,0
 27921  0BEC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27922  0BF0  000000E7           	ddw	__ccovbit4_50/(0+8)	; CC_ADDR
 27923  0BF4  00000001           	ddw	1	; NUM_POINTS
 27924  0BF8  00000006           	ddw	__ccovbit4_50& (0+7)	; OFFSET
 27925  0BFC  00000000           	ddw	0	; Reserved
 27926  0C00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27927  0C04  00000005           	ddw	5	; NUM_RANGES
 27928  0C08  0000276D           	ddw	__ccov322_start_blk4	; block 4 START_ADDR
 27929  0C0C  00002770           	ddw	__end_of_TMR4_Initialize	; block 4 END_ADDR
 27930  0C10  0000276A           	ddw	__ccov321_start_blk3	; block 3 START_ADDR
 27931  0C14  0000276D           	ddw	__ccov321_end_blk3	; block 3 END_ADDR
 27932  0C18  00002768           	ddw	__ccov320_start_blk2	; block 2 START_ADDR
 27933  0C1C  0000276A           	ddw	__ccov320_end_blk2	; block 2 END_ADDR
 27934  0C20  00002767           	ddw	__ccov319_start_blk1	; block 1 START_ADDR
 27935  0C24  00002768           	ddw	__ccov319_end_blk1	; block 1 END_ADDR
 27936  0C28  00002764           	ddw	_TMR4_Initialize	; block 0 START_ADDR
 27937  0C2C  00002767           	ddw	__ccov318_end_blk0	; block 0 END_ADDR
 27938                           
 27939                           ; Function: TMR6_Initialize, coverage: 4,3,2,1,0
 27940  0C30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27941  0C34  000000E7           	ddw	__ccovbit4_51/(0+8)	; CC_ADDR
 27942  0C38  00000001           	ddw	1	; NUM_POINTS
 27943  0C3C  00000005           	ddw	__ccovbit4_51& (0+7)	; OFFSET
 27944  0C40  00000000           	ddw	0	; Reserved
 27945  0C44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27946  0C48  00000005           	ddw	5	; NUM_RANGES
 27947  0C4C  00002779           	ddw	__ccov341_start_blk4	; block 4 START_ADDR
 27948  0C50  0000277C           	ddw	__end_of_TMR6_Initialize	; block 4 END_ADDR
 27949  0C54  00002776           	ddw	__ccov340_start_blk3	; block 3 START_ADDR
 27950  0C58  00002779           	ddw	__ccov340_end_blk3	; block 3 END_ADDR
 27951  0C5C  00002774           	ddw	__ccov339_start_blk2	; block 2 START_ADDR
 27952  0C60  00002776           	ddw	__ccov339_end_blk2	; block 2 END_ADDR
 27953  0C64  00002773           	ddw	__ccov338_start_blk1	; block 1 START_ADDR
 27954  0C68  00002774           	ddw	__ccov338_end_blk1	; block 1 END_ADDR
 27955  0C6C  00002770           	ddw	_TMR6_Initialize	; block 0 START_ADDR
 27956  0C70  00002773           	ddw	__ccov337_end_blk0	; block 0 END_ADDR
 27957                           
 27958                           ; Function: TMR6_LoadPeriodRegister, coverage: 1,0
 27959  0C74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27960  0C78  000000E7           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
 27961  0C7C  00000001           	ddw	1	; NUM_POINTS
 27962  0C80  00000004           	ddw	__ccovbit1_52& (0+7)	; OFFSET
 27963  0C84  00000000           	ddw	0	; Reserved
 27964  0C88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27965  0C8C  00000002           	ddw	2	; NUM_RANGES
 27966  0C90  0000269E           	ddw	__ccov351_start_blk1	; block 1 START_ADDR
 27967  0C94  000026A1           	ddw	__end_of_TMR6_LoadPeriodRegister	; block 1 END_ADDR
 27968  0C98  00002699           	ddw	_TMR6_LoadPeriodRegister	; block 0 START_ADDR
 27969  0C9C  0000269E           	ddw	__ccov350_end_blk0	; block 0 END_ADDR
 27970                           
 27971                           ; Function: main, coverage: 12,11,78,9,7,6,5,4,3,2,1,0
 27972  0CA0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 27973  0CA4  000000E7           	ddw	__ccovbit12_53/(0+8)	; CC_ADDR
 27974  0CA8  00000001           	ddw	1	; NUM_POINTS
 27975  0CAC  00000003           	ddw	__ccovbit12_53& (0+7)	; OFFSET
 27976  0CB0  00000000           	ddw	0	; Reserved
 27977  0CB4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 27978  0CB8  0000000C           	ddw	12	; NUM_RANGES
 27979  0CBC  0000057D           	ddw	__ccov366_start_blk12	; block 12 START_ADDR
 27980  0CC0  00000584           	ddw	__ccov366_end_blk12	; block 12 END_ADDR
 27981  0CC4  00000575           	ddw	__ccov365_start_blk11	; block 11 START_ADDR
 27982  0CC8  0000057D           	ddw	__ccov365_end_blk11	; block 11 END_ADDR
 27983  0CCC  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 27984  0CD0  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 27985  0CD4  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 27986  0CD8  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 27987  0CDC  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 27988  0CE0  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 27989  0CE4  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 27990  0CE8  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 27991  0CEC  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 27992  0CF0  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 27993  0CF4  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 27994  0CF8  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 27995  0CFC  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 27996  0D00  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 27997  0D04  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 27998  0D08  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 27999  0D0C  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28000  0D10  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28001  0D14  0000052A           	ddw	_main	; block 0 START_ADDR
 28002  0D18  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28003                           
 28004                           ; Function: main, coverage: 14,11,78,9,7,6,5,4,3,2,1,0
 28005  0D1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28006  0D20  000000E7           	ddw	__ccovbit14_54/(0+8)	; CC_ADDR
 28007  0D24  00000001           	ddw	1	; NUM_POINTS
 28008  0D28  00000002           	ddw	__ccovbit14_54& (0+7)	; OFFSET
 28009  0D2C  00000000           	ddw	0	; Reserved
 28010  0D30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28011  0D34  0000000C           	ddw	12	; NUM_RANGES
 28012  0D38  00000584           	ddw	__ccov367_start_blk14	; block 14 START_ADDR
 28013  0D3C  0000058A           	ddw	__ccov367_end_blk14	; block 14 END_ADDR
 28014  0D40  00000575           	ddw	__ccov365_start_blk11	; block 11 START_ADDR
 28015  0D44  0000057D           	ddw	__ccov365_end_blk11	; block 11 END_ADDR
 28016  0D48  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28017  0D4C  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28018  0D50  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28019  0D54  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28020  0D58  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28021  0D5C  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28022  0D60  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28023  0D64  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28024  0D68  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28025  0D6C  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28026  0D70  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28027  0D74  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28028  0D78  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28029  0D7C  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28030  0D80  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28031  0D84  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28032  0D88  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28033  0D8C  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28034  0D90  0000052A           	ddw	_main	; block 0 START_ADDR
 28035  0D94  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28036                           
 28037                           ; Function: main, coverage: 22,21,24,19,18,17,16,11,78,9,7,6,5,4,3,2,1,0
 28038  0D98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28039  0D9C  000000E7           	ddw	__ccovbit22_55/(0+8)	; CC_ADDR
 28040  0DA0  00000001           	ddw	1	; NUM_POINTS
 28041  0DA4  00000001           	ddw	__ccovbit22_55& (0+7)	; OFFSET
 28042  0DA8  00000000           	ddw	0	; Reserved
 28043  0DAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28044  0DB0  00000012           	ddw	18	; NUM_RANGES
 28045  0DB4  0000059E           	ddw	__ccov373_start_blk22	; block 22 START_ADDR
 28046  0DB8  000005A9           	ddw	__ccov373_end_blk22	; block 22 END_ADDR
 28047  0DBC  0000059B           	ddw	__ccov372_start_blk21	; block 21 START_ADDR
 28048  0DC0  0000059E           	ddw	__ccov372_end_blk21	; block 21 END_ADDR
 28049  0DC4  000005A9           	ddw	__ccov374_start_blk24	; block 24 START_ADDR
 28050  0DC8  000005AF           	ddw	__ccov374_end_blk24	; block 24 END_ADDR
 28051  0DCC  00000598           	ddw	__ccov371_start_blk19	; block 19 START_ADDR
 28052  0DD0  0000059B           	ddw	__ccov371_end_blk19	; block 19 END_ADDR
 28053  0DD4  00000594           	ddw	__ccov370_start_blk18	; block 18 START_ADDR
 28054  0DD8  00000598           	ddw	__ccov370_end_blk18	; block 18 END_ADDR
 28055  0DDC  0000058D           	ddw	__ccov369_start_blk17	; block 17 START_ADDR
 28056  0DE0  00000594           	ddw	__ccov369_end_blk17	; block 17 END_ADDR
 28057  0DE4  0000058A           	ddw	__ccov368_start_blk16	; block 16 START_ADDR
 28058  0DE8  0000058D           	ddw	__ccov368_end_blk16	; block 16 END_ADDR
 28059  0DEC  00000575           	ddw	__ccov365_start_blk11	; block 11 START_ADDR
 28060  0DF0  0000057D           	ddw	__ccov365_end_blk11	; block 11 END_ADDR
 28061  0DF4  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28062  0DF8  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28063  0DFC  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28064  0E00  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28065  0E04  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28066  0E08  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28067  0E0C  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28068  0E10  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28069  0E14  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28070  0E18  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28071  0E1C  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28072  0E20  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28073  0E24  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28074  0E28  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28075  0E2C  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28076  0E30  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28077  0E34  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28078  0E38  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28079  0E3C  0000052A           	ddw	_main	; block 0 START_ADDR
 28080  0E40  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28081                           
 28082                           ; Function: main, coverage: 25,24,19,18,17,16,11,78,9,7,6,5,4,3,2,1,0
 28083  0E44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28084  0E48  000000E7           	ddw	__ccovbit25_56/(0+8)	; CC_ADDR
 28085  0E4C  00000001           	ddw	1	; NUM_POINTS
 28086  0E50  00000000           	ddw	__ccovbit25_56& (0+7)	; OFFSET
 28087  0E54  00000000           	ddw	0	; Reserved
 28088  0E58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28089  0E5C  00000011           	ddw	17	; NUM_RANGES
 28090  0E60  000005AF           	ddw	__ccov375_start_blk25	; block 25 START_ADDR
 28091  0E64  000005B2           	ddw	__ccov375_end_blk25	; block 25 END_ADDR
 28092  0E68  000005A9           	ddw	__ccov374_start_blk24	; block 24 START_ADDR
 28093  0E6C  000005AF           	ddw	__ccov374_end_blk24	; block 24 END_ADDR
 28094  0E70  00000598           	ddw	__ccov371_start_blk19	; block 19 START_ADDR
 28095  0E74  0000059B           	ddw	__ccov371_end_blk19	; block 19 END_ADDR
 28096  0E78  00000594           	ddw	__ccov370_start_blk18	; block 18 START_ADDR
 28097  0E7C  00000598           	ddw	__ccov370_end_blk18	; block 18 END_ADDR
 28098  0E80  0000058D           	ddw	__ccov369_start_blk17	; block 17 START_ADDR
 28099  0E84  00000594           	ddw	__ccov369_end_blk17	; block 17 END_ADDR
 28100  0E88  0000058A           	ddw	__ccov368_start_blk16	; block 16 START_ADDR
 28101  0E8C  0000058D           	ddw	__ccov368_end_blk16	; block 16 END_ADDR
 28102  0E90  00000575           	ddw	__ccov365_start_blk11	; block 11 START_ADDR
 28103  0E94  0000057D           	ddw	__ccov365_end_blk11	; block 11 END_ADDR
 28104  0E98  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28105  0E9C  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28106  0EA0  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28107  0EA4  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28108  0EA8  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28109  0EAC  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28110  0EB0  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28111  0EB4  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28112  0EB8  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28113  0EBC  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28114  0EC0  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28115  0EC4  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28116  0EC8  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28117  0ECC  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28118  0ED0  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28119  0ED4  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28120  0ED8  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28121  0EDC  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28122  0EE0  0000052A           	ddw	_main	; block 0 START_ADDR
 28123  0EE4  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28124                           
 28125                           ; Function: main, coverage: 32,31,27,17,16,11,78,9,7,6,5,4,3,2,1,0
 28126  0EE8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28127  0EEC  000000E6           	ddw	__ccovbit32_57/(0+8)	; CC_ADDR
 28128  0EF0  00000001           	ddw	1	; NUM_POINTS
 28129  0EF4  00000007           	ddw	__ccovbit32_57& (0+7)	; OFFSET
 28130  0EF8  00000000           	ddw	0	; Reserved
 28131  0EFC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28132  0F00  00000010           	ddw	16	; NUM_RANGES
 28133  0F04  000005C4           	ddw	__ccov378_start_blk32	; block 32 START_ADDR
 28134  0F08  000005D6           	ddw	__ccov378_end_blk32	; block 32 END_ADDR
 28135  0F0C  000005BB           	ddw	__ccov377_start_blk31	; block 31 START_ADDR
 28136  0F10  000005C4           	ddw	__ccov377_end_blk31	; block 31 END_ADDR
 28137  0F14  000005B2           	ddw	__ccov376_start_blk27	; block 27 START_ADDR
 28138  0F18  000005BB           	ddw	__ccov376_end_blk27	; block 27 END_ADDR
 28139  0F1C  0000058D           	ddw	__ccov369_start_blk17	; block 17 START_ADDR
 28140  0F20  00000594           	ddw	__ccov369_end_blk17	; block 17 END_ADDR
 28141  0F24  0000058A           	ddw	__ccov368_start_blk16	; block 16 START_ADDR
 28142  0F28  0000058D           	ddw	__ccov368_end_blk16	; block 16 END_ADDR
 28143  0F2C  00000575           	ddw	__ccov365_start_blk11	; block 11 START_ADDR
 28144  0F30  0000057D           	ddw	__ccov365_end_blk11	; block 11 END_ADDR
 28145  0F34  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28146  0F38  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28147  0F3C  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28148  0F40  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28149  0F44  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28150  0F48  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28151  0F4C  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28152  0F50  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28153  0F54  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28154  0F58  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28155  0F5C  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28156  0F60  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28157  0F64  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28158  0F68  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28159  0F6C  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28160  0F70  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28161  0F74  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28162  0F78  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28163  0F7C  0000052A           	ddw	_main	; block 0 START_ADDR
 28164  0F80  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28165                           
 28166                           ; Function: main, coverage: 40,39,38,37,36,35,78,9,7,6,5,4,3,2,1,0
 28167  0F84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28168  0F88  000000E6           	ddw	__ccovbit40_58/(0+8)	; CC_ADDR
 28169  0F8C  00000001           	ddw	1	; NUM_POINTS
 28170  0F90  00000006           	ddw	__ccovbit40_58& (0+7)	; OFFSET
 28171  0F94  00000000           	ddw	0	; Reserved
 28172  0F98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28173  0F9C  00000010           	ddw	16	; NUM_RANGES
 28174  0FA0  0000060F           	ddw	__ccov384_start_blk40	; block 40 START_ADDR
 28175  0FA4  00000616           	ddw	__ccov384_end_blk40	; block 40 END_ADDR
 28176  0FA8  00000606           	ddw	__ccov383_start_blk39	; block 39 START_ADDR
 28177  0FAC  0000060F           	ddw	__ccov383_end_blk39	; block 39 END_ADDR
 28178  0FB0  000005F3           	ddw	__ccov382_start_blk38	; block 38 START_ADDR
 28179  0FB4  00000606           	ddw	__ccov382_end_blk38	; block 38 END_ADDR
 28180  0FB8  000005EC           	ddw	__ccov381_start_blk37	; block 37 START_ADDR
 28181  0FBC  000005F3           	ddw	__ccov381_end_blk37	; block 37 END_ADDR
 28182  0FC0  000005E9           	ddw	__ccov380_start_blk36	; block 36 START_ADDR
 28183  0FC4  000005EC           	ddw	__ccov380_end_blk36	; block 36 END_ADDR
 28184  0FC8  000005D6           	ddw	__ccov379_start_blk35	; block 35 START_ADDR
 28185  0FCC  000005E9           	ddw	__ccov379_end_blk35	; block 35 END_ADDR
 28186  0FD0  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28187  0FD4  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28188  0FD8  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28189  0FDC  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28190  0FE0  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28191  0FE4  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28192  0FE8  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28193  0FEC  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28194  0FF0  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28195  0FF4  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28196  0FF8  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28197  0FFC  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28198  1000  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28199  1004  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28200  1008  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28201  100C  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28202  1010  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28203  1014  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28204  1018  0000052A           	ddw	_main	; block 0 START_ADDR
 28205  101C  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28206                           
 28207                           ; Function: main, coverage: 43,42,37,36,35,78,9,7,6,5,4,3,2,1,0
 28208  1020  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28209  1024  000000E6           	ddw	__ccovbit43_59/(0+8)	; CC_ADDR
 28210  1028  00000001           	ddw	1	; NUM_POINTS
 28211  102C  00000005           	ddw	__ccovbit43_59& (0+7)	; OFFSET
 28212  1030  00000000           	ddw	0	; Reserved
 28213  1034  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28214  1038  0000000F           	ddw	15	; NUM_RANGES
 28215  103C  0000061B           	ddw	__ccov386_start_blk43	; block 43 START_ADDR
 28216  1040  00000631           	ddw	__ccov386_end_blk43	; block 43 END_ADDR
 28217  1044  00000616           	ddw	__ccov385_start_blk42	; block 42 START_ADDR
 28218  1048  0000061B           	ddw	__ccov385_end_blk42	; block 42 END_ADDR
 28219  104C  000005EC           	ddw	__ccov381_start_blk37	; block 37 START_ADDR
 28220  1050  000005F3           	ddw	__ccov381_end_blk37	; block 37 END_ADDR
 28221  1054  000005E9           	ddw	__ccov380_start_blk36	; block 36 START_ADDR
 28222  1058  000005EC           	ddw	__ccov380_end_blk36	; block 36 END_ADDR
 28223  105C  000005D6           	ddw	__ccov379_start_blk35	; block 35 START_ADDR
 28224  1060  000005E9           	ddw	__ccov379_end_blk35	; block 35 END_ADDR
 28225  1064  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28226  1068  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28227  106C  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28228  1070  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28229  1074  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28230  1078  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28231  107C  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28232  1080  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28233  1084  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28234  1088  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28235  108C  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28236  1090  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28237  1094  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28238  1098  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28239  109C  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28240  10A0  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28241  10A4  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28242  10A8  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28243  10AC  0000052A           	ddw	_main	; block 0 START_ADDR
 28244  10B0  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28245                           
 28246                           ; Function: main, coverage: 45,42,37,36,35,78,9,7,6,5,4,3,2,1,0
 28247  10B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28248  10B8  000000E6           	ddw	__ccovbit45_60/(0+8)	; CC_ADDR
 28249  10BC  00000001           	ddw	1	; NUM_POINTS
 28250  10C0  00000004           	ddw	__ccovbit45_60& (0+7)	; OFFSET
 28251  10C4  00000000           	ddw	0	; Reserved
 28252  10C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28253  10CC  0000000F           	ddw	15	; NUM_RANGES
 28254  10D0  00000631           	ddw	__ccov387_start_blk45	; block 45 START_ADDR
 28255  10D4  00000638           	ddw	__ccov387_end_blk45	; block 45 END_ADDR
 28256  10D8  00000616           	ddw	__ccov385_start_blk42	; block 42 START_ADDR
 28257  10DC  0000061B           	ddw	__ccov385_end_blk42	; block 42 END_ADDR
 28258  10E0  000005EC           	ddw	__ccov381_start_blk37	; block 37 START_ADDR
 28259  10E4  000005F3           	ddw	__ccov381_end_blk37	; block 37 END_ADDR
 28260  10E8  000005E9           	ddw	__ccov380_start_blk36	; block 36 START_ADDR
 28261  10EC  000005EC           	ddw	__ccov380_end_blk36	; block 36 END_ADDR
 28262  10F0  000005D6           	ddw	__ccov379_start_blk35	; block 35 START_ADDR
 28263  10F4  000005E9           	ddw	__ccov379_end_blk35	; block 35 END_ADDR
 28264  10F8  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28265  10FC  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28266  1100  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28267  1104  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28268  1108  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28269  110C  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28270  1110  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28271  1114  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28272  1118  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28273  111C  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28274  1120  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28275  1124  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28276  1128  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28277  112C  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28278  1130  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28279  1134  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28280  1138  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28281  113C  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28282  1140  0000052A           	ddw	_main	; block 0 START_ADDR
 28283  1144  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28284                           
 28285                           ; Function: main, coverage: 53,52,51,50,49,78,9,7,6,5,4,3,2,1,0
 28286  1148  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28287  114C  000000E6           	ddw	__ccovbit53_61/(0+8)	; CC_ADDR
 28288  1150  00000001           	ddw	1	; NUM_POINTS
 28289  1154  00000003           	ddw	__ccovbit53_61& (0+7)	; OFFSET
 28290  1158  00000000           	ddw	0	; Reserved
 28291  115C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28292  1160  0000000F           	ddw	15	; NUM_RANGES
 28293  1164  00000675           	ddw	__ccov392_start_blk53	; block 53 START_ADDR
 28294  1168  0000067C           	ddw	__ccov392_end_blk53	; block 53 END_ADDR
 28295  116C  00000668           	ddw	__ccov391_start_blk52	; block 52 START_ADDR
 28296  1170  00000675           	ddw	__ccov391_end_blk52	; block 52 END_ADDR
 28297  1174  00000655           	ddw	__ccov390_start_blk51	; block 51 START_ADDR
 28298  1178  00000668           	ddw	__ccov390_end_blk51	; block 51 END_ADDR
 28299  117C  0000064E           	ddw	__ccov389_start_blk50	; block 50 START_ADDR
 28300  1180  00000655           	ddw	__ccov389_end_blk50	; block 50 END_ADDR
 28301  1184  00000638           	ddw	__ccov388_start_blk49	; block 49 START_ADDR
 28302  1188  0000064E           	ddw	__ccov388_end_blk49	; block 49 END_ADDR
 28303  118C  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28304  1190  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28305  1194  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28306  1198  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28307  119C  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28308  11A0  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28309  11A4  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28310  11A8  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28311  11AC  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28312  11B0  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28313  11B4  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28314  11B8  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28315  11BC  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28316  11C0  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28317  11C4  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28318  11C8  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28319  11CC  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28320  11D0  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28321  11D4  0000052A           	ddw	_main	; block 0 START_ADDR
 28322  11D8  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28323                           
 28324                           ; Function: main, coverage: 56,55,50,49,78,9,7,6,5,4,3,2,1,0
 28325  11DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28326  11E0  000000E6           	ddw	__ccovbit56_62/(0+8)	; CC_ADDR
 28327  11E4  00000001           	ddw	1	; NUM_POINTS
 28328  11E8  00000002           	ddw	__ccovbit56_62& (0+7)	; OFFSET
 28329  11EC  00000000           	ddw	0	; Reserved
 28330  11F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28331  11F4  0000000E           	ddw	14	; NUM_RANGES
 28332  11F8  00000681           	ddw	__ccov394_start_blk56	; block 56 START_ADDR
 28333  11FC  00000697           	ddw	__ccov394_end_blk56	; block 56 END_ADDR
 28334  1200  0000067C           	ddw	__ccov393_start_blk55	; block 55 START_ADDR
 28335  1204  00000681           	ddw	__ccov393_end_blk55	; block 55 END_ADDR
 28336  1208  0000064E           	ddw	__ccov389_start_blk50	; block 50 START_ADDR
 28337  120C  00000655           	ddw	__ccov389_end_blk50	; block 50 END_ADDR
 28338  1210  00000638           	ddw	__ccov388_start_blk49	; block 49 START_ADDR
 28339  1214  0000064E           	ddw	__ccov388_end_blk49	; block 49 END_ADDR
 28340  1218  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28341  121C  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28342  1220  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28343  1224  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28344  1228  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28345  122C  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28346  1230  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28347  1234  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28348  1238  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28349  123C  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28350  1240  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28351  1244  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28352  1248  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28353  124C  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28354  1250  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28355  1254  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28356  1258  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28357  125C  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28358  1260  0000052A           	ddw	_main	; block 0 START_ADDR
 28359  1264  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28360                           
 28361                           ; Function: main, coverage: 58,55,50,49,78,9,7,6,5,4,3,2,1,0
 28362  1268  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28363  126C  000000E6           	ddw	__ccovbit58_63/(0+8)	; CC_ADDR
 28364  1270  00000001           	ddw	1	; NUM_POINTS
 28365  1274  00000001           	ddw	__ccovbit58_63& (0+7)	; OFFSET
 28366  1278  00000000           	ddw	0	; Reserved
 28367  127C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28368  1280  0000000E           	ddw	14	; NUM_RANGES
 28369  1284  00000697           	ddw	__ccov395_start_blk58	; block 58 START_ADDR
 28370  1288  0000069E           	ddw	__ccov395_end_blk58	; block 58 END_ADDR
 28371  128C  0000067C           	ddw	__ccov393_start_blk55	; block 55 START_ADDR
 28372  1290  00000681           	ddw	__ccov393_end_blk55	; block 55 END_ADDR
 28373  1294  0000064E           	ddw	__ccov389_start_blk50	; block 50 START_ADDR
 28374  1298  00000655           	ddw	__ccov389_end_blk50	; block 50 END_ADDR
 28375  129C  00000638           	ddw	__ccov388_start_blk49	; block 49 START_ADDR
 28376  12A0  0000064E           	ddw	__ccov388_end_blk49	; block 49 END_ADDR
 28377  12A4  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28378  12A8  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28379  12AC  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28380  12B0  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28381  12B4  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28382  12B8  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28383  12BC  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28384  12C0  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28385  12C4  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28386  12C8  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28387  12CC  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28388  12D0  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28389  12D4  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28390  12D8  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28391  12DC  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28392  12E0  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28393  12E4  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28394  12E8  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28395  12EC  0000052A           	ddw	_main	; block 0 START_ADDR
 28396  12F0  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28397                           
 28398                           ; Function: main, coverage: 67,66,65,64,63,62,78,9,7,6,5,4,3,2,1,0
 28399  12F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28400  12F8  000000E6           	ddw	__ccovbit67_64/(0+8)	; CC_ADDR
 28401  12FC  00000001           	ddw	1	; NUM_POINTS
 28402  1300  00000000           	ddw	__ccovbit67_64& (0+7)	; OFFSET
 28403  1304  00000000           	ddw	0	; Reserved
 28404  1308  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28405  130C  00000010           	ddw	16	; NUM_RANGES
 28406  1310  000006BD           	ddw	__ccov401_start_blk67	; block 67 START_ADDR
 28407  1314  000006C4           	ddw	__ccov401_end_blk67	; block 67 END_ADDR
 28408  1318  000006B3           	ddw	__ccov400_start_blk66	; block 66 START_ADDR
 28409  131C  000006BD           	ddw	__ccov400_end_blk66	; block 66 END_ADDR
 28410  1320  000006B0           	ddw	__ccov399_start_blk65	; block 65 START_ADDR
 28411  1324  000006B3           	ddw	__ccov399_end_blk65	; block 65 END_ADDR
 28412  1328  000006A9           	ddw	__ccov398_start_blk64	; block 64 START_ADDR
 28413  132C  000006B0           	ddw	__ccov398_end_blk64	; block 64 END_ADDR
 28414  1330  000006A6           	ddw	__ccov397_start_blk63	; block 63 START_ADDR
 28415  1334  000006A9           	ddw	__ccov397_end_blk63	; block 63 END_ADDR
 28416  1338  0000069E           	ddw	__ccov396_start_blk62	; block 62 START_ADDR
 28417  133C  000006A6           	ddw	__ccov396_end_blk62	; block 62 END_ADDR
 28418  1340  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28419  1344  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28420  1348  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28421  134C  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28422  1350  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28423  1354  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28424  1358  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28425  135C  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28426  1360  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28427  1364  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28428  1368  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28429  136C  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28430  1370  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28431  1374  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28432  1378  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28433  137C  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28434  1380  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28435  1384  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28436  1388  0000052A           	ddw	_main	; block 0 START_ADDR
 28437  138C  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28438                           
 28439                           ; Function: main, coverage: 70,69,64,63,62,78,9,7,6,5,4,3,2,1,0
 28440  1390  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28441  1394  000000E5           	ddw	__ccovbit70_65/(0+8)	; CC_ADDR
 28442  1398  00000001           	ddw	1	; NUM_POINTS
 28443  139C  00000007           	ddw	__ccovbit70_65& (0+7)	; OFFSET
 28444  13A0  00000000           	ddw	0	; Reserved
 28445  13A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28446  13A8  0000000F           	ddw	15	; NUM_RANGES
 28447  13AC  000006C9           	ddw	__ccov403_start_blk70	; block 70 START_ADDR
 28448  13B0  000006D1           	ddw	__ccov403_end_blk70	; block 70 END_ADDR
 28449  13B4  000006C4           	ddw	__ccov402_start_blk69	; block 69 START_ADDR
 28450  13B8  000006C9           	ddw	__ccov402_end_blk69	; block 69 END_ADDR
 28451  13BC  000006A9           	ddw	__ccov398_start_blk64	; block 64 START_ADDR
 28452  13C0  000006B0           	ddw	__ccov398_end_blk64	; block 64 END_ADDR
 28453  13C4  000006A6           	ddw	__ccov397_start_blk63	; block 63 START_ADDR
 28454  13C8  000006A9           	ddw	__ccov397_end_blk63	; block 63 END_ADDR
 28455  13CC  0000069E           	ddw	__ccov396_start_blk62	; block 62 START_ADDR
 28456  13D0  000006A6           	ddw	__ccov396_end_blk62	; block 62 END_ADDR
 28457  13D4  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28458  13D8  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28459  13DC  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28460  13E0  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28461  13E4  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28462  13E8  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28463  13EC  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28464  13F0  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28465  13F4  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28466  13F8  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28467  13FC  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28468  1400  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28469  1404  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28470  1408  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28471  140C  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28472  1410  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28473  1414  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28474  1418  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28475  141C  0000052A           	ddw	_main	; block 0 START_ADDR
 28476  1420  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28477                           
 28478                           ; Function: main, coverage: 72,69,64,63,62,78,9,7,6,5,4,3,2,1,0
 28479  1424  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28480  1428  000000E5           	ddw	__ccovbit72_66/(0+8)	; CC_ADDR
 28481  142C  00000001           	ddw	1	; NUM_POINTS
 28482  1430  00000006           	ddw	__ccovbit72_66& (0+7)	; OFFSET
 28483  1434  00000000           	ddw	0	; Reserved
 28484  1438  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28485  143C  0000000F           	ddw	15	; NUM_RANGES
 28486  1440  000006D1           	ddw	__ccov404_start_blk72	; block 72 START_ADDR
 28487  1444  000006D8           	ddw	__ccov404_end_blk72	; block 72 END_ADDR
 28488  1448  000006C4           	ddw	__ccov402_start_blk69	; block 69 START_ADDR
 28489  144C  000006C9           	ddw	__ccov402_end_blk69	; block 69 END_ADDR
 28490  1450  000006A9           	ddw	__ccov398_start_blk64	; block 64 START_ADDR
 28491  1454  000006B0           	ddw	__ccov398_end_blk64	; block 64 END_ADDR
 28492  1458  000006A6           	ddw	__ccov397_start_blk63	; block 63 START_ADDR
 28493  145C  000006A9           	ddw	__ccov397_end_blk63	; block 63 END_ADDR
 28494  1460  0000069E           	ddw	__ccov396_start_blk62	; block 62 START_ADDR
 28495  1464  000006A6           	ddw	__ccov396_end_blk62	; block 62 END_ADDR
 28496  1468  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28497  146C  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28498  1470  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28499  1474  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28500  1478  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28501  147C  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28502  1480  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28503  1484  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28504  1488  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28505  148C  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28506  1490  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28507  1494  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28508  1498  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28509  149C  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28510  14A0  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28511  14A4  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28512  14A8  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28513  14AC  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28514  14B0  0000052A           	ddw	_main	; block 0 START_ADDR
 28515  14B4  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28516                           
 28517                           ; Function: main, coverage: 76,78,9,7,6,5,4,3,2,1,0
 28518  14B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28519  14BC  000000E5           	ddw	__ccovbit76_67/(0+8)	; CC_ADDR
 28520  14C0  00000001           	ddw	1	; NUM_POINTS
 28521  14C4  00000005           	ddw	__ccovbit76_67& (0+7)	; OFFSET
 28522  14C8  00000000           	ddw	0	; Reserved
 28523  14CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28524  14D0  0000000B           	ddw	11	; NUM_RANGES
 28525  14D4  000006D8           	ddw	__ccov405_start_blk76	; block 76 START_ADDR
 28526  14D8  000006E2           	ddw	__ccov405_end_blk76	; block 76 END_ADDR
 28527  14DC  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28528  14E0  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28529  14E4  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28530  14E8  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28531  14EC  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28532  14F0  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28533  14F4  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28534  14F8  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28535  14FC  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28536  1500  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28537  1504  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28538  1508  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28539  150C  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28540  1510  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28541  1514  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28542  1518  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28543  151C  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28544  1520  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28545  1524  0000052A           	ddw	_main	; block 0 START_ADDR
 28546  1528  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28547                           
 28548                           ; Function: main, coverage: 80,78,9,7,6,5,4,3,2,1,0
 28549  152C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28550  1530  000000E5           	ddw	__ccovbit80_68/(0+8)	; CC_ADDR
 28551  1534  00000001           	ddw	1	; NUM_POINTS
 28552  1538  00000004           	ddw	__ccovbit80_68& (0+7)	; OFFSET
 28553  153C  00000000           	ddw	0	; Reserved
 28554  1540  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28555  1544  0000000B           	ddw	11	; NUM_RANGES
 28556  1548  000006F9           	ddw	__ccov407_start_blk80	; block 80 START_ADDR
 28557  154C  00000701           	ddw	__ccov407_end_blk80	; block 80 END_ADDR
 28558  1550  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28559  1554  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28560  1558  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28561  155C  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28562  1560  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28563  1564  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28564  1568  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28565  156C  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28566  1570  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28567  1574  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28568  1578  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28569  157C  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28570  1580  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28571  1584  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28572  1588  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28573  158C  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28574  1590  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28575  1594  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28576  1598  0000052A           	ddw	_main	; block 0 START_ADDR
 28577  159C  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28578                           
 28579                           ; Function: main, coverage: 81,80,78,9,7,6,5,4,3,2,1,0
 28580  15A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28581  15A4  000000E5           	ddw	__ccovbit81_69/(0+8)	; CC_ADDR
 28582  15A8  00000001           	ddw	1	; NUM_POINTS
 28583  15AC  00000003           	ddw	__ccovbit81_69& (0+7)	; OFFSET
 28584  15B0  00000000           	ddw	0	; Reserved
 28585  15B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28586  15B8  0000000C           	ddw	12	; NUM_RANGES
 28587  15BC  00000701           	ddw	__ccov408_start_blk81	; block 81 START_ADDR
 28588  15C0  00000707           	ddw	__ccov408_end_blk81	; block 81 END_ADDR
 28589  15C4  000006F9           	ddw	__ccov407_start_blk80	; block 80 START_ADDR
 28590  15C8  00000701           	ddw	__ccov407_end_blk80	; block 80 END_ADDR
 28591  15CC  000006E2           	ddw	__ccov406_start_blk78	; block 78 START_ADDR
 28592  15D0  000006F9           	ddw	__ccov406_end_blk78	; block 78 END_ADDR
 28593  15D4  0000056B           	ddw	__ccov364_start_blk9	; block 9 START_ADDR
 28594  15D8  00000575           	ddw	__ccov364_end_blk9	; block 9 END_ADDR
 28595  15DC  00000563           	ddw	__ccov363_start_blk7	; block 7 START_ADDR
 28596  15E0  0000056B           	ddw	__ccov363_end_blk7	; block 7 END_ADDR
 28597  15E4  0000055B           	ddw	__ccov362_start_blk6	; block 6 START_ADDR
 28598  15E8  00000563           	ddw	__ccov362_end_blk6	; block 6 END_ADDR
 28599  15EC  00000558           	ddw	__ccov361_start_blk5	; block 5 START_ADDR
 28600  15F0  0000055B           	ddw	__ccov361_end_blk5	; block 5 END_ADDR
 28601  15F4  00000555           	ddw	__ccov360_start_blk4	; block 4 START_ADDR
 28602  15F8  00000558           	ddw	__ccov360_end_blk4	; block 4 END_ADDR
 28603  15FC  00000552           	ddw	__ccov359_start_blk3	; block 3 START_ADDR
 28604  1600  00000555           	ddw	__ccov359_end_blk3	; block 3 END_ADDR
 28605  1604  0000054F           	ddw	__ccov358_start_blk2	; block 2 START_ADDR
 28606  1608  00000552           	ddw	__ccov358_end_blk2	; block 2 END_ADDR
 28607  160C  00000535           	ddw	__ccov357_start_blk1	; block 1 START_ADDR
 28608  1610  0000054F           	ddw	__ccov357_end_blk1	; block 1 END_ADDR
 28609  1614  0000052A           	ddw	_main	; block 0 START_ADDR
 28610  1618  00000535           	ddw	__ccov356_end_blk0	; block 0 END_ADDR
 28611                           
 28612                           ; Function: menu_change, coverage: 1,0
 28613  161C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28614  1620  000000E5           	ddw	__ccovbit1_70/(0+8)	; CC_ADDR
 28615  1624  00000001           	ddw	1	; NUM_POINTS
 28616  1628  00000002           	ddw	__ccovbit1_70& (0+7)	; OFFSET
 28617  162C  00000000           	ddw	0	; Reserved
 28618  1630  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28619  1634  00000002           	ddw	2	; NUM_RANGES
 28620  1638  00002791           	ddw	__ccov410_start_blk1	; block 1 START_ADDR
 28621  163C  00002794           	ddw	__end_of_menu_change	; block 1 END_ADDR
 28622  1640  00002788           	ddw	_menu_change	; block 0 START_ADDR
 28623  1644  00002791           	ddw	__ccov409_end_blk0	; block 0 END_ADDR
 28624                           
 28625                           ; Function: led_init, coverage: 7,6,5,4,2,0
 28626  1648  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28627  164C  000000E5           	ddw	__ccovbit7_71/(0+8)	; CC_ADDR
 28628  1650  00000001           	ddw	1	; NUM_POINTS
 28629  1654  00000001           	ddw	__ccovbit7_71& (0+7)	; OFFSET
 28630  1658  00000000           	ddw	0	; Reserved
 28631  165C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28632  1660  00000006           	ddw	6	; NUM_RANGES
 28633  1664  000027FD           	ddw	__ccov416_start_blk7	; block 7 START_ADDR
 28634  1668  00002800           	ddw	__end_of_led_init	; block 7 END_ADDR
 28635  166C  000027FB           	ddw	__ccov415_start_blk6	; block 6 START_ADDR
 28636  1670  000027FD           	ddw	__ccov415_end_blk6	; block 6 END_ADDR
 28637  1674  000027FA           	ddw	__ccov414_start_blk5	; block 5 START_ADDR
 28638  1678  000027FB           	ddw	__ccov414_end_blk5	; block 5 END_ADDR
 28639  167C  000027F7           	ddw	__ccov413_start_blk4	; block 4 START_ADDR
 28640  1680  000027FA           	ddw	__ccov413_end_blk4	; block 4 END_ADDR
 28641  1684  000027F5           	ddw	__ccov412_start_blk2	; block 2 START_ADDR
 28642  1688  000027F7           	ddw	__ccov412_end_blk2	; block 2 END_ADDR
 28643  168C  000027EF           	ddw	_led_init	; block 0 START_ADDR
 28644  1690  000027F5           	ddw	__ccov411_end_blk0	; block 0 END_ADDR
 28645                           
 28646                           ; Function: led_set_mode, coverage: 1,0
 28647  1694  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28648  1698  000000E5           	ddw	__ccovbit1_72/(0+8)	; CC_ADDR
 28649  169C  00000001           	ddw	1	; NUM_POINTS
 28650  16A0  00000000           	ddw	__ccovbit1_72& (0+7)	; OFFSET
 28651  16A4  00000000           	ddw	0	; Reserved
 28652  16A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28653  16AC  00000002           	ddw	2	; NUM_RANGES
 28654  16B0  000026C4           	ddw	__ccov418_start_blk1	; block 1 START_ADDR
 28655  16B4  000026C7           	ddw	__end_of_led_set_mode	; block 1 END_ADDR
 28656  16B8  000026BD           	ddw	_led_set_mode	; block 0 START_ADDR
 28657  16BC  000026C4           	ddw	__ccov417_end_blk0	; block 0 END_ADDR
 28658                           
 28659                           ; Function: led_on, coverage: 2,1,0
 28660  16C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28661  16C4  000000E4           	ddw	__ccovbit2_73/(0+8)	; CC_ADDR
 28662  16C8  00000001           	ddw	1	; NUM_POINTS
 28663  16CC  00000007           	ddw	__ccovbit2_73& (0+7)	; OFFSET
 28664  16D0  00000000           	ddw	0	; Reserved
 28665  16D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28666  16D8  00000003           	ddw	3	; NUM_RANGES
 28667  16DC  0000268E           	ddw	__ccov429_start_blk2	; block 2 START_ADDR
 28668  16E0  00002691           	ddw	__end_of_led_on	; block 2 END_ADDR
 28669  16E4  0000268B           	ddw	__ccov428_start_blk1	; block 1 START_ADDR
 28670  16E8  0000268E           	ddw	__ccov428_end_blk1	; block 1 END_ADDR
 28671  16EC  00002689           	ddw	_led_on	; block 0 START_ADDR
 28672  16F0  0000268B           	ddw	__ccov427_end_blk0	; block 0 END_ADDR
 28673                           
 28674                           ; Function: led_off, coverage: 3,2,0
 28675  16F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28676  16F8  000000E4           	ddw	__ccovbit3_74/(0+8)	; CC_ADDR
 28677  16FC  00000001           	ddw	1	; NUM_POINTS
 28678  1700  00000006           	ddw	__ccovbit3_74& (0+7)	; OFFSET
 28679  1704  00000000           	ddw	0	; Reserved
 28680  1708  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28681  170C  00000003           	ddw	3	; NUM_RANGES
 28682  1710  0000181E           	ddw	__ccov432_start_blk3	; block 3 START_ADDR
 28683  1714  00001821           	ddw	__end_of_led_off	; block 3 END_ADDR
 28684  1718  0000181C           	ddw	__ccov431_start_blk2	; block 2 START_ADDR
 28685  171C  0000181E           	ddw	__ccov431_end_blk2	; block 2 END_ADDR
 28686  1720  0000181A           	ddw	_led_off	; block 0 START_ADDR
 28687  1724  0000181C           	ddw	__ccov430_end_blk0	; block 0 END_ADDR
 28688                           
 28689                           ; Function: led_toggle, coverage: 4,3,1,0
 28690  1728  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28691  172C  000000E4           	ddw	__ccovbit4_75/(0+8)	; CC_ADDR
 28692  1730  00000001           	ddw	1	; NUM_POINTS
 28693  1734  00000005           	ddw	__ccovbit4_75& (0+7)	; OFFSET
 28694  1738  00000000           	ddw	0	; Reserved
 28695  173C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28696  1740  00000003           	ddw	3	; NUM_RANGES
 28697  1744  000018CC           	ddw	__ccov436_start_blk4	; block 4 START_ADDR
 28698  1748  000018CF           	ddw	__end_of_led_toggle	; block 4 END_ADDR
 28699  174C  000018C5           	ddw	__ccov435_start_blk3	; block 3 START_ADDR
 28700  1750  000018CC           	ddw	__ccov435_end_blk3	; block 3 END_ADDR
 28701  1754  000018B9           	ddw	_led_toggle	; block 1 START_ADDR
 28702  1758  000018C5           	ddw	__ccov434_end_blk1	; block 1 END_ADDR
 28703                           
 28704                           ; Function: led_indicate, coverage: 2,44,0
 28705  175C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28706  1760  000000E4           	ddw	__ccovbit2_76/(0+8)	; CC_ADDR
 28707  1764  00000001           	ddw	1	; NUM_POINTS
 28708  1768  00000004           	ddw	__ccovbit2_76& (0+7)	; OFFSET
 28709  176C  00000000           	ddw	0	; Reserved
 28710  1770  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28711  1774  00000003           	ddw	3	; NUM_RANGES
 28712  1778  00001390           	ddw	__ccov448_start_blk2	; block 2 START_ADDR
 28713  177C  00001398           	ddw	__ccov448_end_blk2	; block 2 END_ADDR
 28714  1780  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28715  1784  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28716  1788  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28717  178C  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28718                           
 28719                           ; Function: led_indicate, coverage: 3,2,44,0
 28720  1790  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28721  1794  000000E4           	ddw	__ccovbit3_77/(0+8)	; CC_ADDR
 28722  1798  00000001           	ddw	1	; NUM_POINTS
 28723  179C  00000003           	ddw	__ccovbit3_77& (0+7)	; OFFSET
 28724  17A0  00000000           	ddw	0	; Reserved
 28725  17A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28726  17A8  00000004           	ddw	4	; NUM_RANGES
 28727  17AC  00001398           	ddw	__ccov449_start_blk3	; block 3 START_ADDR
 28728  17B0  0000139D           	ddw	__ccov449_end_blk3	; block 3 END_ADDR
 28729  17B4  00001390           	ddw	__ccov448_start_blk2	; block 2 START_ADDR
 28730  17B8  00001398           	ddw	__ccov448_end_blk2	; block 2 END_ADDR
 28731  17BC  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28732  17C0  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28733  17C4  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28734  17C8  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28735                           
 28736                           ; Function: led_indicate, coverage: 6,5,44,0
 28737  17CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28738  17D0  000000E4           	ddw	__ccovbit6_78/(0+8)	; CC_ADDR
 28739  17D4  00000001           	ddw	1	; NUM_POINTS
 28740  17D8  00000002           	ddw	__ccovbit6_78& (0+7)	; OFFSET
 28741  17DC  00000000           	ddw	0	; Reserved
 28742  17E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28743  17E4  00000004           	ddw	4	; NUM_RANGES
 28744  17E8  0000139F           	ddw	__ccov451_start_blk6	; block 6 START_ADDR
 28745  17EC  000013A3           	ddw	__ccov451_end_blk6	; block 6 END_ADDR
 28746  17F0  0000139D           	ddw	__ccov450_start_blk5	; block 5 START_ADDR
 28747  17F4  0000139F           	ddw	__ccov450_end_blk5	; block 5 END_ADDR
 28748  17F8  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28749  17FC  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28750  1800  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28751  1804  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28752                           
 28753                           ; Function: led_indicate, coverage: 9,8,44,0
 28754  1808  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28755  180C  000000E4           	ddw	__ccovbit9_79/(0+8)	; CC_ADDR
 28756  1810  00000001           	ddw	1	; NUM_POINTS
 28757  1814  00000001           	ddw	__ccovbit9_79& (0+7)	; OFFSET
 28758  1818  00000000           	ddw	0	; Reserved
 28759  181C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28760  1820  00000004           	ddw	4	; NUM_RANGES
 28761  1824  000013A9           	ddw	__ccov453_start_blk9	; block 9 START_ADDR
 28762  1828  000013B0           	ddw	__ccov453_end_blk9	; block 9 END_ADDR
 28763  182C  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28764  1830  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28765  1834  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28766  1838  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28767  183C  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28768  1840  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28769                           
 28770                           ; Function: led_indicate, coverage: 11,10,9,8,44,0
 28771  1844  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28772  1848  000000E4           	ddw	__ccovbit11_80/(0+8)	; CC_ADDR
 28773  184C  00000001           	ddw	1	; NUM_POINTS
 28774  1850  00000000           	ddw	__ccovbit11_80& (0+7)	; OFFSET
 28775  1854  00000000           	ddw	0	; Reserved
 28776  1858  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28777  185C  00000006           	ddw	6	; NUM_RANGES
 28778  1860  000013B3           	ddw	__ccov455_start_blk11	; block 11 START_ADDR
 28779  1864  000013BB           	ddw	__ccov455_end_blk11	; block 11 END_ADDR
 28780  1868  000013B0           	ddw	__ccov454_start_blk10	; block 10 START_ADDR
 28781  186C  000013B3           	ddw	__ccov454_end_blk10	; block 10 END_ADDR
 28782  1870  000013A9           	ddw	__ccov453_start_blk9	; block 9 START_ADDR
 28783  1874  000013B0           	ddw	__ccov453_end_blk9	; block 9 END_ADDR
 28784  1878  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28785  187C  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28786  1880  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28787  1884  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28788  1888  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28789  188C  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28790                           
 28791                           ; Function: led_indicate, coverage: 14,13,8,44,0
 28792  1890  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28793  1894  00000128           	ddw	__ccovbit14_81/(0+8)	; CC_ADDR
 28794  1898  00000001           	ddw	1	; NUM_POINTS
 28795  189C  00000007           	ddw	__ccovbit14_81& (0+7)	; OFFSET
 28796  18A0  00000000           	ddw	0	; Reserved
 28797  18A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28798  18A8  00000005           	ddw	5	; NUM_RANGES
 28799  18AC  000013C1           	ddw	__ccov457_start_blk14	; block 14 START_ADDR
 28800  18B0  000013CA           	ddw	__ccov457_end_blk14	; block 14 END_ADDR
 28801  18B4  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28802  18B8  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28803  18BC  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28804  18C0  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28805  18C4  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28806  18C8  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28807  18CC  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28808  18D0  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28809                           
 28810                           ; Function: led_indicate, coverage: 16,15,14,13,8,44,0
 28811  18D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28812  18D8  00000128           	ddw	__ccovbit16_82/(0+8)	; CC_ADDR
 28813  18DC  00000001           	ddw	1	; NUM_POINTS
 28814  18E0  00000006           	ddw	__ccovbit16_82& (0+7)	; OFFSET
 28815  18E4  00000000           	ddw	0	; Reserved
 28816  18E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28817  18EC  00000007           	ddw	7	; NUM_RANGES
 28818  18F0  000013CD           	ddw	__ccov459_start_blk16	; block 16 START_ADDR
 28819  18F4  000013D6           	ddw	__ccov459_end_blk16	; block 16 END_ADDR
 28820  18F8  000013CA           	ddw	__ccov458_start_blk15	; block 15 START_ADDR
 28821  18FC  000013CD           	ddw	__ccov458_end_blk15	; block 15 END_ADDR
 28822  1900  000013C1           	ddw	__ccov457_start_blk14	; block 14 START_ADDR
 28823  1904  000013CA           	ddw	__ccov457_end_blk14	; block 14 END_ADDR
 28824  1908  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28825  190C  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28826  1910  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28827  1914  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28828  1918  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28829  191C  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28830  1920  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28831  1924  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28832                           
 28833                           ; Function: led_indicate, coverage: 18,13,8,44,0
 28834  1928  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28835  192C  00000128           	ddw	__ccovbit18_83/(0+8)	; CC_ADDR
 28836  1930  00000001           	ddw	1	; NUM_POINTS
 28837  1934  00000005           	ddw	__ccovbit18_83& (0+7)	; OFFSET
 28838  1938  00000000           	ddw	0	; Reserved
 28839  193C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28840  1940  00000005           	ddw	5	; NUM_RANGES
 28841  1944  000013D6           	ddw	__ccov460_start_blk18	; block 18 START_ADDR
 28842  1948  000013DE           	ddw	__ccov460_end_blk18	; block 18 END_ADDR
 28843  194C  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28844  1950  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28845  1954  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28846  1958  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28847  195C  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28848  1960  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28849  1964  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28850  1968  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28851                           
 28852                           ; Function: led_indicate, coverage: 19,18,13,8,44,0
 28853  196C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28854  1970  00000128           	ddw	__ccovbit19_84/(0+8)	; CC_ADDR
 28855  1974  00000001           	ddw	1	; NUM_POINTS
 28856  1978  00000004           	ddw	__ccovbit19_84& (0+7)	; OFFSET
 28857  197C  00000000           	ddw	0	; Reserved
 28858  1980  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28859  1984  00000006           	ddw	6	; NUM_RANGES
 28860  1988  000013DE           	ddw	__ccov461_start_blk19	; block 19 START_ADDR
 28861  198C  000013E7           	ddw	__ccov461_end_blk19	; block 19 END_ADDR
 28862  1990  000013D6           	ddw	__ccov460_start_blk18	; block 18 START_ADDR
 28863  1994  000013DE           	ddw	__ccov460_end_blk18	; block 18 END_ADDR
 28864  1998  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28865  199C  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28866  19A0  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28867  19A4  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28868  19A8  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28869  19AC  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28870  19B0  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28871  19B4  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28872                           
 28873                           ; Function: led_indicate, coverage: 25,24,23,22,21,20,19,18,13,8,44,0
 28874  19B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28875  19BC  00000128           	ddw	__ccovbit25_85/(0+8)	; CC_ADDR
 28876  19C0  00000001           	ddw	1	; NUM_POINTS
 28877  19C4  00000003           	ddw	__ccovbit25_85& (0+7)	; OFFSET
 28878  19C8  00000000           	ddw	0	; Reserved
 28879  19CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28880  19D0  0000000C           	ddw	12	; NUM_RANGES
 28881  19D4  000013FA           	ddw	__ccov467_start_blk25	; block 25 START_ADDR
 28882  19D8  00001403           	ddw	__ccov467_end_blk25	; block 25 END_ADDR
 28883  19DC  000013F9           	ddw	__ccov466_start_blk24	; block 24 START_ADDR
 28884  19E0  000013FA           	ddw	__ccov466_end_blk24	; block 24 END_ADDR
 28885  19E4  000013F2           	ddw	__ccov465_start_blk23	; block 23 START_ADDR
 28886  19E8  000013F9           	ddw	__ccov465_end_blk23	; block 23 END_ADDR
 28887  19EC  000013F0           	ddw	__ccov464_start_blk22	; block 22 START_ADDR
 28888  19F0  000013F2           	ddw	__ccov464_end_blk22	; block 22 END_ADDR
 28889  19F4  000013EA           	ddw	__ccov463_start_blk21	; block 21 START_ADDR
 28890  19F8  000013F0           	ddw	__ccov463_end_blk21	; block 21 END_ADDR
 28891  19FC  000013E7           	ddw	__ccov462_start_blk20	; block 20 START_ADDR
 28892  1A00  000013EA           	ddw	__ccov462_end_blk20	; block 20 END_ADDR
 28893  1A04  000013DE           	ddw	__ccov461_start_blk19	; block 19 START_ADDR
 28894  1A08  000013E7           	ddw	__ccov461_end_blk19	; block 19 END_ADDR
 28895  1A0C  000013D6           	ddw	__ccov460_start_blk18	; block 18 START_ADDR
 28896  1A10  000013DE           	ddw	__ccov460_end_blk18	; block 18 END_ADDR
 28897  1A14  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28898  1A18  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28899  1A1C  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28900  1A20  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28901  1A24  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28902  1A28  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28903  1A2C  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28904  1A30  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28905                           
 28906                           ; Function: led_indicate, coverage: 27,23,22,21,20,19,18,13,8,44,0
 28907  1A34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28908  1A38  00000128           	ddw	__ccovbit27_86/(0+8)	; CC_ADDR
 28909  1A3C  00000001           	ddw	1	; NUM_POINTS
 28910  1A40  00000002           	ddw	__ccovbit27_86& (0+7)	; OFFSET
 28911  1A44  00000000           	ddw	0	; Reserved
 28912  1A48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28913  1A4C  0000000B           	ddw	11	; NUM_RANGES
 28914  1A50  00001403           	ddw	__ccov468_start_blk27	; block 27 START_ADDR
 28915  1A54  0000140B           	ddw	__ccov468_end_blk27	; block 27 END_ADDR
 28916  1A58  000013F2           	ddw	__ccov465_start_blk23	; block 23 START_ADDR
 28917  1A5C  000013F9           	ddw	__ccov465_end_blk23	; block 23 END_ADDR
 28918  1A60  000013F0           	ddw	__ccov464_start_blk22	; block 22 START_ADDR
 28919  1A64  000013F2           	ddw	__ccov464_end_blk22	; block 22 END_ADDR
 28920  1A68  000013EA           	ddw	__ccov463_start_blk21	; block 21 START_ADDR
 28921  1A6C  000013F0           	ddw	__ccov463_end_blk21	; block 21 END_ADDR
 28922  1A70  000013E7           	ddw	__ccov462_start_blk20	; block 20 START_ADDR
 28923  1A74  000013EA           	ddw	__ccov462_end_blk20	; block 20 END_ADDR
 28924  1A78  000013DE           	ddw	__ccov461_start_blk19	; block 19 START_ADDR
 28925  1A7C  000013E7           	ddw	__ccov461_end_blk19	; block 19 END_ADDR
 28926  1A80  000013D6           	ddw	__ccov460_start_blk18	; block 18 START_ADDR
 28927  1A84  000013DE           	ddw	__ccov460_end_blk18	; block 18 END_ADDR
 28928  1A88  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28929  1A8C  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28930  1A90  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28931  1A94  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28932  1A98  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28933  1A9C  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28934  1AA0  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28935  1AA4  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28936                           
 28937                           ; Function: led_indicate, coverage: 32,31,13,8,44,0
 28938  1AA8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28939  1AAC  00000128           	ddw	__ccovbit32_87/(0+8)	; CC_ADDR
 28940  1AB0  00000001           	ddw	1	; NUM_POINTS
 28941  1AB4  00000001           	ddw	__ccovbit32_87& (0+7)	; OFFSET
 28942  1AB8  00000000           	ddw	0	; Reserved
 28943  1ABC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28944  1AC0  00000006           	ddw	6	; NUM_RANGES
 28945  1AC4  00001411           	ddw	__ccov470_start_blk32	; block 32 START_ADDR
 28946  1AC8  0000141C           	ddw	__ccov470_end_blk32	; block 32 END_ADDR
 28947  1ACC  0000140B           	ddw	__ccov469_start_blk31	; block 31 START_ADDR
 28948  1AD0  00001411           	ddw	__ccov469_end_blk31	; block 31 END_ADDR
 28949  1AD4  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28950  1AD8  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28951  1ADC  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28952  1AE0  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28953  1AE4  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28954  1AE8  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28955  1AEC  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28956  1AF0  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28957                           
 28958                           ; Function: led_indicate, coverage: 34,31,13,8,44,0
 28959  1AF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28960  1AF8  00000128           	ddw	__ccovbit34_88/(0+8)	; CC_ADDR
 28961  1AFC  00000001           	ddw	1	; NUM_POINTS
 28962  1B00  00000000           	ddw	__ccovbit34_88& (0+7)	; OFFSET
 28963  1B04  00000000           	ddw	0	; Reserved
 28964  1B08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28965  1B0C  00000006           	ddw	6	; NUM_RANGES
 28966  1B10  0000141C           	ddw	__ccov471_start_blk34	; block 34 START_ADDR
 28967  1B14  00001425           	ddw	__ccov471_end_blk34	; block 34 END_ADDR
 28968  1B18  0000140B           	ddw	__ccov469_start_blk31	; block 31 START_ADDR
 28969  1B1C  00001411           	ddw	__ccov469_end_blk31	; block 31 END_ADDR
 28970  1B20  000013BB           	ddw	__ccov456_start_blk13	; block 13 START_ADDR
 28971  1B24  000013C1           	ddw	__ccov456_end_blk13	; block 13 END_ADDR
 28972  1B28  000013A3           	ddw	__ccov452_start_blk8	; block 8 START_ADDR
 28973  1B2C  000013A9           	ddw	__ccov452_end_blk8	; block 8 END_ADDR
 28974  1B30  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28975  1B34  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28976  1B38  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28977  1B3C  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28978                           
 28979                           ; Function: led_indicate, coverage: 37,44,0
 28980  1B40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28981  1B44  00000127           	ddw	__ccovbit37_89/(0+8)	; CC_ADDR
 28982  1B48  00000001           	ddw	1	; NUM_POINTS
 28983  1B4C  00000007           	ddw	__ccovbit37_89& (0+7)	; OFFSET
 28984  1B50  00000000           	ddw	0	; Reserved
 28985  1B54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 28986  1B58  00000003           	ddw	3	; NUM_RANGES
 28987  1B5C  00001425           	ddw	__ccov472_start_blk37	; block 37 START_ADDR
 28988  1B60  0000142B           	ddw	__ccov472_end_blk37	; block 37 END_ADDR
 28989  1B64  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 28990  1B68  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 28991  1B6C  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 28992  1B70  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 28993                           
 28994                           ; Function: led_indicate, coverage: 42,41,44,0
 28995  1B74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 28996  1B78  00000127           	ddw	__ccovbit42_90/(0+8)	; CC_ADDR
 28997  1B7C  00000001           	ddw	1	; NUM_POINTS
 28998  1B80  00000006           	ddw	__ccovbit42_90& (0+7)	; OFFSET
 28999  1B84  00000000           	ddw	0	; Reserved
 29000  1B88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29001  1B8C  00000004           	ddw	4	; NUM_RANGES
 29002  1B90  00001432           	ddw	__ccov474_start_blk42	; block 42 START_ADDR
 29003  1B94  00001439           	ddw	__ccov474_end_blk42	; block 42 END_ADDR
 29004  1B98  0000142B           	ddw	__ccov473_start_blk41	; block 41 START_ADDR
 29005  1B9C  00001432           	ddw	__ccov473_end_blk41	; block 41 END_ADDR
 29006  1BA0  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 29007  1BA4  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 29008  1BA8  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 29009  1BAC  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 29010                           
 29011                           ; Function: led_indicate, coverage: 46,44,0
 29012  1BB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29013  1BB4  00000127           	ddw	__ccovbit46_91/(0+8)	; CC_ADDR
 29014  1BB8  00000001           	ddw	1	; NUM_POINTS
 29015  1BBC  00000005           	ddw	__ccovbit46_91& (0+7)	; OFFSET
 29016  1BC0  00000000           	ddw	0	; Reserved
 29017  1BC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29018  1BC8  00000003           	ddw	3	; NUM_RANGES
 29019  1BCC  0000144E           	ddw	__ccov476_start_blk46	; block 46 START_ADDR
 29020  1BD0  00001451           	ddw	__end_of_led_indicate	; block 46 END_ADDR
 29021  1BD4  00001439           	ddw	__ccov475_start_blk44	; block 44 START_ADDR
 29022  1BD8  0000144E           	ddw	__ccov475_end_blk44	; block 44 END_ADDR
 29023  1BDC  0000138F           	ddw	_led_indicate	; block 0 START_ADDR
 29024  1BE0  00001390           	ddw	__ccov447_end_blk0	; block 0 END_ADDR
 29025                           
 29026                           ; Function: button_init, coverage: 3,2,1,0
 29027  1BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29028  1BE8  00000127           	ddw	__ccovbit3_92/(0+8)	; CC_ADDR
 29029  1BEC  00000001           	ddw	1	; NUM_POINTS
 29030  1BF0  00000004           	ddw	__ccovbit3_92& (0+7)	; OFFSET
 29031  1BF4  00000000           	ddw	0	; Reserved
 29032  1BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29033  1BFC  00000004           	ddw	4	; NUM_RANGES
 29034  1C00  00002786           	ddw	__ccov480_start_blk3	; block 3 START_ADDR
 29035  1C04  00002788           	ddw	__end_of_button_init	; block 3 END_ADDR
 29036  1C08  00002785           	ddw	__ccov479_start_blk2	; block 2 START_ADDR
 29037  1C0C  00002786           	ddw	__ccov479_end_blk2	; block 2 END_ADDR
 29038  1C10  00002784           	ddw	__ccov478_start_blk1	; block 1 START_ADDR
 29039  1C14  00002785           	ddw	__ccov478_end_blk1	; block 1 END_ADDR
 29040  1C18  0000277C           	ddw	_button_init	; block 0 START_ADDR
 29041  1C1C  00002784           	ddw	__ccov477_end_blk0	; block 0 END_ADDR
 29042                           
 29043                           ; Function: button_is_pressed, coverage: 2,0
 29044  1C20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29045  1C24  00000127           	ddw	__ccovbit2_93/(0+8)	; CC_ADDR
 29046  1C28  00000001           	ddw	1	; NUM_POINTS
 29047  1C2C  00000003           	ddw	__ccovbit2_93& (0+7)	; OFFSET
 29048  1C30  00000000           	ddw	0	; Reserved
 29049  1C34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29050  1C38  00000002           	ddw	2	; NUM_RANGES
 29051  1C3C  000026BA           	ddw	__ccov482_start_blk2	; block 2 START_ADDR
 29052  1C40  000026BD           	ddw	__end_of_button_is_pressed	; block 2 END_ADDR
 29053  1C44  000026B3           	ddw	_button_is_pressed	; block 0 START_ADDR
 29054  1C48  000026BA           	ddw	__ccov481_end_blk0	; block 0 END_ADDR
 29055                           
 29056                           ; Function: button_check, coverage: 4,3,2,1,0
 29057  1C4C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29058  1C50  00000127           	ddw	__ccovbit4_94/(0+8)	; CC_ADDR
 29059  1C54  00000001           	ddw	1	; NUM_POINTS
 29060  1C58  00000002           	ddw	__ccovbit4_94& (0+7)	; OFFSET
 29061  1C5C  00000000           	ddw	0	; Reserved
 29062  1C60  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29063  1C64  00000005           	ddw	5	; NUM_RANGES
 29064  1C68  00001063           	ddw	__ccov487_start_blk4	; block 4 START_ADDR
 29065  1C6C  0000106C           	ddw	__ccov487_end_blk4	; block 4 END_ADDR
 29066  1C70  0000105D           	ddw	__ccov486_start_blk3	; block 3 START_ADDR
 29067  1C74  00001063           	ddw	__ccov486_end_blk3	; block 3 END_ADDR
 29068  1C78  00001055           	ddw	__ccov485_start_blk2	; block 2 START_ADDR
 29069  1C7C  0000105D           	ddw	__ccov485_end_blk2	; block 2 END_ADDR
 29070  1C80  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29071  1C84  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29072  1C88  00001047           	ddw	_button_check	; block 0 START_ADDR
 29073  1C8C  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29074                           
 29075                           ; Function: button_check, coverage: 7,6,3,2,1,0
 29076  1C90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29077  1C94  00000127           	ddw	__ccovbit7_95/(0+8)	; CC_ADDR
 29078  1C98  00000001           	ddw	1	; NUM_POINTS
 29079  1C9C  00000001           	ddw	__ccovbit7_95& (0+7)	; OFFSET
 29080  1CA0  00000000           	ddw	0	; Reserved
 29081  1CA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29082  1CA8  00000006           	ddw	6	; NUM_RANGES
 29083  1CAC  00001073           	ddw	__ccov489_start_blk7	; block 7 START_ADDR
 29084  1CB0  00001079           	ddw	__ccov489_end_blk7	; block 7 END_ADDR
 29085  1CB4  0000106C           	ddw	__ccov488_start_blk6	; block 6 START_ADDR
 29086  1CB8  00001073           	ddw	__ccov488_end_blk6	; block 6 END_ADDR
 29087  1CBC  0000105D           	ddw	__ccov486_start_blk3	; block 3 START_ADDR
 29088  1CC0  00001063           	ddw	__ccov486_end_blk3	; block 3 END_ADDR
 29089  1CC4  00001055           	ddw	__ccov485_start_blk2	; block 2 START_ADDR
 29090  1CC8  0000105D           	ddw	__ccov485_end_blk2	; block 2 END_ADDR
 29091  1CCC  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29092  1CD0  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29093  1CD4  00001047           	ddw	_button_check	; block 0 START_ADDR
 29094  1CD8  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29095                           
 29096                           ; Function: button_check, coverage: 9,6,3,2,1,0
 29097  1CDC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29098  1CE0  00000127           	ddw	__ccovbit9_96/(0+8)	; CC_ADDR
 29099  1CE4  00000001           	ddw	1	; NUM_POINTS
 29100  1CE8  00000000           	ddw	__ccovbit9_96& (0+7)	; OFFSET
 29101  1CEC  00000000           	ddw	0	; Reserved
 29102  1CF0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29103  1CF4  00000006           	ddw	6	; NUM_RANGES
 29104  1CF8  00001079           	ddw	__ccov490_start_blk9	; block 9 START_ADDR
 29105  1CFC  0000107F           	ddw	__ccov490_end_blk9	; block 9 END_ADDR
 29106  1D00  0000106C           	ddw	__ccov488_start_blk6	; block 6 START_ADDR
 29107  1D04  00001073           	ddw	__ccov488_end_blk6	; block 6 END_ADDR
 29108  1D08  0000105D           	ddw	__ccov486_start_blk3	; block 3 START_ADDR
 29109  1D0C  00001063           	ddw	__ccov486_end_blk3	; block 3 END_ADDR
 29110  1D10  00001055           	ddw	__ccov485_start_blk2	; block 2 START_ADDR
 29111  1D14  0000105D           	ddw	__ccov485_end_blk2	; block 2 END_ADDR
 29112  1D18  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29113  1D1C  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29114  1D20  00001047           	ddw	_button_check	; block 0 START_ADDR
 29115  1D24  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29116                           
 29117                           ; Function: button_check, coverage: 14,13,12,1,0
 29118  1D28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29119  1D2C  00000126           	ddw	__ccovbit14_97/(0+8)	; CC_ADDR
 29120  1D30  00000001           	ddw	1	; NUM_POINTS
 29121  1D34  00000007           	ddw	__ccovbit14_97& (0+7)	; OFFSET
 29122  1D38  00000000           	ddw	0	; Reserved
 29123  1D3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29124  1D40  00000005           	ddw	5	; NUM_RANGES
 29125  1D44  0000108A           	ddw	__ccov493_start_blk14	; block 14 START_ADDR
 29126  1D48  0000108E           	ddw	__ccov493_end_blk14	; block 14 END_ADDR
 29127  1D4C  00001084           	ddw	__ccov492_start_blk13	; block 13 START_ADDR
 29128  1D50  0000108A           	ddw	__ccov492_end_blk13	; block 13 END_ADDR
 29129  1D54  0000107F           	ddw	__ccov491_start_blk12	; block 12 START_ADDR
 29130  1D58  00001084           	ddw	__ccov491_end_blk12	; block 12 END_ADDR
 29131  1D5C  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29132  1D60  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29133  1D64  00001047           	ddw	_button_check	; block 0 START_ADDR
 29134  1D68  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29135                           
 29136                           ; Function: button_check, coverage: 16,13,12,1,0
 29137  1D6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29138  1D70  00000126           	ddw	__ccovbit16_98/(0+8)	; CC_ADDR
 29139  1D74  00000001           	ddw	1	; NUM_POINTS
 29140  1D78  00000006           	ddw	__ccovbit16_98& (0+7)	; OFFSET
 29141  1D7C  00000000           	ddw	0	; Reserved
 29142  1D80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29143  1D84  00000005           	ddw	5	; NUM_RANGES
 29144  1D88  0000108E           	ddw	__ccov494_start_blk16	; block 16 START_ADDR
 29145  1D8C  00001094           	ddw	__ccov494_end_blk16	; block 16 END_ADDR
 29146  1D90  00001084           	ddw	__ccov492_start_blk13	; block 13 START_ADDR
 29147  1D94  0000108A           	ddw	__ccov492_end_blk13	; block 13 END_ADDR
 29148  1D98  0000107F           	ddw	__ccov491_start_blk12	; block 12 START_ADDR
 29149  1D9C  00001084           	ddw	__ccov491_end_blk12	; block 12 END_ADDR
 29150  1DA0  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29151  1DA4  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29152  1DA8  00001047           	ddw	_button_check	; block 0 START_ADDR
 29153  1DAC  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29154                           
 29155                           ; Function: button_check, coverage: 17,16,13,12,1,0
 29156  1DB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29157  1DB4  00000126           	ddw	__ccovbit17_99/(0+8)	; CC_ADDR
 29158  1DB8  00000001           	ddw	1	; NUM_POINTS
 29159  1DBC  00000005           	ddw	__ccovbit17_99& (0+7)	; OFFSET
 29160  1DC0  00000000           	ddw	0	; Reserved
 29161  1DC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29162  1DC8  00000006           	ddw	6	; NUM_RANGES
 29163  1DCC  00001094           	ddw	__ccov495_start_blk17	; block 17 START_ADDR
 29164  1DD0  00001096           	ddw	__ccov495_end_blk17	; block 17 END_ADDR
 29165  1DD4  0000108E           	ddw	__ccov494_start_blk16	; block 16 START_ADDR
 29166  1DD8  00001094           	ddw	__ccov494_end_blk16	; block 16 END_ADDR
 29167  1DDC  00001084           	ddw	__ccov492_start_blk13	; block 13 START_ADDR
 29168  1DE0  0000108A           	ddw	__ccov492_end_blk13	; block 13 END_ADDR
 29169  1DE4  0000107F           	ddw	__ccov491_start_blk12	; block 12 START_ADDR
 29170  1DE8  00001084           	ddw	__ccov491_end_blk12	; block 12 END_ADDR
 29171  1DEC  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29172  1DF0  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29173  1DF4  00001047           	ddw	_button_check	; block 0 START_ADDR
 29174  1DF8  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29175                           
 29176                           ; Function: button_check, coverage: 21,20,13,12,1,0
 29177  1DFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29178  1E00  00000126           	ddw	__ccovbit21_100/(0+8)	; CC_ADDR
 29179  1E04  00000001           	ddw	1	; NUM_POINTS
 29180  1E08  00000004           	ddw	__ccovbit21_100& (0+7)	; OFFSET
 29181  1E0C  00000000           	ddw	0	; Reserved
 29182  1E10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29183  1E14  00000006           	ddw	6	; NUM_RANGES
 29184  1E18  000010A4           	ddw	__ccov497_start_blk21	; block 21 START_ADDR
 29185  1E1C  000010A8           	ddw	__ccov497_end_blk21	; block 21 END_ADDR
 29186  1E20  00001096           	ddw	__ccov496_start_blk20	; block 20 START_ADDR
 29187  1E24  000010A4           	ddw	__ccov496_end_blk20	; block 20 END_ADDR
 29188  1E28  00001084           	ddw	__ccov492_start_blk13	; block 13 START_ADDR
 29189  1E2C  0000108A           	ddw	__ccov492_end_blk13	; block 13 END_ADDR
 29190  1E30  0000107F           	ddw	__ccov491_start_blk12	; block 12 START_ADDR
 29191  1E34  00001084           	ddw	__ccov491_end_blk12	; block 12 END_ADDR
 29192  1E38  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29193  1E3C  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29194  1E40  00001047           	ddw	_button_check	; block 0 START_ADDR
 29195  1E44  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29196                           
 29197                           ; Function: button_check, coverage: 23,12,1,0
 29198  1E48  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29199  1E4C  00000126           	ddw	__ccovbit23_101/(0+8)	; CC_ADDR
 29200  1E50  00000001           	ddw	1	; NUM_POINTS
 29201  1E54  00000003           	ddw	__ccovbit23_101& (0+7)	; OFFSET
 29202  1E58  00000000           	ddw	0	; Reserved
 29203  1E5C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29204  1E60  00000004           	ddw	4	; NUM_RANGES
 29205  1E64  000010A8           	ddw	__ccov498_start_blk23	; block 23 START_ADDR
 29206  1E68  000010B1           	ddw	__ccov498_end_blk23	; block 23 END_ADDR
 29207  1E6C  0000107F           	ddw	__ccov491_start_blk12	; block 12 START_ADDR
 29208  1E70  00001084           	ddw	__ccov491_end_blk12	; block 12 END_ADDR
 29209  1E74  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29210  1E78  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29211  1E7C  00001047           	ddw	_button_check	; block 0 START_ADDR
 29212  1E80  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29213                           
 29214                           ; Function: button_check, coverage: 28,26,1,0
 29215  1E84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29216  1E88  00000126           	ddw	__ccovbit28_102/(0+8)	; CC_ADDR
 29217  1E8C  00000001           	ddw	1	; NUM_POINTS
 29218  1E90  00000002           	ddw	__ccovbit28_102& (0+7)	; OFFSET
 29219  1E94  00000000           	ddw	0	; Reserved
 29220  1E98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29221  1E9C  00000004           	ddw	4	; NUM_RANGES
 29222  1EA0  000010B6           	ddw	__ccov500_start_blk28	; block 28 START_ADDR
 29223  1EA4  000010BA           	ddw	__end_of_button_check	; block 28 END_ADDR
 29224  1EA8  000010B1           	ddw	__ccov499_start_blk26	; block 26 START_ADDR
 29225  1EAC  000010B6           	ddw	__ccov499_end_blk26	; block 26 END_ADDR
 29226  1EB0  00001050           	ddw	__ccov484_start_blk1	; block 1 START_ADDR
 29227  1EB4  00001055           	ddw	__ccov484_end_blk1	; block 1 END_ADDR
 29228  1EB8  00001047           	ddw	_button_check	; block 0 START_ADDR
 29229  1EBC  00001050           	ddw	__ccov483_end_blk0	; block 0 END_ADDR
 29230                           
 29231                           ; Function: is_moving, coverage: 2,0
 29232  1EC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29233  1EC4  00000126           	ddw	__ccovbit2_103/(0+8)	; CC_ADDR
 29234  1EC8  00000001           	ddw	1	; NUM_POINTS
 29235  1ECC  00000001           	ddw	__ccovbit2_103& (0+7)	; OFFSET
 29236  1ED0  00000000           	ddw	0	; Reserved
 29237  1ED4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29238  1ED8  00000002           	ddw	2	; NUM_RANGES
 29239  1EDC  0000273E           	ddw	__ccov502_start_blk2	; block 2 START_ADDR
 29240  1EE0  00002740           	ddw	__end_of_is_moving	; block 2 END_ADDR
 29241  1EE4  00002735           	ddw	_is_moving	; block 0 START_ADDR
 29242  1EE8  0000273E           	ddw	__ccov501_end_blk0	; block 0 END_ADDR
 29243                           
 29244                           ; Function: spd_init, coverage: 5,4,3,2,1,0
 29245  1EEC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29246  1EF0  00000126           	ddw	__ccovbit5_104/(0+8)	; CC_ADDR
 29247  1EF4  00000001           	ddw	1	; NUM_POINTS
 29248  1EF8  00000000           	ddw	__ccovbit5_104& (0+7)	; OFFSET
 29249  1EFC  00000000           	ddw	0	; Reserved
 29250  1F00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29251  1F04  00000006           	ddw	6	; NUM_RANGES
 29252  1F08  000011EE           	ddw	__ccov508_start_blk5	; block 5 START_ADDR
 29253  1F0C  000011FB           	ddw	__ccov508_end_blk5	; block 5 END_ADDR
 29254  1F10  000011E2           	ddw	__ccov507_start_blk4	; block 4 START_ADDR
 29255  1F14  000011EE           	ddw	__ccov507_end_blk4	; block 4 END_ADDR
 29256  1F18  000011D9           	ddw	__ccov506_start_blk3	; block 3 START_ADDR
 29257  1F1C  000011E2           	ddw	__ccov506_end_blk3	; block 3 END_ADDR
 29258  1F20  000011BB           	ddw	__ccov505_start_blk2	; block 2 START_ADDR
 29259  1F24  000011D9           	ddw	__ccov505_end_blk2	; block 2 END_ADDR
 29260  1F28  000011AF           	ddw	__ccov504_start_blk1	; block 1 START_ADDR
 29261  1F2C  000011BB           	ddw	__ccov504_end_blk1	; block 1 END_ADDR
 29262  1F30  000011A4           	ddw	_spd_init	; block 0 START_ADDR
 29263  1F34  000011AF           	ddw	__ccov503_end_blk0	; block 0 END_ADDR
 29264                           
 29265                           ; Function: spd_init, coverage: 11,10,9,8,7,2,1,0
 29266  1F38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29267  1F3C  00000125           	ddw	__ccovbit11_105/(0+8)	; CC_ADDR
 29268  1F40  00000001           	ddw	1	; NUM_POINTS
 29269  1F44  00000007           	ddw	__ccovbit11_105& (0+7)	; OFFSET
 29270  1F48  00000000           	ddw	0	; Reserved
 29271  1F4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29272  1F50  00000008           	ddw	8	; NUM_RANGES
 29273  1F54  0000121B           	ddw	__ccov513_start_blk11	; block 11 START_ADDR
 29274  1F58  00001229           	ddw	__ccov513_end_blk11	; block 11 END_ADDR
 29275  1F5C  00001214           	ddw	__ccov512_start_blk10	; block 10 START_ADDR
 29276  1F60  0000121B           	ddw	__ccov512_end_blk10	; block 10 END_ADDR
 29277  1F64  00001213           	ddw	__ccov511_start_blk9	; block 9 START_ADDR
 29278  1F68  00001214           	ddw	__ccov511_end_blk9	; block 9 END_ADDR
 29279  1F6C  00001206           	ddw	__ccov510_start_blk8	; block 8 START_ADDR
 29280  1F70  00001213           	ddw	__ccov510_end_blk8	; block 8 END_ADDR
 29281  1F74  000011FB           	ddw	__ccov509_start_blk7	; block 7 START_ADDR
 29282  1F78  00001206           	ddw	__ccov509_end_blk7	; block 7 END_ADDR
 29283  1F7C  000011BB           	ddw	__ccov505_start_blk2	; block 2 START_ADDR
 29284  1F80  000011D9           	ddw	__ccov505_end_blk2	; block 2 END_ADDR
 29285  1F84  000011AF           	ddw	__ccov504_start_blk1	; block 1 START_ADDR
 29286  1F88  000011BB           	ddw	__ccov504_end_blk1	; block 1 END_ADDR
 29287  1F8C  000011A4           	ddw	_spd_init	; block 0 START_ADDR
 29288  1F90  000011AF           	ddw	__ccov503_end_blk0	; block 0 END_ADDR
 29289                           
 29290                           ; Function: spd_init, coverage: 17,16,15,14,13,8,7,2,1,0
 29291  1F94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29292  1F98  00000125           	ddw	__ccovbit17_106/(0+8)	; CC_ADDR
 29293  1F9C  00000001           	ddw	1	; NUM_POINTS
 29294  1FA0  00000006           	ddw	__ccovbit17_106& (0+7)	; OFFSET
 29295  1FA4  00000000           	ddw	0	; Reserved
 29296  1FA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29297  1FAC  0000000A           	ddw	10	; NUM_RANGES
 29298  1FB0  00001231           	ddw	__ccov518_start_blk17	; block 17 START_ADDR
 29299  1FB4  00001236           	ddw	__end_of_spd_init	; block 17 END_ADDR
 29300  1FB8  0000122F           	ddw	__ccov517_start_blk16	; block 16 START_ADDR
 29301  1FBC  00001231           	ddw	__ccov517_end_blk16	; block 16 END_ADDR
 29302  1FC0  0000122E           	ddw	__ccov516_start_blk15	; block 15 START_ADDR
 29303  1FC4  0000122F           	ddw	__ccov516_end_blk15	; block 15 END_ADDR
 29304  1FC8  0000122C           	ddw	__ccov515_start_blk14	; block 14 START_ADDR
 29305  1FCC  0000122E           	ddw	__ccov515_end_blk14	; block 14 END_ADDR
 29306  1FD0  00001229           	ddw	__ccov514_start_blk13	; block 13 START_ADDR
 29307  1FD4  0000122C           	ddw	__ccov514_end_blk13	; block 13 END_ADDR
 29308  1FD8  00001206           	ddw	__ccov510_start_blk8	; block 8 START_ADDR
 29309  1FDC  00001213           	ddw	__ccov510_end_blk8	; block 8 END_ADDR
 29310  1FE0  000011FB           	ddw	__ccov509_start_blk7	; block 7 START_ADDR
 29311  1FE4  00001206           	ddw	__ccov509_end_blk7	; block 7 END_ADDR
 29312  1FE8  000011BB           	ddw	__ccov505_start_blk2	; block 2 START_ADDR
 29313  1FEC  000011D9           	ddw	__ccov505_end_blk2	; block 2 END_ADDR
 29314  1FF0  000011AF           	ddw	__ccov504_start_blk1	; block 1 START_ADDR
 29315  1FF4  000011BB           	ddw	__ccov504_end_blk1	; block 1 END_ADDR
 29316  1FF8  000011A4           	ddw	_spd_init	; block 0 START_ADDR
 29317  1FFC  000011AF           	ddw	__ccov503_end_blk0	; block 0 END_ADDR
 29318                           
 29319                           ; Function: spd_get_k_corr, coverage: 2,0
 29320  2000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29321  2004  00000125           	ddw	__ccovbit2_107/(0+8)	; CC_ADDR
 29322  2008  00000001           	ddw	1	; NUM_POINTS
 29323  200C  00000005           	ddw	__ccovbit2_107& (0+7)	; OFFSET
 29324  2010  00000000           	ddw	0	; Reserved
 29325  2014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29326  2018  00000002           	ddw	2	; NUM_RANGES
 29327  201C  00001879           	ddw	__ccov522_start_blk2	; block 2 START_ADDR
 29328  2020  0000187C           	ddw	__end_of_spd_get_k_corr	; block 2 END_ADDR
 29329  2024  00001869           	ddw	_spd_get_k_corr	; block 0 START_ADDR
 29330  2028  00001879           	ddw	__ccov521_end_blk0	; block 0 END_ADDR
 29331                           
 29332                           ; Function: spd_set_k_corr, coverage: 1,0
 29333  202C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29334  2030  00000125           	ddw	__ccovbit1_108/(0+8)	; CC_ADDR
 29335  2034  00000001           	ddw	1	; NUM_POINTS
 29336  2038  00000004           	ddw	__ccovbit1_108& (0+7)	; OFFSET
 29337  203C  00000000           	ddw	0	; Reserved
 29338  2040  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29339  2044  00000002           	ddw	2	; NUM_RANGES
 29340  2048  00001854           	ddw	__ccov524_start_blk1	; block 1 START_ADDR
 29341  204C  00001856           	ddw	__end_of_spd_set_k_corr	; block 1 END_ADDR
 29342  2050  00001844           	ddw	_spd_set_k_corr	; block 0 START_ADDR
 29343  2054  00001854           	ddw	__ccov523_end_blk0	; block 0 END_ADDR
 29344                           
 29345                           ; Function: spd_get_a_corr, coverage: 2,0
 29346  2058  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29347  205C  00000125           	ddw	__ccovbit2_109/(0+8)	; CC_ADDR
 29348  2060  00000001           	ddw	1	; NUM_POINTS
 29349  2064  00000003           	ddw	__ccovbit2_109& (0+7)	; OFFSET
 29350  2068  00000000           	ddw	0	; Reserved
 29351  206C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29352  2070  00000002           	ddw	2	; NUM_RANGES
 29353  2074  00002678           	ddw	__ccov526_start_blk2	; block 2 START_ADDR
 29354  2078  0000267A           	ddw	__end_of_spd_get_a_corr	; block 2 END_ADDR
 29355  207C  00002676           	ddw	_spd_get_a_corr	; block 0 START_ADDR
 29356  2080  00002678           	ddw	__ccov525_end_blk0	; block 0 END_ADDR
 29357                           
 29358                           ; Function: spd_set_a_corr, coverage: 1,0
 29359  2084  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29360  2088  00000125           	ddw	__ccovbit1_110/(0+8)	; CC_ADDR
 29361  208C  00000001           	ddw	1	; NUM_POINTS
 29362  2090  00000002           	ddw	__ccovbit1_110& (0+7)	; OFFSET
 29363  2094  00000000           	ddw	0	; Reserved
 29364  2098  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29365  209C  00000002           	ddw	2	; NUM_RANGES
 29366  20A0  000026B1           	ddw	__ccov528_start_blk1	; block 1 START_ADDR
 29367  20A4  000026B3           	ddw	__end_of_spd_set_a_corr	; block 1 END_ADDR
 29368  20A8  000026AA           	ddw	_spd_set_a_corr	; block 0 START_ADDR
 29369  20AC  000026B1           	ddw	__ccov527_end_blk0	; block 0 END_ADDR
 29370                           
 29371                           ; Function: spd_uint_to_float, coverage: 2,0
 29372  20B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29373  20B4  00000125           	ddw	__ccovbit2_111/(0+8)	; CC_ADDR
 29374  20B8  00000001           	ddw	1	; NUM_POINTS
 29375  20BC  00000001           	ddw	__ccovbit2_111& (0+7)	; OFFSET
 29376  20C0  00000000           	ddw	0	; Reserved
 29377  20C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29378  20C8  00000002           	ddw	2	; NUM_RANGES
 29379  20CC  00001C41           	ddw	__ccov530_start_blk2	; block 2 START_ADDR
 29380  20D0  00001C44           	ddw	__end_of_spd_uint_to_float	; block 2 END_ADDR
 29381  20D4  00001C19           	ddw	_spd_uint_to_float	; block 0 START_ADDR
 29382  20D8  00001C41           	ddw	__ccov529_end_blk0	; block 0 END_ADDR
 29383                           
 29384                           ; Function: spd_adc_to_u8, coverage: 2,0
 29385  20DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29386  20E0  00000125           	ddw	__ccovbit2_112/(0+8)	; CC_ADDR
 29387  20E4  00000001           	ddw	1	; NUM_POINTS
 29388  20E8  00000000           	ddw	__ccovbit2_112& (0+7)	; OFFSET
 29389  20EC  00000000           	ddw	0	; Reserved
 29390  20F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29391  20F4  00000002           	ddw	2	; NUM_RANGES
 29392  20F8  0000279D           	ddw	__ccov532_start_blk2	; block 2 START_ADDR
 29393  20FC  000027A0           	ddw	__end_of_spd_adc_to_u8	; block 2 END_ADDR
 29394  2100  00002794           	ddw	_spd_adc_to_u8	; block 0 START_ADDR
 29395  2104  0000279D           	ddw	__ccov531_end_blk0	; block 0 END_ADDR
 29396                           
 29397                           ; Function: frequency_calculation, coverage: 9,8,7,6,5,4,3,2,1,0
 29398  2108  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29399  210C  00000124           	ddw	__ccovbit9_113/(0+8)	; CC_ADDR
 29400  2110  00000001           	ddw	1	; NUM_POINTS
 29401  2114  00000007           	ddw	__ccovbit9_113& (0+7)	; OFFSET
 29402  2118  00000000           	ddw	0	; Reserved
 29403  211C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29404  2120  0000000A           	ddw	10	; NUM_RANGES
 29405  2124  000014F8           	ddw	__ccov542_start_blk9	; block 9 START_ADDR
 29406  2128  0000150B           	ddw	__ccov542_end_blk9	; block 9 END_ADDR
 29407  212C  000014DC           	ddw	__ccov541_start_blk8	; block 8 START_ADDR
 29408  2130  000014F8           	ddw	__ccov541_end_blk8	; block 8 END_ADDR
 29409  2134  000014D5           	ddw	__ccov540_start_blk7	; block 7 START_ADDR
 29410  2138  000014DC           	ddw	__ccov540_end_blk7	; block 7 END_ADDR
 29411  213C  000014BD           	ddw	__ccov539_start_blk6	; block 6 START_ADDR
 29412  2140  000014D5           	ddw	__ccov539_end_blk6	; block 6 END_ADDR
 29413  2144  000014B9           	ddw	__ccov538_start_blk5	; block 5 START_ADDR
 29414  2148  000014BD           	ddw	__ccov538_end_blk5	; block 5 END_ADDR
 29415  214C  000014A8           	ddw	__ccov537_start_blk4	; block 4 START_ADDR
 29416  2150  000014B9           	ddw	__ccov537_end_blk4	; block 4 END_ADDR
 29417  2154  00001464           	ddw	__ccov536_start_blk3	; block 3 START_ADDR
 29418  2158  000014A8           	ddw	__ccov536_end_blk3	; block 3 END_ADDR
 29419  215C  0000145C           	ddw	__ccov535_start_blk2	; block 2 START_ADDR
 29420  2160  00001464           	ddw	__ccov535_end_blk2	; block 2 END_ADDR
 29421  2164  00001459           	ddw	__ccov534_start_blk1	; block 1 START_ADDR
 29422  2168  0000145C           	ddw	__ccov534_end_blk1	; block 1 END_ADDR
 29423  216C  00001451           	ddw	_frequency_calculation	; block 0 START_ADDR
 29424  2170  00001459           	ddw	__ccov533_end_blk0	; block 0 END_ADDR
 29425                           
 29426                           ; Function: frequency_calculation, coverage: 11,2,1,0
 29427  2174  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29428  2178  00000124           	ddw	__ccovbit11_114/(0+8)	; CC_ADDR
 29429  217C  00000001           	ddw	1	; NUM_POINTS
 29430  2180  00000006           	ddw	__ccovbit11_114& (0+7)	; OFFSET
 29431  2184  00000000           	ddw	0	; Reserved
 29432  2188  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29433  218C  00000004           	ddw	4	; NUM_RANGES
 29434  2190  0000150B           	ddw	__ccov543_start_blk11	; block 11 START_ADDR
 29435  2194  00001513           	ddw	__ccov543_end_blk11	; block 11 END_ADDR
 29436  2198  0000145C           	ddw	__ccov535_start_blk2	; block 2 START_ADDR
 29437  219C  00001464           	ddw	__ccov535_end_blk2	; block 2 END_ADDR
 29438  21A0  00001459           	ddw	__ccov534_start_blk1	; block 1 START_ADDR
 29439  21A4  0000145C           	ddw	__ccov534_end_blk1	; block 1 END_ADDR
 29440  21A8  00001451           	ddw	_frequency_calculation	; block 0 START_ADDR
 29441  21AC  00001459           	ddw	__ccov533_end_blk0	; block 0 END_ADDR
 29442                           
 29443                           ; Function: frequency_calculation, coverage: 14,13,12,11,2,1,0
 29444  21B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29445  21B4  00000124           	ddw	__ccovbit14_115/(0+8)	; CC_ADDR
 29446  21B8  00000001           	ddw	1	; NUM_POINTS
 29447  21BC  00000005           	ddw	__ccovbit14_115& (0+7)	; OFFSET
 29448  21C0  00000000           	ddw	0	; Reserved
 29449  21C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29450  21C8  00000007           	ddw	7	; NUM_RANGES
 29451  21CC  0000151C           	ddw	__ccov546_start_blk14	; block 14 START_ADDR
 29452  21D0  00001525           	ddw	__ccov546_end_blk14	; block 14 END_ADDR
 29453  21D4  00001518           	ddw	__ccov545_start_blk13	; block 13 START_ADDR
 29454  21D8  0000151C           	ddw	__ccov545_end_blk13	; block 13 END_ADDR
 29455  21DC  00001513           	ddw	__ccov544_start_blk12	; block 12 START_ADDR
 29456  21E0  00001518           	ddw	__ccov544_end_blk12	; block 12 END_ADDR
 29457  21E4  0000150B           	ddw	__ccov543_start_blk11	; block 11 START_ADDR
 29458  21E8  00001513           	ddw	__ccov543_end_blk11	; block 11 END_ADDR
 29459  21EC  0000145C           	ddw	__ccov535_start_blk2	; block 2 START_ADDR
 29460  21F0  00001464           	ddw	__ccov535_end_blk2	; block 2 END_ADDR
 29461  21F4  00001459           	ddw	__ccov534_start_blk1	; block 1 START_ADDR
 29462  21F8  0000145C           	ddw	__ccov534_end_blk1	; block 1 END_ADDR
 29463  21FC  00001451           	ddw	_frequency_calculation	; block 0 START_ADDR
 29464  2200  00001459           	ddw	__ccov533_end_blk0	; block 0 END_ADDR
 29465                           
 29466                           ; Function: frequency_calculation, coverage: 17,2,1,0
 29467  2204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29468  2208  00000124           	ddw	__ccovbit17_116/(0+8)	; CC_ADDR
 29469  220C  00000001           	ddw	1	; NUM_POINTS
 29470  2210  00000004           	ddw	__ccovbit17_116& (0+7)	; OFFSET
 29471  2214  00000000           	ddw	0	; Reserved
 29472  2218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29473  221C  00000004           	ddw	4	; NUM_RANGES
 29474  2220  00001525           	ddw	__ccov547_start_blk17	; block 17 START_ADDR
 29475  2224  00001528           	ddw	__end_of_frequency_calculation	; block 17 END_ADDR
 29476  2228  0000145C           	ddw	__ccov535_start_blk2	; block 2 START_ADDR
 29477  222C  00001464           	ddw	__ccov535_end_blk2	; block 2 END_ADDR
 29478  2230  00001459           	ddw	__ccov534_start_blk1	; block 1 START_ADDR
 29479  2234  0000145C           	ddw	__ccov534_end_blk1	; block 1 END_ADDR
 29480  2238  00001451           	ddw	_frequency_calculation	; block 0 START_ADDR
 29481  223C  00001459           	ddw	__ccov533_end_blk0	; block 0 END_ADDR
 29482                           
 29483                           ; Function: spd_test_pwm, coverage: 2,1,0
 29484  2240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29485  2244  00000124           	ddw	__ccovbit2_117/(0+8)	; CC_ADDR
 29486  2248  00000001           	ddw	1	; NUM_POINTS
 29487  224C  00000003           	ddw	__ccovbit2_117& (0+7)	; OFFSET
 29488  2250  00000000           	ddw	0	; Reserved
 29489  2254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29490  2258  00000003           	ddw	3	; NUM_RANGES
 29491  225C  00000812           	ddw	__ccov550_start_blk2	; block 2 START_ADDR
 29492  2260  00000819           	ddw	__ccov550_end_blk2	; block 2 END_ADDR
 29493  2264  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29494  2268  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29495  226C  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29496  2270  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29497                           
 29498                           ; Function: spd_test_pwm, coverage: 4,1,0
 29499  2274  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29500  2278  00000124           	ddw	__ccovbit4_118/(0+8)	; CC_ADDR
 29501  227C  00000001           	ddw	1	; NUM_POINTS
 29502  2280  00000002           	ddw	__ccovbit4_118& (0+7)	; OFFSET
 29503  2284  00000000           	ddw	0	; Reserved
 29504  2288  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29505  228C  00000003           	ddw	3	; NUM_RANGES
 29506  2290  00000819           	ddw	__ccov551_start_blk4	; block 4 START_ADDR
 29507  2294  0000081D           	ddw	__ccov551_end_blk4	; block 4 END_ADDR
 29508  2298  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29509  229C  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29510  22A0  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29511  22A4  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29512                           
 29513                           ; Function: spd_test_pwm, coverage: 6,5,1,0
 29514  22A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29515  22AC  00000124           	ddw	__ccovbit6_119/(0+8)	; CC_ADDR
 29516  22B0  00000001           	ddw	1	; NUM_POINTS
 29517  22B4  00000001           	ddw	__ccovbit6_119& (0+7)	; OFFSET
 29518  22B8  00000000           	ddw	0	; Reserved
 29519  22BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29520  22C0  00000004           	ddw	4	; NUM_RANGES
 29521  22C4  00000822           	ddw	__ccov553_start_blk6	; block 6 START_ADDR
 29522  22C8  00000826           	ddw	__ccov553_end_blk6	; block 6 END_ADDR
 29523  22CC  0000081D           	ddw	__ccov552_start_blk5	; block 5 START_ADDR
 29524  22D0  00000822           	ddw	__ccov552_end_blk5	; block 5 END_ADDR
 29525  22D4  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29526  22D8  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29527  22DC  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29528  22E0  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29529                           
 29530                           ; Function: spd_test_pwm, coverage: 8,5,1,0
 29531  22E4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29532  22E8  00000124           	ddw	__ccovbit8_120/(0+8)	; CC_ADDR
 29533  22EC  00000001           	ddw	1	; NUM_POINTS
 29534  22F0  00000000           	ddw	__ccovbit8_120& (0+7)	; OFFSET
 29535  22F4  00000000           	ddw	0	; Reserved
 29536  22F8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29537  22FC  00000004           	ddw	4	; NUM_RANGES
 29538  2300  00000826           	ddw	__ccov554_start_blk8	; block 8 START_ADDR
 29539  2304  0000082E           	ddw	__ccov554_end_blk8	; block 8 END_ADDR
 29540  2308  0000081D           	ddw	__ccov552_start_blk5	; block 5 START_ADDR
 29541  230C  00000822           	ddw	__ccov552_end_blk5	; block 5 END_ADDR
 29542  2310  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29543  2314  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29544  2318  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29545  231C  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29546                           
 29547                           ; Function: spd_test_pwm, coverage: 9,8,5,1,0
 29548  2320  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29549  2324  00000123           	ddw	__ccovbit9_121/(0+8)	; CC_ADDR
 29550  2328  00000001           	ddw	1	; NUM_POINTS
 29551  232C  00000007           	ddw	__ccovbit9_121& (0+7)	; OFFSET
 29552  2330  00000000           	ddw	0	; Reserved
 29553  2334  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29554  2338  00000005           	ddw	5	; NUM_RANGES
 29555  233C  0000082E           	ddw	__ccov555_start_blk9	; block 9 START_ADDR
 29556  2340  00000832           	ddw	__ccov555_end_blk9	; block 9 END_ADDR
 29557  2344  00000826           	ddw	__ccov554_start_blk8	; block 8 START_ADDR
 29558  2348  0000082E           	ddw	__ccov554_end_blk8	; block 8 END_ADDR
 29559  234C  0000081D           	ddw	__ccov552_start_blk5	; block 5 START_ADDR
 29560  2350  00000822           	ddw	__ccov552_end_blk5	; block 5 END_ADDR
 29561  2354  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29562  2358  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29563  235C  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29564  2360  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29565                           
 29566                           ; Function: spd_test_pwm, coverage: 14,13,12,5,1,0
 29567  2364  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29568  2368  00000123           	ddw	__ccovbit14_122/(0+8)	; CC_ADDR
 29569  236C  00000001           	ddw	1	; NUM_POINTS
 29570  2370  00000006           	ddw	__ccovbit14_122& (0+7)	; OFFSET
 29571  2374  00000000           	ddw	0	; Reserved
 29572  2378  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29573  237C  00000006           	ddw	6	; NUM_RANGES
 29574  2380  00000839           	ddw	__ccov558_start_blk14	; block 14 START_ADDR
 29575  2384  00000853           	ddw	__ccov558_end_blk14	; block 14 END_ADDR
 29576  2388  00000834           	ddw	__ccov557_start_blk13	; block 13 START_ADDR
 29577  238C  00000839           	ddw	__ccov557_end_blk13	; block 13 END_ADDR
 29578  2390  00000832           	ddw	__ccov556_start_blk12	; block 12 START_ADDR
 29579  2394  00000834           	ddw	__ccov556_end_blk12	; block 12 END_ADDR
 29580  2398  0000081D           	ddw	__ccov552_start_blk5	; block 5 START_ADDR
 29581  239C  00000822           	ddw	__ccov552_end_blk5	; block 5 END_ADDR
 29582  23A0  0000080D           	ddw	__ccov549_start_blk1	; block 1 START_ADDR
 29583  23A4  00000812           	ddw	__ccov549_end_blk1	; block 1 END_ADDR
 29584  23A8  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29585  23AC  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29586                           
 29587                           ; Function: spd_test_pwm, coverage: 16,0
 29588  23B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29589  23B4  00000123           	ddw	__ccovbit16_123/(0+8)	; CC_ADDR
 29590  23B8  00000001           	ddw	1	; NUM_POINTS
 29591  23BC  00000005           	ddw	__ccovbit16_123& (0+7)	; OFFSET
 29592  23C0  00000000           	ddw	0	; Reserved
 29593  23C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29594  23C8  00000002           	ddw	2	; NUM_RANGES
 29595  23CC  00000853           	ddw	__ccov559_start_blk16	; block 16 START_ADDR
 29596  23D0  0000085A           	ddw	__ccov559_end_blk16	; block 16 END_ADDR
 29597  23D4  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29598  23D8  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29599                           
 29600                           ; Function: spd_test_pwm, coverage: 18,0
 29601  23DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29602  23E0  00000123           	ddw	__ccovbit18_124/(0+8)	; CC_ADDR
 29603  23E4  00000001           	ddw	1	; NUM_POINTS
 29604  23E8  00000004           	ddw	__ccovbit18_124& (0+7)	; OFFSET
 29605  23EC  00000000           	ddw	0	; Reserved
 29606  23F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29607  23F4  00000002           	ddw	2	; NUM_RANGES
 29608  23F8  0000085A           	ddw	__ccov560_start_blk18	; block 18 START_ADDR
 29609  23FC  0000085D           	ddw	__end_of_spd_test_pwm	; block 18 END_ADDR
 29610  2400  00000806           	ddw	_spd_test_pwm	; block 0 START_ADDR
 29611  2404  0000080D           	ddw	__ccov548_end_blk0	; block 0 END_ADDR
 29612                           
 29613                           ; Function: spd_k_calibration, coverage: 3,2,1,0
 29614  2408  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29615  240C  00000123           	ddw	__ccovbit3_125/(0+8)	; CC_ADDR
 29616  2410  00000001           	ddw	1	; NUM_POINTS
 29617  2414  00000003           	ddw	__ccovbit3_125& (0+7)	; OFFSET
 29618  2418  00000000           	ddw	0	; Reserved
 29619  241C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29620  2420  00000004           	ddw	4	; NUM_RANGES
 29621  2424  00001CD2           	ddw	__ccov564_start_blk3	; block 3 START_ADDR
 29622  2428  00001CD4           	ddw	__end_of_spd_k_calibration	; block 3 END_ADDR
 29623  242C  00001CB2           	ddw	__ccov563_start_blk2	; block 2 START_ADDR
 29624  2430  00001CD2           	ddw	__ccov563_end_blk2	; block 2 END_ADDR
 29625  2434  00001CA9           	ddw	__ccov562_start_blk1	; block 1 START_ADDR
 29626  2438  00001CB2           	ddw	__ccov562_end_blk1	; block 1 END_ADDR
 29627  243C  00001CA2           	ddw	_spd_k_calibration	; block 0 START_ADDR
 29628  2440  00001CA9           	ddw	__ccov561_end_blk0	; block 0 END_ADDR
 29629                           
 29630                           ; Function: spd_a_calibration, coverage: 3,2,1,0
 29631  2444  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29632  2448  00000123           	ddw	__ccovbit3_126/(0+8)	; CC_ADDR
 29633  244C  00000001           	ddw	1	; NUM_POINTS
 29634  2450  00000002           	ddw	__ccovbit3_126& (0+7)	; OFFSET
 29635  2454  00000000           	ddw	0	; Reserved
 29636  2458  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29637  245C  00000004           	ddw	4	; NUM_RANGES
 29638  2460  00001B96           	ddw	__ccov568_start_blk3	; block 3 START_ADDR
 29639  2464  00001B98           	ddw	__end_of_spd_a_calibration	; block 3 END_ADDR
 29640  2468  00001B81           	ddw	__ccov567_start_blk2	; block 2 START_ADDR
 29641  246C  00001B96           	ddw	__ccov567_end_blk2	; block 2 END_ADDR
 29642  2470  00001B78           	ddw	__ccov566_start_blk1	; block 1 START_ADDR
 29643  2474  00001B81           	ddw	__ccov566_end_blk1	; block 1 END_ADDR
 29644  2478  00001B71           	ddw	_spd_a_calibration	; block 0 START_ADDR
 29645  247C  00001B78           	ddw	__ccov565_end_blk0	; block 0 END_ADDR
 29646                           
 29647                           ; Function: eeprom_read_error_handler, coverage: 1,0
 29648  2480  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29649  2484  00000123           	ddw	__ccovbit1_127/(0+8)	; CC_ADDR
 29650  2488  00000001           	ddw	1	; NUM_POINTS
 29651  248C  00000001           	ddw	__ccovbit1_127& (0+7)	; OFFSET
 29652  2490  00000000           	ddw	0	; Reserved
 29653  2494  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29654  2498  00000002           	ddw	2	; NUM_RANGES
 29655  249C  000027B7           	ddw	__ccov570_start_blk1	; block 1 START_ADDR
 29656  24A0  000027BD           	ddw	__end_of_eeprom_read_error_handler	; block 1 END_ADDR
 29657  24A4  000027AE           	ddw	_eeprom_read_error_handler	; block 0 START_ADDR
 29658  24A8  000027B7           	ddw	__ccov569_end_blk0	; block 0 END_ADDR
 29659                           
 29660                           ; Function: read_correction, coverage: 9,8,7,3,2,79,0
 29661  24AC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29662  24B0  00000123           	ddw	__ccovbit9_128/(0+8)	; CC_ADDR
 29663  24B4  00000001           	ddw	1	; NUM_POINTS
 29664  24B8  00000000           	ddw	__ccovbit9_128& (0+7)	; OFFSET
 29665  24BC  00000000           	ddw	0	; Reserved
 29666  24C0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29667  24C4  00000007           	ddw	7	; NUM_RANGES
 29668  24C8  00000E8F           	ddw	__ccov576_start_blk9	; block 9 START_ADDR
 29669  24CC  00000E98           	ddw	__ccov576_end_blk9	; block 9 END_ADDR
 29670  24D0  00000E8B           	ddw	__ccov575_start_blk8	; block 8 START_ADDR
 29671  24D4  00000E8F           	ddw	__ccov575_end_blk8	; block 8 END_ADDR
 29672  24D8  00000E79           	ddw	__ccov574_start_blk7	; block 7 START_ADDR
 29673  24DC  00000E8B           	ddw	__ccov574_end_blk7	; block 7 END_ADDR
 29674  24E0  00000E78           	ddw	__ccov573_start_blk3	; block 3 START_ADDR
 29675  24E4  00000E79           	ddw	__ccov573_end_blk3	; block 3 END_ADDR
 29676  24E8  00000E74           	ddw	__ccov572_start_blk2	; block 2 START_ADDR
 29677  24EC  00000E78           	ddw	__ccov572_end_blk2	; block 2 END_ADDR
 29678  24F0  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29679  24F4  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29680  24F8  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29681  24FC  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29682                           
 29683                           ; Function: read_correction, coverage: 18,17,16,12,11,9,8,7,3,2,79,0
 29684  2500  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29685  2504  00000122           	ddw	__ccovbit18_129/(0+8)	; CC_ADDR
 29686  2508  00000001           	ddw	1	; NUM_POINTS
 29687  250C  00000007           	ddw	__ccovbit18_129& (0+7)	; OFFSET
 29688  2510  00000000           	ddw	0	; Reserved
 29689  2514  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29690  2518  0000000C           	ddw	12	; NUM_RANGES
 29691  251C  00000EBD           	ddw	__ccov581_start_blk18	; block 18 START_ADDR
 29692  2520  00000EC6           	ddw	__ccov581_end_blk18	; block 18 END_ADDR
 29693  2524  00000EB9           	ddw	__ccov580_start_blk17	; block 17 START_ADDR
 29694  2528  00000EBD           	ddw	__ccov580_end_blk17	; block 17 END_ADDR
 29695  252C  00000EA1           	ddw	__ccov579_start_blk16	; block 16 START_ADDR
 29696  2530  00000EB9           	ddw	__ccov579_end_blk16	; block 16 END_ADDR
 29697  2534  00000EA0           	ddw	__ccov578_start_blk12	; block 12 START_ADDR
 29698  2538  00000EA1           	ddw	__ccov578_end_blk12	; block 12 END_ADDR
 29699  253C  00000E98           	ddw	__ccov577_start_blk11	; block 11 START_ADDR
 29700  2540  00000EA0           	ddw	__ccov577_end_blk11	; block 11 END_ADDR
 29701  2544  00000E8F           	ddw	__ccov576_start_blk9	; block 9 START_ADDR
 29702  2548  00000E98           	ddw	__ccov576_end_blk9	; block 9 END_ADDR
 29703  254C  00000E8B           	ddw	__ccov575_start_blk8	; block 8 START_ADDR
 29704  2550  00000E8F           	ddw	__ccov575_end_blk8	; block 8 END_ADDR
 29705  2554  00000E79           	ddw	__ccov574_start_blk7	; block 7 START_ADDR
 29706  2558  00000E8B           	ddw	__ccov574_end_blk7	; block 7 END_ADDR
 29707  255C  00000E78           	ddw	__ccov573_start_blk3	; block 3 START_ADDR
 29708  2560  00000E79           	ddw	__ccov573_end_blk3	; block 3 END_ADDR
 29709  2564  00000E74           	ddw	__ccov572_start_blk2	; block 2 START_ADDR
 29710  2568  00000E78           	ddw	__ccov572_end_blk2	; block 2 END_ADDR
 29711  256C  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29712  2570  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29713  2574  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29714  2578  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29715                           
 29716                           ; Function: read_correction, coverage: 20,18,17,16,12,11,9,8,7,3,2,79,0
 29717  257C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29718  2580  00000122           	ddw	__ccovbit20_130/(0+8)	; CC_ADDR
 29719  2584  00000001           	ddw	1	; NUM_POINTS
 29720  2588  00000006           	ddw	__ccovbit20_130& (0+7)	; OFFSET
 29721  258C  00000000           	ddw	0	; Reserved
 29722  2590  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29723  2594  0000000D           	ddw	13	; NUM_RANGES
 29724  2598  00000EC6           	ddw	__ccov582_start_blk20	; block 20 START_ADDR
 29725  259C  00000EE0           	ddw	__ccov582_end_blk20	; block 20 END_ADDR
 29726  25A0  00000EBD           	ddw	__ccov581_start_blk18	; block 18 START_ADDR
 29727  25A4  00000EC6           	ddw	__ccov581_end_blk18	; block 18 END_ADDR
 29728  25A8  00000EB9           	ddw	__ccov580_start_blk17	; block 17 START_ADDR
 29729  25AC  00000EBD           	ddw	__ccov580_end_blk17	; block 17 END_ADDR
 29730  25B0  00000EA1           	ddw	__ccov579_start_blk16	; block 16 START_ADDR
 29731  25B4  00000EB9           	ddw	__ccov579_end_blk16	; block 16 END_ADDR
 29732  25B8  00000EA0           	ddw	__ccov578_start_blk12	; block 12 START_ADDR
 29733  25BC  00000EA1           	ddw	__ccov578_end_blk12	; block 12 END_ADDR
 29734  25C0  00000E98           	ddw	__ccov577_start_blk11	; block 11 START_ADDR
 29735  25C4  00000EA0           	ddw	__ccov577_end_blk11	; block 11 END_ADDR
 29736  25C8  00000E8F           	ddw	__ccov576_start_blk9	; block 9 START_ADDR
 29737  25CC  00000E98           	ddw	__ccov576_end_blk9	; block 9 END_ADDR
 29738  25D0  00000E8B           	ddw	__ccov575_start_blk8	; block 8 START_ADDR
 29739  25D4  00000E8F           	ddw	__ccov575_end_blk8	; block 8 END_ADDR
 29740  25D8  00000E79           	ddw	__ccov574_start_blk7	; block 7 START_ADDR
 29741  25DC  00000E8B           	ddw	__ccov574_end_blk7	; block 7 END_ADDR
 29742  25E0  00000E78           	ddw	__ccov573_start_blk3	; block 3 START_ADDR
 29743  25E4  00000E79           	ddw	__ccov573_end_blk3	; block 3 END_ADDR
 29744  25E8  00000E74           	ddw	__ccov572_start_blk2	; block 2 START_ADDR
 29745  25EC  00000E78           	ddw	__ccov572_end_blk2	; block 2 END_ADDR
 29746  25F0  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29747  25F4  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29748  25F8  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29749  25FC  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29750                           
 29751                           ; Function: read_correction, coverage: 21,79,0
 29752  2600  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29753  2604  00000122           	ddw	__ccovbit21_131/(0+8)	; CC_ADDR
 29754  2608  00000001           	ddw	1	; NUM_POINTS
 29755  260C  00000005           	ddw	__ccovbit21_131& (0+7)	; OFFSET
 29756  2610  00000000           	ddw	0	; Reserved
 29757  2614  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29758  2618  00000003           	ddw	3	; NUM_RANGES
 29759  261C  00000EE0           	ddw	__ccov583_start_blk21	; block 21 START_ADDR
 29760  2620  00000EE6           	ddw	__ccov583_end_blk21	; block 21 END_ADDR
 29761  2624  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29762  2628  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29763  262C  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29764  2630  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29765                           
 29766                           ; Function: read_correction, coverage: 23,20,18,17,16,12,11,9,8,7,3,2,79,0
 29767  2634  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29768  2638  00000122           	ddw	__ccovbit23_132/(0+8)	; CC_ADDR
 29769  263C  00000001           	ddw	1	; NUM_POINTS
 29770  2640  00000004           	ddw	__ccovbit23_132& (0+7)	; OFFSET
 29771  2644  00000000           	ddw	0	; Reserved
 29772  2648  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29773  264C  0000000E           	ddw	14	; NUM_RANGES
 29774  2650  00000EE6           	ddw	__ccov584_start_blk23	; block 23 START_ADDR
 29775  2654  00000EF0           	ddw	__ccov584_end_blk23	; block 23 END_ADDR
 29776  2658  00000EC6           	ddw	__ccov582_start_blk20	; block 20 START_ADDR
 29777  265C  00000EE0           	ddw	__ccov582_end_blk20	; block 20 END_ADDR
 29778  2660  00000EBD           	ddw	__ccov581_start_blk18	; block 18 START_ADDR
 29779  2664  00000EC6           	ddw	__ccov581_end_blk18	; block 18 END_ADDR
 29780  2668  00000EB9           	ddw	__ccov580_start_blk17	; block 17 START_ADDR
 29781  266C  00000EBD           	ddw	__ccov580_end_blk17	; block 17 END_ADDR
 29782  2670  00000EA1           	ddw	__ccov579_start_blk16	; block 16 START_ADDR
 29783  2674  00000EB9           	ddw	__ccov579_end_blk16	; block 16 END_ADDR
 29784  2678  00000EA0           	ddw	__ccov578_start_blk12	; block 12 START_ADDR
 29785  267C  00000EA1           	ddw	__ccov578_end_blk12	; block 12 END_ADDR
 29786  2680  00000E98           	ddw	__ccov577_start_blk11	; block 11 START_ADDR
 29787  2684  00000EA0           	ddw	__ccov577_end_blk11	; block 11 END_ADDR
 29788  2688  00000E8F           	ddw	__ccov576_start_blk9	; block 9 START_ADDR
 29789  268C  00000E98           	ddw	__ccov576_end_blk9	; block 9 END_ADDR
 29790  2690  00000E8B           	ddw	__ccov575_start_blk8	; block 8 START_ADDR
 29791  2694  00000E8F           	ddw	__ccov575_end_blk8	; block 8 END_ADDR
 29792  2698  00000E79           	ddw	__ccov574_start_blk7	; block 7 START_ADDR
 29793  269C  00000E8B           	ddw	__ccov574_end_blk7	; block 7 END_ADDR
 29794  26A0  00000E78           	ddw	__ccov573_start_blk3	; block 3 START_ADDR
 29795  26A4  00000E79           	ddw	__ccov573_end_blk3	; block 3 END_ADDR
 29796  26A8  00000E74           	ddw	__ccov572_start_blk2	; block 2 START_ADDR
 29797  26AC  00000E78           	ddw	__ccov572_end_blk2	; block 2 END_ADDR
 29798  26B0  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29799  26B4  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29800  26B8  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29801  26BC  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29802                           
 29803                           ; Function: read_correction, coverage: 24,79,0
 29804  26C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29805  26C4  00000122           	ddw	__ccovbit24_133/(0+8)	; CC_ADDR
 29806  26C8  00000001           	ddw	1	; NUM_POINTS
 29807  26CC  00000003           	ddw	__ccovbit24_133& (0+7)	; OFFSET
 29808  26D0  00000000           	ddw	0	; Reserved
 29809  26D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29810  26D8  00000003           	ddw	3	; NUM_RANGES
 29811  26DC  00000EF0           	ddw	__ccov585_start_blk24	; block 24 START_ADDR
 29812  26E0  00000EF8           	ddw	__ccov585_end_blk24	; block 24 END_ADDR
 29813  26E4  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29814  26E8  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29815  26EC  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29816  26F0  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29817                           
 29818                           ; Function: read_correction, coverage: 34,33,32,28,27,79,0
 29819  26F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29820  26F8  00000122           	ddw	__ccovbit34_134/(0+8)	; CC_ADDR
 29821  26FC  00000001           	ddw	1	; NUM_POINTS
 29822  2700  00000002           	ddw	__ccovbit34_134& (0+7)	; OFFSET
 29823  2704  00000000           	ddw	0	; Reserved
 29824  2708  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29825  270C  00000007           	ddw	7	; NUM_RANGES
 29826  2710  00000F13           	ddw	__ccov590_start_blk34	; block 34 START_ADDR
 29827  2714  00000F1C           	ddw	__ccov590_end_blk34	; block 34 END_ADDR
 29828  2718  00000F0F           	ddw	__ccov589_start_blk33	; block 33 START_ADDR
 29829  271C  00000F13           	ddw	__ccov589_end_blk33	; block 33 END_ADDR
 29830  2720  00000EFD           	ddw	__ccov588_start_blk32	; block 32 START_ADDR
 29831  2724  00000F0F           	ddw	__ccov588_end_blk32	; block 32 END_ADDR
 29832  2728  00000EFC           	ddw	__ccov587_start_blk28	; block 28 START_ADDR
 29833  272C  00000EFD           	ddw	__ccov587_end_blk28	; block 28 END_ADDR
 29834  2730  00000EF8           	ddw	__ccov586_start_blk27	; block 27 START_ADDR
 29835  2734  00000EFC           	ddw	__ccov586_end_blk27	; block 27 END_ADDR
 29836  2738  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29837  273C  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29838  2740  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29839  2744  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29840                           
 29841                           ; Function: read_correction, coverage: 43,42,41,37,36,34,33,32,28,27,79,0
 29842  2748  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29843  274C  00000122           	ddw	__ccovbit43_135/(0+8)	; CC_ADDR
 29844  2750  00000001           	ddw	1	; NUM_POINTS
 29845  2754  00000001           	ddw	__ccovbit43_135& (0+7)	; OFFSET
 29846  2758  00000000           	ddw	0	; Reserved
 29847  275C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29848  2760  0000000C           	ddw	12	; NUM_RANGES
 29849  2764  00000F3D           	ddw	__ccov595_start_blk43	; block 43 START_ADDR
 29850  2768  00000F46           	ddw	__ccov595_end_blk43	; block 43 END_ADDR
 29851  276C  00000F39           	ddw	__ccov594_start_blk42	; block 42 START_ADDR
 29852  2770  00000F3D           	ddw	__ccov594_end_blk42	; block 42 END_ADDR
 29853  2774  00000F21           	ddw	__ccov593_start_blk41	; block 41 START_ADDR
 29854  2778  00000F39           	ddw	__ccov593_end_blk41	; block 41 END_ADDR
 29855  277C  00000F20           	ddw	__ccov592_start_blk37	; block 37 START_ADDR
 29856  2780  00000F21           	ddw	__ccov592_end_blk37	; block 37 END_ADDR
 29857  2784  00000F1C           	ddw	__ccov591_start_blk36	; block 36 START_ADDR
 29858  2788  00000F20           	ddw	__ccov591_end_blk36	; block 36 END_ADDR
 29859  278C  00000F13           	ddw	__ccov590_start_blk34	; block 34 START_ADDR
 29860  2790  00000F1C           	ddw	__ccov590_end_blk34	; block 34 END_ADDR
 29861  2794  00000F0F           	ddw	__ccov589_start_blk33	; block 33 START_ADDR
 29862  2798  00000F13           	ddw	__ccov589_end_blk33	; block 33 END_ADDR
 29863  279C  00000EFD           	ddw	__ccov588_start_blk32	; block 32 START_ADDR
 29864  27A0  00000F0F           	ddw	__ccov588_end_blk32	; block 32 END_ADDR
 29865  27A4  00000EFC           	ddw	__ccov587_start_blk28	; block 28 START_ADDR
 29866  27A8  00000EFD           	ddw	__ccov587_end_blk28	; block 28 END_ADDR
 29867  27AC  00000EF8           	ddw	__ccov586_start_blk27	; block 27 START_ADDR
 29868  27B0  00000EFC           	ddw	__ccov586_end_blk27	; block 27 END_ADDR
 29869  27B4  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29870  27B8  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29871  27BC  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29872  27C0  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29873                           
 29874                           ; Function: read_correction, coverage: 45,43,42,41,37,36,34,33,32,28,27,79,0
 29875  27C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29876  27C8  00000122           	ddw	__ccovbit45_136/(0+8)	; CC_ADDR
 29877  27CC  00000001           	ddw	1	; NUM_POINTS
 29878  27D0  00000000           	ddw	__ccovbit45_136& (0+7)	; OFFSET
 29879  27D4  00000000           	ddw	0	; Reserved
 29880  27D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29881  27DC  0000000D           	ddw	13	; NUM_RANGES
 29882  27E0  00000F46           	ddw	__ccov596_start_blk45	; block 45 START_ADDR
 29883  27E4  00000F54           	ddw	__ccov596_end_blk45	; block 45 END_ADDR
 29884  27E8  00000F3D           	ddw	__ccov595_start_blk43	; block 43 START_ADDR
 29885  27EC  00000F46           	ddw	__ccov595_end_blk43	; block 43 END_ADDR
 29886  27F0  00000F39           	ddw	__ccov594_start_blk42	; block 42 START_ADDR
 29887  27F4  00000F3D           	ddw	__ccov594_end_blk42	; block 42 END_ADDR
 29888  27F8  00000F21           	ddw	__ccov593_start_blk41	; block 41 START_ADDR
 29889  27FC  00000F39           	ddw	__ccov593_end_blk41	; block 41 END_ADDR
 29890  2800  00000F20           	ddw	__ccov592_start_blk37	; block 37 START_ADDR
 29891  2804  00000F21           	ddw	__ccov592_end_blk37	; block 37 END_ADDR
 29892  2808  00000F1C           	ddw	__ccov591_start_blk36	; block 36 START_ADDR
 29893  280C  00000F20           	ddw	__ccov591_end_blk36	; block 36 END_ADDR
 29894  2810  00000F13           	ddw	__ccov590_start_blk34	; block 34 START_ADDR
 29895  2814  00000F1C           	ddw	__ccov590_end_blk34	; block 34 END_ADDR
 29896  2818  00000F0F           	ddw	__ccov589_start_blk33	; block 33 START_ADDR
 29897  281C  00000F13           	ddw	__ccov589_end_blk33	; block 33 END_ADDR
 29898  2820  00000EFD           	ddw	__ccov588_start_blk32	; block 32 START_ADDR
 29899  2824  00000F0F           	ddw	__ccov588_end_blk32	; block 32 END_ADDR
 29900  2828  00000EFC           	ddw	__ccov587_start_blk28	; block 28 START_ADDR
 29901  282C  00000EFD           	ddw	__ccov587_end_blk28	; block 28 END_ADDR
 29902  2830  00000EF8           	ddw	__ccov586_start_blk27	; block 27 START_ADDR
 29903  2834  00000EFC           	ddw	__ccov586_end_blk27	; block 27 END_ADDR
 29904  2838  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29905  283C  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29906  2840  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29907  2844  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29908                           
 29909                           ; Function: read_correction, coverage: 48,45,43,42,41,37,36,34,33,32,28,27,79,0
 29910  2848  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29911  284C  00000121           	ddw	__ccovbit48_137/(0+8)	; CC_ADDR
 29912  2850  00000001           	ddw	1	; NUM_POINTS
 29913  2854  00000007           	ddw	__ccovbit48_137& (0+7)	; OFFSET
 29914  2858  00000000           	ddw	0	; Reserved
 29915  285C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29916  2860  0000000E           	ddw	14	; NUM_RANGES
 29917  2864  00000F54           	ddw	__ccov597_start_blk48	; block 48 START_ADDR
 29918  2868  00000F5F           	ddw	__ccov597_end_blk48	; block 48 END_ADDR
 29919  286C  00000F46           	ddw	__ccov596_start_blk45	; block 45 START_ADDR
 29920  2870  00000F54           	ddw	__ccov596_end_blk45	; block 45 END_ADDR
 29921  2874  00000F3D           	ddw	__ccov595_start_blk43	; block 43 START_ADDR
 29922  2878  00000F46           	ddw	__ccov595_end_blk43	; block 43 END_ADDR
 29923  287C  00000F39           	ddw	__ccov594_start_blk42	; block 42 START_ADDR
 29924  2880  00000F3D           	ddw	__ccov594_end_blk42	; block 42 END_ADDR
 29925  2884  00000F21           	ddw	__ccov593_start_blk41	; block 41 START_ADDR
 29926  2888  00000F39           	ddw	__ccov593_end_blk41	; block 41 END_ADDR
 29927  288C  00000F20           	ddw	__ccov592_start_blk37	; block 37 START_ADDR
 29928  2890  00000F21           	ddw	__ccov592_end_blk37	; block 37 END_ADDR
 29929  2894  00000F1C           	ddw	__ccov591_start_blk36	; block 36 START_ADDR
 29930  2898  00000F20           	ddw	__ccov591_end_blk36	; block 36 END_ADDR
 29931  289C  00000F13           	ddw	__ccov590_start_blk34	; block 34 START_ADDR
 29932  28A0  00000F1C           	ddw	__ccov590_end_blk34	; block 34 END_ADDR
 29933  28A4  00000F0F           	ddw	__ccov589_start_blk33	; block 33 START_ADDR
 29934  28A8  00000F13           	ddw	__ccov589_end_blk33	; block 33 END_ADDR
 29935  28AC  00000EFD           	ddw	__ccov588_start_blk32	; block 32 START_ADDR
 29936  28B0  00000F0F           	ddw	__ccov588_end_blk32	; block 32 END_ADDR
 29937  28B4  00000EFC           	ddw	__ccov587_start_blk28	; block 28 START_ADDR
 29938  28B8  00000EFD           	ddw	__ccov587_end_blk28	; block 28 END_ADDR
 29939  28BC  00000EF8           	ddw	__ccov586_start_blk27	; block 27 START_ADDR
 29940  28C0  00000EFC           	ddw	__ccov586_end_blk27	; block 27 END_ADDR
 29941  28C4  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29942  28C8  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29943  28CC  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29944  28D0  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29945                           
 29946                           ; Function: read_correction, coverage: 59,58,57,53,52,79,0
 29947  28D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29948  28D8  00000121           	ddw	__ccovbit59_138/(0+8)	; CC_ADDR
 29949  28DC  00000001           	ddw	1	; NUM_POINTS
 29950  28E0  00000006           	ddw	__ccovbit59_138& (0+7)	; OFFSET
 29951  28E4  00000000           	ddw	0	; Reserved
 29952  28E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29953  28EC  00000007           	ddw	7	; NUM_RANGES
 29954  28F0  00000F7A           	ddw	__ccov602_start_blk59	; block 59 START_ADDR
 29955  28F4  00000F83           	ddw	__ccov602_end_blk59	; block 59 END_ADDR
 29956  28F8  00000F76           	ddw	__ccov601_start_blk58	; block 58 START_ADDR
 29957  28FC  00000F7A           	ddw	__ccov601_end_blk58	; block 58 END_ADDR
 29958  2900  00000F64           	ddw	__ccov600_start_blk57	; block 57 START_ADDR
 29959  2904  00000F76           	ddw	__ccov600_end_blk57	; block 57 END_ADDR
 29960  2908  00000F63           	ddw	__ccov599_start_blk53	; block 53 START_ADDR
 29961  290C  00000F64           	ddw	__ccov599_end_blk53	; block 53 END_ADDR
 29962  2910  00000F5F           	ddw	__ccov598_start_blk52	; block 52 START_ADDR
 29963  2914  00000F63           	ddw	__ccov598_end_blk52	; block 52 END_ADDR
 29964  2918  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29965  291C  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29966  2920  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 29967  2924  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 29968                           
 29969                           ; Function: read_correction, coverage: 68,67,66,62,61,59,58,57,53,52,79,0
 29970  2928  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 29971  292C  00000121           	ddw	__ccovbit68_139/(0+8)	; CC_ADDR
 29972  2930  00000001           	ddw	1	; NUM_POINTS
 29973  2934  00000005           	ddw	__ccovbit68_139& (0+7)	; OFFSET
 29974  2938  00000000           	ddw	0	; Reserved
 29975  293C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 29976  2940  0000000C           	ddw	12	; NUM_RANGES
 29977  2944  00000FA8           	ddw	__ccov607_start_blk68	; block 68 START_ADDR
 29978  2948  00000FB1           	ddw	__ccov607_end_blk68	; block 68 END_ADDR
 29979  294C  00000FA4           	ddw	__ccov606_start_blk67	; block 67 START_ADDR
 29980  2950  00000FA8           	ddw	__ccov606_end_blk67	; block 67 END_ADDR
 29981  2954  00000F8C           	ddw	__ccov605_start_blk66	; block 66 START_ADDR
 29982  2958  00000FA4           	ddw	__ccov605_end_blk66	; block 66 END_ADDR
 29983  295C  00000F8B           	ddw	__ccov604_start_blk62	; block 62 START_ADDR
 29984  2960  00000F8C           	ddw	__ccov604_end_blk62	; block 62 END_ADDR
 29985  2964  00000F83           	ddw	__ccov603_start_blk61	; block 61 START_ADDR
 29986  2968  00000F8B           	ddw	__ccov603_end_blk61	; block 61 END_ADDR
 29987  296C  00000F7A           	ddw	__ccov602_start_blk59	; block 59 START_ADDR
 29988  2970  00000F83           	ddw	__ccov602_end_blk59	; block 59 END_ADDR
 29989  2974  00000F76           	ddw	__ccov601_start_blk58	; block 58 START_ADDR
 29990  2978  00000F7A           	ddw	__ccov601_end_blk58	; block 58 END_ADDR
 29991  297C  00000F64           	ddw	__ccov600_start_blk57	; block 57 START_ADDR
 29992  2980  00000F76           	ddw	__ccov600_end_blk57	; block 57 END_ADDR
 29993  2984  00000F63           	ddw	__ccov599_start_blk53	; block 53 START_ADDR
 29994  2988  00000F64           	ddw	__ccov599_end_blk53	; block 53 END_ADDR
 29995  298C  00000F5F           	ddw	__ccov598_start_blk52	; block 52 START_ADDR
 29996  2990  00000F63           	ddw	__ccov598_end_blk52	; block 52 END_ADDR
 29997  2994  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 29998  2998  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 29999  299C  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 30000  29A0  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 30001                           
 30002                           ; Function: read_correction, coverage: 70,68,67,66,62,61,59,58,57,53,52,79,0
 30003  29A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30004  29A8  00000121           	ddw	__ccovbit70_140/(0+8)	; CC_ADDR
 30005  29AC  00000001           	ddw	1	; NUM_POINTS
 30006  29B0  00000004           	ddw	__ccovbit70_140& (0+7)	; OFFSET
 30007  29B4  00000000           	ddw	0	; Reserved
 30008  29B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30009  29BC  0000000D           	ddw	13	; NUM_RANGES
 30010  29C0  00000FB1           	ddw	__ccov608_start_blk70	; block 70 START_ADDR
 30011  29C4  00000FCC           	ddw	__ccov608_end_blk70	; block 70 END_ADDR
 30012  29C8  00000FA8           	ddw	__ccov607_start_blk68	; block 68 START_ADDR
 30013  29CC  00000FB1           	ddw	__ccov607_end_blk68	; block 68 END_ADDR
 30014  29D0  00000FA4           	ddw	__ccov606_start_blk67	; block 67 START_ADDR
 30015  29D4  00000FA8           	ddw	__ccov606_end_blk67	; block 67 END_ADDR
 30016  29D8  00000F8C           	ddw	__ccov605_start_blk66	; block 66 START_ADDR
 30017  29DC  00000FA4           	ddw	__ccov605_end_blk66	; block 66 END_ADDR
 30018  29E0  00000F8B           	ddw	__ccov604_start_blk62	; block 62 START_ADDR
 30019  29E4  00000F8C           	ddw	__ccov604_end_blk62	; block 62 END_ADDR
 30020  29E8  00000F83           	ddw	__ccov603_start_blk61	; block 61 START_ADDR
 30021  29EC  00000F8B           	ddw	__ccov603_end_blk61	; block 61 END_ADDR
 30022  29F0  00000F7A           	ddw	__ccov602_start_blk59	; block 59 START_ADDR
 30023  29F4  00000F83           	ddw	__ccov602_end_blk59	; block 59 END_ADDR
 30024  29F8  00000F76           	ddw	__ccov601_start_blk58	; block 58 START_ADDR
 30025  29FC  00000F7A           	ddw	__ccov601_end_blk58	; block 58 END_ADDR
 30026  2A00  00000F64           	ddw	__ccov600_start_blk57	; block 57 START_ADDR
 30027  2A04  00000F76           	ddw	__ccov600_end_blk57	; block 57 END_ADDR
 30028  2A08  00000F63           	ddw	__ccov599_start_blk53	; block 53 START_ADDR
 30029  2A0C  00000F64           	ddw	__ccov599_end_blk53	; block 53 END_ADDR
 30030  2A10  00000F5F           	ddw	__ccov598_start_blk52	; block 52 START_ADDR
 30031  2A14  00000F63           	ddw	__ccov598_end_blk52	; block 52 END_ADDR
 30032  2A18  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 30033  2A1C  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 30034  2A20  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 30035  2A24  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 30036                           
 30037                           ; Function: read_correction, coverage: 73,70,68,67,66,62,61,59,58,57,53,52,79,0
 30038  2A28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30039  2A2C  00000121           	ddw	__ccovbit73_141/(0+8)	; CC_ADDR
 30040  2A30  00000001           	ddw	1	; NUM_POINTS
 30041  2A34  00000003           	ddw	__ccovbit73_141& (0+7)	; OFFSET
 30042  2A38  00000000           	ddw	0	; Reserved
 30043  2A3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30044  2A40  0000000E           	ddw	14	; NUM_RANGES
 30045  2A44  00000FCC           	ddw	__ccov609_start_blk73	; block 73 START_ADDR
 30046  2A48  00000FD7           	ddw	__ccov609_end_blk73	; block 73 END_ADDR
 30047  2A4C  00000FB1           	ddw	__ccov608_start_blk70	; block 70 START_ADDR
 30048  2A50  00000FCC           	ddw	__ccov608_end_blk70	; block 70 END_ADDR
 30049  2A54  00000FA8           	ddw	__ccov607_start_blk68	; block 68 START_ADDR
 30050  2A58  00000FB1           	ddw	__ccov607_end_blk68	; block 68 END_ADDR
 30051  2A5C  00000FA4           	ddw	__ccov606_start_blk67	; block 67 START_ADDR
 30052  2A60  00000FA8           	ddw	__ccov606_end_blk67	; block 67 END_ADDR
 30053  2A64  00000F8C           	ddw	__ccov605_start_blk66	; block 66 START_ADDR
 30054  2A68  00000FA4           	ddw	__ccov605_end_blk66	; block 66 END_ADDR
 30055  2A6C  00000F8B           	ddw	__ccov604_start_blk62	; block 62 START_ADDR
 30056  2A70  00000F8C           	ddw	__ccov604_end_blk62	; block 62 END_ADDR
 30057  2A74  00000F83           	ddw	__ccov603_start_blk61	; block 61 START_ADDR
 30058  2A78  00000F8B           	ddw	__ccov603_end_blk61	; block 61 END_ADDR
 30059  2A7C  00000F7A           	ddw	__ccov602_start_blk59	; block 59 START_ADDR
 30060  2A80  00000F83           	ddw	__ccov602_end_blk59	; block 59 END_ADDR
 30061  2A84  00000F76           	ddw	__ccov601_start_blk58	; block 58 START_ADDR
 30062  2A88  00000F7A           	ddw	__ccov601_end_blk58	; block 58 END_ADDR
 30063  2A8C  00000F64           	ddw	__ccov600_start_blk57	; block 57 START_ADDR
 30064  2A90  00000F76           	ddw	__ccov600_end_blk57	; block 57 END_ADDR
 30065  2A94  00000F63           	ddw	__ccov599_start_blk53	; block 53 START_ADDR
 30066  2A98  00000F64           	ddw	__ccov599_end_blk53	; block 53 END_ADDR
 30067  2A9C  00000F5F           	ddw	__ccov598_start_blk52	; block 52 START_ADDR
 30068  2AA0  00000F63           	ddw	__ccov598_end_blk52	; block 52 END_ADDR
 30069  2AA4  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 30070  2AA8  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 30071  2AAC  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 30072  2AB0  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 30073                           
 30074                           ; Function: read_correction, coverage: 77,79,0
 30075  2AB4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30076  2AB8  00000121           	ddw	__ccovbit77_142/(0+8)	; CC_ADDR
 30077  2ABC  00000001           	ddw	1	; NUM_POINTS
 30078  2AC0  00000002           	ddw	__ccovbit77_142& (0+7)	; OFFSET
 30079  2AC4  00000000           	ddw	0	; Reserved
 30080  2AC8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30081  2ACC  00000003           	ddw	3	; NUM_RANGES
 30082  2AD0  00000FD7           	ddw	__ccov610_start_blk77	; block 77 START_ADDR
 30083  2AD4  00000FE2           	ddw	__ccov610_end_blk77	; block 77 END_ADDR
 30084  2AD8  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 30085  2ADC  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 30086  2AE0  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 30087  2AE4  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 30088                           
 30089                           ; Function: read_correction, coverage: 83,81,79,0
 30090  2AE8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30091  2AEC  00000121           	ddw	__ccovbit83_143/(0+8)	; CC_ADDR
 30092  2AF0  00000001           	ddw	1	; NUM_POINTS
 30093  2AF4  00000001           	ddw	__ccovbit83_143& (0+7)	; OFFSET
 30094  2AF8  00000000           	ddw	0	; Reserved
 30095  2AFC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30096  2B00  00000004           	ddw	4	; NUM_RANGES
 30097  2B04  00000FFA           	ddw	__ccov613_start_blk83	; block 83 START_ADDR
 30098  2B08  00001000           	ddw	__end_of_read_correction	; block 83 END_ADDR
 30099  2B0C  00000FF5           	ddw	__ccov612_start_blk81	; block 81 START_ADDR
 30100  2B10  00000FFA           	ddw	__ccov612_end_blk81	; block 81 END_ADDR
 30101  2B14  00000FE2           	ddw	__ccov611_start_blk79	; block 79 START_ADDR
 30102  2B18  00000FF5           	ddw	__ccov611_end_blk79	; block 79 END_ADDR
 30103  2B1C  00000E70           	ddw	_read_correction	; block 0 START_ADDR
 30104  2B20  00000E74           	ddw	__ccov571_end_blk0	; block 0 END_ADDR
 30105                           
 30106                           ; Function: write_correction, coverage: 10,9,8,4,3,2,40,0
 30107  2B24  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30108  2B28  00000121           	ddw	__ccovbit10_144/(0+8)	; CC_ADDR
 30109  2B2C  00000001           	ddw	1	; NUM_POINTS
 30110  2B30  00000000           	ddw	__ccovbit10_144& (0+7)	; OFFSET
 30111  2B34  00000000           	ddw	0	; Reserved
 30112  2B38  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30113  2B3C  00000008           	ddw	8	; NUM_RANGES
 30114  2B40  00000AAF           	ddw	__ccov620_start_blk10	; block 10 START_ADDR
 30115  2B44  00000AB8           	ddw	__ccov620_end_blk10	; block 10 END_ADDR
 30116  2B48  00000AAA           	ddw	__ccov619_start_blk9	; block 9 START_ADDR
 30117  2B4C  00000AAF           	ddw	__ccov619_end_blk9	; block 9 END_ADDR
 30118  2B50  00000A7F           	ddw	__ccov618_start_blk8	; block 8 START_ADDR
 30119  2B54  00000AAA           	ddw	__ccov618_end_blk8	; block 8 END_ADDR
 30120  2B58  00000A7E           	ddw	__ccov617_start_blk4	; block 4 START_ADDR
 30121  2B5C  00000A7F           	ddw	__ccov617_end_blk4	; block 4 END_ADDR
 30122  2B60  00000A72           	ddw	__ccov616_start_blk3	; block 3 START_ADDR
 30123  2B64  00000A7E           	ddw	__ccov616_end_blk3	; block 3 END_ADDR
 30124  2B68  00000A6E           	ddw	__ccov615_start_blk2	; block 2 START_ADDR
 30125  2B6C  00000A72           	ddw	__ccov615_end_blk2	; block 2 END_ADDR
 30126  2B70  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30127  2B74  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30128  2B78  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30129  2B7C  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30130                           
 30131                           ; Function: write_correction, coverage: 12,10,9,8,4,3,2,40,0
 30132  2B80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30133  2B84  00000120           	ddw	__ccovbit12_145/(0+8)	; CC_ADDR
 30134  2B88  00000001           	ddw	1	; NUM_POINTS
 30135  2B8C  00000007           	ddw	__ccovbit12_145& (0+7)	; OFFSET
 30136  2B90  00000000           	ddw	0	; Reserved
 30137  2B94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30138  2B98  00000009           	ddw	9	; NUM_RANGES
 30139  2B9C  00000AB8           	ddw	__ccov621_start_blk12	; block 12 START_ADDR
 30140  2BA0  00000AC3           	ddw	__ccov621_end_blk12	; block 12 END_ADDR
 30141  2BA4  00000AAF           	ddw	__ccov620_start_blk10	; block 10 START_ADDR
 30142  2BA8  00000AB8           	ddw	__ccov620_end_blk10	; block 10 END_ADDR
 30143  2BAC  00000AAA           	ddw	__ccov619_start_blk9	; block 9 START_ADDR
 30144  2BB0  00000AAF           	ddw	__ccov619_end_blk9	; block 9 END_ADDR
 30145  2BB4  00000A7F           	ddw	__ccov618_start_blk8	; block 8 START_ADDR
 30146  2BB8  00000AAA           	ddw	__ccov618_end_blk8	; block 8 END_ADDR
 30147  2BBC  00000A7E           	ddw	__ccov617_start_blk4	; block 4 START_ADDR
 30148  2BC0  00000A7F           	ddw	__ccov617_end_blk4	; block 4 END_ADDR
 30149  2BC4  00000A72           	ddw	__ccov616_start_blk3	; block 3 START_ADDR
 30150  2BC8  00000A7E           	ddw	__ccov616_end_blk3	; block 3 END_ADDR
 30151  2BCC  00000A6E           	ddw	__ccov615_start_blk2	; block 2 START_ADDR
 30152  2BD0  00000A72           	ddw	__ccov615_end_blk2	; block 2 END_ADDR
 30153  2BD4  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30154  2BD8  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30155  2BDC  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30156  2BE0  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30157                           
 30158                           ; Function: write_correction, coverage: 22,21,20,16,15,14,40,0
 30159  2BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30160  2BE8  00000120           	ddw	__ccovbit22_146/(0+8)	; CC_ADDR
 30161  2BEC  00000001           	ddw	1	; NUM_POINTS
 30162  2BF0  00000006           	ddw	__ccovbit22_146& (0+7)	; OFFSET
 30163  2BF4  00000000           	ddw	0	; Reserved
 30164  2BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30165  2BFC  00000008           	ddw	8	; NUM_RANGES
 30166  2C00  00000B00           	ddw	__ccov627_start_blk22	; block 22 START_ADDR
 30167  2C04  00000B09           	ddw	__ccov627_end_blk22	; block 22 END_ADDR
 30168  2C08  00000AFB           	ddw	__ccov626_start_blk21	; block 21 START_ADDR
 30169  2C0C  00000B00           	ddw	__ccov626_end_blk21	; block 21 END_ADDR
 30170  2C10  00000AD0           	ddw	__ccov625_start_blk20	; block 20 START_ADDR
 30171  2C14  00000AFB           	ddw	__ccov625_end_blk20	; block 20 END_ADDR
 30172  2C18  00000ACF           	ddw	__ccov624_start_blk16	; block 16 START_ADDR
 30173  2C1C  00000AD0           	ddw	__ccov624_end_blk16	; block 16 END_ADDR
 30174  2C20  00000AC7           	ddw	__ccov623_start_blk15	; block 15 START_ADDR
 30175  2C24  00000ACF           	ddw	__ccov623_end_blk15	; block 15 END_ADDR
 30176  2C28  00000AC3           	ddw	__ccov622_start_blk14	; block 14 START_ADDR
 30177  2C2C  00000AC7           	ddw	__ccov622_end_blk14	; block 14 END_ADDR
 30178  2C30  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30179  2C34  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30180  2C38  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30181  2C3C  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30182                           
 30183                           ; Function: write_correction, coverage: 24,22,21,20,16,15,14,40,0
 30184  2C40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30185  2C44  00000120           	ddw	__ccovbit24_147/(0+8)	; CC_ADDR
 30186  2C48  00000001           	ddw	1	; NUM_POINTS
 30187  2C4C  00000005           	ddw	__ccovbit24_147& (0+7)	; OFFSET
 30188  2C50  00000000           	ddw	0	; Reserved
 30189  2C54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30190  2C58  00000009           	ddw	9	; NUM_RANGES
 30191  2C5C  00000B09           	ddw	__ccov628_start_blk24	; block 24 START_ADDR
 30192  2C60  00000B14           	ddw	__ccov628_end_blk24	; block 24 END_ADDR
 30193  2C64  00000B00           	ddw	__ccov627_start_blk22	; block 22 START_ADDR
 30194  2C68  00000B09           	ddw	__ccov627_end_blk22	; block 22 END_ADDR
 30195  2C6C  00000AFB           	ddw	__ccov626_start_blk21	; block 21 START_ADDR
 30196  2C70  00000B00           	ddw	__ccov626_end_blk21	; block 21 END_ADDR
 30197  2C74  00000AD0           	ddw	__ccov625_start_blk20	; block 20 START_ADDR
 30198  2C78  00000AFB           	ddw	__ccov625_end_blk20	; block 20 END_ADDR
 30199  2C7C  00000ACF           	ddw	__ccov624_start_blk16	; block 16 START_ADDR
 30200  2C80  00000AD0           	ddw	__ccov624_end_blk16	; block 16 END_ADDR
 30201  2C84  00000AC7           	ddw	__ccov623_start_blk15	; block 15 START_ADDR
 30202  2C88  00000ACF           	ddw	__ccov623_end_blk15	; block 15 END_ADDR
 30203  2C8C  00000AC3           	ddw	__ccov622_start_blk14	; block 14 START_ADDR
 30204  2C90  00000AC7           	ddw	__ccov622_end_blk14	; block 14 END_ADDR
 30205  2C94  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30206  2C98  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30207  2C9C  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30208  2CA0  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30209                           
 30210                           ; Function: write_correction, coverage: 34,33,32,28,27,26,40,0
 30211  2CA4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30212  2CA8  00000120           	ddw	__ccovbit34_148/(0+8)	; CC_ADDR
 30213  2CAC  00000001           	ddw	1	; NUM_POINTS
 30214  2CB0  00000004           	ddw	__ccovbit34_148& (0+7)	; OFFSET
 30215  2CB4  00000000           	ddw	0	; Reserved
 30216  2CB8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30217  2CBC  00000008           	ddw	8	; NUM_RANGES
 30218  2CC0  00000B55           	ddw	__ccov634_start_blk34	; block 34 START_ADDR
 30219  2CC4  00000B5E           	ddw	__ccov634_end_blk34	; block 34 END_ADDR
 30220  2CC8  00000B50           	ddw	__ccov633_start_blk33	; block 33 START_ADDR
 30221  2CCC  00000B55           	ddw	__ccov633_end_blk33	; block 33 END_ADDR
 30222  2CD0  00000B25           	ddw	__ccov632_start_blk32	; block 32 START_ADDR
 30223  2CD4  00000B50           	ddw	__ccov632_end_blk32	; block 32 END_ADDR
 30224  2CD8  00000B24           	ddw	__ccov631_start_blk28	; block 28 START_ADDR
 30225  2CDC  00000B25           	ddw	__ccov631_end_blk28	; block 28 END_ADDR
 30226  2CE0  00000B18           	ddw	__ccov630_start_blk27	; block 27 START_ADDR
 30227  2CE4  00000B24           	ddw	__ccov630_end_blk27	; block 27 END_ADDR
 30228  2CE8  00000B14           	ddw	__ccov629_start_blk26	; block 26 START_ADDR
 30229  2CEC  00000B18           	ddw	__ccov629_end_blk26	; block 26 END_ADDR
 30230  2CF0  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30231  2CF4  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30232  2CF8  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30233  2CFC  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30234                           
 30235                           ; Function: write_correction, coverage: 36,34,33,32,28,27,26,40,0
 30236  2D00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30237  2D04  00000120           	ddw	__ccovbit36_149/(0+8)	; CC_ADDR
 30238  2D08  00000001           	ddw	1	; NUM_POINTS
 30239  2D0C  00000003           	ddw	__ccovbit36_149& (0+7)	; OFFSET
 30240  2D10  00000000           	ddw	0	; Reserved
 30241  2D14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30242  2D18  00000009           	ddw	9	; NUM_RANGES
 30243  2D1C  00000B5E           	ddw	__ccov635_start_blk36	; block 36 START_ADDR
 30244  2D20  00000B69           	ddw	__ccov635_end_blk36	; block 36 END_ADDR
 30245  2D24  00000B55           	ddw	__ccov634_start_blk34	; block 34 START_ADDR
 30246  2D28  00000B5E           	ddw	__ccov634_end_blk34	; block 34 END_ADDR
 30247  2D2C  00000B50           	ddw	__ccov633_start_blk33	; block 33 START_ADDR
 30248  2D30  00000B55           	ddw	__ccov633_end_blk33	; block 33 END_ADDR
 30249  2D34  00000B25           	ddw	__ccov632_start_blk32	; block 32 START_ADDR
 30250  2D38  00000B50           	ddw	__ccov632_end_blk32	; block 32 END_ADDR
 30251  2D3C  00000B24           	ddw	__ccov631_start_blk28	; block 28 START_ADDR
 30252  2D40  00000B25           	ddw	__ccov631_end_blk28	; block 28 END_ADDR
 30253  2D44  00000B18           	ddw	__ccov630_start_blk27	; block 27 START_ADDR
 30254  2D48  00000B24           	ddw	__ccov630_end_blk27	; block 27 END_ADDR
 30255  2D4C  00000B14           	ddw	__ccov629_start_blk26	; block 26 START_ADDR
 30256  2D50  00000B18           	ddw	__ccov629_end_blk26	; block 26 END_ADDR
 30257  2D54  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30258  2D58  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30259  2D5C  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30260  2D60  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30261                           
 30262                           ; Function: write_correction, coverage: 38,40,0
 30263  2D64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30264  2D68  00000120           	ddw	__ccovbit38_150/(0+8)	; CC_ADDR
 30265  2D6C  00000001           	ddw	1	; NUM_POINTS
 30266  2D70  00000002           	ddw	__ccovbit38_150& (0+7)	; OFFSET
 30267  2D74  00000000           	ddw	0	; Reserved
 30268  2D78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30269  2D7C  00000003           	ddw	3	; NUM_RANGES
 30270  2D80  00000B69           	ddw	__ccov636_start_blk38	; block 38 START_ADDR
 30271  2D84  00000B74           	ddw	__ccov636_end_blk38	; block 38 END_ADDR
 30272  2D88  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30273  2D8C  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30274  2D90  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30275  2D94  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30276                           
 30277                           ; Function: write_correction, coverage: 42,40,0
 30278  2D98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30279  2D9C  00000120           	ddw	__ccovbit42_151/(0+8)	; CC_ADDR
 30280  2DA0  00000001           	ddw	1	; NUM_POINTS
 30281  2DA4  00000001           	ddw	__ccovbit42_151& (0+7)	; OFFSET
 30282  2DA8  00000000           	ddw	0	; Reserved
 30283  2DAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30284  2DB0  00000003           	ddw	3	; NUM_RANGES
 30285  2DB4  00000B87           	ddw	__ccov638_start_blk42	; block 42 START_ADDR
 30286  2DB8  00000B8D           	ddw	__end_of_write_correction	; block 42 END_ADDR
 30287  2DBC  00000B74           	ddw	__ccov637_start_blk40	; block 40 START_ADDR
 30288  2DC0  00000B87           	ddw	__ccov637_end_blk40	; block 40 END_ADDR
 30289  2DC4  00000A6B           	ddw	_write_correction	; block 0 START_ADDR
 30290  2DC8  00000A6E           	ddw	__ccov614_end_blk0	; block 0 END_ADDR
 30291                           
 30292                           ; Function: fuel_set_low, coverage: 2,1,0
 30293  2DCC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30294  2DD0  00000120           	ddw	__ccovbit2_152/(0+8)	; CC_ADDR
 30295  2DD4  00000001           	ddw	1	; NUM_POINTS
 30296  2DD8  00000000           	ddw	__ccovbit2_152& (0+7)	; OFFSET
 30297  2DDC  00000000           	ddw	0	; Reserved
 30298  2DE0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30299  2DE4  00000003           	ddw	3	; NUM_RANGES
 30300  2DE8  000018F1           	ddw	__ccov641_start_blk2	; block 2 START_ADDR
 30301  2DEC  000018F5           	ddw	__ccov641_end_blk2	; block 2 END_ADDR
 30302  2DF0  000018EC           	ddw	__ccov640_start_blk1	; block 1 START_ADDR
 30303  2DF4  000018F1           	ddw	__ccov640_end_blk1	; block 1 END_ADDR
 30304  2DF8  000018E5           	ddw	_fuel_set_low	; block 0 START_ADDR
 30305  2DFC  000018EC           	ddw	__ccov639_end_blk0	; block 0 END_ADDR
 30306                           
 30307                           ; Function: fuel_set_low, coverage: 5,1,0
 30308  2E00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30309  2E04  000001D7           	ddw	__ccovbit5_153/(0+8)	; CC_ADDR
 30310  2E08  00000001           	ddw	1	; NUM_POINTS
 30311  2E0C  00000006           	ddw	__ccovbit5_153& (0+7)	; OFFSET
 30312  2E10  00000000           	ddw	0	; Reserved
 30313  2E14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30314  2E18  00000003           	ddw	3	; NUM_RANGES
 30315  2E1C  000018F5           	ddw	__ccov642_start_blk5	; block 5 START_ADDR
 30316  2E20  000018F8           	ddw	__ccov642_end_blk5	; block 5 END_ADDR
 30317  2E24  000018EC           	ddw	__ccov640_start_blk1	; block 1 START_ADDR
 30318  2E28  000018F1           	ddw	__ccov640_end_blk1	; block 1 END_ADDR
 30319  2E2C  000018E5           	ddw	_fuel_set_low	; block 0 START_ADDR
 30320  2E30  000018EC           	ddw	__ccov639_end_blk0	; block 0 END_ADDR
 30321                           
 30322                           ; Function: fuel_set_low, coverage: 8,1,0
 30323  2E34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30324  2E38  000001D7           	ddw	__ccovbit8_154/(0+8)	; CC_ADDR
 30325  2E3C  00000001           	ddw	1	; NUM_POINTS
 30326  2E40  00000005           	ddw	__ccovbit8_154& (0+7)	; OFFSET
 30327  2E44  00000000           	ddw	0	; Reserved
 30328  2E48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30329  2E4C  00000003           	ddw	3	; NUM_RANGES
 30330  2E50  000018F8           	ddw	__ccov643_start_blk8	; block 8 START_ADDR
 30331  2E54  000018FB           	ddw	__end_of_fuel_set_low	; block 8 END_ADDR
 30332  2E58  000018EC           	ddw	__ccov640_start_blk1	; block 1 START_ADDR
 30333  2E5C  000018F1           	ddw	__ccov640_end_blk1	; block 1 END_ADDR
 30334  2E60  000018E5           	ddw	_fuel_set_low	; block 0 START_ADDR
 30335  2E64  000018EC           	ddw	__ccov639_end_blk0	; block 0 END_ADDR
 30336                           
 30337                           ; Function: fuel_pwm_calculate, coverage: 3,1,0
 30338  2E68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30339  2E6C  000001D7           	ddw	__ccovbit3_155/(0+8)	; CC_ADDR
 30340  2E70  00000001           	ddw	1	; NUM_POINTS
 30341  2E74  00000004           	ddw	__ccovbit3_155& (0+7)	; OFFSET
 30342  2E78  00000000           	ddw	0	; Reserved
 30343  2E7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30344  2E80  00000003           	ddw	3	; NUM_RANGES
 30345  2E84  00001DB6           	ddw	__ccov646_start_blk3	; block 3 START_ADDR
 30346  2E88  00001DB9           	ddw	__end_of_fuel_pwm_calculate	; block 3 END_ADDR
 30347  2E8C  00001DAF           	ddw	__ccov645_start_blk1	; block 1 START_ADDR
 30348  2E90  00001DB6           	ddw	__ccov645_end_blk1	; block 1 END_ADDR
 30349  2E94  00001D74           	ddw	_fuel_pwm_calculate	; block 0 START_ADDR
 30350  2E98  00001DAF           	ddw	__ccov644_end_blk0	; block 0 END_ADDR
 30351                           
 30352                           ; Function: fuel_percent_calculate, coverage: 3,1,0
 30353  2E9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30354  2EA0  000001D7           	ddw	__ccovbit3_156/(0+8)	; CC_ADDR
 30355  2EA4  00000001           	ddw	1	; NUM_POINTS
 30356  2EA8  00000003           	ddw	__ccovbit3_156& (0+7)	; OFFSET
 30357  2EAC  00000000           	ddw	0	; Reserved
 30358  2EB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30359  2EB4  00000003           	ddw	3	; NUM_RANGES
 30360  2EB8  00001D72           	ddw	__ccov649_start_blk3	; block 3 START_ADDR
 30361  2EBC  00001D74           	ddw	__end_of_fuel_percent_calculate	; block 3 END_ADDR
 30362  2EC0  00001D71           	ddw	__ccov648_start_blk1	; block 1 START_ADDR
 30363  2EC4  00001D72           	ddw	__ccov648_end_blk1	; block 1 END_ADDR
 30364  2EC8  00001D3D           	ddw	_fuel_percent_calculate	; block 0 START_ADDR
 30365  2ECC  00001D71           	ddw	__ccov647_end_blk0	; block 0 END_ADDR
 30366                           
 30367                           ; Function: fuel_uint_to_float, coverage: 2,0
 30368  2ED0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30369  2ED4  000001D7           	ddw	__ccovbit2_157/(0+8)	; CC_ADDR
 30370  2ED8  00000001           	ddw	1	; NUM_POINTS
 30371  2EDC  00000002           	ddw	__ccovbit2_157& (0+7)	; OFFSET
 30372  2EE0  00000000           	ddw	0	; Reserved
 30373  2EE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30374  2EE8  00000002           	ddw	2	; NUM_RANGES
 30375  2EEC  00001C16           	ddw	__ccov651_start_blk2	; block 2 START_ADDR
 30376  2EF0  00001C19           	ddw	__end_of_fuel_uint_to_float	; block 2 END_ADDR
 30377  2EF4  00001BEE           	ddw	_fuel_uint_to_float	; block 0 START_ADDR
 30378  2EF8  00001C16           	ddw	__ccov650_end_blk0	; block 0 END_ADDR
 30379                           
 30380                           ; Function: fuel_low_check, coverage: 1,0
 30381  2EFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30382  2F00  000001D7           	ddw	__ccovbit1_158/(0+8)	; CC_ADDR
 30383  2F04  00000001           	ddw	1	; NUM_POINTS
 30384  2F08  00000001           	ddw	__ccovbit1_158& (0+7)	; OFFSET
 30385  2F0C  00000000           	ddw	0	; Reserved
 30386  2F10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30387  2F14  00000002           	ddw	2	; NUM_RANGES
 30388  2F18  00001E09           	ddw	__ccov653_start_blk1	; block 1 START_ADDR
 30389  2F1C  00001E12           	ddw	__ccov653_end_blk1	; block 1 END_ADDR
 30390  2F20  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30391  2F24  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30392                           
 30393                           ; Function: fuel_low_check, coverage: 2,1,0
 30394  2F28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30395  2F2C  000001D7           	ddw	__ccovbit2_159/(0+8)	; CC_ADDR
 30396  2F30  00000001           	ddw	1	; NUM_POINTS
 30397  2F34  00000000           	ddw	__ccovbit2_159& (0+7)	; OFFSET
 30398  2F38  00000000           	ddw	0	; Reserved
 30399  2F3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30400  2F40  00000003           	ddw	3	; NUM_RANGES
 30401  2F44  00001E12           	ddw	__ccov654_start_blk2	; block 2 START_ADDR
 30402  2F48  00001E1B           	ddw	__ccov654_end_blk2	; block 2 END_ADDR
 30403  2F4C  00001E09           	ddw	__ccov653_start_blk1	; block 1 START_ADDR
 30404  2F50  00001E12           	ddw	__ccov653_end_blk1	; block 1 END_ADDR
 30405  2F54  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30406  2F58  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30407                           
 30408                           ; Function: fuel_low_check, coverage: 3,2,1,0
 30409  2F5C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30410  2F60  000001D6           	ddw	__ccovbit3_160/(0+8)	; CC_ADDR
 30411  2F64  00000001           	ddw	1	; NUM_POINTS
 30412  2F68  00000007           	ddw	__ccovbit3_160& (0+7)	; OFFSET
 30413  2F6C  00000000           	ddw	0	; Reserved
 30414  2F70  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30415  2F74  00000004           	ddw	4	; NUM_RANGES
 30416  2F78  00001E1B           	ddw	__ccov655_start_blk3	; block 3 START_ADDR
 30417  2F7C  00001E22           	ddw	__ccov655_end_blk3	; block 3 END_ADDR
 30418  2F80  00001E12           	ddw	__ccov654_start_blk2	; block 2 START_ADDR
 30419  2F84  00001E1B           	ddw	__ccov654_end_blk2	; block 2 END_ADDR
 30420  2F88  00001E09           	ddw	__ccov653_start_blk1	; block 1 START_ADDR
 30421  2F8C  00001E12           	ddw	__ccov653_end_blk1	; block 1 END_ADDR
 30422  2F90  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30423  2F94  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30424                           
 30425                           ; Function: fuel_low_check, coverage: 5,0
 30426  2F98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30427  2F9C  000001D6           	ddw	__ccovbit5_161/(0+8)	; CC_ADDR
 30428  2FA0  00000001           	ddw	1	; NUM_POINTS
 30429  2FA4  00000006           	ddw	__ccovbit5_161& (0+7)	; OFFSET
 30430  2FA8  00000000           	ddw	0	; Reserved
 30431  2FAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30432  2FB0  00000002           	ddw	2	; NUM_RANGES
 30433  2FB4  00001E22           	ddw	__ccov656_start_blk5	; block 5 START_ADDR
 30434  2FB8  00001E2B           	ddw	__ccov656_end_blk5	; block 5 END_ADDR
 30435  2FBC  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30436  2FC0  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30437                           
 30438                           ; Function: fuel_low_check, coverage: 8,0
 30439  2FC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30440  2FC8  000001D6           	ddw	__ccovbit8_162/(0+8)	; CC_ADDR
 30441  2FCC  00000001           	ddw	1	; NUM_POINTS
 30442  2FD0  00000005           	ddw	__ccovbit8_162& (0+7)	; OFFSET
 30443  2FD4  00000000           	ddw	0	; Reserved
 30444  2FD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30445  2FDC  00000002           	ddw	2	; NUM_RANGES
 30446  2FE0  00001E2B           	ddw	__ccov657_start_blk8	; block 8 START_ADDR
 30447  2FE4  00001E30           	ddw	__ccov657_end_blk8	; block 8 END_ADDR
 30448  2FE8  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30449  2FEC  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30450                           
 30451                           ; Function: fuel_low_check, coverage: 11,0
 30452  2FF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30453  2FF4  000001D6           	ddw	__ccovbit11_163/(0+8)	; CC_ADDR
 30454  2FF8  00000001           	ddw	1	; NUM_POINTS
 30455  2FFC  00000004           	ddw	__ccovbit11_163& (0+7)	; OFFSET
 30456  3000  00000000           	ddw	0	; Reserved
 30457  3004  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30458  3008  00000002           	ddw	2	; NUM_RANGES
 30459  300C  00001E30           	ddw	__ccov658_start_blk11	; block 11 START_ADDR
 30460  3010  00001E39           	ddw	__ccov658_end_blk11	; block 11 END_ADDR
 30461  3014  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30462  3018  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30463                           
 30464                           ; Function: fuel_low_check, coverage: 12,11,0
 30465  301C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30466  3020  000001D6           	ddw	__ccovbit12_164/(0+8)	; CC_ADDR
 30467  3024  00000001           	ddw	1	; NUM_POINTS
 30468  3028  00000003           	ddw	__ccovbit12_164& (0+7)	; OFFSET
 30469  302C  00000000           	ddw	0	; Reserved
 30470  3030  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30471  3034  00000003           	ddw	3	; NUM_RANGES
 30472  3038  00001E39           	ddw	__ccov659_start_blk12	; block 12 START_ADDR
 30473  303C  00001E42           	ddw	__ccov659_end_blk12	; block 12 END_ADDR
 30474  3040  00001E30           	ddw	__ccov658_start_blk11	; block 11 START_ADDR
 30475  3044  00001E39           	ddw	__ccov658_end_blk11	; block 11 END_ADDR
 30476  3048  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30477  304C  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30478                           
 30479                           ; Function: fuel_low_check, coverage: 13,12,11,0
 30480  3050  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30481  3054  000001D6           	ddw	__ccovbit13_165/(0+8)	; CC_ADDR
 30482  3058  00000001           	ddw	1	; NUM_POINTS
 30483  305C  00000002           	ddw	__ccovbit13_165& (0+7)	; OFFSET
 30484  3060  00000000           	ddw	0	; Reserved
 30485  3064  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30486  3068  00000004           	ddw	4	; NUM_RANGES
 30487  306C  00001E42           	ddw	__ccov660_start_blk13	; block 13 START_ADDR
 30488  3070  00001E48           	ddw	__ccov660_end_blk13	; block 13 END_ADDR
 30489  3074  00001E39           	ddw	__ccov659_start_blk12	; block 12 START_ADDR
 30490  3078  00001E42           	ddw	__ccov659_end_blk12	; block 12 END_ADDR
 30491  307C  00001E30           	ddw	__ccov658_start_blk11	; block 11 START_ADDR
 30492  3080  00001E39           	ddw	__ccov658_end_blk11	; block 11 END_ADDR
 30493  3084  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30494  3088  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30495                           
 30496                           ; Function: fuel_low_check, coverage: 21,0
 30497  308C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30498  3090  000001D6           	ddw	__ccovbit21_166/(0+8)	; CC_ADDR
 30499  3094  00000001           	ddw	1	; NUM_POINTS
 30500  3098  00000001           	ddw	__ccovbit21_166& (0+7)	; OFFSET
 30501  309C  00000000           	ddw	0	; Reserved
 30502  30A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30503  30A4  00000002           	ddw	2	; NUM_RANGES
 30504  30A8  00001E48           	ddw	__ccov661_start_blk21	; block 21 START_ADDR
 30505  30AC  00001E4B           	ddw	__end_of_fuel_low_check	; block 21 END_ADDR
 30506  30B0  00001E02           	ddw	_fuel_low_check	; block 0 START_ADDR
 30507  30B4  00001E09           	ddw	__ccov652_end_blk0	; block 0 END_ADDR
 30508                           
 30509                           ; Function: fuel_init, coverage: 4,3,2,1,0
 30510  30B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30511  30BC  000001D6           	ddw	__ccovbit4_167/(0+8)	; CC_ADDR
 30512  30C0  00000001           	ddw	1	; NUM_POINTS
 30513  30C4  00000000           	ddw	__ccovbit4_167& (0+7)	; OFFSET
 30514  30C8  00000000           	ddw	0	; Reserved
 30515  30CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30516  30D0  00000005           	ddw	5	; NUM_RANGES
 30517  30D4  00001AFF           	ddw	__ccov666_start_blk4	; block 4 START_ADDR
 30518  30D8  00001B01           	ddw	__end_of_fuel_init	; block 4 END_ADDR
 30519  30DC  00001AFD           	ddw	__ccov665_start_blk3	; block 3 START_ADDR
 30520  30E0  00001AFF           	ddw	__ccov665_end_blk3	; block 3 END_ADDR
 30521  30E4  00001AF5           	ddw	__ccov664_start_blk2	; block 2 START_ADDR
 30522  30E8  00001AFD           	ddw	__ccov664_end_blk2	; block 2 END_ADDR
 30523  30EC  00001AEA           	ddw	__ccov663_start_blk1	; block 1 START_ADDR
 30524  30F0  00001AF5           	ddw	__ccov663_end_blk1	; block 1 END_ADDR
 30525  30F4  00001ADE           	ddw	_fuel_init	; block 0 START_ADDR
 30526  30F8  00001AEA           	ddw	__ccov662_end_blk0	; block 0 END_ADDR
 30527                           
 30528                           ; Function: fuel_get, coverage: 1,0
 30529  30FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30530  3100  000001D5           	ddw	__ccovbit1_168/(0+8)	; CC_ADDR
 30531  3104  00000001           	ddw	1	; NUM_POINTS
 30532  3108  00000007           	ddw	__ccovbit1_168& (0+7)	; OFFSET
 30533  310C  00000000           	ddw	0	; Reserved
 30534  3110  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30535  3114  00000002           	ddw	2	; NUM_RANGES
 30536  3118  00001EA1           	ddw	__ccov668_start_blk1	; block 1 START_ADDR
 30537  311C  00001EAC           	ddw	__ccov668_end_blk1	; block 1 END_ADDR
 30538  3120  00001E9A           	ddw	_fuel_get	; block 0 START_ADDR
 30539  3124  00001EA1           	ddw	__ccov667_end_blk0	; block 0 END_ADDR
 30540                           
 30541                           ; Function: fuel_get, coverage: 2,1,0
 30542  3128  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30543  312C  000001D5           	ddw	__ccovbit2_169/(0+8)	; CC_ADDR
 30544  3130  00000001           	ddw	1	; NUM_POINTS
 30545  3134  00000006           	ddw	__ccovbit2_169& (0+7)	; OFFSET
 30546  3138  00000000           	ddw	0	; Reserved
 30547  313C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30548  3140  00000003           	ddw	3	; NUM_RANGES
 30549  3144  00001EAC           	ddw	__ccov669_start_blk2	; block 2 START_ADDR
 30550  3148  00001EB4           	ddw	__ccov669_end_blk2	; block 2 END_ADDR
 30551  314C  00001EA1           	ddw	__ccov668_start_blk1	; block 1 START_ADDR
 30552  3150  00001EAC           	ddw	__ccov668_end_blk1	; block 1 END_ADDR
 30553  3154  00001E9A           	ddw	_fuel_get	; block 0 START_ADDR
 30554  3158  00001EA1           	ddw	__ccov667_end_blk0	; block 0 END_ADDR
 30555                           
 30556                           ; Function: fuel_get, coverage: 4,0
 30557  315C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30558  3160  000001D5           	ddw	__ccovbit4_170/(0+8)	; CC_ADDR
 30559  3164  00000001           	ddw	1	; NUM_POINTS
 30560  3168  00000005           	ddw	__ccovbit4_170& (0+7)	; OFFSET
 30561  316C  00000000           	ddw	0	; Reserved
 30562  3170  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30563  3174  00000002           	ddw	2	; NUM_RANGES
 30564  3178  00001EB4           	ddw	__ccov670_start_blk4	; block 4 START_ADDR
 30565  317C  00001EBF           	ddw	__ccov670_end_blk4	; block 4 END_ADDR
 30566  3180  00001E9A           	ddw	_fuel_get	; block 0 START_ADDR
 30567  3184  00001EA1           	ddw	__ccov667_end_blk0	; block 0 END_ADDR
 30568                           
 30569                           ; Function: fuel_get, coverage: 9,8,7,6,0
 30570  3188  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30571  318C  000001D5           	ddw	__ccovbit9_171/(0+8)	; CC_ADDR
 30572  3190  00000001           	ddw	1	; NUM_POINTS
 30573  3194  00000004           	ddw	__ccovbit9_171& (0+7)	; OFFSET
 30574  3198  00000000           	ddw	0	; Reserved
 30575  319C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30576  31A0  00000005           	ddw	5	; NUM_RANGES
 30577  31A4  00001ED7           	ddw	__ccov674_start_blk9	; block 9 START_ADDR
 30578  31A8  00001EDC           	ddw	__ccov674_end_blk9	; block 9 END_ADDR
 30579  31AC  00001ED4           	ddw	__ccov673_start_blk8	; block 8 START_ADDR
 30580  31B0  00001ED7           	ddw	__ccov673_end_blk8	; block 8 END_ADDR
 30581  31B4  00001ECC           	ddw	__ccov672_start_blk7	; block 7 START_ADDR
 30582  31B8  00001ED4           	ddw	__ccov672_end_blk7	; block 7 END_ADDR
 30583  31BC  00001EBF           	ddw	__ccov671_start_blk6	; block 6 START_ADDR
 30584  31C0  00001ECC           	ddw	__ccov671_end_blk6	; block 6 END_ADDR
 30585  31C4  00001E9A           	ddw	_fuel_get	; block 0 START_ADDR
 30586  31C8  00001EA1           	ddw	__ccov667_end_blk0	; block 0 END_ADDR
 30587                           
 30588                           ; Function: fuel_get, coverage: 13,12,11,6,0
 30589  31CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30590  31D0  000001D5           	ddw	__ccovbit13_172/(0+8)	; CC_ADDR
 30591  31D4  00000001           	ddw	1	; NUM_POINTS
 30592  31D8  00000003           	ddw	__ccovbit13_172& (0+7)	; OFFSET
 30593  31DC  00000000           	ddw	0	; Reserved
 30594  31E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30595  31E4  00000005           	ddw	5	; NUM_RANGES
 30596  31E8  00001EEA           	ddw	__ccov677_start_blk13	; block 13 START_ADDR
 30597  31EC  00001EED           	ddw	__end_of_fuel_get	; block 13 END_ADDR
 30598  31F0  00001EE7           	ddw	__ccov676_start_blk12	; block 12 START_ADDR
 30599  31F4  00001EEA           	ddw	__ccov676_end_blk12	; block 12 END_ADDR
 30600  31F8  00001EDC           	ddw	__ccov675_start_blk11	; block 11 START_ADDR
 30601  31FC  00001EE7           	ddw	__ccov675_end_blk11	; block 11 END_ADDR
 30602  3200  00001EBF           	ddw	__ccov671_start_blk6	; block 6 START_ADDR
 30603  3204  00001ECC           	ddw	__ccov671_end_blk6	; block 6 END_ADDR
 30604  3208  00001E9A           	ddw	_fuel_get	; block 0 START_ADDR
 30605  320C  00001EA1           	ddw	__ccov667_end_blk0	; block 0 END_ADDR
 30606                           
 30607                           ; Function: fuel_calibration, coverage: 2,1,0
 30608  3210  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30609  3214  000001D5           	ddw	__ccovbit2_173/(0+8)	; CC_ADDR
 30610  3218  00000001           	ddw	1	; NUM_POINTS
 30611  321C  00000002           	ddw	__ccovbit2_173& (0+7)	; OFFSET
 30612  3220  00000000           	ddw	0	; Reserved
 30613  3224  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30614  3228  00000003           	ddw	3	; NUM_RANGES
 30615  322C  00001F23           	ddw	__ccov686_start_blk2	; block 2 START_ADDR
 30616  3230  00001F2C           	ddw	__ccov686_end_blk2	; block 2 END_ADDR
 30617  3234  00001F16           	ddw	__ccov685_start_blk1	; block 1 START_ADDR
 30618  3238  00001F23           	ddw	__ccov685_end_blk1	; block 1 END_ADDR
 30619  323C  00001EED           	ddw	_fuel_calibration	; block 0 START_ADDR
 30620  3240  00001F16           	ddw	__ccov684_end_blk0	; block 0 END_ADDR
 30621                           
 30622                           ; Function: fuel_calibration, coverage: 8,7,6,5,4,1,0
 30623  3244  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30624  3248  000001D5           	ddw	__ccovbit8_174/(0+8)	; CC_ADDR
 30625  324C  00000001           	ddw	1	; NUM_POINTS
 30626  3250  00000001           	ddw	__ccovbit8_174& (0+7)	; OFFSET
 30627  3254  00000000           	ddw	0	; Reserved
 30628  3258  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30629  325C  00000007           	ddw	7	; NUM_RANGES
 30630  3260  00001F40           	ddw	__ccov691_start_blk8	; block 8 START_ADDR
 30631  3264  00001F43           	ddw	__end_of_fuel_calibration	; block 8 END_ADDR
 30632  3268  00001F3D           	ddw	__ccov690_start_blk7	; block 7 START_ADDR
 30633  326C  00001F40           	ddw	__ccov690_end_blk7	; block 7 END_ADDR
 30634  3270  00001F3A           	ddw	__ccov689_start_blk6	; block 6 START_ADDR
 30635  3274  00001F3D           	ddw	__ccov689_end_blk6	; block 6 END_ADDR
 30636  3278  00001F2F           	ddw	__ccov688_start_blk5	; block 5 START_ADDR
 30637  327C  00001F3A           	ddw	__ccov688_end_blk5	; block 5 END_ADDR
 30638  3280  00001F2C           	ddw	__ccov687_start_blk4	; block 4 START_ADDR
 30639  3284  00001F2F           	ddw	__ccov687_end_blk4	; block 4 END_ADDR
 30640  3288  00001F16           	ddw	__ccov685_start_blk1	; block 1 START_ADDR
 30641  328C  00001F23           	ddw	__ccov685_end_blk1	; block 1 END_ADDR
 30642  3290  00001EED           	ddw	_fuel_calibration	; block 0 START_ADDR
 30643  3294  00001F16           	ddw	__ccov684_end_blk0	; block 0 END_ADDR
 30644                           
 30645                           ; Function: is_fuel_low, coverage: 2,0
 30646  3298  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30647  329C  000001D5           	ddw	__ccovbit2_175/(0+8)	; CC_ADDR
 30648  32A0  00000001           	ddw	1	; NUM_POINTS
 30649  32A4  00000000           	ddw	__ccovbit2_175& (0+7)	; OFFSET
 30650  32A8  00000000           	ddw	0	; Reserved
 30651  32AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30652  32B0  00000002           	ddw	2	; NUM_RANGES
 30653  32B4  00002674           	ddw	__ccov693_start_blk2	; block 2 START_ADDR
 30654  32B8  00002676           	ddw	__end_of_is_fuel_low	; block 2 END_ADDR
 30655  32BC  00002672           	ddw	_is_fuel_low	; block 0 START_ADDR
 30656  32C0  00002674           	ddw	__ccov692_end_blk0	; block 0 END_ADDR
 30657                           
 30658                           ; Function: fuel_get_corr, coverage: 2,0
 30659  32C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30660  32C8  000001D4           	ddw	__ccovbit2_176/(0+8)	; CC_ADDR
 30661  32CC  00000001           	ddw	1	; NUM_POINTS
 30662  32D0  00000007           	ddw	__ccovbit2_176& (0+7)	; OFFSET
 30663  32D4  00000000           	ddw	0	; Reserved
 30664  32D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30665  32DC  00000002           	ddw	2	; NUM_RANGES
 30666  32E0  000027EC           	ddw	__ccov695_start_blk2	; block 2 START_ADDR
 30667  32E4  000027EF           	ddw	__end_of_fuel_get_corr	; block 2 END_ADDR
 30668  32E8  000027DE           	ddw	_fuel_get_corr	; block 0 START_ADDR
 30669  32EC  000027EC           	ddw	__ccov694_end_blk0	; block 0 END_ADDR
 30670                           
 30671                           ; Function: fuel_set_corr, coverage: 1,0
 30672  32F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30673  32F4  000001D4           	ddw	__ccovbit1_177/(0+8)	; CC_ADDR
 30674  32F8  00000001           	ddw	1	; NUM_POINTS
 30675  32FC  00000006           	ddw	__ccovbit1_177& (0+7)	; OFFSET
 30676  3300  00000000           	ddw	0	; Reserved
 30677  3304  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30678  3308  00000002           	ddw	2	; NUM_RANGES
 30679  330C  00001842           	ddw	__ccov697_start_blk1	; block 1 START_ADDR
 30680  3310  00001844           	ddw	__end_of_fuel_set_corr	; block 1 END_ADDR
 30681  3314  00001832           	ddw	_fuel_set_corr	; block 0 START_ADDR
 30682  3318  00001842           	ddw	__ccov696_end_blk0	; block 0 END_ADDR
 30683                           
 30684                           ; Function: PWM6_LoadDutyValue, coverage: 1,0
 30685  331C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30686  3320  000001D4           	ddw	__ccovbit1_178/(0+8)	; CC_ADDR
 30687  3324  00000001           	ddw	1	; NUM_POINTS
 30688  3328  00000005           	ddw	__ccovbit1_178& (0+7)	; OFFSET
 30689  332C  00000000           	ddw	0	; Reserved
 30690  3330  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30691  3334  00000002           	ddw	2	; NUM_RANGES
 30692  3338  00001910           	ddw	__ccov699_start_blk1	; block 1 START_ADDR
 30693  333C  00001913           	ddw	__end_ofi1_PWM6_LoadDutyValue	; block 1 END_ADDR
 30694  3340  000018FB           	ddw	i1_PWM6_LoadDutyValue	; block 0 START_ADDR
 30695  3344  00001910           	ddw	__ccov698_end_blk0	; block 0 END_ADDR
 30696                           
 30697                           ; Function: EUSART_Write, coverage: 5,4,2,0
 30698  3348  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30699  334C  000001D4           	ddw	__ccovbit5_179/(0+8)	; CC_ADDR
 30700  3350  00000001           	ddw	1	; NUM_POINTS
 30701  3354  00000004           	ddw	__ccovbit5_179& (0+7)	; OFFSET
 30702  3358  00000000           	ddw	0	; Reserved
 30703  335C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30704  3360  00000004           	ddw	4	; NUM_RANGES
 30705  3364  000027AC           	ddw	__ccov703_start_blk5	; block 5 START_ADDR
 30706  3368  000027AE           	ddw	__end_ofi1_EUSART_Write	; block 5 END_ADDR
 30707  336C  000027A9           	ddw	__ccov702_start_blk4	; block 4 START_ADDR
 30708  3370  000027AC           	ddw	__ccov702_end_blk4	; block 4 END_ADDR
 30709  3374  000027A4           	ddw	__ccov701_start_blk2	; block 2 START_ADDR
 30710  3378  000027A9           	ddw	__ccov701_end_blk2	; block 2 END_ADDR
 30711  337C  000027A0           	ddw	i1_EUSART_Write	; block 0 START_ADDR
 30712  3380  000027A4           	ddw	__ccov700_end_blk0	; block 0 END_ADDR
 30713                           
 30714                           ; Function: putch, coverage: 1,0
 30715  3384  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30716  3388  000001D4           	ddw	__ccovbit1_180/(0+8)	; CC_ADDR
 30717  338C  00000001           	ddw	1	; NUM_POINTS
 30718  3390  00000003           	ddw	__ccovbit1_180& (0+7)	; OFFSET
 30719  3394  00000000           	ddw	0	; Reserved
 30720  3398  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30721  339C  00000002           	ddw	2	; NUM_RANGES
 30722  33A0  00002686           	ddw	__ccov705_start_blk1	; block 1 START_ADDR
 30723  33A4  00002689           	ddw	__end_ofi1_putch	; block 1 END_ADDR
 30724  33A8  00002681           	ddw	i1_putch	; block 0 START_ADDR
 30725  33AC  00002686           	ddw	__ccov704_end_blk0	; block 0 END_ADDR
 30726                           
 30727                           ; Function: TMR6_LoadPeriodRegister, coverage: 1,0
 30728  33B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30729  33B4  000001D4           	ddw	__ccovbit1_181/(0+8)	; CC_ADDR
 30730  33B8  00000001           	ddw	1	; NUM_POINTS
 30731  33BC  00000002           	ddw	__ccovbit1_181& (0+7)	; OFFSET
 30732  33C0  00000000           	ddw	0	; Reserved
 30733  33C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30734  33C8  00000002           	ddw	2	; NUM_RANGES
 30735  33CC  0000267E           	ddw	__ccov707_start_blk1	; block 1 START_ADDR
 30736  33D0  00002681           	ddw	__end_ofi1_TMR6_LoadPeriodRegister	; block 1 END_ADDR
 30737  33D4  0000267A           	ddw	i1_TMR6_LoadPeriodRegister	; block 0 START_ADDR
 30738  33D8  0000267E           	ddw	__ccov706_end_blk0	; block 0 END_ADDR
 30739                           
 30740                           ; Function: led_set_mode, coverage: 1,0
 30741  33DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30742  33E0  000001D4           	ddw	__ccovbit1_182/(0+8)	; CC_ADDR
 30743  33E4  00000001           	ddw	1	; NUM_POINTS
 30744  33E8  00000001           	ddw	__ccovbit1_182& (0+7)	; OFFSET
 30745  33EC  00000000           	ddw	0	; Reserved
 30746  33F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30747  33F4  00000002           	ddw	2	; NUM_RANGES
 30748  33F8  00002697           	ddw	__ccov709_start_blk1	; block 1 START_ADDR
 30749  33FC  00002699           	ddw	__end_ofi1_led_set_mode	; block 1 END_ADDR
 30750  3400  00002691           	ddw	i1_led_set_mode	; block 0 START_ADDR
 30751  3404  00002697           	ddw	__ccov708_end_blk0	; block 0 END_ADDR
 30752                           
 30753                           ; Function: is_moving, coverage: 2,0
 30754  3408  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 30755  340C  000001D4           	ddw	__ccovbit2_183/(0+8)	; CC_ADDR
 30756  3410  00000001           	ddw	1	; NUM_POINTS
 30757  3414  00000000           	ddw	__ccovbit2_183& (0+7)	; OFFSET
 30758  3418  00000000           	ddw	0	; Reserved
 30759  341C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 30760  3420  00000002           	ddw	2	; NUM_RANGES
 30761  3424  00002749           	ddw	__ccov711_start_blk2	; block 2 START_ADDR
 30762  3428  0000274C           	ddw	__end_ofi1_is_moving	; block 2 END_ADDR
 30763  342C  00002740           	ddw	i1_is_moving	; block 0 START_ADDR
 30764  3430  00002749           	ddw	__ccov710_end_blk0	; block 0 END_ADDR
 30765  007E                     btemp	set	126	;btemp
 30766  007E                     int$flags	set	126
 30767  007E                     wtemp0	set	126
 30768                           
 30769                           	psect	idloc
 30770                           
 30771                           ;Config register IDLOC0 @ 0x8000
 30772                           ;	unspecified, using default values
 30773  8000                     	org	32768
 30774  8000  3FFF               	dw	16383
 30775                           
 30776                           ;Config register IDLOC1 @ 0x8001
 30777                           ;	unspecified, using default values
 30778  8001                     	org	32769
 30779  8001  3FFF               	dw	16383
 30780                           
 30781                           ;Config register IDLOC2 @ 0x8002
 30782                           ;	unspecified, using default values
 30783  8002                     	org	32770
 30784  8002  3FFF               	dw	16383
 30785                           
 30786                           ;Config register IDLOC3 @ 0x8003
 30787                           ;	unspecified, using default values
 30788  8003                     	org	32771
 30789  8003  3FFF               	dw	16383
 30790                           
 30791                           	psect	config
 30792                           
 30793                           ;Config register CONFIG1 @ 0x8007
 30794                           ;	FEXTOSC External Oscillator mode Selection bits
 30795                           ;	FEXTOSC = OFF, Oscillator not enabled
 30796                           ;	Power-up default value for COSC bits
 30797                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 30798                           ;	Clock Out Enable bit
 30799                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 30800                           ;	Clock Switch Enable bit
 30801                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 30802                           ;	Fail-Safe Clock Monitor Enable
 30803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 30804  8007                     	org	32775
 30805  8007  178C               	dw	6028
 30806                           
 30807                           ;Config register CONFIG2 @ 0x8008
 30808                           ;	Master Clear Enable bit
 30809                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 30810                           ;	Power-up Timer Enable bit
 30811                           ;	PWRTE = ON, PWRT enabled
 30812                           ;	Watchdog Timer Enable bits
 30813                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 30814                           ;	Low-power BOR enable bit
 30815                           ;	LPBOREN = OFF, ULPBOR disabled
 30816                           ;	Brown-out Reset Enable bits
 30817                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 30818                           ;	Brown-out Reset Voltage selection bit
 30819                           ;	BORV = HIGH, Brown-out voltage (Vbor) set to 2.7V
 30820                           ;	PPSLOCK bit One-Way Set Enable bit
 30821                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 30822                           ;	Stack Overflow/Underflow Reset Enable bit
 30823                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 30824                           ;	Debugger enable bit
 30825                           ;	DEBUG = ON, Background debugger enabled
 30826  8008                     	org	32776
 30827  8008  1DF1               	dw	7665
 30828                           
 30829                           ;Config register CONFIG3 @ 0x8009
 30830                           ;	User NVM self-write protection bits
 30831                           ;	WRT = OFF, Write protection off
 30832                           ;	Low Voltage Programming Enable bit
 30833                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
 30834  8009                     	org	32777
 30835  8009  1FFF               	dw	8191
 30836                           
 30837                           ;Config register CONFIG4 @ 0x800A
 30838                           ;	User NVM Program Memory Code Protection bit
 30839                           ;	CP = OFF, User NVM code protection disabled
 30840                           ;	Data NVM Memory Code Protection bit
 30841                           ;	CPD = OFF, Data NVM code protection disabled
 30842  800A                     	org	32778
 30843  800A  3FFF               	dw	16383

Data Sizes:
    Strings     660
    Constant    0
    Data        1
    BSS         78
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     68      80
    BANK2            80     46      80
    BANK3            80      0      72
    BANK4            80     20      20
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_22(CODE[44]), STR_21(CODE[48]), STR_20(CODE[33]), STR_19(CODE[39]), 
		 -> STR_18(CODE[36]), STR_17(CODE[48]), STR_16(CODE[30]), STR_15(CODE[33]), 
		 -> STR_14(CODE[33]), STR_13(CODE[46]), STR_10(CODE[31]), STR_8(CODE[34]), 
		 -> STR_7(CODE[25]), STR_6(CODE[23]), STR_5(CODE[29]), STR_4(CODE[38]), 
		 -> STR_3(CODE[27]), STR_1(CODE[29]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 48
		 -> dbuf(BANK3[32]), STR_22(CODE[44]), STR_21(CODE[48]), STR_20(CODE[33]), 
		 -> STR_19(CODE[39]), STR_18(CODE[36]), STR_17(CODE[48]), STR_16(CODE[30]), 
		 -> STR_15(CODE[33]), STR_14(CODE[33]), STR_13(CODE[46]), STR_10(CODE[31]), 
		 -> STR_8(CODE[34]), STR_7(CODE[25]), STR_6(CODE[23]), STR_5(CODE[29]), 
		 -> STR_4(CODE[38]), STR_3(CODE[27]), STR_1(CODE[29]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2117_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_12(CODE[12]), STR_11(CODE[13]), STR_9(CODE[29]), STR_2(CODE[28]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_12(CODE[12]), STR_11(CODE[13]), STR_9(CODE[29]), STR_2(CODE[28]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_12(CODE[12]), STR_11(CODE[13]), STR_9(CODE[29]), STR_2(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    write_correction@value	PTR void  size(2) Largest target is 4
		 -> read_correction@buffer(BANK1[4]), NULL(NULL[0]), main@tmp(BANK4[4]), 

    read_correction@return_ptr	PTR void  size(1) Largest target is 4
		 -> read_correction@buffer(BANK1[4]), NULL(NULL[0]), 

    sp__read_correction	PTR void  size(1) Largest target is 4
		 -> read_correction@buffer(BANK1[4]), NULL(NULL[0]), 

    spd_init@tmp	PTR void  size(1) Largest target is 4
		 -> read_correction@buffer(BANK1[4]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_indicate(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_indicate(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> frequency_calculation(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> frequency_calculation(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _frequency_calculation->i1___xxtofl
    i1_dtoa->i1_pad
    i1_pad->i1_fputs
    i1_abs->i1___aomod
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1_puts->i1_fputs
    i1_fputs->i1_fputc
    i1_fputc->i1_putch
    i1_putch->i1_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_led_indicate
    _led_indicate->i1_puts
    _frequency_calculation->i1_printf
    i1_printf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_dtoa
    i1_dtoa->i1___aodiv
    i1_dtoa->i1___aomod
    i1_pad->i1_fputs
    i1_abs->i1___aomod
    i1___fltol->i1___flmul
    _TMR0_DefaultInterruptHandler->i1_puts
    i1_puts->i1_fputs

Critical Paths under _main in BANK1

    _spd_test_pwm->_PWM6_LoadDutyValue
    _spd_k_calibration->_spd_uint_to_float
    _spd_uint_to_float->___flmul
    _spd_init->_read_correction
    _write_correction->_puts
    _read_correction->_eeprom_read_error_handler
    _eeprom_read_error_handler->_puts
    _spd_a_calibration->_ADC_GetConversion
    _fuel_init->_fuel_pwm_calculate
    _fuel_get->_fuel_pwm_calculate
    _fuel_calibration->_fuel_pwm_calculate
    _fuel_uint_to_float->___flmul
    _fuel_pwm_calculate->___fltol
    _fuel_percent_calculate->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _fuel_low_check->_fuel_set_low
    _button_init->_button_is_pressed
    _puts->_fputs
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR1_ISR->_frequency_calculation
    _frequency_calculation->i1_printf

Critical Paths under _main in BANK2

    _main->_button_check
    _button_check->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0  102307
                                             42 BANK2      4     4      0
                                              0 BANK4     20    20      0
                     _FLASH_ReadWord
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                       _button_check
                        _button_init
                   _fuel_calibration
                           _fuel_get
                      _fuel_get_corr
                          _fuel_init
                      _fuel_set_corr
                          _is_moving
                           _led_init
                       _led_set_mode
                        _menu_change
                             _printf
                               _puts
                  _spd_a_calibration
                     _spd_get_a_corr
                     _spd_get_k_corr
                           _spd_init
                  _spd_k_calibration
                     _spd_set_a_corr
                     _spd_set_k_corr
                       _spd_test_pwm
                   _write_correction
 ---------------------------------------------------------------------------------
 (1) _spd_test_pwm                                         4     4      0     293
                                             12 BANK1      4     4      0
                 _PWM6_LoadDutyValue
            _TMR6_LoadPeriodRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_LoadPeriodRegister                              1     1      0      31
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     262
                                              8 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _spd_set_k_corr                                       4     0      4     121
                                              8 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _spd_set_a_corr                                       2     2      0      31
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _spd_k_calibration                                    4     4      0    5114
                                             52 BANK1      4     4      0
                  _ADC_GetConversion
                  _spd_uint_to_float
 ---------------------------------------------------------------------------------
 (2) _spd_uint_to_float                                    4     0      4    5015
                                             48 BANK1      4     0      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (0) _spd_init                                             3     2      1   20792
                                             58 BANK1      3     2      1
                             ___fleq
                    _read_correction
                   _write_correction
 ---------------------------------------------------------------------------------
 (0) _write_correction                                    16    12      4    7527
                                             33 BANK1     16    12      4
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    1207
                                              8 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (0) _read_correction                                     24    22      2   12403
                                             34 BANK1     24    22      2
                    _DATAEE_ReadByte
                             ___fleq
          _eeprom_read_error_handler
                               _puts
 ---------------------------------------------------------------------------------
 (0) _eeprom_read_error_handler                            1     0      1    4717
                                             33 BANK1      1     0      1
                               _puts
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     670
                                              8 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     602
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _spd_get_k_corr                                       4     0      4       0
                                              8 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _spd_get_a_corr                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spd_a_calibration                                    4     4      0     220
                                             12 BANK1      4     4      0
                  _ADC_GetConversion
                      _spd_adc_to_u8
 ---------------------------------------------------------------------------------
 (2) _spd_adc_to_u8                                        3     1      2     121
                                              8 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _menu_change                                          1     1      0       0
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _led_set_mode                                         2     2      0      31
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _led_init                                             1     1      0       0
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_moving                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fuel_set_corr                                        4     0      4     121
                                              8 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _fuel_init                                            1     1      0   10963
                                             61 BANK1      1     1      0
                  _ADC_GetConversion
             _fuel_percent_calculate
                 _fuel_pwm_calculate
 ---------------------------------------------------------------------------------
 (1) _fuel_get_corr                                        4     0      4       0
                                              8 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _fuel_get                                             2     2      0   11304
                                             61 BANK1      2     2      0
                  _ADC_GetConversion
                 _PWM5_LoadDutyValue
                     _fuel_low_check
             _fuel_percent_calculate
                 _fuel_pwm_calculate
 ---------------------------------------------------------------------------------
 (1) _fuel_calibration                                     2     2      0   16350
                                             61 BANK1      2     2      0
                  _ADC_GetConversion
                 _PWM5_LoadDutyValue
                     _fuel_low_check
             _fuel_percent_calculate
                 _fuel_pwm_calculate
                 _fuel_uint_to_float
 ---------------------------------------------------------------------------------
 (2) _fuel_uint_to_float                                   4     0      4    5015
                                             48 BANK1      4     0      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _fuel_pwm_calculate                                   2     0      2    5466
                                             59 BANK1      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _fuel_percent_calculate                               1     1      0    5466
                                             59 BANK1      1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     891
                                              8 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     572
                                             48 BANK1     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4003
                                             22 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              8 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) _fuel_low_check                                       1     1      0      31
                                             10 BANK1      1     1      0
                       _fuel_set_low
                        _is_fuel_low
 ---------------------------------------------------------------------------------
 (3) _is_fuel_low                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fuel_set_low                                         2     2      0      31
                                              8 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     242
                                              8 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              8 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _button_init                                          1     1      0       0
                                              9 BANK1      1     1      0
                  _button_is_pressed
 ---------------------------------------------------------------------------------
 (0) _button_check                                         4     2      2   13635
                                             38 BANK2      4     2      2
                  _button_is_pressed
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (0) _puts                                                 6     3      3    4717
                                             27 BANK1      6     3      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (0) _printf                                              11     4      7    8918
                                             27 BANK2     11     4      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (0) _vfprintf                                            10     5      5    8541
                                             17 BANK2     10     5      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (0) _vfpfcnvrt                                           41    37      4    8049
                                              0 BANK2     17    13      4
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (0) _dtoa                                                31    21     10    6127
                                             37 BANK1     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (0) _pad                                                 10     5      5    3887
                                             27 BANK1     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     166
                                              8 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _fputs                                                9     6      3    1914
                                             18 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (2) _fputc                                                8     5      3    1210
                                             10 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              9 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     183
                                             27 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aomod                                             19     3     16     613
                                              8 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (1) ___aodiv                                             27    11     16     625
                                              8 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (2) _button_is_pressed                                    1     1      0       0
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              8 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_ReadWord                                       3     1      2     276
                                              8 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   12319
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0    1899
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                       _led_indicate *
 ---------------------------------------------------------------------------------
 (7) _led_indicate                                         2     2      0    1899
                                             11 BANK0      2     2      0
                            _led_off
                             _led_on
                         _led_toggle
                     i1_led_set_mode
                             i1_puts
 ---------------------------------------------------------------------------------
 (8) i1_led_set_mode                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _led_toggle                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _led_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _led_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    8543
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _frequency_calculation *
 ---------------------------------------------------------------------------------
 (7) _frequency_calculation                                4     4      0    8303
                                              4 BANK1      4     4      0
                        _TMR0_Reload
               i1_PWM6_LoadDutyValue
          i1_TMR6_LoadPeriodRegister
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                        i1_is_moving
                           i1_printf
 ---------------------------------------------------------------------------------
 (8) i1_printf                                            10     4      6    5715
                                             72 BANK0      6     0      6
                                              0 BANK1      4     4      0
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (9) i1_vfprintf                                           8     4      4    5564
                                             64 BANK0      8     4      4
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) i1_vfpfcnvrt                                        42    38      4    5291
                                             46 BANK0     18    14      4
                             i1_dtoa
                            i1_fputc
 ---------------------------------------------------------------------------------
 (11) i1_dtoa                                             30    22      8    4093
                                             16 BANK0     30    22      8
                          i1___aodiv
                          i1___aomod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (12) i1_pad                                               9     6      3    2247
                                             13 COMMON     1     1      0
                                              6 BANK0      8     5      3
                            i1_fputc
                            i1_fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (13) i1_strlen                                            5     3      2     130
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (12) i1_abs                                               4     2      2     128
                                              3 COMMON     4     2      2
                          i1___aomod (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___aomod                                          19     3     16     503
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (12) i1___aodiv                                          27    11     16     515
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) i1_is_moving                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) i1___fltol                                           11     7      4     255
                                             26 BANK0     11     7      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___flmul                                           26    18      8    1867
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) i1_TMR6_LoadPeriodRegister                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    1877
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0    1877
                             i1_puts
 ---------------------------------------------------------------------------------
 (8) i1_puts                                               5     3      2    1877
                                              6 BANK0      5     3      2
                            i1_fputc
                            i1_fputs
 ---------------------------------------------------------------------------------
 (9) i1_fputs                                              9     6      3    1034
                                             10 COMMON     3     0      3
                                              0 BANK0      6     6      0
                            i1_fputc
 ---------------------------------------------------------------------------------
 (10) i1_fputc                                             8     5      3     660
                                              2 COMMON     8     5      3
                            i1_putch
 ---------------------------------------------------------------------------------
 (11) i1_putch                                             1     1      0      62
                                              1 COMMON     1     1      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (12) i1_EUSART_Write                                      1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _button_check
     _button_is_pressed
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _button_init
     _button_is_pressed
   _fuel_calibration
     _ADC_GetConversion
     _PWM5_LoadDutyValue
     _fuel_low_check
       _fuel_set_low
       _is_fuel_low
     _fuel_percent_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _fuel_pwm_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _fuel_uint_to_float
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _fuel_get
     _ADC_GetConversion
     _PWM5_LoadDutyValue
     _fuel_low_check
       _fuel_set_low
       _is_fuel_low
     _fuel_percent_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _fuel_pwm_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _fuel_get_corr
   _fuel_init
     _ADC_GetConversion
     _fuel_percent_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _fuel_pwm_calculate
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _fuel_set_corr
   _is_moving
   _led_init
   _led_set_mode
   _menu_change
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _puts
     _fputc
       _putch
         _EUSART_Write
     _fputs
       _fputc
         _putch
           _EUSART_Write
   _spd_a_calibration
     _ADC_GetConversion
     _spd_adc_to_u8
   _spd_get_a_corr
   _spd_get_k_corr
   _spd_init
     ___fleq
     _read_correction
       _DATAEE_ReadByte
       ___fleq
       _eeprom_read_error_handler
         _puts
           _fputc
             _putch
               _EUSART_Write
           _fputs
             _fputc
               _putch
                 _EUSART_Write
       _puts
         _fputc
           _putch
             _EUSART_Write
         _fputs
           _fputc
             _putch
               _EUSART_Write
     _write_correction
       _DATAEE_WriteByte
       _puts
         _fputc
           _putch
             _EUSART_Write
         _fputs
           _fputc
             _putch
               _EUSART_Write
   _spd_k_calibration
     _ADC_GetConversion
     _spd_uint_to_float
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _spd_set_a_corr
   _spd_set_k_corr
   _spd_test_pwm
     _PWM6_LoadDutyValue
     _TMR6_LoadPeriodRegister
   _write_correction
     _DATAEE_WriteByte
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       i1_puts
         i1_fputc
           i1_putch
             i1_EUSART_Write
         i1_fputs
           i1_fputc
             i1_putch
               i1_EUSART_Write
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _frequency_calculation *
       _TMR0_Reload
       i1_PWM6_LoadDutyValue
       i1_TMR6_LoadPeriodRegister
       i1___flmul
         i1__Umul8_16
         i1___xxtofl (ARG)
       i1___fltol
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_is_moving
       i1_printf
         i1_vfprintf
           i1_vfpfcnvrt
             i1_dtoa
               i1___aodiv
               i1___aomod
               i1_abs
                 i1___aomod (ARG)
               i1_pad
                 i1_fputc
                   i1_putch
                     i1_EUSART_Write
                 i1_fputs
                   i1_fputc
                     i1_putch
                       i1_EUSART_Write
                 i1_strlen
             i1_fputc
               i1_putch
                 i1_EUSART_Write
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _led_indicate *
       _led_off
       _led_on
       _led_toggle
       i1_led_set_mode
       i1_puts
         i1_fputc
           i1_putch
             i1_EUSART_Write
         i1_fputs
           i1_fputc
             i1_putch
               i1_EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       2       4        2.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     44      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       9       8       11.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2E      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       4      10        5.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      48      11       90.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     14      14      13       25.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     15A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     15A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 21 20:02:47 2022

                             ??i1_EUSART_Write 0070                              __ccov108_end_blk1 27CD  
                            __ccov204_end_blk3 196E                              __ccov300_end_blk6 18A4  
                            __ccov220_end_blk7 1929                              __ccov116_end_blk7 1A89  
                          __ccov111_start_blk2 1A7E                            __ccov103_start_blk3 2710  
                             main@stored_spd_a 022A                               main@stored_spd_k 0222  
                           __pcodecov_info_hdr 0000               __end_of_TMR2_SetInterruptHandler 2735  
                                            pc 0002                               ??_spd_get_a_corr 00A8  
                    i1_TMR6_LoadPeriodRegister 267A                              __ccov109_end_blk0 1A7D  
                            __ccov205_end_blk4 1975                              __ccov117_end_blk8 1A8F  
                            __ccov221_end_blk9 192C                                             l11 2761  
                                           l14 19C9                                             l25 2755  
                                           l28 19AE                                             l71 1B6E  
                                           l97 27D2                               ??_spd_get_k_corr 00AC  
                                  i1___flmul@a 0024                                    i1___flmul@b 0020  
                          __end_ofi1_vfpfcnvrt 07FB                    __size_of_PWM6_LoadDutyValue 001B  
                            __ccov214_end_blk0 1918                              __ccov230_end_blk2 19F9  
                            __ccov206_end_blk5 1978                              __ccov118_end_blk9 1A97  
                          __Umul8_16@word_mpld 00AE                            __ccov477_start_blk0 277C  
                          __ccov565_start_blk0 1B71                            __ccov709_start_blk1 2697  
                          __ccov653_start_blk1 1E09                            __ccov645_start_blk1 1DAF  
                          __ccov549_start_blk1 080D                            __ccov485_start_blk2 1055  
                          __ccov573_start_blk3 0E78                                     i1___xxtofl 1236  
                                          l100 27DB                                            l121 2706  
                                          l106 26A7                                            l124 26F0  
                                          l300 1B41                                            l301 1B48  
                                          l118 26FB                                            l143 26E5  
                                          l304 182F                                            l161 1A57  
                                          l251 2711                                            l254 07FE  
                                          l158 1A4F                                            l280 1A97  
                                          l600 2779                                            l248 1C6E  
                                          l257 27CA                                            l409 2727  
                                          l530 18A1                                            l349 1D04  
                                          l461 271C                                            l439 1A3A  
                                          l615 269E                                            l552 2732  
                                          l722 2791                                            l298 1B3D  
                                          l379 1978                                            l483 18B6  
                                          l910 1B96                                            l831 10B6  
                                          l815 2786                                            l743 27FD  
                                          l568 276D                                            l904 085A  
                                          l818 26BA                                            l746 26C4  
                                          l907 1CD2                                            l861 1231  
                                          l870 1854                                            l919 27B7  
                                          l856 273E                                            l696 05AF  
                                          l873 2678                                            l961 0B87  
                                          l882 279D                                            l946 0FFA  
                                          l867 1879                                            l876 26B1  
                                          l990 18F8                                            l879 1C41  
                                          l985 18F1                                            l993 1DB6  
                                          l899 081D                                            l988 18F5  
                                          l996 1D72                                            l999 1C16  
                                          _PR2 001E                                            _PR4 0416  
                                          _PR6 041D                           __ccov174_start_blk11 1B41  
                                ?_led_indicate 0070                           __ccov406_start_blk78 06E2  
                              _timer1ReloadVal 01E0                                            _abs 1A04  
                                          _led 01A0                                            _pad 1F43  
                                          _spd 0161                              __ccov311_end_blk0 187E  
                            __ccov215_end_blk1 1919                              __ccov231_end_blk3 1A01  
               ?_EUSART_SetFramingErrorHandler 00A8                              __ccov207_end_blk6 197B  
                                 i1___fltol@f1 003A                        __size_of_PMD_Initialize 0010  
                              _TMR2_Initialize 1890                             __ccov14_start_blk1 1B53  
                                          wreg 0009                                   ___flmul@aexp 00C4  
                                 ___flmul@bexp 00C9                                   ___flmul@sign 00C3  
                                 ___flmul@temp 00CE                                   ___flmul@prod 00CA  
                            __ccov312_end_blk1 1885                              __ccov216_end_blk2 191B  
                            __ccov320_end_blk2 276A                              __ccov240_end_blk4 1A30  
                            __ccov232_end_blk5 1A04                            __ccov112_start_blk3 1A81  
                          __ccov104_start_blk4 2711                           __ccov661_start_blk21 1E48  
                         __ccov557_start_blk13 0834                           __ccov493_start_blk14 108A  
                         __ccov469_start_blk31 140B                           __ccov637_start_blk40 0B74  
                         __ccov581_start_blk18 0EBD                           __ccov629_start_blk26 0B14  
                         __ccov389_start_blk50 064E                           __ccov397_start_blk63 06A6  
                                 ___fltol@exp1 00DA                                           l1014 1E48  
                                         l1023 1EEA                                           l1040 27EC  
                                         l1017 1AFF                                           l1034 1F40  
                                         l1043 1842                                           ?_abs 00BB  
                                         l1037 2674                                           l1308 16ED  
                                         l1309 16FE                                           l1370 1E99  
                                         l1611 1B14                                _timer3ReloadVal 01DA  
                                         l1604 02C6                                           l1364 1E68  
                                         l1613 1B24                                           l1365 1E84  
                                         l1702 0C84                                           l1295 0950  
                                         l1296 0961                                           l1730 1D3A  
                                         l1650 1366                                           l1642 1340  
                                         l1723 0A68                                           l1716 0CFB  
                                         l1396 118E                                           l1636 1305  
                                         l1389 11A3                                           l1734 1A1F  
                                         l1638 138E                                           l1399 11A3  
                                         l1592 02D2                                           l1737 1A1F  
                                         l1649 135A                                           l1690 1F9E  
                                         l1658 18E1                                           l1772 1995  
                                         l1749 1E01                                           l1757 1BED  
                                         l1685 1F60                                           l1693 0BD6  
                                         l1694 0BE0                                           l1766 1AB8  
                                         l1598 024E                                           l1688 1F82  
                                         l7000 0204                                           l1698 0BFE  
                                         l7010 0223                                           l7002 020B  
                                         l1699 0C14                                           l6300 27D7  
                                         l7020 0237                                           l7012 022A  
                                         l7004 0217                                           l7110 1D32  
                                         l7102 1D09                                           l7030 0260  
                                         l7022 024B                                           l7006 021E  
                                         l7014 022E                                           ?_pad 00BB  
                                         l7200 1CE7                                           l6304 26A3  
                                         l7104 1D0D                                           l7040 0297  
                                         l7032 0264                                           l7016 0232  
                                         l7008 0222                                           l7210 1D01  
                                         l7202 1CF8                                           l6330 1DD3  
                                         l6322 1DB9                                           l7106 1D11  
                                         l7050 02C1                                           l7042 02A5  
                                         l7034 027C                                           l7026 0253  
                                         l7018 0233                                           l7212 2709  
                                         l7204 1CFA                                           l7140 274F  
                                         l7132 2758                                           l7220 07FB  
                                         l6500 08E4                                           l6332 1DF0  
                                         l6324 1DBF                                           l7108 1D28  
                                         l7052 02C2                                           l7044 02AE  
                                         l7028 0258                                           l7036 0280  
                                         l7060 12E9                                           l7300 0A7E  
                                         l7150 1B53                                           l7214 270C  
                                         l7206 1CFD                                           l7142 2750  
                                         l7134 275F                                           l7230 1890  
                                         l7222 2764                                           l6502 08EC  
                                         l6510 092D                                           l6334 1DF9  
                                         l6326 1DC4                                           l7054 02CA  
                                         l7046 02B0                                           l7038 028D  
                                         l7070 1316                                           l7062 12ED  
                                         l7310 0AAF                                           l7160 26DD  
                                         l7152 1B54                                           l7216 270D  
                                         l7208 1CFF                                           l7144 2751  
                                         l7240 189E                                           l7232 1893  
                                         l7224 2767                                           l6512 0932  
                                         l6504 090E                                           l6520 1640  
                                         l6328 1DC9                                           l6360 1BC3  
                                         l7048 02BD                                           l7080 1339  
                                         l7072 131B                                           l7064 12FD  
                                         l7312 0AB8                                           l7136 19B1  
                                         l7162 26E0                                           l7154 1B5C  
                                         l7218 2710                                           l7138 274C  
                                         l7250 1A2E                                           l7242 1A20  
                                         l7234 1894                                           l7226 2768  
                                         l6506 091E                                           l6530 1682  
                                         l6522 164B                                           l6514 1612  
                                         l6362 1BC7                                           l7170 1A3F  
                                         l7146 1996                                           l7090 1368  
                                         l7082 1347                                           l7074 1326  
                                         l7066 130D                                           l7058 12E4  
                                         l7330 0B09                                           l7314 0AC3  
                                         l7306 0A7F                                           l7164 26E1  
                                         l7156 1B64                                           l7148 1B4A  
                                         l7252 1A30                                           l7244 1A23  
                                         l7236 1895                                           l7228 276A  
                                         l7260 2774                                           l6508 091F  
                                         l6532 1686                                           l6540 16CA  
                                         l6524 166A                                           l6516 1614  
                                         l6364 1BD5                                           l6372 197D  
                                         l7172 1A48                                           l7092 137C  
                                         l7084 1350                                           l7076 132D  
                                         l7500 0F54                                           l7332 0B14  
                                         l7324 0AD0                                           l7316 0AC7  
                                         l7308 0AAA                                           l7166 26E2  
                                         l7158 1B6C                                           l7190 1CDC  
                                         l7182 27BD                                           l7254 1A37  
                                         l7246 1A24                                           l7238 1897  
                                         l7270 18A9                                           l7262 2776  
                                         l6542 16CF                                           l6534 168A  
                                         l6526 1677                                           l6518 161E  
                                         l6366 1BDA                                           l6374 1982  
                                         l6550 1F59                                           l6630 0B9F  
                                         l7174 1A49                                           l7094 1381  
                                         l7086 1354                                           l7078 1331  
                                         l7430 0E72                                           l7350 0B69  
                                         l7342 0B25                                           l7334 0B18  
                                         l7326 0AFB                                           l7318 0ACF  
                                         l7168 26E3                                           l7192 1CDF  
                                         l7184 1CD4                                           l7248 1A2C  
                                         l7280 196E                                           l7272 1960  
                                         l7264 18A4                                           l7256 2770  
                                         l6480 0869                                           l6536 16AC  
                                         l6528 167A                                           l6368 1BE9  
                                         l6376 1986                                           l6560 1F87  
                                         l6552 1F5E                                           l6544 1F45  
                                         l6640 0BF6                                           l6632 0BB2  
                                         l7176 1A4D                                           l7096 1385  
                                         l7088 135E                                           l7600 1BEE  
                                         l7520 0F8B                                           l7512 0F64  
                                         l7504 0F5F                                           l7440 0E79  
                                         l7432 0E74                                           l7344 0B50  
                                         l7336 0B24                                           l7328 0B00  
                                         l7352 0B74                                           l8232 06EB  
                                         l7194 1CE1                                           l7186 1CD7  
                                         l7282 1975                                           l7274 1964  
                                         l7266 18A6                                           l7258 2773  
                                         l7426 26B3                                           l6490 08C5  
                                         l6482 088B                                           l6538 16BC  
                                         l6298 27CF                                           l6378 198F  
                                         l6562 1F92                                           l6554 1F63  
                                         l6546 1F49                                           l6650 0C1B  
                                         l6642 0C06                                           l6634 0BB8  
                                         l7290 18D5                                           l6730 1A9B  
                                         l7178 1A53                                           l7610 1E1B  
                                         l7098 1386                                           l7530 0FA8  
                                         l7514 0F76                                           l7506 0F63  
                                         l7442 0E8B                                           l7434 0E78  
                                         l8234 0B7C                                           l7346 0B55  
                                ?_led_set_mode 0070                                           l6812 26F3  
                                         l7196 1CE4                                           l7188 1CDA  
                                         l7276 1965                                           l7268 18A8  
                                         l6492 08D1                                           l6484 0896  
                                         l6476 085D                                           l6556 1F6F  
                                         l6548 1F54                                           l6660 0C92  
                                         l6652 0C20                                           l6644 0C0C  
                                         l6636 0BDB                                           l6628 0B8F  
                                         l6732 1A9D                                           l7620 1E42  
                                         l7612 1E22                                           l7604 1E02  
                                         l8236 0FEA                                           l7540 0FD7  
                                         l7532 0FB1                                           l7516 0F7A  
                                         l7460 0EC6                                           l7444 0E8F  
                                         l6820 1B2D                                           l7348 0B5E  
                                         l7700 11EE                                           l6814 26FE  
                                         l7198 1CE5                                           l7278 196C  
                                         l6494 08D4                                           l6486 08B5  
                                         l6478 085F                                           l6566 1A04  
                                         l6558 1F74                                           l6670 0CC6  
                                         l6662 0C9F                                           l6654 0C4F  
                                         l6646 0C10                                           l6638 0BF0  
                                         l6734 1AAA                                           l7614 1E2B  
                                         l7606 1E09                                           l6750 1B1B  
                                         l6742 1B03                                           l7526 0F8C  
                                         l7518 0F83                                           l7470 0EFC  
                                         l7462 0EE0                                           l7454 0EA1  
                                         l7446 0E98                                           l7542 0FE2  
                                         l6830 1B38                                           l6822 1B31  
                                         l7294 0A6D                                           l7710 121B  
                                         l7702 11FB                                           l7286 269B  
                                         l6816 26E8                                           l6496 08DC  
                                         l6488 08BA                                           l6568 1A12  
                                         l6680 0CDD                                           l6672 0CCA  
                                         l6664 0CAC                                           l6656 0C53  
                                         l6648 0C18                                           l6760 097F  
                                         l7288 18D1                                           l6736 1AB7  
                                         l7608 1E12                                           l7616 1E30  
                                         l6752 1B20                                           l6744 1B05  
                                         l6920 0082                                           l6912 1185  
                                         l6904 116E                                           l7720 1ADE  
                                         l6840 1825                                           l7536 0FCC  
                                         l7528 0FA4                                           l7480 0F13  
                                         l7544 0FF5                                           l7464 0EE6  
                                         l7456 0EB9                                           l7448 0EA0  
                                         l6832 1B3A                                           l6824 1B35  
                                         l7296 0A6E                                           l7712 1229  
                                         l7704 1206                                           l7552 1C19  
                                         l7800 0826                                           l7650 1C44  
                                         l6498 08E0                                           l6674 0CCE  
                                         l6682 0CE6                                           l6666 0CBA  
                                         l6658 0C57                                           l6770 09B7  
                                         l6762 0985                                           l6738 1AB8  
                                         l7730 1050                                           l7618 1E39  
                                         l6746 1B0C                                           l6930 0095  
                                         l6922 0086                                           l6914 1193  
                                         l6906 117E                                           l7722 1AEA  
                                         l6850 182D                                           l6842 1829  
                                         l7490 0F21                                           l7482 0F1C  
                                         l7466 0EF0                                           l7458 0EBD  
                                         l6834 1B3C                                           l6826 1B36  
                                         l6818 1B25                                           l7298 0A72  
                                         l7714 122C                                           l7706 1213  
                                         l7802 082E                                           l7810 0853  
                                         l7660 1A85                                           l7652 1A78  
                                         l6676 0CD4                                           l6668 0CBF  
                                         l6780 0A1E                                           l6772 09D2  
                                         l6764 098A                                           l6756 0964  
                                         l7740 1073                                           l7732 1055  
                                         l6748 1B10                                           l6940 00B0  
                                         l6932 009D                                           l6924 008A  
                                         l6916 1198                                           l7724 1AF5  
                                         l7556 2794                                           l7812 1869  
                                         l6844 182A                                           l6860 27B0  
                                         l7492 0F39                                           l7484 0F20  
                                         l7476 0EFD                                           l7468 0EF8  
                                         l6836 1B42                                           l6828 1B37  
                                         l7716 122E                                           l7708 1214  
                                         l7820 1CB2                                           l7804 0832  
                                         l7900 0558                                           l7670 1A8F  
                                         l7662 1A86                                           l7654 1A7D  
                                         l6854 271F                                           l6678 0CD9  
                                         l6782 0A2C                                           l6766 099C  
                                         l6758 0976                                           l7750 108E  
                                         l7742 1079                                           l7734 105D  
                                         l6862 18E7                                           l6950 00C7  
                                         l6942 00B4                                           l6934 009F  
                                         l6926 008B                                           l6918 007C  
                                         l7590 1DAF                                           l7830 1F16  
                                         l7726 1AFD                                           l6846 182B  
                                         l6838 1821                                           l6870 1E4B  
                                         l7494 0F3D                                           l7478 0F0F  
                                         l7718 122F                                           l7822 1844  
                                         l7806 0834                                           l7910 057D  
                                         l7902 055B                                           l7664 1A87  
                                         l7656 1A7E                                           l6856 2714  
                                         l6776 0A03                                           l6768 09AE  
                                         l6792 0A3E                                           l7752 1094  
                                         l7760 10B1                                           l7736 1063  
                                         l7744 107F                                           l7728 1049  
                                         l6864 18EC                                           l6952 00C9  
                                         l6944 00B5                                           l6936 00A7  
                                         l6928 0090                                           l7840 1F3D  
                                         l7832 1F23                                           l7824 27DE  
                                         l7680 27FA                                           l6848 182C  
                                         l6872 1E60                                           l7496 0F46  
                                         l7816 1CA2                                           l7808 0839  
                                         l7920 0598                                           l7912 0584  
                                         l7904 0563                                           l7666 1A88  
                                         l7658 1A81                                           l6858 272A  
                                         l6794 0A5D                                           l6778 0A15  
                                         l6786 0A32                                           l7754 1096  
                                         l7746 1084                                           l7738 106C  
                                         l6866 2672                                           l6970 0125  
                                         l6962 00E4                                           l6954 00D1  
                                         l6946 00BA                                           l6938 00AC  
                                         l6890 1157                                           l6882 112F  
                                         l7594 1D3D                                           l7834 1F2C  
                                         l7770 1E9A                                           l7842 1832  
                                         l7682 27FB                                           l7674 27EF  
                                         l7850 1B78                                           l6874 1E7C  
                                         l7690 11A6                                           l7818 1CA9  
                                         l7922 059B                                           l7914 058A  
                                         l7906 056B                                           l7668 1A89  
                                         l6788 0A3B                                           l7756 10A4  
                                         l7748 108A                                           l7684 277C  
                                         l6980 016D                                           l6972 013F  
                                         l6964 00F1                                           l6956 00D6  
                                         l6948 00BF                                           l6892 1158  
                                         l6884 113B                                           l7596 1D71  
                                         l7588 1D74                                           l7836 1F2F  
                                         l7828 1EED                                           l7780 1ECC  
                                         l7772 1EA1                                           l7764 2735  
                                         l7676 27F5                                           l7852 1B81  
                                         l7844 2676                                           l6876 1E96  
                                         l7692 11AF                                           l7940 05E9  
                                         l7924 059E                                           l7916 058D  
                                         l7908 0575                                           l7758 10A8  
                                         l7686 2784                                           l6990 01A3  
                                         l6982 0174                                           l6974 014C  
                                         l6966 00FE                                           l6958 00DB  
                                         l6894 1160                                           l7838 1F3A  
                                         l7782 1ED4                                           l7774 1EAC  
                                         l7678 27F7                                           l6878 1E98  
                                         l7694 11BB                                           l7854 26AC  
                                         l7790 0806                                           l7950 0616  
                                         l7942 05EC                                           l7934 05BB  
                                         l7926 05A9                                           l7918 0594  
                                         l7688 2785                                           l6992 01B7  
                                         l6984 0181                                           l6976 0159  
                                         l6968 0118                                           l6896 1162  
                                         l6888 1144                                           l7784 1ED7  
                                         l7776 1EB4                                           l7768 26BF  
                                         l7856 2788                                           l7848 1B71  
                                         l7696 11D9                                           l7792 080D  
                                         l7960 0655                                           l7952 061B  
                                         l7944 05F3                                           l7936 05C4  
                                         l7928 05B2                                           l6994 01C4  
                                         l6986 0188                                           l6978 0160  
                                         l6898 1166                                           l7786 1EDC  
                                         l7778 1EBF                                           l7698 11E2  
                                         l7794 0812                                           l7970 0697  
                                         l7962 0668                                           l7954 0631  
                                         l7946 0606                                           l7938 05D6  
                                         l7890 052A                                           l6996 01D8  
                                         l6988 019C                                           l7788 1EE7  
                                         l7796 0819                                           l7980 06B3  
                                         l7972 069E                                           l7964 0675  
                                         l7956 0638                                           l7948 060F  
                                         l7892 0535                                           l6998 01ED  
                                         l7798 0822                                           l7990 06D8  
                                         l7982 06BD                                           l7974 06A6  
                                         l7966 067C                                           l7958 064E  
                                         l7894 054F                                           l7984 06C4  
                                         l7976 06A9                                           l7968 0681  
                                         l7992 06E2                                           l7896 0552  
                                         l7986 06C9                                           l7978 06B0  
                                         l7994 06F9                                           l7898 0555  
                                         l7996 0701                                           l7988 06D1  
                                         STR_1 21F7                                           STR_2 2214  
                                         STR_3 2230                                           STR_4 20B1  
                                         STR_5 21DA                                           STR_6 2264  
                                         STR_7 224B                                           STR_8 20FB  
                                         STR_9 21BD                              __ccov233_end_blk0 2727  
                            __ccov313_end_blk2 188D                              __ccov217_end_blk3 191D  
                            __ccov321_end_blk3 276D                              __ccov241_end_blk5 1A37  
                                         _LATA 010C                                           _LATC 010E  
                                         u7000 1DD3                                           u7001 1DD2  
                                         u7010 1DF0                                           u7011 1DEF  
                                         _PMD0 0911                                           _PMD1 0912  
                                         i1l14 1910                                           _PMD2 0913  
                                         u7015 1DEC                                           _PMD3 0914  
                                         u7040 1BE9                                           u8000 0976  
                                         _PMD4 0915                                           u7041 1BE8  
                                         u8001 0975                                           _PMD5 0916  
                                         u7050 198F                                           u8010 099C  
                                         u7051 198E                                           u8011 099B  
                                         u8020 09AE                                           u8100 1E7C  
                                         u8021 09AD                                           u8101 1E7B  
                                         u8110 1E96                                           u8111 1E95  
                                         u7400 092D                                           u7320 0869  
                                         u8040 0A15                                           u8200 1193  
                                         u8120 113B                                           u7401 092C  
                                         u7321 0868                                           u8041 0A14  
                                         u8201 1192                                           u8121 113A  
                                         u7410 0932                                           u8210 1198  
                                         u8130 1151                                           u7411 0931  
                                         u8211 1197                                           u8115 1E92  
                                         u7340 0896                                           u7500 16CA  
                                         u8220 008A                                           u8140 1166  
                                         u8060 1B41                                           u7341 0895  
                                         u7501 16C9                                           u8221 0089  
                                         u8141 1165                                           u9005 2798  
                                         u8061 1B40                                           u7510 16CF  
                                         u7430 161E                                           u9030 1E09  
                                         u8230 0090                                           u8150 116D  
                                         u7511 16CE                                           u7431 161D  
                                         u9031 1E08                                           u8231 008F  
                                         u8151 116C                                           u8135 114D  
                                         u7360 08C2                                           u8080 18F1  
                                         u9040 1E12                                           u8400 024B  
                                         u8320 01E3                                           u8240 0095  
                                         u9120 11D9                                           i1l97 27A4  
                                         u8081 18F0                                           u9041 1E11  
                                         u8401 024A                                           u8305 015A  
                                         u8241 0094                                           u9121 11D8  
                                         u7370 08D1                                           u7450 164B  
                                         u7530 1F49                                           u9210 1073  
                                         u9050 1E1B                                           u8410 0252  
                                         u8330 01FA                                           u8250 00B4  
                                         u8170 117D                                           u8090 1E60  
                                         u7371 08D0                                           u7451 164A  
                                         u7531 1F48                                           u9211 1072  
                                         u9051 1E1A                                           u8411 0251  
                                         u8315 0189                                           u8251 00B3  
                                         u8171 117C                                           u8091 1E5F  
                                         u7380 08E4                                           u7540 1F59  
                                         u9220 1084                                           u9060 1E39  
                                         u8420 0258                                           u8260 00BA  
                                         u8180 1184                                           u8500 130D  
                                         u9300 1EAC                                           u7381 08E3  
                                         u7541 1F58                                           u9221 1083  
                                         u9061 1E38                                           u8421 0257  
                                         u8325 01DF                                           u8261 00B9  
                                         u8181 1183                                           u8165 116F  
                                         u8501 130C                                           u9301 1EAB  
                                         u7390 090E                                           u7470 1677  
                                         u7550 1F82                                           u9230 108A  
                                         u9070 1E42                                           u8430 0264  
                                         u8270 00BF                                           u9310 1ECC  
                                         u9150 1213                                           u7391 090D  
                                         u7471 1676                                           u7551 1F81  
                                         u9231 1089                                           u9071 1E41  
                                         u8431 0263                                           u8335 01F6  
                                         u8271 00BE                                           u9311 1ECB  
                                         u9151 1212                                           u7480 168A  
                                         u7560 1F87                                           u7800 0C0C  
                                         u9240 1094                                           u8440 0272  
                                         u8360 0222                                           u8280 00D6  
                                         u8600 1381                                           u8520 132C  
                                         u9320 080D                                           u7481 1689  
                                         u7561 1F86                                           u7801 0C0B  
                                         u9241 1093                                           u8361 0221  
                                         u8345 0205                                           u8281 00D5  
                                         u8601 1380                                           u8521 132B  
                                         u9321 080C                                           u7490 16AC  
                                         u7570 1A12                                           u6930 27D7  
                                         u7810 0C10                                           u9170 1055  
                                         u8450 028D                                           u8290 00DB  
                                         u8610 1385                                           u9330 0812  
                                         u7395 090A                                           u7491 16AB  
                                         u7571 1A11                                           u6931 27D6  
                                         u7555 1F7E                                           u7811 0C0F  
                                         u9171 1054                                           u8451 028C  
                                         u8355 0218                                           u8291 00DA  
                                         u8195 1186                                           u8611 1384  
                                         u8515 1320                                           u9315 1EC8  
                                         u9331 0811                                           u7820 0C92  
                                         u7740 0BAA                                           u8460 02A5  
                                         u8380 0232                                           u8540 1346  
                                         u8700 0AB8                                           u9340 0822  
                                         u7821 0C91                                           u7741 0BA8  
                                         u8461 02A4                                           u8445 026E  
                                         u8381 0231                                           u8541 1345  
                                         u8701 0AB7                                           u9341 0821  
                                         u7830 0C9F                                           u7750 0BAB  
                                         u8630 1D32                                           u9190 1063  
                                         u8470 02C1                                           u8390 0237  
                                         u9270 273D                                           u9350 082E  
                                         u9510 05AF                                           u7495 16A8  
                                         u7575 1A0E                                           u7831 0C9E  
                                         u8631 1D31                                           u9191 1062  
                                         u8471 02C0                                           u8455 0289  
                                         u8391 0236                                           u8375 0224  
                                         u8535 133A                                           u9271 273B  
                                         u9351 082D                                           u9511 05AE  
                                         u7840 0CAC                                           u7760 0BB8  
                                         u8560 1354                                           u8480 12E9  
                                         u9360 1F23                                           u9280 273E  
                                         u8720 0B09                                           u9520 05D5  
                                         u7841 0CAB                                           u7825 0C8E  
                                         u7761 0BB7                                           u8465 02A1  
                                         u8561 1353                                           u8481 12E8  
                                         u9361 1F22                                           u8721 0B08  
                                         u9521 05D4                                           u7850 0CBA  
                                         u8570 135A                                           u8490 12ED  
                                         u9290 1EA1                                           u9610 06C9  
                                         u9530 05F3                                           u7851 0CB9  
                                         u8571 1359                                           u8555 134A  
                                         u8491 12EC                                           u9291 1EA0  
                                         u9611 06C8                                           u9531 05F2  
                                         u6980 1DBF                                           u7860 0CBF  
                                         u7780 0BDB                                           u8580 135E  
                                         u8740 0B5E                                           u6981 1DBE  
                                         u7861 0CBE                                           u7845 0CA8  
                                         u7781 0BDA                                           u8581 135D  
                                         u9365 1F1F                                           u8741 0B5D  
                                         u6990 1DC4                                           u7870 0CC6  
                                         u7790 0BF0                                           u7950 1AAA  
                                         u8590 1372                                           u8910 0F1C  
                                         u9630 0701                                           u9550 061B  
                                         u6991 1DC3                                           u7871 0CC5  
                                         u7855 0CB6                                           u7791 0BEF  
                                         u7951 1AA9                                           u8911 0F1B  
                                         u9631 0700                                           u9551 061A  
                                         u7880 0CCA                                           u7960 1AB7  
                                         u8680 1A53                                           u8920 0F46  
                                         u9560 0655                                           u9480 057D  
                                         u7881 0CC9                                           u7961 1AB6  
                                         u8681 1A52                                           u8921 0F45  
                                         u8665 19C2                                           u9561 0654  
                                         u9481 057C                                           u7890 0CD4  
                                         u7970 1B10                                           u8930 0F53  
                                         u9490 0594                                           u7891 0CD3  
                                         u7795 0BEC                                           u9707 1A4A  
                                         u8675 19A7                                           u7971 1B0F  
                                         u8595 136E                                           u8931 0F52  
                                         u9491 0593                                           u8860 0E98  
                                         u9580 0681                                           u8861 0E97  
                                         u9581 0680                                           u7990 1B20  
                                         u8950 0F83                                           u8870 0EC6  
                                         u9590 06B0                                           u7991 1B1F  
                                         u8951 0F82                                           u8935 0F4F  
                                         u8871 0EC5                                           u9591 06AF  
                                         u8960 0FB1                                           u8880 0EE0  
                                         u7985 1B15                                           u8961 0FB0  
                                         u8881 0EDF                                           u8970 0FCB  
                                         u8971 0FCA                                           _TMR2 001D  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUC 020E  
                                  i1_dtoa$2180 003C                                           abs@a 00BB  
                                         _dbuf 01AA                                 i1___aodiv@sign 0072  
                            __ccov234_end_blk1 272A                              __ccov410_end_blk1 2794  
                            __ccov218_end_blk4 1922                              __ccov314_end_blk4 1890  
                            __ccov322_end_blk4 2770                              __ccov242_end_blk6 1A3A  
                            __ccov170_end_blk6 1B3A                                           _main 052A  
                                         _dtoa 0B8D                                           _fuel 01CA  
                                         _menu 015F                                  i1___flmul@grs 002E  
                           __ccov119_end_blk11 1A99                                           _prec 015A  
                          __ccov662_start_blk0 1ADE                            __ccov478_start_blk1 2784  
                          __ccov566_start_blk1 1B78                            __ccov654_start_blk2 1E12  
                          __ccov486_start_blk3 105D                            __ccov646_start_blk3 1DB6  
                          __ccov670_start_blk4 1EB4                            __ccov574_start_blk7 0E79  
                                         _nout 01A4                                           pad@i 00C1  
                                         pad@p 00BD                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00C3  
                                         btemp 007E                                           _puts 1A99  
               __end_of_fuel_percent_calculate 1D74                                           start 0044  
                              __end_ofi1_fputc 1047                              __ccov235_end_blk0 266F  
                            __ccov315_end_blk0 2732                              __ccov411_end_blk0 27F5  
                              __end_ofi1_fputs 1BC3                              __ccov219_end_blk6 1924  
                            __ccov243_end_blk7 1A3D                              __ccov171_end_blk7 1B3C  
                              _TMR3_Initialize 18A4                                _PWM5_Initialize 274C  
                           __ccov15_start_blk2 1B54                                __end_ofi1_putch 2689  
                   ??_TMR1_SetInterruptHandler 00AA                                 i1___aomod@sign 0072  
                                   i1_vfprintf 1C71                              __ccov228_end_blk0 19EA  
                            __ccov236_end_blk0 1A23                              __ccov164_end_blk0 1B2D  
                            __ccov316_end_blk1 2735                              __ccov412_end_blk2 27F7  
                            __ccov260_end_blk3 19DD                              __ccov340_end_blk3 2779  
                            __ccov180_end_blk3 182B                              __ccov172_end_blk8 1B3D  
                           i1___aomod@dividend 0028                     __end_of_PWM5_LoadDutyValue 19B1  
                           __ccov400_end_blk66 06BD                            __ccov201_start_blk0 1960  
                          __ccov105_start_blk0 07FB                            __ccov113_start_blk4 1A85  
                                        ??_abs 00BD                                          ??_pad 00C0  
                    __size_of_DATAEE_WriteByte 0025                              __ccov317_end_blk0 2672  
                            __ccov501_end_blk0 273E                              __ccov229_end_blk1 19F2  
                            __ccov237_end_blk1 1A24                              __ccov165_end_blk1 1B31  
                            __ccov261_end_blk4 19E5                              __ccov341_end_blk4 277C  
                            __ccov413_end_blk4 27FA                              __ccov181_end_blk4 182C  
                      __end_of_TMR0_Initialize 1A3D                            spd_set_a_corr@value 00A9  
               ??_TMR0_DefaultInterruptHandler 007D                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000B                                  i1vfpfcnvrt@ap 0050  
                   __end_of_fuel_pwm_calculate 1DB9                                  i1vfpfcnvrt@fp 005F  
                                i1vfpfcnvrt@ll 0057                  __end_of_OSCILLATOR_Initialize 2714  
                                 ?_is_fuel_low 0070                                  ___fltol@sign1 00D9  
                              __end_of___aodiv 0962                                          _ADACT 009F  
                                        ?_main 0070                                          ?_dtoa 00C5  
                              __end_of___aomod 16FF                              __ccov254_end_blk0 26D6  
                            __ccov430_end_blk0 181C                              __ccov318_end_blk0 2767  
                            __ccov350_end_blk0 269E                              __ccov238_end_blk2 1A2C  
                            __ccov502_end_blk2 2740                              __ccov166_end_blk2 1B35  
                            __ccov270_end_blk3 18B6                              __ccov190_end_blk5 1CE4  
                            __ccov414_end_blk5 27FB                              __ccov182_end_blk5 182D  
                            __ccov262_end_blk6 19E8                              __ccov510_end_blk8 1213  
                               ??_led_indicate 002B                                          STR_10 2180  
                                        STR_11 2800                                          STR_12 280D  
                                        STR_20 211D                                          STR_21 2000  
                                        STR_13 2030                                          STR_14 215F  
                                        STR_22 205E                                          STR_15 213E  
                                        STR_16 219F                                          STR_17 2000  
                                        STR_18 20D7                                          STR_19 208A  
                              __end_of___flmul 02D3                                __end_of___fltol 11A4  
                          __ccov639_start_blk0 18E5                            __ccov647_start_blk0 1D3D  
                          __ccov663_start_blk1 1AEA                            __ccov479_start_blk2 2785  
                          __ccov567_start_blk2 1B81                            __ccov655_start_blk3 1E1B  
                          __ccov487_start_blk4 1063                            __ccov671_start_blk6 1EBF  
                           __ccov401_end_blk67 06C4                            __ccov575_start_blk8 0E8B  
                                        ?_puts 00BB                                   __ccovbit1_10 0376  
                                 __ccovbit1_13 0373                                   __ccovbit0_37 074B  
                                 __ccovbit1_22 075A                                   __ccovbit1_24 0758  
                                 __ccovbit1_25 0757                                   __ccovbit0_49 073F  
                                 __ccovbit1_42 0746                                   __ccovbit1_43 0745  
                                 __ccovbit1_36 074C                                   __ccovbit1_52 073C  
                                 __ccovbit2_14 0372                                   __ccovbit1_70 072A  
                                 __ccovbit1_48 0740                                   __ccovbit1_72 0728  
                                        _T1CON 001B                                   __ccovbit2_46 0742  
                                 __ccovbit3_15 0371                                   __ccovbit2_39 0749  
                                 __ccovbit2_73 0727                                   __ccovbit3_34 074E  
                                 __ccovbit2_76 0724                                          _T2CON 001F  
                                 __ccovbit2_93 093B                                   __ccovbit4_23 0759  
                                 __ccovbit4_31 0751                                   __ccovbit4_40 0748  
                                 __ccovbit4_50 073E                                   __ccovbit3_74 0726  
                                 __ccovbit5_11 0375                                   __ccovbit4_51 073D  
                                 __ccovbit4_44 0744                                   __ccovbit3_92 093C  
                                        _T3CON 0413                                   __ccovbit3_77 0723  
                                 __ccovbit4_47 0741                                   __ccovbit5_16 0370  
                                 __ccovbit5_35 074D                                   __ccovbit4_75 0725  
                                        _T4CON 0417                                   __ccovbit6_30 0752  
                                 __ccovbit4_94 093A                                   __ccovbit6_17 075F  
                                 __ccovbit6_41 0747                    ??_eeprom_read_error_handler 00C2  
                                 __ccovbit6_45 0743                                   __ccovbit7_32 0750  
                                        _T6CON 041E                                   __ccovbit7_38 074A  
                                 __ccovbit6_78 0722                                   __ccovbit7_71 0729  
                                 __ccovbit8_18 075E                                   __ccovbit9_12 0374  
                                 __ccovbit8_28 0754                                   __ccovbit7_95 0939  
                                 __ccovbit9_33 074F                                   __ccovbit9_19 075D  
                                 __ccovbit9_79 0721                                   __ccovbit9_96 0938  
                                        i1l100 27AC                                          i1l106 2686  
                                        i1l412 266C                                          i1l406 1A01  
                                        i1l192 003E                                          i1l193 0040  
                                        i1l185 0016                                          i1l188 002D  
                                        i1l454 26DA                                          i1l615 267E  
                                        i1l464 26CF                                          i1l393 1929  
                                        i1l458 19E5                                          i1l802 144E  
                                        i1l555 266F                                          i1l549 188D  
                                        i1l761 2689                                          i1l762 268B  
                                        i1l746 2697                                          i1l763 268E  
                                        i1l771 18B9                                          i1l773 18CC  
                                        i1l766 181A                                          i1l856 2749  
                                        i1l768 181E                                          i1l888 1525  
                                        _OSCEN 091D                     __size_of_spd_k_calibration 0032  
                         __ccov175_start_blk12 1B42                           __ccov407_start_blk80 06F9  
                                 vfpfcnvrt@fmt 012A                                          _TMR0H 0016  
                                        _TMR1H 001A                                          _TMR0L 0015  
                                        _TMR3H 0412                                          _TMR1L 0019  
                                        _TMR3L 0411                                    i1_is_moving 2740  
                                        _TRISA 008C                                          _TRISC 008E  
                                        i1_abs 192C                                          _RXPPS 0E24  
                                        i1_pad 1FA1                                          _TXPPS 0E25  
                            __ccov263_end_blk0 271C                              __ccov503_end_blk0 11AF  
                            __ccov255_end_blk1 26DA                              __ccov319_end_blk1 2768  
                            __ccov351_end_blk1 26A1                              __ccov431_end_blk2 181E  
                            __ccov239_end_blk3 1A2E                              __ccov167_end_blk3 1B36  
                            __ccov271_end_blk4 18B9                              __ccov191_end_blk6 1CE5  
                            __ccov415_end_blk6 27FD                              __ccov183_end_blk6 182F  
                            __ccov511_end_blk9 1214              __size_of_TMR0_SetInterruptHandler 000B  
                                 ?_button_init 0070                                _TMR4_Initialize 2764  
                              _PWM6_Initialize 2758                      ?_TMR0_SetInterruptHandler 00A8  
                           __ccov16_start_blk3 1B5C                         __size_of_fuel_get_corr 0011  
                             __end_of_TMR0_ISR 19E8                               __end_of_TMR1_ISR 1A04  
                             __end_of_TMR2_ISR 1890                                __end_of_led_off 1821  
                           spd_test_pwm@rising 016F                                   ?_menu_change 0070  
                   __pjmp_tab__read_correction 228D                              __ccov264_end_blk1 271F  
                            __ccov504_end_blk1 11BB                              __ccov256_end_blk2 26DD  
                            __ccov432_end_blk3 1821                              __ccov168_end_blk4 1B37  
                            __ccov360_end_blk4 0558                                _DATAEE_ReadByte 1821  
                            __ccov192_end_blk7 1CE7                              __ccov416_end_blk7 2800  
                            __ccov184_end_blk8 1832                                          _flags 00EC  
                           __ccov402_end_blk69 06C9                                 _WDT_Initialize 07FB  
                          __ccov202_start_blk1 1964                            __ccov106_start_blk1 07FE  
                          __ccov114_start_blk5 1A86                                 ??_led_set_mode 00A8  
                               i1___flmul@aexp 0032                                 i1___flmul@bexp 0033  
                                        _fputc 1DB9                                          _fputs 1BC3  
                    ??_TMR6_LoadPeriodRegister 00A8                           __ccov582_start_blk20 0EC6  
                         __ccov558_start_blk14 0839                           __ccov494_start_blk16 108E  
                         __ccov590_start_blk34 0F13                           __ccov638_start_blk42 0B87  
                         __ccov398_start_blk64 06A9                                 i1___flmul@sign 002D  
                               i1___flmul@temp 0038                                 i1___flmul@prod 0034  
                                        pad@fp 00BB                              ??_read_correction 00C4  
                             ??_spd_set_a_corr 00A8                                          _width 01A6  
                                        _putch 26A1                                          main@i 022B  
                                        dtoa@d 00C6                                          dtoa@i 00E2  
                                        dtoa@n 00DA                                          dtoa@p 00D4  
                                        dtoa@s 00D8                                          dtoa@w 00D6  
                            __ccov265_end_blk0 26CF                              __ccov257_end_blk0 19CE  
                            __ccov185_end_blk0 1CD7                              __ccov337_end_blk0 2773  
                            __ccov417_end_blk0 26C4                              __ccov409_end_blk0 2791  
                            __ccov521_end_blk0 1879                              __ccov177_end_blk0 1825  
                            __ccov505_end_blk2 11D9                              __ccov169_end_blk5 1B38  
                            __ccov361_end_blk5 055B                              __ccov193_end_blk8 1CF8  
                      __end_of_TMR1_Initialize 197B                                          pclath 000A  
                                i1putch@txData 0071                               ??_spd_set_k_corr 00AC  
                               i1___fltol@exp1 0044                                    i1_puts$2235 002A  
                                        puts@s 00BB                                          status 0003  
                                        wtemp0 007E                              __ccov266_end_blk1 26D2  
                            __ccov258_end_blk1 19D2                              __ccov434_end_blk1 18C5  
                            __ccov186_end_blk1 1CDA                              __ccov338_end_blk1 2774  
                            __ccov418_end_blk1 26C7                              __ccov178_end_blk1 1829  
                            __ccov522_end_blk2 187C                              __ccov530_end_blk2 1C44  
                            __ccov506_end_blk3 11E2                              __ccov450_end_blk5 139F  
                            __ccov362_end_blk6 0563                              __ccov194_end_blk9 1CFA  
                           __size_ofi1___aodiv 0101                             __size_ofi1___aomod 00EA  
                          __ccov648_start_blk1 1D71                             __ccov403_end_blk70 06D1  
                          __ccov664_start_blk2 1AF5                            __ccov568_start_blk3 1B96  
                          __ccov656_start_blk5 1E22                            __ccov488_start_blk6 106C  
                          __ccov672_start_blk7 1ECC                            __ccov576_start_blk9 0E8F  
                           __size_ofi1___flmul 0257                             __size_ofi1___fltol 0075  
                       __size_of_fuel_set_corr 0012                                _TMR1_WriteTimer 1913  
                               __pcodecov_info 0000                               __end_ofi1_printf 1869  
                            __ccov427_end_blk0 268B                              __ccov267_end_blk0 18A6  
                            __ccov531_end_blk0 279D                              __ccov523_end_blk0 1854  
                            __ccov259_end_blk2 19D6                              __ccov187_end_blk2 1CDC  
                            __ccov339_end_blk2 2776                              __ccov179_end_blk2 182A  
                            __ccov435_end_blk3 18CC                              __ccov507_end_blk4 11EE  
                            __ccov451_end_blk6 13A3                              __ccov363_end_blk7 056B  
                             __end_ofi1_strlen 1960                             __ccov17_start_blk4 1B64  
                                   i1printf@ap 00A2                                    i1_vfpfcnvrt 0709  
                              __initialization 0046                               _write_correction 0A6B  
                         spd_a_calibration@tmp 00AD                              __ccov700_end_blk0 27A4  
                            __ccov356_end_blk0 0535                              __ccov428_end_blk1 268E  
                            __ccov268_end_blk1 18A8                              __ccov524_end_blk1 1856  
                            __ccov532_end_blk2 27A0                              __ccov188_end_blk3 1CDF  
                            __ccov436_end_blk4 18CF                              __ccov508_end_blk5 11FB  
                            __ccov540_end_blk7 14DC                              __ccov452_end_blk8 13A9  
                            __ccov364_end_blk9 0575                                   __end_of_main 0709  
                                 __end_of_dtoa 0CFE                                  i1vfprintf@fmt 0060  
                           __ccov500_end_blk28 10BA                             __ccov404_end_blk72 06D8  
                          __ccov107_start_blk0 27BD                                   __end_of_puts 1ABB  
                          __ccov203_start_blk2 1965                            __ccov115_start_blk6 1A87  
                      write_correction@address 00CB                                  ?_fuel_set_low 0070  
                               ??_EUSART_Write 00A8                              __ccov533_end_blk0 1459  
                            __ccov525_end_blk0 2678                              __ccov357_end_blk1 054F  
                            __ccov701_end_blk2 27A9                              __ccov429_end_blk2 2691  
                            __ccov269_end_blk2 18A9                              __ccov189_end_blk4 1CE1  
                            __ccov509_end_blk7 1206                              __ccov541_end_blk8 14F8  
                            __ccov453_end_blk9 13B0                        __end_of_TMR2_Initialize 18A4  
                  ?_INTERRUPT_InterruptManager 0070                       _TMR2_SetInterruptHandler 272A  
                                       ??_main 0153                                         ??_dtoa 00CF  
                                  ?i1___xxtofl 0070                              __ccov710_end_blk0 2749  
                            __ccov294_end_blk0 1893                              __ccov614_end_blk0 0A6E  
                            __ccov534_end_blk1 145C                              __ccov526_end_blk2 267A  
                            __ccov550_end_blk2 0819                              __ccov358_end_blk2 0552  
                            __ccov702_end_blk4 27AC                              __ccov542_end_blk9 150B  
                                       ??_puts 00BE                             __ccov173_end_blk10 1B41  
                          __ccov569_start_blk0 27AE                            __ccov649_start_blk3 1D72  
                          __ccov665_start_blk3 1AFD                            __ccov489_start_blk7 1073  
                           __ccov405_end_blk76 06E2                            __ccov657_start_blk8 1E2B  
                          __ccov673_start_blk8 1ED4                 __size_of_frequency_calculation 00D7  
                      __size_of_FLASH_ReadWord 0021                  __end_of_frequency_calculation 1528  
                         __ccov512_start_blk10 1214                           __ccov176_start_blk13 1B48  
                         __ccov600_start_blk57 0F64                           __ccov408_start_blk81 0701  
                                       ?i1_abs 0073                                         ?i1_pad 0026  
                            __ccov447_end_blk0 1390                              __ccov527_end_blk0 26B1  
                            __ccov295_end_blk1 1894                              __ccov711_end_blk2 274C  
                            __ccov535_end_blk2 1464                              __ccov615_end_blk2 0A72  
                            __ccov359_end_blk3 0555                              __ccov551_end_blk4 081D  
                            __ccov703_end_blk5 27AE                                    fuel_get@tmp 00DD  
                   __end_of_fuel_uint_to_float 1C19                         __end_of_WDT_Initialize 0800  
                              _TMR6_Initialize 2770                             __ccov50_start_blk0 26A1  
                           __ccov18_start_blk5 1B6C                                 i1vfpfcnvrt@fmt 004E  
                         read_correction@s_tmp 00C7              _EUSART_DefaultFramingErrorHandler 0000  
                            __ccov704_end_blk0 2686                              __ccov640_end_blk1 18F1  
                            __ccov528_end_blk1 26B3                              __ccov448_end_blk2 1398  
                            __ccov296_end_blk2 1895                              __ccov536_end_blk3 14A8  
                            __ccov480_end_blk3 2788                              __ccov616_end_blk3 0A7E  
                            __ccov552_end_blk5 0822                              _button_is_pressed 26B3  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 01E4                             __ccov174_end_blk11 1B42  
                           __ccov406_end_blk78 06F9                                  __ccovbit11_26 0756  
                                       ?_fputc 00AA                                  __ccovbit11_80 0720  
                                __ccovbit12_53 073B                                  __ccovbit13_27 0755  
                                __ccovbit14_20 075C                                         ?_fputs 00B2  
                                       _ADRESH 009C                                         _ADRESL 009B  
                          __ccov108_start_blk1 27CA                                  __ccovbit14_29 0753  
                                __ccovbit14_54 073A                            __ccov204_start_blk3 196C  
                                __ccovbit22_55 0739                                  __ccovbit14_81 0947  
                          __ccov300_start_blk6 18A1                            __ccov220_start_blk7 1924  
                          __ccov116_start_blk7 1A88                                  __ccovbit16_21 075B  
                                __ccovbit14_97 0937                                  __ccovbit32_57 0737  
                                __ccovbit40_58 0736                                  __ccovbit16_82 0946  
                                __ccovbit32_87 0941                                  __ccovbit25_56 0738  
                                __ccovbit16_98 0936                                  __ccovbit25_85 0943  
                                __ccovbit42_90 093E                                  __ccovbit18_83 0945  
                                __ccovbit17_99 0935                                  __ccovbit34_88 0940  
                                __ccovbit43_59 0735                                  __ccovbit19_84 0944  
                                __ccovbit27_86 0942                                  __ccovbit45_60 0734  
                                __ccovbit53_61 0733                                  __ccovbit70_65 072F  
                                __ccovbit37_89 093F                                  __ccovbit46_91 093D  
                         __ccov583_start_blk21 0EE0                                  __ccovbit56_62 0732  
                         __ccov559_start_blk16 0853                           __ccov495_start_blk17 1094  
                                __ccovbit72_66 072E                           __ccov591_start_blk36 0F1C  
                                __ccovbit80_68 072C                           __ccov399_start_blk65 06B0  
                                __ccovbit81_69 072B                                  __ccovbit58_63 0731  
                                __ccovbit67_64 0730                                  __ccovbit76_67 072D  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELC 018E                                  __ccovbit1_110 092A  
                                __ccovbit1_108 092C                                  __ccovbit1_127 0919  
                                __ccovbit1_180 0EA3                                  __ccovbit1_181 0EA2  
                                __ccovbit1_158 0EB9                                  __ccovbit1_182 0EA1  
                                __ccovbit2_103 0931                                  __ccovbit2_111 0929  
                                __ccovbit2_112 0928                                  __ccovbit1_168 0EAF  
                                __ccovbit1_177 0EA6                                         _T0CON0 0017  
                                __ccovbit1_178 0EA5                                         _T0CON1 0018  
                                __ccovbit2_107 092D                                  __ccovbit2_109 092B  
                                __ccovbit2_117 0923                                  __ccovbit2_152 0900  
                                __ccovbit2_157 0EBA                                  __ccovbit2_173 0EAA  
                                __ccovbit2_159 0EB8                                  __ccovbit2_175 0EA8  
                                __ccovbit2_183 0EA0                                  __ccovbit2_176 0EA7  
                                __ccovbit2_169 0EAE                                  __ccovbit3_125 091B  
                                __ccovbit3_126 091A                                  __ccovbit3_160 0EB7  
                                __ccovbit3_155 0EBC                                  __ccovbit3_156 0EBB  
                                       _T1GCON 001C                                  __ccovbit4_118 0922  
                                __ccovbit4_170 0EAD                                  __ccovbit4_167 0EB0  
                                __ccovbit5_104 0930                                  __ccovbit5_153 0EBE  
                                __ccovbit5_161 0EB6                                         _T3GCON 0414  
                                __ccovbit5_179 0EA4                                  __ccovbit6_119 0921  
                                __ccovbit8_120 0920                                         _RA0PPS 0E90  
                                __ccovbit8_154 0EBD                                  __ccovbit8_162 0EB5  
                                       _RA1PPS 0E91                                  __ccovbit8_174 0EA9  
                                __ccovbit9_113 0927                                  __ccovbit9_121 091F  
                                       _RC1REG 0199                                         _RA2PPS 0E92  
                                __ccovbit9_128 0918                                  __ccovbit9_171 0EAC  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1308 1600  
                                       i1l1309 1611                                         _ODCONA 028C  
                                       i1l1611 1ACD                                         _ODCONC 028E  
                                       i1l1604 051D                             ?_button_is_pressed 0070  
                                       i1l1613 1ADD                                         i1l1702 0DF8  
                            __ccov481_end_blk0 26BA                              __ccov529_end_blk0 1C41  
                            __ccov561_end_blk0 1CA9                              __ccov705_end_blk1 2689  
                                       i1l1295 17EE                                         i1l5000 10E2  
                                       i1l1296 17FF                              __ccov641_end_blk2 18F5  
                            __ccov449_end_blk3 139D                              __ccov297_end_blk3 1897  
                                       i1l5002 10E3                                         i1l1650 12B9  
                                       i1l1642 1293                                         i1l1730 1CA1  
                            __ccov537_end_blk4 14B9                              __ccov617_end_blk4 0A7F  
                                       i1l1723 07FA                                         i1l5100 03FA  
                                       i1l1396 1119                                         i1l5004 10EB  
                                       i1l1636 1258                                         i1l1716 0E6F  
                            __ccov553_end_blk6 0826                                         i1l1389 112E  
                                       i1l5110 045B                                         i1l5102 040E  
                                       i1l5030 02D9                                         i1l5022 1110  
                                       i1l5014 10F9                                         i1l5006 10ED  
                                       i1l1638 12E1                                         i1l1734 1945  
                                       i1l1399 112E                                         i1l5120 047A  
                                       i1l5112 0462                                         i1l5104 041B  
                                       i1l1592 0529                                         i1l5040 02EC  
                                       i1l5032 02DD                                         i1l5024 111E  
                                       i1l5008 10F1                                         i1l5016 1109  
                                       i1l5200 12BB                                         i1l1649 12AD  
                                       i1l1737 1945                                         i1l5130 048E  
                                       i1l5122 0481                                         i1l5114 046E  
                                       i1l5106 042F                                         i1l5050 0307  
                                       i1l5042 02F4                                         i1l5034 02E1  
                                       i1l5026 1123                                         i1l5202 12CF  
                                       i1l1690 1FFF                                         i1l1658 1868  
                                       i1l5140 04B7                                         i1l5132 04A2  
                                       i1l5116 0475                                         i1l5124 0485  
                                       i1l5108 0444                                         i1l5060 031E  
                                       i1l5052 030B                                         i1l5044 02F6  
                                       i1l5036 02E2                                         i1l5028 02D3  
                                       i1l5204 12D4                                         i1l1772 195F  
                      __end_of_PWM5_Initialize 2758                        __end_of_TMR3_Initialize 18B9  
                                       i1l1749 1046                                         i1l1757 1BC2  
                                       i1l1685 1FC0                                         i1l1693 0D47  
                                       i1l1766 1A77                                         i1l5150 04EE  
                                       i1l5142 04BB                                         i1l1598 04A5  
                                       i1l5126 0489                                         i1l5118 0479  
                                       i1l5062 0320                                         i1l5054 030C  
                                       i1l5046 02FE                                         i1l5038 02E7  
                                       i1l5206 12D8                                         i1l1694 0D51  
                                       i1l5160 0518                                         i1l5152 04FC  
                                       i1l5144 04D3                                         i1l5136 04AA  
                                       i1l5128 048A                                         i1l5080 037C  
                                       i1l5072 033B                                         i1l5064 0328  
                                       i1l5056 0311                                         i1l5048 0303  
                                       i1l5208 12D9                                         i1l1688 1FE2  
                                       i1l5162 0519                                         i1l5154 0505  
                                       i1l5138 04AF                                         i1l5146 04D7  
                                       i1l5090 03C4                                         i1l5082 0396  
                                       i1l5074 0348                                         i1l5066 032D  
                                       i1l5058 0316                                         i1l5170 123C  
                                       i1l1698 0D6F                                         i1l1699 0D87  
                                       i1l5164 0521                                         i1l5156 0507  
                                       i1l5148 04E4                                         i1l5092 03CB  
                                       i1l5084 03A3                                         i1l5076 0355  
                                       i1l5068 0332                                         i1l5180 1269  
                                       i1l5172 1240                                         i1l6302 2682  
                                       i1l6310 100B                                         i1l5158 0514  
                                       i1l5094 03D8                                         i1l5086 03B0  
                                       i1l5078 036F                                         i1l5190 128C  
                                       i1l5182 126E                                         i1l5174 1250  
                                       i1l6312 1010                                         i1l7120 1A5A  
                                       i1l5096 03DF                                         i1l5088 03B7  
                                       i1l5192 129A                                         i1l5184 1279  
                                       i1l5176 1260                                         i1l5168 1237  
                                       i1l6400 1772                                         i1l6314 101A  
                                       i1l6306 1001                                         i1l7122 1A5D  
                                       i1l4650 1AC9                                         i1l5098 03F3  
                                       i1l5194 12A3                                         i1l5186 1280  
                                       i1l6410 17AC                                         i1l6402 177A  
                                       i1l7114 1856                                         i1l4722 181C  
                                       i1l6316 1037                                         i1l6308 1006  
                                       i1l6340 1B9C                                         i1l7124 1A69  
                                       i1l4716 26D2                                         i1l4652 1AD4  
                                       i1l4644 1ABC                                         i1l5196 12A7  
                                       i1l5188 1284                                         i1l6412 17BC  
                                       i1l6404 177E                                         i1l6420 1528  
                                       i1l7116 185B                                         i1l4724 18B9  
                                       i1l6318 103F                                         i1l6342 1BAA  
                                       i1l7126 1A75                                         i1l5390 191D  
                                       i1l5382 1913                                         i1l4718 26D6  
                                       i1l4654 1AD9                                         i1l4646 1ABE  
                                       i1l5198 12B1                                         i1l6414 17BD  
                                       i1l6406 1782                                         i1l6430 157D  
                                       i1l6422 1529                                         i1l6350 1947  
                                       i1l4726 18C5                                         i1l6344 1BAF  
                                       i1l7128 1A77                                         i1l5384 1918  
                                       i1l5392 1922                                         i1l4648 1AC5  
                                       i1l6408 178A                                         i1l6416 17CB  
                                       i1l6440 159D                                         i1l6432 158A  
                                       i1l6424 1533                                         i1l6352 194C  
                                       i1l6600 0DCB                                         i1l7400 13FA  
                                       i1l6346 1BBE                                         i1l6338 1B98  
                                       i1l5394 1924                                         i1l5386 1919  
                                       i1l6418 17D0                                         i1l6442 15BF  
                                       i1l6434 158D                                         i1l6426 1554  
                                       i1l6354 1950                                         i1l6450 1FA3  
                                       i1l6602 0E06                                         i1l6610 0E33  
                                       i1l7410 1425                                         i1l7402 1403  
                                       i1l5388 191B                                         i1l6444 15CF  
                                       i1l6436 1595                                         i1l6428 155E  
                                       i1l6356 1959                                         i1l6460 1FC3  
                                       i1l6452 1FA8                                         i1l6620 0E4F  
                                       i1l6612 0E3A                                         i1l6604 0E13  
                                       i1l6700 075F                                         i1l7404 140B  
                                       i1l7420 1439                                         i1l6294 27A1  
                                       i1l6390 1735                                         i1l6382 16FF  
                                       i1l6438 1599                                         i1l6446 15DD  
                                       i1l6462 1FCF                                         i1l6454 1FB4  
                                       i1l6622 0E53                                         i1l6614 0E3F  
                                       i1l6606 0E20                                         i1l6710 07B8  
                                       i1l6702 0783                                         i1l7406 1411  
                                       i1l6296 27A9                                         i1l6392 1754  
                                       i1l6384 1700                                         i1l6448 15E2  
                                       i1l6472 192C                                         i1l6464 1FD4  
                                       i1l6456 1FB9                                         i1l6616 0E44  
                                       i1l6624 0E5C                                         i1l6608 0E2E  
                                       i1l6712 07C3                                         i1l6800 1C73  
                                       i1l7416 142B                                         i1l7408 141C  
                                       i1l7360 138F                                         i1l6394 1758  
                                       i1l6386 170A                                         i1l6474 1939  
                                       i1l6466 1FE7                                         i1l6458 1FBE  
                                       i1l6618 0E4A                                         i1l6570 0D00  
                                       i1l6706 079D                                         i1l6722 07D5  
                                       i1l6802 1C77                                         i1l7418 1432  
                                       i1l7370 13A3                                         i1l7362 1390  
                                       i1l7284 26C7                                         i1l6396 1762  
                                       i1l6388 172B                                         i1l6468 1FF3  
                                       i1l6580 0D61                                         i1l6572 0D10  
                                       i1l6724 07EF                                         i1l6708 07AF  
                                       i1l6716 07C9                                         i1l6804 1C7B  
                                       i1l7380 13C1                                         i1l7372 13A9  
                                       i1l7364 1398                                         i1l7630 19D2  
                                       i1l4982 18FB                                         i1l6398 176F  
                                       i1l6590 0D8C                                         i1l6582 0D67  
                                       i1l6574 0D23                                         i1l6718 07D2  
                                       i1l6806 1C8F                                         i1l8238 1443  
                                       i1l7390 13E7                                         i1l7382 13CA  
                                       i1l7374 13B0                                         i1l7366 139D  
                                       i1l7632 19D6                                         i1l4984 267B  
                                       i1l4992 10BA                                         i1l6592 0D8F  
                                       i1l6584 0D77                                         i1l6576 0D29  
                                       i1l6808 1C99                                         i1l7560 1451  
                                       i1l7640 19F2                                         i1l7392 13EA  
                                       i1l7384 13CD                                         i1l7376 13B3  
                                       i1l7368 139F                                         i1l7634 19DD  
                                       i1l7626 19CC                                         i1l4994 10C6  
                                       i1l6594 0D94                                         i1l6586 0D7D  
                                       i1l6578 0D4C                                         i1l6690 0726  
                                       i1l7570 14B9                                         i1l7562 1459  
                                       i1l7642 19F9                                         i1l4986 2692  
                                       i1l7394 13F0                                         i1l7386 13D6  
                                       i1l7378 13BB                                         i1l7628 19CE  
                                       i1l4988 2740                                         i1l6596 0DC3  
                                       i1l6588 0D82                                         i1l6692 072C  
                                       i1l7572 14BD                                         i1l7580 150B  
                                       i1l7564 145C                                         i1l7636 19E8  
                                       i1l7396 13F2                                         i1l7388 13DE  
                                       i1l7644 187C                                         i1l4998 10CF  
                                       i1l6598 0DC7                                         i1l6694 0731  
                                       i1l6686 070B                                         i1l7582 1513  
                                       i1l7574 14D5                                         i1l7566 1464  
                                       i1l7638 19EA                                         i1l7398 13F9  
                                       i1l7646 187E                                         i1l6696 0744  
                                       i1l6688 071D                                         i1l7584 1518  
                                       i1l7576 14DC                                         i1l7568 14A8  
                                       i1l7648 1885                                         _INLVLA 038C  
                                       i1l6698 0756                                         i1l7586 151C  
                                       i1l7578 14F8                                      ??i1_fputc 0075  
                                       _INLVLC 038E                                         i1l7860 000B  
                                       i1l7870 0032                                         i1l7862 0011  
                                       i1l7872 0038                                         i1l7864 001C  
                                       i1l7866 0021                                         i1l7858 0006  
                                       i1l7868 0027                                      ??i1_fputs 0020  
                                       u530_20 10C6                                         u530_21 10C5  
                                       u531_20 10DC                               __ccov10_end_blk4 2758  
                                       u531_25 10D8                                         u540_20 02E1  
                                       u532_20 10F1                                         u540_21 02E0  
                                       u532_21 10F0                                         u541_20 02E7  
                                       u533_20 10F8                                         u541_21 02E6  
                                       u533_21 10F7                                         u702_20 1BBE  
                                       u550_20 043A                                         u542_20 02EC  
                                       u710_20 175F                                         u702_21 1BBD  
                                       u542_21 02EB                                         u550_25 0436  
                                       u534_25 10FA                                         u463_20 1AC9  
                                       u551_20 0451                                         u543_20 030B  
                                       u535_20 1108                                         u711_20 176F  
                                       u703_20 1959                                         u463_21 1AC8  
                                       u543_21 030A                                         u535_21 1107  
                                       u711_21 176E                                         u703_21 1958  
                                       u527_25 190A                                         u551_25 044D  
                                       u560_20 04AF                                         u544_20 0311  
                                       u536_20 110F                                         u528_20 2748  
                                       u712_20 1782                                         u560_21 04AE  
                                       u544_21 0310                                         u536_21 110E  
                                       u528_21 2746                                         u712_21 1781  
                                       u464_25 1ACE                                         u552_25 045C  
                                       u465_20 1AD9                                         u561_20 04BB  
                                       u545_20 0316                                         u529_20 2749  
                                       u713_20 17AC                                         u721_20 158A  
                                       u465_21 1AD8                                         u561_21 04BA  
                                       u545_21 0315                                         u713_21 17AB  
                                       u721_21 1589                                         u553_25 046F  
                                       u537_25 1111                                         u713_25 17A8  
                                       u562_20 04C9                                         u554_20 0479  
                                       u546_20 032D                                         u538_20 111E  
                                       u570_20 127F                                         u714_20 17CB  
                                       u706_20 170A                                         u722_20 159D  
                                       u730_20 1FE7                                         u554_21 0478  
                                       u546_21 032C                                         u538_21 111D  
                                       u570_21 127E                                         u714_21 17CA  
                                       u706_21 1709                                         u722_21 159C  
                                       u730_21 1FE6                                         u562_25 04C5  
                                       u563_20 04E4                                         u547_20 0332  
                                       u539_20 1123                                         u715_20 17D0  
                                       u723_20 15BF                                         u731_20 1939  
                                       u563_21 04E3                                         u547_21 0331  
                                       u539_21 1122                                         u715_21 17CF  
                                       u723_21 15BE                                         u731_21 1938  
                                       u563_25 04E0                                         u555_25 047B  
                                       u571_25 128D                                         u723_25 15BB  
                                       u731_25 1935                                         u8037jf 09FA  
                                       u564_20 04FC                                         u556_20 0489  
                                       u572_20 1299                                         u708_20 1735  
                                       u724_20 15DD                                         u468_20 18C3  
                                       u564_21 04FB                                         u556_21 0488  
                                       u572_21 1298                                         u708_21 1734  
                                       u724_21 15DC                                         u468_21 18C0  
                                       u564_25 04F8                                         u548_25 03B1  
                                       _OSCFRQ 091F                                         u565_20 0518  
                                       u557_20 048E                                         u725_20 15E2  
                                       u717_20 1533                                         u805_20 1C99  
                                       u901_20 1464                                         u565_21 0517  
                                       u557_21 048D                                         u725_21 15E1  
                                       u717_21 1532                                         u805_21 1C98  
                                       u901_21 1463                                      ??i1_putch 0071  
                                       u469_24 18C5                                         u8037jt 2297  
                                       u549_25 03E0                                         u573_25 129D  
                                       u558_20 04A2                                         u574_20 12A7  
                                       u566_20 123C                                         u902_20 1513  
                                       u910_20 1885                                         u558_21 04A1  
                                       u574_21 12A6                                         u566_21 123B  
                                       u902_21 1512                                         u910_21 1884  
                                       u559_20 04A9                                         u575_20 12AD  
                                       u567_20 1240                                         u719_20 155E  
                                       u727_20 1FA8                                         u559_21 04A8  
                                       u575_21 12AC                                         u567_21 123F  
                                       u719_21 155D                                         u727_21 1FA7  
                                       u8077jf 27B7                                         u9117jf 11AA  
                                       u576_20 12B1                                         u568_20 1260  
                                       u728_20 1FB9                                         u760_20 0D29  
                                       u576_21 12B0                                         u568_21 125F  
                                       u728_21 1FB8                                         u760_21 0D28  
                                       u9207jf 106C                                         u585_20 1918  
                                       u577_20 12C5                                         u729_20 1FE2  
                                       u585_21 1917                                         u729_21 1FE1  
                                       u8077jt 1812                                         u9117jt 228D  
                                       u577_25 12C1                                         u569_25 1273  
                                       u729_25 1FDE                                         u9137jf 11FB  
                                       u578_20 12D4                                         u770_20 0E33  
                                       u762_20 0D4C                                         u578_21 12D3  
                                       u770_21 0E32                                         u762_21 0D4B  
                                       u9207jt 1816                                         u9147jf 1201  
                                       u579_20 12D8                                         u771_20 0E3A  
                                       u763_20 0D61                                         u579_21 12D7  
                                       u771_21 0E39                                         u763_21 0D60  
                                       u9137jt 2281                                         u763_25 0D5D  
                                       u692_20 27A9                                         u908_20 19DD  
                                       u772_20 0E3F                                         u764_20 0D7D  
                                       u940_20 0021                                         u692_21 27A8  
                                       u908_21 19DC                                         u772_21 0E3E  
                                       u764_21 0D7C                                         u940_21 0020  
                                       u9147jt 228F                                         u9167jf 1229  
                                       u773_20 0E4A                                         u765_20 0D82  
                                       u909_20 19F9                                         u941_20 0027  
                                       u773_21 0E49                                         u765_21 0D81  
                                       u909_21 19F8                                         u941_21 0026  
                                       u9257jf 10A4                                         _TMR2IE 0489  
                                       u694_20 1006                                         u766_20 0E06  
                                       u758_20 0D1B                                         u942_20 0032  
                                       _TMR2IF 0089                                         u694_21 1005  
                                       u766_21 0E05                                         u758_21 0D19  
                                       u942_21 0031                                         u9167jt 2283  
                                       u766_25 0E02                                         u7907jf 0CF6  
                                       u8627jf 1D20                                         u9267jf 10B1  
                                       u9187jf 105D                                         u9507jf 05A3  
                                       u695_20 100B                                         u767_20 0E13  
                                       u759_20 0D1C                                         u791_20 071D  
                                       u943_20 0038                                         u695_21 100A  
                                       u767_21 0E12                                         u791_21 071C  
                                       u943_21 0037                                         u9257jt 2287  
                                       u8717jf 0AC2                                         u696_20 101A  
                                       u864_20 1A69                                         u768_20 0E20  
                                       u792_20 0744                                         u880_20 13C1  
                                       u696_21 1019                                         u864_21 1A68  
                                       u768_21 0E1F                                         u792_21 0743  
                                       u880_21 13C0                                         u7907jt 2299  
                                       u8627jt 2295                                         u9267jt 1818  
                                       u9187jt 1814                                         u9507jt 228B  
                                       u768_25 0E1C                                         u9607jf 06BD  
                                       u697_20 1037                                         u865_20 1A75  
                                       u769_20 0E2E                                         u793_20 0756  
                                       u881_20 13CA                                         u937_20 000B  
                                       u697_21 1036                                         u865_21 1A74  
                                       u769_21 0E2D                                         u793_21 0755  
                                       u881_21 13C9                                         u937_21 000A  
                                       u8717jt 1802                                         u697_25 1033  
                                       u769_25 0E2A                                         u8737jf 0B13  
                                       u9457jf 054F                                         u794_20 07AF  
                                       u882_20 13DE                                         u938_20 0011  
                                       u794_21 07AE                                         u882_21 13DD  
                                       u938_21 0010                                         _TX1REG 019A  
                                       u9607jt 227F                                         u8907jf 0EF0  
                                       u9627jf 06E1                                         u9547jf 060F  
                                       u9467jf 0558                                         u883_20 13E7  
                                       u939_20 001C                                         u883_21 13E6  
                                       u939_21 001B                                         u8737jt 1804  
                                       u9457jt 2285                                         u8757jf 0B68  
                                       u9477jf 056E                                         u884_20 13F9  
                                       u884_21 13F8                                         u8907jt 180A  
                                       u9627jt 1800                                         u9547jt 227B  
                                       u9467jt 0002                                         u8767jf 0B73  
                                       u885_20 1411                                         u877_20 1398  
                                       _WDTCON 0097                                         u885_21 1410  
                                       u877_21 1397                                         u8757jt 1806  
                                       u9477jt 2289                                         _TX1STA 019E  
                                       u8697jf 18E1                                         u9577jf 0675  
                                       u878_20 13A9                                         u878_21 13A8  
                                       u8767jt 1808                                         u8947jf 0F5E  
                                       u879_20 13B0                                         u879_21 13AF  
                                       u8697jt 2293                                         u9577jt 227D  
                                       u8947jt 180C                                         u8897jf 0EE5  
                                       u8987jf 0FD6                                         u8897jt 2291  
                                       u8997jf 0FE1                                         u8987jt 180E  
                                       u8997jt 1810                      _eeprom_read_error_handler 27AE  
                                       u733lld 0888                                         u742lld 0950  
                                       u735lld 08B5                                         u752lld 16ED  
                                       u744lld 163D                                         u746lld 166A  
                            __ccov706_end_blk0 267E                              __ccov650_end_blk0 1C16  
                            __ccov570_end_blk1 27BD                              __ccov562_end_blk1 1CB2  
                            __ccov482_end_blk2 26BD                              __ccov298_end_blk4 189E  
                            __ccov538_end_blk5 14BD                              __ccov642_end_blk5 18F8  
                            __ccov618_end_blk8 0AAA                              __ccov554_end_blk8 082E  
                            __ccov490_end_blk9 107F                               __end_of___xxtofl 138F  
                                       i1abs@a 0073                                         u777lld 0BD6  
                           __ccov175_end_blk12 1B48                             __ccov407_end_blk80 0701  
                          __ccov666_start_blk4 1AFF                            __ccov690_start_blk7 1F3D  
                          __ccov674_start_blk9 1ED7                                  ?_button_check 014F  
                                       i1_dtoa 0CFE                               __ccov11_end_blk0 19AE  
                                       i1pad@i 0029                                         i1pad@p 0027  
                                       i1pad@w 002B                                         i1_puts 1A5A  
                 __end_ofi1_PWM6_LoadDutyValue 1913                            ??_button_is_pressed 00A8  
                            __ccov483_end_blk0 1050                              __ccov571_end_blk0 0E74  
                            __ccov707_end_blk1 2681                              __ccov651_end_blk2 1C19  
                            __ccov563_end_blk2 1CD2                              __ccov299_end_blk5 18A1  
                            __ccov539_end_blk6 14D5                              __ccov643_end_blk8 18FB  
                            __ccov619_end_blk9 0AAF                              __ccov555_end_blk9 0832  
                                _fuel_get_corr 27DE                               __ccov12_end_blk1 19B1  
                           __ccov51_start_blk1 26A7                             __ccov19_start_blk6 1B6E  
         __end_of_TMR1_DefaultInterruptHandler 266F          __size_of_TMR1_DefaultInterruptHandler 0003  
                 _TMR1_DefaultInterruptHandler 266C                                   vfprintf@cfmt 0142  
                                  ?i1_vfprintf 0060                                   ?_TMR0_Reload 0070  
                                       ___fleq 1E4B                               __end_of_led_init 2800  
                            __ccov708_end_blk0 2697                              __ccov652_end_blk0 1E09  
                            __ccov644_end_blk0 1DAF                              __ccov548_end_blk0 080D  
                            __ccov484_end_blk1 1055                              __ccov572_end_blk2 0E78  
                            __ccov564_end_blk3 1CD4                                      ??___aodiv 00B8  
                                    ??___aomod 00B8                             __ccov512_end_blk10 121B  
                           __ccov176_end_blk13 1B4A                                 ??_fuel_set_low 00A8  
                           __ccov600_end_blk57 0F76                             __ccov408_end_blk81 0707  
                                    ??___flmul 00BE                               __ccov13_end_blk0 1B53  
                                    ??___fltol 00D4                            __ccov109_start_blk0 1A78  
                          __ccov205_start_blk4 196E                            __ccov117_start_blk8 1A89  
                          __ccov221_start_blk9 1929                               __end_of_fuel_get 1EED  
                                       _led_on 2689                               ?_TMR0_Initialize 0070  
                                       _button 0157                              __ccov477_end_blk0 2784  
                            __ccov565_end_blk0 1B78                              __ccov709_end_blk1 2699  
                            __ccov653_end_blk1 1E12                              __ccov645_end_blk1 1DB6  
                            __ccov549_end_blk1 0812                              __ccov485_end_blk2 105D  
                            __ccov573_end_blk3 0E79                        __end_of_PWM6_Initialize 2764  
                      __end_of_TMR4_Initialize 2770                               __ccov14_end_blk1 1B54  
                                       _printf 18CF                                         pad@buf 00BC  
                                       dtoa@fp 00C5                        __end_of_DATAEE_ReadByte 1832  
                                       _strlen 197B                                      ??_led_off 0070  
                            __ccov662_end_blk0 1AEA                              __ccov478_end_blk1 2785  
                            __ccov566_end_blk1 1B81                              __ccov654_end_blk2 1E1B  
                            __ccov486_end_blk3 1063                              __ccov646_end_blk3 1DB9  
                            __ccov670_end_blk4 1EBF                              __ccov574_end_blk7 0E8B  
                            __end_ofi1___aodiv 1800                                  _fuel_set_corr 1832  
                            __end_ofi1___aomod 1612                              _spd_a_calibration 1B71  
                           __ccov513_end_blk11 1229                            __ccov667_start_blk0 1E9A  
                           __ccov601_end_blk58 0F7A                            __ccov691_start_blk8 1F40  
                            __end_ofi1___flmul 052A                              __end_ofi1___fltol 112F  
                             __ccov15_end_blk2 1B5C                                         fputc@c 00AA  
                               _PMD_Initialize 27BD                                         fputs@c 00B8  
                                       fputs@i 00B9                        FLASH_ReadWord@flashAddr 00A8  
                                       fputs@s 00B2                           __ccov513_start_blk11 121B  
                         __ccov601_start_blk58 0F76                             __size_of__Umul8_16 0024  
                    __end_of_button_is_pressed 26BD                               __end_of_spd_init 1236  
                            __ccov639_end_blk0 18EC                              __ccov647_end_blk0 1D71  
                            __ccov663_end_blk1 1AF5                              __ccov479_end_blk2 2786  
                            __ccov567_end_blk2 1B96                              __ccov655_end_blk3 1E22  
                            __ccov487_end_blk4 106C                              __ccov671_end_blk6 1ECC  
                            __ccov575_end_blk8 0E8F                             ?_spd_a_calibration 0070  
                              ?_WDT_Initialize 0070                             __ccov60_start_blk0 26E8  
                             __ccov16_end_blk3 1B64                             __ccov44_start_blk0 27CD  
                              i1___fltol@sign1 0043                              _spd_uint_to_float 1C19  
                     ADC_GetConversion@channel 00AB                               __end_of_vfprintf 1D3D  
                            __ccov648_end_blk1 1D72                              __ccov664_end_blk2 1AFD  
                            __ccov568_end_blk3 1B98                              __ccov656_end_blk5 1E2B  
                            __ccov488_end_blk6 1073                              __ccov672_end_blk7 1ED4  
                            __ccov576_end_blk9 0E98       TMR2_SetInterruptHandler@InterruptHandler 00A8  
     TMR0_SetInterruptHandler@InterruptHandler 00A8       TMR1_SetInterruptHandler@InterruptHandler 00A8  
                           __ccov514_end_blk13 122C                             __ccov370_end_blk18 0598  
                           __ccov602_end_blk59 0F83                             __ccov610_end_blk77 0FE2  
                      __size_of_fuel_low_check 0049                               __ccov17_end_blk4 1B6C  
                      __end_of_TMR1_WriteTimer 192C                            __ccov214_start_blk0 1913  
                          __ccov230_start_blk2 19F2                            __ccov206_start_blk5 1975  
                          __ccov118_start_blk9 1A8F                           __ccov496_start_blk20 1096  
                         __ccov584_start_blk23 0EE6                           __ccov592_start_blk37 0F20  
                           ?_spd_uint_to_float 00D0                            ??_spd_a_calibration 00AC  
                             ?_TMR1_Initialize 0070                              __ccov569_end_blk0 27B7  
                            __ccov649_end_blk3 1D74                              __ccov665_end_blk3 1AFF  
                            __ccov489_end_blk7 1079                              __ccov657_end_blk8 1E30  
                            __ccov673_end_blk8 1ED7                                   ___xxtofl@arg 00B2  
                                 ___xxtofl@exp 00B1                              _SYSTEM_Initialize 1C44  
                                 ___xxtofl@val 00A8                                     ___fleq@ff1 00A8  
                                   ___fleq@ff2 00AC                               __ccov50_end_blk0 26A7  
                             __ccov18_end_blk5 1B6E                        __end_of__initialization 0078  
                               ??_button_check 0151                             spd_adc_to_u8@value 00A8  
                            __ccov666_end_blk4 1B01                              __ccov690_end_blk7 1F40  
                            __ccov674_end_blk9 1EDC                             ?_SYSTEM_Initialize 0070  
                           __ccov195_end_blk10 1CFD                             __ccov515_end_blk14 122E  
                           __ccov371_end_blk19 059B                            __ccov692_start_blk0 2672  
                          __ccov684_start_blk0 1EED                             __ccov603_end_blk61 0F8B  
                          __ccov668_start_blk1 1EA1                           __end_of_led_indicate 1451  
                           __ccov611_end_blk79 0FF5                            __size_ofi1___xxtofl 00AC  
                             __ccov51_end_blk1 26AA                               __ccov19_end_blk6 1B71  
                          ??_spd_uint_to_float 00D4                                     ___fltol@f1 00D0  
                                 ?i1__Umul8_16 0070                                 ?_fuel_get_corr 00A8  
                          __pjmp_tab__spd_init 0002                      __size_of_fuel_calibration 0056  
                                  i1printf@fmt 0068                                  __end_ofi1_abs 1946  
                            __ccov667_end_blk0 1EA1                              __ccov691_end_blk8 1F43  
                                __end_ofi1_pad 2000                               __ccov60_end_blk0 26F0  
                             __ccov44_end_blk0 27D2                             __ccov61_start_blk1 26F0  
                           __ccov45_start_blk2 27D2                            __pjmp_tab__vfprintf 2293  
                               __pcstackCOMMON 0070                                   __pidataBANK2 1000  
                          ??_SYSTEM_Initialize 00AA                              __ccov692_end_blk0 2674  
                            __ccov684_end_blk0 1F16                              __ccov668_end_blk1 1EAC  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                           __ccov620_end_blk10 0AB8                             __ccov196_end_blk11 1CFF  
                           __ccov372_end_blk21 059E                             __ccov516_end_blk15 122F  
                           __ccov460_end_blk18 13DE                                      ?_TMR2_ISR 0070  
                           __ccov380_end_blk36 05EC                             __ccov604_end_blk62 0F8C  
                           __ccov612_end_blk81 0FFA                  ?_TMR1_DefaultInterruptHandler 0070  
                             __ccov61_end_blk1 26F3                               __ccov45_end_blk2 27D7  
                               i1vfprintf@cfmt 0066                            __ccov311_start_blk0 187C  
                          __ccov215_start_blk1 1918                            __ccov231_start_blk3 19F9  
                          __ccov207_start_blk6 1978                               _DATAEE_WriteByte 1B25  
                         __end_of_led_set_mode 26C7                                  __end_of_fputc 1E02  
                                __end_of_fputs 1BEE                            __ccov96_start_blk14 003E  
                                __end_of_putch 26AA                               ?_TMR2_Initialize 0070  
                            __ccov685_end_blk1 1F23                              __ccov693_end_blk2 2676  
                            __ccov669_end_blk2 1EB4                        __end_of_TMR6_Initialize 277C  
                    __end_of_spd_a_calibration 1B98                               __ccov62_end_blk0 26E0  
                             __ccov46_end_blk4 27DB                         __end_of_PMD_Initialize 27CD  
                               ?_fuel_set_corr 00A8                              __ccov694_end_blk0 27EC  
                            __ccov686_end_blk2 1F2C                             __ccov365_end_blk11 057D  
                           __ccov197_end_blk12 1D01                             __ccov621_end_blk12 0AC3  
                           __ccov373_end_blk22 05A9                             __ccov517_end_blk16 1231  
                           __ccov461_end_blk19 13E7                             __ccov381_end_blk37 05F3  
                          __ccov685_start_blk1 1F16                            __ccov693_start_blk2 2674  
                          __ccov669_start_blk2 1EAC                             __ccov605_end_blk66 0FA4  
                           __ccov613_end_blk83 1000                             read_correction@tmp 00CA  
                             __ccov63_end_blk1 26E1                               __ccov47_end_blk5 27DE  
                         __size_of_is_fuel_low 0004                      __end_of_spd_uint_to_float 1C44  
                                      ??i1_abs 0075                                        ??i1_pad 007D  
                         __ccov514_start_blk13 1229                           __ccov370_start_blk18 0594  
                         __ccov602_start_blk59 0F7A                           __ccov610_start_blk77 0FD7  
                          led_set_mode@newmode 00A9                              __ccov695_end_blk2 27EF  
                            __ccov687_end_blk4 1F2F                                      ?i1_printf 0068  
                             __ccov56_end_blk0 26FB                               __ccov64_end_blk2 26E2  
                           __ccov62_start_blk0 26DD                               __ccov80_end_blk3 1A4F  
                           __ccov46_start_blk4 27D7                ??_EUSART_SetOverrunErrorHandler 00AA  
                                    ?i1_strlen 0070                          __end_of_spd_adc_to_u8 27A0  
                         __size_of_button_init 000C                                __ccov1_end_blk0 275F  
                            __ccov696_end_blk0 1842                              __ccov688_end_blk5 1F3A  
                                      ??_fputc 00AD                      __end_of_SYSTEM_Initialize 1C71  
                                      ??_fputs 00B5                            __size_ofi1_vfprintf 0031  
                           __ccov454_end_blk10 13B3                             __ccov462_end_blk20 13EA  
                           __ccov366_end_blk12 0584                             __ccov198_end_blk13 1D04  
                           __ccov622_end_blk14 0AC7                             __ccov470_end_blk32 141C  
                           __ccov374_end_blk24 05AF                             __ccov518_end_blk17 1236  
                           __ccov630_end_blk27 0B24                             __ccov390_end_blk51 0668  
                           __ccov382_end_blk38 0606                             __ccov606_end_blk67 0FA8  
                             __ccov57_end_blk1 26FE                               __ccov65_end_blk3 26E3  
                             __ccov81_end_blk5 1A53                            __ccov312_start_blk1 187E  
                          __ccov216_start_blk2 1919                            __ccov320_start_blk2 2768  
                          __ccov240_start_blk4 1A2E                            __ccov232_start_blk5 1A01  
                                      ??_putch 00A9                           __ccov577_start_blk11 0E98  
                         __ccov497_start_blk21 10A4                           __ccov585_start_blk24 0EF0  
                         __ccov593_start_blk41 0F21                          read_correction@i_1570 00D2  
                        read_correction@i_1571 00D3                          read_correction@i_1564 00CF  
                        read_correction@i_1567 00D0                          read_correction@i_1568 00D1  
                         __size_of_menu_change 000C                                     __pbssBANK1 00EC  
                                   __pbssBANK2 0157                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 27DE                                __ccov2_end_blk1 2761  
                             ?_PWM5_Initialize 0070                               ?_TMR3_Initialize 0070  
                            __ccov697_end_blk1 1844                              __ccov689_end_blk6 1F3D  
                            __pjmp_tab__printf 2285                         spd_uint_to_float@value 00D0  
                             __ccov58_end_blk0 2706                               __ccov90_end_blk4 0021  
                             __ccov66_end_blk4 26E5                               __ccov82_end_blk7 1A57  
                           __size_of_fuel_init 0023                                 i1___xxtofl@arg 007A  
                               i1___xxtofl@exp 0079                                 i1___xxtofl@val 0070  
                              __ccov3_end_blk2 2764                                        ?i1_dtoa 0030  
                            __ccov698_end_blk0 1910                             __ccov543_end_blk11 1513  
                           __ccov455_end_blk11 13BB                             __ccov463_end_blk21 13F0  
                           __ccov199_end_blk14 1D07                             __ccov367_end_blk14 058A  
                           __ccov623_end_blk15 0ACF                             __ccov375_end_blk25 05B2  
                           __ccov471_end_blk34 1425                             __ccov631_end_blk28 0B25  
                           __ccov391_end_blk52 0675                            __ccov694_start_blk0 27DE  
                          __ccov686_start_blk2 1F23                             __ccov383_end_blk39 060F  
                           __ccov607_end_blk68 0FB1                                        ?i1_puts 0026  
                             __ccov59_end_blk1 2709                               __ccov91_end_blk5 0027  
                             __ccov67_end_blk5 26E8                               __ccov83_end_blk9 1A5A  
                        read_correction@buffer 00D6                             __size_of_is_moving 000B  
                            __end_of__Umul8_16 1B25                                __ccov4_end_blk0 19C9  
                            __ccov699_end_blk1 1913                                     __pmaintext 052A  
                           __ccov63_start_blk1 26E0                               __ccov92_end_blk6 002D  
                           __ccov47_start_blk5 27DB                                        ?___fleq 00A8  
             __end_of_TMR0_SetInterruptHandler 271F                                __ccov5_end_blk1 19CC  
                                   ??_TMR0_ISR 007D                                     ??_TMR1_ISR 007E  
                                   ??_TMR2_ISR 007D                     __end_of_PWM6_LoadDutyValue 19CC  
                           __ccov544_end_blk12 1518                             __ccov456_end_blk13 13C1  
                           __ccov464_end_blk22 13F2                             __ccov632_end_blk32 0B50  
                           __ccov624_end_blk16 0AD0                             __ccov384_end_blk40 0616  
                           __ccov368_end_blk16 058D                             __ccov560_end_blk18 085D  
                           __ccov376_end_blk27 05BB                             __ccov472_end_blk37 142B  
                           __ccov392_end_blk53 067C                             __ccov608_end_blk70 0FCC  
                                   __pintentry 0004                               __ccov77_end_blk0 1A48  
                             __ccov93_end_blk7 0032                            __ccov233_start_blk0 271F  
                          __ccov313_start_blk2 1885                            __ccov217_start_blk3 191B  
                          __ccov321_start_blk3 276A                            __ccov241_start_blk5 1A30  
                                      ?_led_on 0070                            __ccov97_start_blk16 0040  
                               __ccovbit10_144 0908                                 __ccovbit11_105 092F  
                               __ccovbit11_114 0926                                 __ccovbit11_163 0EB4  
                               __ccovbit20_130 0916                                 __ccovbit12_145 0907  
                               __ccovbit21_100 0934                                 __ccovbit12_164 0EB3  
                               __ccovbit21_131 0915                                 __ccovbit13_172 0EAB  
                               __ccovbit13_165 0EB2                                 __ccovbit21_166 0EB1  
                               __ccovbit14_122 091E                                 __ccovbit14_115 0925  
                               __ccovbit22_146 0906                                 __ccovbit23_101 0933  
                               __ccovbit23_132 0914                                 __ccovbit16_123 091D  
                               __ccovbit24_133 0913                                 __ccovbit24_147 0905  
                               __ccovbit17_106 092E                                 __ccovbit17_116 0924  
                               __ccovbit18_124 091C                                 __ccovbit34_134 0912  
                               __ccovbit42_151 0901                                 __ccovbit18_129 0917  
                               __ccovbit34_148 0904                                 __ccovbit43_135 0911  
                               __ccovbit28_102 0932                                __ccov6_end_blk0 274F  
                               __ccovbit36_149 0903                                 __ccovbit45_136 0910  
                             ?_PWM6_Initialize 0070                               ?_TMR4_Initialize 0070  
                               __ccovbit70_140 090C                                 __ccovbit38_150 0902  
                               __ccovbit48_137 090F                                 __ccovbit73_141 090B  
                               __ccovbit83_143 0909                                 __ccovbit59_138 090E  
                               __ccovbit68_139 090D                                 __ccovbit77_142 090A  
                             __ccov86_end_blk0 000B                               __ccov78_end_blk1 1A49  
                             __ccov94_end_blk8 0038                                        ?_printf 0144  
                              ?_PMD_Initialize 0070                                _read_correction 0E70  
                      __size_of_ADC_Initialize 000B                                        ?_strlen 00A8  
                             ?_DATAEE_ReadByte 00A8                                 _FLASH_ReadWord 1A78  
                              __ccov7_end_blk1 2750                  i1PWM6_LoadDutyValue@dutyValue 0070  
                           __ccov625_end_blk20 0AFB                             __ccov545_end_blk13 151C  
                           __ccov457_end_blk14 13CA                             __ccov465_end_blk23 13F9  
                           __ccov377_end_blk31 05C4                             __ccov473_end_blk41 1432  
                           __ccov633_end_blk33 0B55                             __ccov369_end_blk17 0594  
                                 ?i1_is_moving 0070                             __ccov385_end_blk42 061B  
                          __ccov695_start_blk2 27EC                             __ccov393_end_blk55 0681  
                          __ccov687_start_blk4 1F2C                             __ccov609_end_blk73 0FD7  
                             __ccov87_end_blk1 0011                               __ccov79_end_blk2 1A4D  
                             __ccov95_end_blk9 003E                                      ?___xxtofl 00A8  
                         __ccov195_start_blk10 1CFA                           __ccov515_start_blk14 122C  
                         __ccov371_start_blk19 0598                           __ccov603_start_blk61 0F83  
                         __ccov611_start_blk79 0FE2                             _PWM5_LoadDutyValue 1996  
                   __size_of_button_is_pressed 000A                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                __ccov8_end_blk2 2751  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                          i1__Umul8_16@product 0074                                     ??i1_printf 007E  
                         i1_PWM6_LoadDutyValue 18FB                             __size_of_vfpfcnvrt 0109  
                                      _NVMADRH 0892                                        _NVMADRL 0891  
                                      _NVMDATH 0894                                        _OSCTUNE 091E  
                             __ccov88_end_blk2 0016                                        _NVMDATL 0893  
                           __ccov56_start_blk0 26F3                             __ccov64_start_blk2 26E1  
                           __ccov80_start_blk3 1A4D                                        _NVMCON2 0896  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                   ??i1_strlen 0072                                        _PWM6DCH 061B  
                                      _PWM6DCL 061A                                        _PWM5CON 0619  
                                      _PWM6CON 061C                       __end_of_write_correction 0B8D  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 00AA                                __ccov9_end_blk3 2755  
                           __ccov626_end_blk21 0B00                             __ccov546_end_blk14 1525  
                           __ccov458_end_blk15 13CD                             __ccov466_end_blk24 13FA  
                           __ccov378_end_blk32 05D6                             __ccov474_end_blk42 1439  
                           __ccov634_end_blk34 0B5E                             _fuel_pwm_calculate 1D74  
                           __ccov386_end_blk43 0631                             __ccov394_end_blk56 0697  
                             ?_TMR1_WriteTimer 0070                           __end_of_fuel_set_low 18FB  
                             __ccov89_end_blk3 001C                                      ?_led_init 0070  
                          __ccov234_start_blk1 2727                            __ccov410_start_blk1 2791  
                          __ccov218_start_blk4 191D                            __ccov314_start_blk4 188D  
                          __ccov322_start_blk4 276D                            __ccov242_start_blk6 1A37  
                          __ccov170_start_blk6 1B38                           __ccov658_start_blk11 1E30  
                         __ccov578_start_blk12 0EA0                           __ccov498_start_blk23 10A8  
                         __ccov594_start_blk42 0F39                           __ccov586_start_blk27 0EF8  
                          ?_PWM5_LoadDutyValue 00A8                                     _led_toggle 18B9  
                                      i1_fputc 1001                                        i1_fputs 1B98  
                                    ?_fuel_get 0070                                        i1pad@fp 002D  
                         DATAEE_WriteByte@bAdd 00A8                                        i1_putch 2681  
                                      i1dtoa@d 0030                                        i1dtoa@i 004C  
                                      i1dtoa@n 0044                                        i1dtoa@p 003E  
                                      i1dtoa@s 0042                                        i1dtoa@w 0040  
                             __ccov98_end_blk0 1C6E                                ??_fuel_get_corr 00AC  
                      __size_ofi1_led_set_mode 0008                              __ccov1_start_blk0 2758  
                          ?_fuel_pwm_calculate 00DB                                __size_ofi1_dtoa 0172  
                           __ccov491_end_blk12 1084                             __ccov627_end_blk22 0B09  
                           __ccov459_end_blk16 13D6                             __ccov547_end_blk17 1528  
                           __ccov467_end_blk25 1403                             __ccov379_end_blk35 05E9  
                           __ccov475_end_blk44 144E                             __ccov635_end_blk36 0B69  
                          __ccov696_start_blk0 1832                             __ccov387_end_blk45 0638  
                          __ccov688_start_blk5 1F2F                             __ccov395_end_blk58 069E  
                                      i1puts@s 0026                               __ccov99_end_blk1 1C71  
                              __size_ofi1_puts 001E                           _ADC_InterruptHandler 01A8  
                                 ?i1_vfpfcnvrt 004E                     ??_TMR2_SetInterruptHandler 00AA  
                           __ccov57_start_blk1 26FB                             __ccov65_start_blk3 26E2  
                           __ccov81_start_blk5 1A4F                                      ?_spd_init 00DA  
                              __size_of___fleq 004F                                        ___aodiv 085D  
                                      ___aomod 1612                                        ___flmul 007C  
                                      ___fltol 112F             __size_of_eeprom_read_error_handler 000F  
                           __ccov556_end_blk12 0834                             __ccov492_end_blk13 108A  
                           __ccov660_end_blk13 1E48                             __ccov628_end_blk24 0B14  
                            i1___aodiv@divisor 0020                             __ccov580_end_blk17 0EBD  
                           __ccov468_end_blk27 140B                             __ccov476_end_blk46 1451  
                           __ccov636_end_blk38 0B74                             __ccov396_end_blk62 06A6  
                           __ccov388_end_blk49 064E                                      ?_vfprintf 013A  
                          __ccov235_start_blk0 266C                            __ccov315_start_blk0 272A  
                          __ccov411_start_blk0 27EF                            __ccov219_start_blk6 1922  
                          __ccov243_start_blk7 1A3A                            __ccov171_start_blk7 1B3A  
                         ??_PWM5_LoadDutyValue 00AA                                ??_fuel_set_corr 00AC  
                            i1___aodiv@counter 0071                           __size_of_TMR0_Reload 000B  
                              __size_of_led_on 0008                                 __pjmp_tab__pad 2299  
                   __size_of_spd_a_calibration 0027                         __end_of_FLASH_ReadWord 1A99  
                             ?_TMR6_Initialize 0070                            spd_set_k_corr@value 00A8  
                                 ??i1___xxtofl 0074                                        __ptext1 0806  
                                      __ptext2 2699                                        __ptext3 19B1  
                                      __ptext4 1844                                        __ptext5 26AA  
                                      __ptext6 1CA2                                        __ptext7 1C19  
                                      __ptext8 11A4                                        __ptext9 0A6B  
                              __size_of_printf 0016                              __end_of_fuel_init 1B01  
                                      _led_off 181A                 ??_TMR1_DefaultInterruptHandler 0070  
                         __end_of_button_check 10BA                                __size_of_strlen 001B  
                         ??_fuel_pwm_calculate 00DD                                      _T1CONbits 001B  
                            __ccov2_start_blk1 275F                          _OSCILLATOR_Initialize 2709  
                                    _T2CONbits 001F                                   __size_of_abs 001C  
                      __size_ofi1_EUSART_Write 000E                             __ccov661_end_blk21 1E4B  
                           __ccov557_end_blk13 0839                             __ccov493_end_blk14 108E  
                           __ccov469_end_blk31 1411                             __ccov637_end_blk40 0B87  
                           __ccov581_end_blk18 0EC6                             __ccov629_end_blk26 0B18  
                           __ccov389_end_blk50 0655                            __ccov697_start_blk1 1842  
                           __ccov397_end_blk63 06A9                            __ccov689_start_blk6 1F3A  
                   __size_of_spd_uint_to_float 002B                                   __size_of_pad 005E  
                                   ??___xxtofl 00AC                                      _T3CONbits 0413  
                            __end_of_is_moving 2740              __size_of_TMR1_SetInterruptHandler 000B  
                                    _T4CONbits 0417                          ?i1_PWM6_LoadDutyValue 0070  
                         __ccov620_start_blk10 0AAF                           __ccov196_start_blk11 1CFD  
                         __ccov372_start_blk21 059B                           __ccov516_start_blk15 122E  
                         __ccov460_start_blk18 13D6                           __ccov380_start_blk36 05E9  
                         __ccov604_start_blk62 0F8B                           __ccov612_start_blk81 0FF5  
                     ??_PIN_MANAGER_Initialize 00A8                      ?_TMR1_SetInterruptHandler 00A8  
                      __size_of_spd_get_a_corr 0004                                      _T6CONbits 041E  
                           __ccov58_start_blk0 26FE                             __ccov90_start_blk4 001C  
                           __ccov66_start_blk4 26E3                             __ccov82_start_blk7 1A53  
                      __size_of_spd_get_k_corr 0013                                 _fuel_low_check 1E02  
                   __size_of_SYSTEM_Initialize 002D                                        clrloop0 0801  
                                      main@tmp 022F                                     ??_led_init 00A8  
                           __ccov582_end_blk20 0EE0                             __ccov558_end_blk14 0853  
                           __ccov494_end_blk16 1094                             __ccov590_end_blk34 0F1C  
                           __ccov638_end_blk42 0B8D                          __size_of_led_indicate 00C2  
                           __ccov398_end_blk64 06B0                           end_of_initialization 0078  
                          __ccov228_start_blk0 19E8                            __ccov236_start_blk0 1A20  
                          __ccov164_start_blk0 1B25                            __ccov316_start_blk1 2732  
                          __ccov412_start_blk2 27F5                            __ccov260_start_blk3 19D6  
                          __ccov340_start_blk3 2776                            __ccov180_start_blk3 182A  
                          __ccov172_start_blk8 1B3C                           __ccov675_start_blk11 1EDC  
                         __ccov659_start_blk12 1E39                           __ccov579_start_blk16 0EA1  
                         __ccov499_start_blk26 10B1                           __ccov595_start_blk43 0F3D  
                         __ccov587_start_blk28 0EFC          __end_of_EUSART_SetOverrunErrorHandler 2709  
       __size_of_EUSART_SetOverrunErrorHandler 000B                  _EUSART_SetOverrunErrorHandler 26FE  
                                   ??_fuel_get 00DD                                        fputc@fp 00AC  
                                      fputs@fp 00B4                             _fuel_uint_to_float 1BEE  
                            __ccov3_start_blk2 2761                              _EUSART_Initialize 1B4A  
                           __ccov583_end_blk21 0EE6                             __ccov559_end_blk16 085A  
                           __ccov495_end_blk17 1096                             __ccov591_end_blk36 0F20  
                          __ccov698_start_blk0 18FB                             __ccov399_end_blk65 06B3  
                             _fuel_calibration 1EED                             __end_ofi1___xxtofl 12E2  
                        __size_of_led_set_mode 000A                             ?_EUSART_Initialize 0070  
                                 ??i1_vfprintf 0064                              __end_of_vfpfcnvrt 0A6B  
                         __size_ofi1__Umul8_16 0023                                     ??_spd_init 00DB  
                           __ccov59_start_blk1 2706                             __ccov91_start_blk5 0021  
                           __ccov67_start_blk5 26E5                             __ccov83_start_blk9 1A57  
                      __end_of_read_correction 1000                            ?_fuel_uint_to_float 00D0  
                                ?_spd_test_pwm 0070                                     ??_vfprintf 013F  
                           __ccov496_end_blk20 10A4                             __ccov584_end_blk23 0EF0  
                           __ccov592_end_blk37 0F21                      FLASH_ReadWord@GIEBitValue 00AA  
                          __ccov317_start_blk0 266F                            __ccov501_start_blk0 2735  
                          __ccov229_start_blk1 19EA                            __ccov237_start_blk1 1A23  
                          __ccov165_start_blk1 1B2D                            __ccov261_start_blk4 19DD  
                          __ccov341_start_blk4 2779                            __ccov413_start_blk4 27F7  
                          __ccov181_start_blk4 182B                                        strlen@a 00AB  
                                      strlen@s 00AC              __end_of_eeprom_read_error_handler 27BD  
                              ?_FLASH_ReadWord 00A8                            ??_EUSART_Initialize 00AA  
                        i1__Umul8_16@word_mpld 0076                               ??_WDT_Initialize 00A8  
                     _TMR0_SetInterruptHandler 2714                                    spd_init@tmp 00DC  
                                    _PORTCbits 000E                              __ccov4_start_blk0 19B1  
                                 _led_indicate 138F                             __ccov577_end_blk11 0EA0  
                           __ccov497_end_blk21 10A8                             __ccov585_end_blk24 0EF8  
                           __ccov593_end_blk41 0F39                            __ccov699_start_blk1 1910  
                     ?_TMR6_LoadPeriodRegister 0070                         __end_of_fuel_low_check 1E4B  
                                ___xxtofl@sign 00B0                           __ccov365_start_blk11 0575  
                         __ccov197_start_blk12 1CFF                           __ccov621_start_blk12 0AB8  
                         __ccov373_start_blk22 059E                           __ccov517_start_blk16 122F  
                         __ccov461_start_blk19 13DE                           __ccov381_start_blk37 05EC  
                         __ccov605_start_blk66 0F8C                           __ccov613_start_blk83 0FFA  
                        __size_of_EUSART_Write 0011                          _frequency_calculation 1451  
                                    i1___aodiv 16FF                                      i1___aomod 1528  
                                    i1___flmul 02D3                           ??_fuel_uint_to_float 00D4  
                                    i1___fltol 10BA                             __ccov92_start_blk6 0027  
              __size_of_EUSART_SetErrorHandler 000B                       __end_of_DATAEE_WriteByte 1B4A  
                     ??_fuel_percent_calculate 00DB                             __end_ofi1_vfprintf 1CA2  
                           __ccov658_end_blk11 1E39                             __ccov578_end_blk12 0EA1  
                           __ccov498_end_blk23 10B1                             __ccov594_end_blk42 0F3D  
                           __ccov586_end_blk27 0EFC                                   _led_set_mode 26BD  
                          __ccov254_start_blk0 26D2                            __ccov430_start_blk0 181A  
                          __ccov318_start_blk0 2764                            __ccov350_start_blk0 2699  
                          __ccov238_start_blk2 1A24                            __ccov502_start_blk2 273E  
                          __ccov166_start_blk2 1B31                            __ccov270_start_blk3 18A9  
                          __ccov190_start_blk5 1CE1                            __ccov414_start_blk5 27FA  
                          __ccov182_start_blk5 182C                            __ccov262_start_blk6 19E5  
                          __ccov510_start_blk8 1206                                    ?_led_toggle 0070  
                         __ccov676_start_blk12 1EE7                           __ccov588_start_blk32 0EFD  
                         __ccov596_start_blk45 0F46                                    ___flmul@grs 00C5  
                    __end_of_EUSART_Initialize 1B71                                     main@button 0233  
                            __ccov5_start_blk1 19C9                             __ccov675_end_blk11 1EE7  
                           __ccov659_end_blk12 1E42                             __ccov579_end_blk16 0EB9  
                           __ccov499_end_blk26 10B6                             __ccov595_end_blk43 0F46  
                           __ccov587_end_blk28 0EFD                           __pjmp_tab__vfpfcnvrt 2295  
                               __end_ofi1_dtoa 0E70                                 __end_ofi1_puts 1A78  
                      __size_of_spd_set_a_corr 0009                           _timer0ReloadVal16bit 016D  
                               ??_spd_test_pwm 00AC                              i1___aomod@divisor 0020  
                           __ccov77_start_blk0 1A3D                             __ccov93_start_blk7 002D  
                            i1___aomod@counter 0071                     spd_a_calibration@stored_ch 00AF  
                      __size_of_spd_set_k_corr 0012           __end_of_TMR2_DefaultInterruptHandler 2672  
        __size_of_TMR2_DefaultInterruptHandler 0003                   _TMR2_DefaultInterruptHandler 266F  
                               __end_of___fleq 1E9A                                    __ccovbit1_2 037E  
                   _EUSART_DefaultErrorHandler 0000                                    __ccovbit1_4 037C  
                                  __ccovbit2_1 037F                                    __ccovbit1_7 0379  
                                  __ccovbit1_8 0378                                    __ccovbit1_9 0377  
                           __ccov676_end_blk12 1EEA                                    __ccovbit4_3 037D  
                           __ccov588_end_blk32 0F0F                             __ccov596_end_blk45 0F54  
                                  __ccovbit5_6 037A                                    __ccovbit6_5 037B  
                                  vfpfcnvrt@ap 012B                                    vfpfcnvrt@fp 0129  
                                  vfpfcnvrt@ll 0132                            __ccov263_start_blk0 2714  
                          __ccov503_start_blk0 11A4                            __ccov255_start_blk1 26D6  
                          __ccov319_start_blk1 2767                            __ccov351_start_blk1 269E  
                          __ccov431_start_blk2 181C                            __ccov239_start_blk3 1A2C  
                          __ccov167_start_blk3 1B35                            __ccov271_start_blk4 18B6  
                          __ccov191_start_blk6 1CE4                            __ccov415_start_blk6 27FB  
                          __ccov183_start_blk6 182D                            __ccov511_start_blk9 1213  
                                    i1fputc@fp 0074                                      i1fputs@fp 007C  
                                 _EUSART_Write 27CD                              __size_of_TMR0_ISR 001C  
                            __size_of_TMR1_ISR 001C                           __ccov119_start_blk11 1A97  
                            __size_of_TMR2_ISR 0014                                 _ADC_Initialize 26DD  
                               __end_of_led_on 2691                         ?_OSCILLATOR_Initialize 0070  
                                __pbitbssBANK0 0370                                  __pbitbssBANK1 0720  
                                __pbitbssBANK2 0900                                  __pbitbssBANK3 0EA0  
                       ??i1_PWM6_LoadDutyValue 0072                                 __end_of_printf 18E5  
                            __ccov6_start_blk0 274C                         write_correction@i_1585 00C9  
                       write_correction@i_1587 00CA                                 __end_of_strlen 1996  
                       spd_test_pwm@func_count 015D                             __ccov677_end_blk13 1EED  
                           __ccov589_end_blk33 0F13                             __ccov597_end_blk48 0F5F  
                        __size_of_fuel_set_low 0016                            start_initialization 0046  
                              ?_fuel_low_check 0070                           __ccov454_start_blk10 13B0  
                         __ccov462_start_blk20 13E7                           __ccov366_start_blk12 057D  
                         __ccov198_start_blk13 1D01                           __ccov622_start_blk14 0AC3  
                         __ccov470_start_blk32 1411                           __ccov374_start_blk24 05A9  
                         __ccov518_start_blk17 1231                           __ccov630_start_blk27 0B18  
                         __ccov390_start_blk51 0655                           __ccov382_start_blk38 05F3  
                         __ccov606_start_blk67 0FA4                       __size_of_TMR0_Initialize 001D  
              __size_of_PIN_MANAGER_Initialize 0033                                    __end_of_abs 1A20  
                                   ?i1___aodiv 0020                           __size_ofi1_is_moving 000C  
                                   ?i1___aomod 0020                                   i1vfprintf@ap 0062  
                                  __end_of_pad 1FA1                                   i1vfprintf@fp 0065  
                                   ?i1___flmul 0020                                     ?i1___fltol 003A  
                           __ccov86_start_blk0 0004                             __ccov78_start_blk1 1A48  
                           __ccov94_start_blk8 0032                               read_correction@i 00CE  
                       write_correction@buffer 00CD                              __size_ofi1_printf 0013  
                                  putch@txData 00A9                                      i1strlen@a 0073  
                                    i1strlen@s 0074                              __size_ofi1_strlen 001A  
                           __ccov598_end_blk52 0F63                            __ccov264_start_blk1 271C  
                          __ccov504_start_blk1 11AF                            __ccov256_start_blk2 26DA  
                          __ccov432_start_blk3 181E                            __ccov168_start_blk4 1B36  
                          __ccov360_start_blk4 0555                            __ccov192_start_blk7 1CE5  
                          __ccov416_start_blk7 27FD                            __ccov184_start_blk8 182F  
                         __ccov677_start_blk13 1EEA                           __ccov589_start_blk33 0F0F  
                         __ccov597_start_blk48 0F54                            read_correction@type 00C2  
                               i1_led_set_mode 2691                                       ??i1_dtoa 0038  
                          DATAEE_ReadByte@bAdd 00A8                                       ??i1_puts 007D  
                            __ccov7_start_blk1 274F                             __ccov599_end_blk53 0F64  
               ?_EUSART_SetOverrunErrorHandler 00A8                       __size_of_TMR1_Initialize 001B  
                                  vfprintf@fmt 013B                     _EUSART_FramingErrorHandler 01E6  
                                     ??___fleq 00B0                               ??_PMD_Initialize 00A8  
                             ?_read_correction 00C2                             __ccov87_start_blk1 000B  
                           __ccov79_start_blk2 1A49                             __ccov95_start_blk9 0038  
                       _EUSART_SetErrorHandler 26E8                           __size_ofi1_vfpfcnvrt 00F2  
                        __size_of_button_check 0073                         __end_of_ADC_Initialize 26E8  
                                    __Umul8_16 1B01                                       ??_led_on 0070  
                                  __pdataBANK2 016F                                   _fuel_set_low 18E5  
                          __ccov265_start_blk0 26C7                            __ccov257_start_blk0 19CC  
                          __ccov185_start_blk0 1CD4                            __ccov337_start_blk0 2770  
                          __ccov417_start_blk0 26BD                            __ccov409_start_blk0 2788  
                          __ccov521_start_blk0 1869                            __ccov177_start_blk0 1821  
                          __ccov505_start_blk2 11BB                            __ccov169_start_blk5 1B37  
                          __ccov361_start_blk5 0558                            __ccov193_start_blk8 1CE7  
                                ??_is_fuel_low 00A8                __end_of_TMR6_LoadPeriodRegister 26A1  
                ?_TMR2_DefaultInterruptHandler 0070                            __size_of_led_toggle 0016  
                         __ccov400_start_blk66 06B3                                       ??_printf 014B  
                                     ??_strlen 00AA                                 i1_EUSART_Write 27A0  
                            __ccov8_start_blk2 2750                    PWM5_LoadDutyValue@dutyValue 00A8  
                                ??_button_init 00A9                                      ___flmul@a 00BA  
                                    ___flmul@b 00B6                         ?_frequency_calculation 0070  
                               _spd_get_a_corr 2676                                      ___latbits 0003  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0129                                  __pcstackBANK4 0220  
                             ___aodiv@dividend 00B0                           __ccov543_start_blk11 150B  
                         __ccov455_start_blk11 13B3                           __ccov463_start_blk21 13EA  
                         __ccov199_start_blk14 1D04                           __ccov367_start_blk14 0584  
                         __ccov623_start_blk15 0AC7                           __ccov375_start_blk25 05AF  
                         __ccov471_start_blk34 141C                           __ccov631_start_blk28 0B24  
                         __ccov391_start_blk52 0668                                  ??_menu_change 00A8  
                         __ccov383_start_blk39 0606                           __ccov607_start_blk68 0FA8  
                  __pjmp_tab__write_correction 227B                             _PWM6_LoadDutyValue 19B1  
                     __size_of_TMR2_Initialize 0014                                 _spd_get_k_corr 1869  
                            __size_of___xxtofl 00AD                             __ccov88_start_blk2 0011  
                            ?_write_correction 00C1             __size_ofi1_TMR6_LoadPeriodRegister 0007  
                   ?i1_TMR6_LoadPeriodRegister 0070                         __end_ofi1_led_set_mode 2699  
                       read_correction@address 00D4                                i1___xxtofl@sign 0078  
              __size_of_fuel_percent_calculate 0037                             ??_write_correction 00C5  
                                     ?i1_fputc 0072                                       ?i1_fputs 007A  
                          __ccov266_start_blk1 26CF                            __ccov258_start_blk1 19CE  
                          __ccov434_start_blk1 18B9                            __ccov186_start_blk1 1CD7  
                          __ccov338_start_blk1 2773                            __ccov418_start_blk1 26C4  
                          __ccov178_start_blk1 1825                            __ccov522_start_blk2 1879  
                          __ccov530_start_blk2 1C41                            __ccov506_start_blk3 11D9  
                          __ccov450_start_blk5 139D                            __ccov362_start_blk6 055B  
                          __ccov194_start_blk9 1CF8                           __ccov598_start_blk52 0F5F  
                          ?_PWM6_LoadDutyValue 00A8                                       ?i1_putch 0070  
                   __size_of_EUSART_Initialize 0027                              __size_of_led_init 0011  
                        _TMR0_InterruptHandler 01DC                                      __pnvBANK2 016D  
                                    __pnvBANK3 01D8                                   _button_check 1047  
                            __size_of_fuel_get 0053                              __ccov9_start_blk3 2751  
                          fuel_calibration@tmp 00DD                         _PIN_MANAGER_Initialize 1CD4  
                                    _dtoa$2180 00D2                       __size_of_PWM5_Initialize 000C  
                     __size_of_TMR3_Initialize 0015               __end_of_TMR1_SetInterruptHandler 272A  
                     i1__Umul8_16@multiplicand 0070                                       ?___aodiv 00A8  
                                     ?___aomod 00A8                             __ccov89_start_blk3 0016  
                                    __ptext100 1236                                      __ptext101 10BA  
                                    __ptext110 1A5A                                      __ptext102 02D3  
                             ___aodiv@quotient 00BB                                      __ptext111 1B98  
                                    __ptext103 1ABB                                      __ptext112 1001  
                                    __ptext104 267A                                      __ptext113 2681  
                                    __ptext105 18FB                                      __ptext114 27A0  
                                    __ptext106 26D2                                      __ptext107 1913  
                                    __ptext108 19CC                                      __ptext109 26C7  
                                     ?___flmul 00B6                                       ?___fltol 00D0  
                                   ?__Umul8_16 00A8                         __size_of_spd_adc_to_u8 000C  
                              ?_ADC_Initialize 0070                              __size_of_spd_init 0092  
                          __ccov427_start_blk0 2689                            __ccov267_start_blk0 18A4  
                          __ccov531_start_blk0 2794                            __ccov523_start_blk0 1844  
                          __ccov259_start_blk2 19D2                            __ccov187_start_blk2 1CDA  
                          __ccov339_start_blk2 2774                            __ccov179_start_blk2 1829  
                          __ccov435_start_blk3 18C5                            __ccov507_start_blk4 11E2  
                          __ccov451_start_blk6 139F                            __ccov363_start_blk7 0563  
                         ??_PWM6_LoadDutyValue 00AA                         __end_ofi1_EUSART_Write 27AE  
                 ??_INTERRUPT_InterruptManager 007E                           __ccov401_start_blk67 06BD  
                            __size_of_vfprintf 0036                         __end_of_spd_get_a_corr 267A  
                                     ?_led_off 0070                                       _BAUD1CON 019F  
                       __end_of_spd_get_k_corr 187C                       __end_of_fuel_calibration 1F43  
                               __size_ofi1_abs 001A                                 __size_ofi1_pad 005F  
                          __end_of_is_fuel_low 2676                                      _fuel_init 1ADE  
                                  ??i1___aodiv 0070                           __ccov544_start_blk12 1513  
                         __ccov456_start_blk13 13BB                           __ccov464_start_blk22 13F0  
                         __ccov632_start_blk32 0B25                           __ccov624_start_blk16 0ACF  
                         __ccov384_start_blk40 060F                           __ccov368_start_blk16 058A  
                         __ccov560_start_blk18 085A                           __ccov376_start_blk27 05B2  
                         __ccov472_start_blk37 1425                           __ccov392_start_blk53 0675  
                         __ccov608_start_blk70 0FB1                                    ??i1___aomod 0070  
                     __size_of_PWM6_Initialize 000C                       __size_of_TMR4_Initialize 000C  
                                  ??i1___flmul 0028                                    ??i1___fltol 003E  
                         __end_of_spd_test_pwm 085D                                       _T0CKIPPS 0E11  
                           __ccov98_start_blk0 1C44                                 __size_of_fputc 0049  
                               __size_of_fputs 002B                                      _is_moving 2735  
                     __size_of_DATAEE_ReadByte 0011                           i1EUSART_Write@txData 0070  
                               __size_of_putch 0009                                ?i1_led_set_mode 0070  
                          __end_of_button_init 2788              __end_ofi1_TMR6_LoadPeriodRegister 2681  
                          __ccov700_start_blk0 27A0                            __ccov356_start_blk0 052A  
                          __ccov428_start_blk1 268B                            __ccov268_start_blk1 18A6  
                          __ccov524_start_blk1 1854                            __ccov532_start_blk2 279D  
                          __ccov188_start_blk3 1CDC                            __ccov436_start_blk4 18CC  
                          __ccov508_start_blk5 11EE                            __ccov540_start_blk7 14D5  
                          __ccov452_start_blk8 13A3                            __ccov364_start_blk9 056B  
                         __ccov599_start_blk53 0F63                              ??_TMR0_Initialize 00AA  
                          __end_of_menu_change 2794                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00A8                                       _LATCbits 010E  
                                    clear_ram0 0800                                       _PIE0bits 0090  
                                     _PIE1bits 0091                              _eusartRxLastError 0160  
                        __end_of_fuel_get_corr 27EF                        fuel_uint_to_float@value 00D0  
                     __size_of_TMR1_WriteTimer 0019            __size_of_INTERRUPT_InterruptManager 0040  
                               _spd_set_a_corr 26AA                     ??_TMR0_SetInterruptHandler 00AA  
                                     _PIR0bits 0010                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00AA                                       _PIR2bits 0012  
                                     _PIR3bits 0013                                      _puts$2235 00C0  
                             ??_FLASH_ReadWord 00AA                                  ??_TMR0_Reload 0070  
                                     u720_2lld 157D                              __ccov96_end_blk14 0040  
                               _spd_set_k_corr 1844                                       u707_2lld 1729  
                                     u716_2lld 17EE                                       u709_2lld 1754  
                                     u726_2lld 1600                                       u718_2lld 1552  
                                     u761_2lld 0D47                                       _TMR0_ISR 19CC  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 19E8  
                           __ccov99_start_blk1 1C6E                                       _TMR2_ISR 187C  
                       _fuel_percent_calculate 1D3D                    __size_of_PWM5_LoadDutyValue 001B  
                                    _vfpfcnvrt 0962                            __ccov533_start_blk0 1451  
                          __ccov525_start_blk0 2676                            __ccov357_start_blk1 0535  
                          __ccov701_start_blk2 27A4                            __ccov429_start_blk2 268E  
                          __ccov269_start_blk2 18A8                            __ccov189_start_blk4 1CDF  
                          __ccov509_start_blk7 11FB                            __ccov541_start_blk8 14DC  
                          __ccov453_start_blk9 13A9                                ?i1_EUSART_Write 0070  
                            ??_TMR1_Initialize 00AA                          __end_of_fuel_set_corr 1844  
                                   _ADCON0bits 009D                              __ccov97_end_blk16 0044  
                         __ccov402_start_blk69 06C4                                ?_spd_get_a_corr 0070  
                  __size_of_fuel_pwm_calculate 0045                                ?_spd_get_k_corr 00A8  
                        i1led_set_mode@newmode 0071                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 000B                        fuel_low_check@low_count 015C  
                    ?_TMR2_SetInterruptHandler 00A8                                       i1_printf 1856  
                                     i1pad@buf 0026                                     ?_fuel_init 0070  
                        DATAEE_WriteByte@bData 00AA                                       i1dtoa@fp 003B  
                         __ccov625_start_blk20 0AD0                           __ccov545_start_blk13 1518  
                         __ccov457_start_blk14 13C1                           __ccov465_start_blk23 13F2  
                         __ccov377_start_blk31 05BB                           __ccov473_start_blk41 142B  
                         __ccov633_start_blk33 0B50                           __ccov369_start_blk17 058D  
                                     i1_strlen 1946                           __ccov385_start_blk42 0616  
                         __ccov393_start_blk55 067C                           __ccov609_start_blk73 0FCC  
                     __size_of_TMR6_Initialize 000C                                       i1fputc@c 0072  
                                     i1fputs@c 0023                                       i1fputs@i 0024  
                                     i1fputs@s 007A                                     ?_is_moving 0070  
                                _spd_adc_to_u8 2794                                   ??_led_toggle 0070  
                            ?_DATAEE_WriteByte 00A8                            __ccov710_start_blk0 2740  
                          __ccov294_start_blk0 1890                            __ccov614_start_blk0 0A6B  
                          __ccov534_start_blk1 1459                            __ccov526_start_blk2 2678  
                          __ccov550_start_blk2 0812                            __ccov358_start_blk2 054F  
                          __ccov702_start_blk4 27A9                            __ccov542_start_blk9 14F8  
                            ??_TMR2_Initialize 00AA                               __size_ofi1_fputc 0046  
                             __size_ofi1_fputs 002B                             ??_DATAEE_WriteByte 00AB  
                             __size_ofi1_putch 0008               __size_of_TMR6_LoadPeriodRegister 0008  
                       __end_of_spd_set_a_corr 26B3                          write_correction@value 00C2  
                                ??i1__Umul8_16 0072                         __end_of_spd_set_k_corr 1856  
                                   vfprintf@ap 013D                                     vfprintf@fp 013A  
                            _ADC_GetConversion 1A3D                        ??_OSCILLATOR_Initialize 00A8  
                                  ??__Umul8_16 00AA                            _EUSART_ErrorHandler 01E2  
                           ?_ADC_GetConversion 00A8                               __size_of___aodiv 0105  
                             __size_of___aomod 00ED                               __size_of___flmul 0257  
                             __size_of___fltol 0075                                     ?_vfpfcnvrt 0129  
                        spd_test_pwm@spd_count 00EE                               ??_fuel_low_check 00AA  
                           i1___aodiv@dividend 0028                            __ccov447_start_blk0 138F  
                          __ccov527_start_blk0 26AA                            __ccov295_start_blk1 1893  
                          __ccov711_start_blk2 2749                            __ccov535_start_blk2 145C  
                          __ccov615_start_blk2 0A6E                            __ccov359_start_blk3 0552  
                          __ccov551_start_blk4 0819                            __ccov703_start_blk5 27AC  
                                  _is_fuel_low 2672                                ___aodiv@divisor 00A8  
                            ??_PWM5_Initialize 00A8                              ??_TMR3_Initialize 00A8  
                     _TMR1_SetInterruptHandler 271F                            __end_of_TMR0_Reload 26DD  
                              ___aodiv@counter 00B9                             __end_of_led_toggle 18CF  
                   ?_eeprom_read_error_handler 00C1                           __ccov403_start_blk70 06C9  
                        _TMR1_InterruptHandler 01DE                            ??_ADC_GetConversion 00AA  
                             __size_of_led_off 0007                                __pjmp_tab__dtoa 2297  
                                     ___xxtofl 12E2                                     _T0CON0bits 0017  
                              __pjmp_tab__puts 1800                                    _button_init 277C  
                                  _menu_change 2788                           __ccov626_start_blk21 0AFB  
                         __ccov546_start_blk14 151C                           __ccov458_start_blk15 13CA  
                         __ccov466_start_blk24 13F9                           __ccov378_start_blk32 05C4  
                         __ccov474_start_blk42 1432                           __ccov634_start_blk34 0B55  
                         __ccov386_start_blk43 061B                           __ccov394_start_blk56 0681  
                                     __ptext10 1B25                                       __ptext11 0E70  
                                     __ptext20 26BD                                       __ptext12 27AE  
                                     __ptext21 27EF                                       __ptext13 1E4B  
                                   _T1GCONbits 001C                                       __ptext30 1D3D  
                                     __ptext22 2735                                       __ptext14 1821  
                                     __ptext31 12E2                                       __ptext23 1832  
                                     __ptext15 1869                                       __ptext40 277C  
                                     __ptext32 112F                                       __ptext24 1ADE  
                                     __ptext16 2676                                       __ptext41 1047  
                                     __ptext33 007C                                       __ptext25 27DE  
                                     __ptext17 1B71                                       __ptext50 1DB9  
                                     __ptext42 1A99                                       __ptext34 1B01  
                                     __ptext26 1E9A                                       __ptext18 2794  
                                     __ptext51 26A1                                       __ptext43 18CF  
                                     __ptext35 1E02                                       __ptext27 1EED  
                                     __ptext19 2788                                       __ptext60 2764  
                                     __ptext52 27CD                                       __ptext44 1D07  
                                     __ptext36 2672                                       __ptext28 1BEE  
                                     __ptext61 18A4                                       __ptext53 1A04  
                                     __ptext45 0962                                       __ptext37 18E5  
                                     __ptext29 1D74                                       __ptext70 27BD  
                                     __ptext62 1890                                       __ptext54 1612  
                                     __ptext46 0B8D                                       __ptext38 1996  
                                     __ptext71 1CD4                                       __ptext63 272A  
                                     __ptext55 085D                                       __ptext47 1F43  
                                     __ptext39 1A3D                                       __ptext80 187C  
                                     __ptext72 2709                                       __ptext64 1960  
                                     __ptext56 26B3                                       __ptext48 197B  
                                     __ptext81 266F                                       __ptext73 1B4A  
                                     __ptext65 271F                                       __ptext57 1C44  
                                     __ptext49 1BC3                                       __ptext90 1856  
                                     __ptext82 138F                                       __ptext74 26FE  
                                     __ptext66 1A20                                       __ptext58 07FB  
                                     __ptext91 1C71                                       __ptext83 2691  
                                     __ptext75 26F3                                       __ptext67 2714  
                                     __ptext59 2770                                       __ptext92 0709  
                                     __ptext84 18B9                                       __ptext76 26E8  
                                     __ptext68 2758                                       __ptext93 0CFE  
                                     __ptext85 2689                                       __ptext77 26DD  
                                     __ptext69 274C                                       __ptext94 1FA1  
                                     __ptext86 181A                                       __ptext78 1A78  
                                     __ptext95 1946                                       __ptext87 19E8  
                                     __ptext96 192C                                       __ptext88 266C  
                                     __ptext97 1528                                       __ptext89 1451  
                                     __ptext98 16FF                                       __ptext99 2740  
                               ?_spd_adc_to_u8 00A8                    __size_of_fuel_uint_to_float 002B  
                            led_indicate@delay 015E                                       _led_init 27EF  
                            led_indicate@count 00EF                                     _T3GCONbits 0414  
                  DATAEE_WriteByte@GIEBitValue 00AB                                       _fuel_get 1E9A  
                          __ccov704_start_blk0 2681                            __ccov640_start_blk1 18EC  
                          __ccov528_start_blk1 26B1                            __ccov448_start_blk2 1390  
                          __ccov296_start_blk2 1894                            __ccov536_start_blk3 1464  
                          __ccov480_start_blk3 2786                            __ccov616_start_blk3 0A72  
                          __ccov552_start_blk5 081D             i1TMR6_LoadPeriodRegister@periodVal 0070  
             TMR6_LoadPeriodRegister@periodVal 00A8                              ??_PWM6_Initialize 00A8  
                            ??_TMR4_Initialize 00A8                                  __size_of_main 01DF  
                                __size_of_dtoa 0171                                  __size_of_puts 0022  
                           i1___aodiv@quotient 0073                                ?_spd_set_a_corr 0070  
         __end_of_TMR0_DefaultInterruptHandler 26D2          __size_of_TMR0_DefaultInterruptHandler 000B  
                 _TMR0_DefaultInterruptHandler 26C7                              ??_DATAEE_ReadByte 00AA  
                    __end_of_ADC_GetConversion 1A5A                              write_correction@i 00C8  
                      ?_EUSART_SetErrorHandler 00A8                                ?_spd_set_k_corr 00A8  
                                   _RC1STAbits 019D                                fuel_set_low@var 00A9  
EUSART_SetOverrunErrorHandler@interruptHandler 00A8                                       _spd_init 11A4  
                                     int$flags 007E                            __end_ofi1__Umul8_16 1ADE  
                                     _vfprintf 1D07             __end_of_INTERRUPT_InterruptManager 0044  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0144  
        __end_of_EUSART_SetFramingErrorHandler 26FE         __size_of_EUSART_SetFramingErrorHandler 000B  
                _EUSART_SetFramingErrorHandler 26F3                              ??_TMR1_WriteTimer 0072  
                           fuel_set_corr@value 00A8                        ??_frequency_calculation 00A4  
                          __ccov481_start_blk0 26B3                            __ccov529_start_blk0 1C19  
                          __ccov561_start_blk0 1CA2                            __ccov705_start_blk1 2686  
                          __ccov641_start_blk2 18F1                            __ccov449_start_blk3 1398  
                          __ccov297_start_blk3 1895                            __ccov537_start_blk4 14A8  
                          __ccov617_start_blk4 0A7E                            __ccov553_start_blk6 0822  
                             ___aomod@dividend 00B0                           __ccov500_start_blk28 10B6  
                         __ccov404_start_blk72 06D1                                  ??i1_is_moving 0070  
                        __size_of_spd_test_pwm 0057                     spd_k_calibration@stored_ch 00D7  
                                   _INTCONbits 000B                             __ccov10_start_blk4 2755  
         __pjmp_tab__eeprom_read_error_handler 2291                           write_correction@type 00C1  
                                  _NVMCON1bits 0895                  __size_ofi1_PWM6_LoadDutyValue 0018  
                                  ??_fuel_init 00DD                              _spd_k_calibration 1CA2  
                               __pstringtext10 215F                                 __pstringtext11 2180  
                               __pstringtext20 2800                                 __pstringtext12 219F  
                               __pstringtext21 280D                                 __pstringtext13 21BD  
                               __pstringtext22 0000                                 __pstringtext14 21DA  
                               __pstringtext15 21F7                                 __pstringtext16 2214  
                               __pstringtext17 2230                                 __pstringtext18 224B  
                               __pstringtext19 2264                            __ccov100_start_blk0 2709  
                         __ccov491_start_blk12 107F                           __ccov627_start_blk22 0B00  
                         __ccov459_start_blk16 13CD                           __ccov547_start_blk17 1525  
                         __ccov467_start_blk25 13FA                           __ccov379_start_blk35 05D6  
                         __ccov475_start_blk44 1439                           __ccov635_start_blk36 0B5E  
                         __ccov387_start_blk45 0631                           __ccov395_start_blk58 0697  
                      __pjmp_tab__button_check 2289                                    ??_is_moving 00A8  
                           ?_spd_k_calibration 0070                        __size_of_WDT_Initialize 0005  
                  ??i1_TMR6_LoadPeriodRegister 0070                                       intlevel1 0000  
                       i1__Umul8_16@multiplier 0078                            __ccov706_start_blk0 267A  
                          __ccov650_start_blk0 1BEE                            __ccov570_start_blk1 27B7  
                          __ccov562_start_blk1 1CA9                            __ccov482_start_blk2 26BA  
                          __ccov298_start_blk4 1897                            __ccov538_start_blk5 14B9  
                          __ccov642_start_blk5 18F5                            __ccov618_start_blk8 0A7F  
                          __ccov554_start_blk8 0826                            __ccov490_start_blk9 1079  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00A8  
               __end_of_EUSART_SetErrorHandler 26F3                            ??_spd_k_calibration 00D4  
                           __ccov11_start_blk0 1996                               ??_ADC_Initialize 00A8  
                                ??i1_vfpfcnvrt 0052                  ?_TMR0_DefaultInterruptHandler 0070  
                            __ccov100_end_blk0 270C                      read_correction@return_ptr 00C9  
                    __size_of_write_correction 0122                            __ccov101_start_blk1 270C  
                                  _TMR0_Reload 26D2                                       printf@ap 014E  
                                 _spd_test_pwm 0806  EUSART_SetFramingErrorHandler@interruptHandler 00A8  
                            __ccov101_end_blk1 270D                                ___aomod@divisor 00A8  
                                  ??_vfpfcnvrt 012D                                ___aomod@counter 00B9  
                            __ccov110_end_blk1 1A7E                              __ccov102_end_blk2 2710  
                                __pstringtext1 2000                                  __pstringtext2 2030  
                                __pstringtext3 205E                                  __pstringtext4 208A  
                                __pstringtext5 20B1                                  __pstringtext6 20D7  
                                __pstringtext7 20FB                                  __pstringtext8 211D  
                                __pstringtext9 213E                            __ccov483_start_blk0 1047  
                          __ccov571_start_blk0 0E70                            __ccov707_start_blk1 267E  
                          __ccov651_start_blk2 1C16                            __ccov563_start_blk2 1CB2  
                          __ccov299_start_blk5 189E                            __ccov539_start_blk6 14BD  
                          __ccov643_start_blk8 18F8                            __ccov619_start_blk9 0AAA  
                          __ccov555_start_blk9 082E                         __Umul8_16@multiplicand 00A8  
                         __ccov173_start_blk10 1B3D                           __ccov405_start_blk76 06D8  
                     __size_of_read_correction 0190                      __end_of_spd_k_calibration 1CD4  
                            __ccov111_end_blk2 1A81                              __ccov103_end_blk3 2711  
                              _TMR0_Initialize 1A20                             __ccov12_start_blk1 19AE  
                             ??i1_led_set_mode 0070                                ??_spd_adc_to_u8 00AA  
                            ?_fuel_calibration 0070                              __ccov112_end_blk3 1A85  
                            __ccov104_end_blk4 2714                    PWM6_LoadDutyValue@dutyValue 00A8  
                         spd_k_calibration@tmp 00D5                            __ccov110_start_blk1 1A7D  
                          __ccov102_start_blk2 270D                                     _TX1STAbits 019E  
                         __ccov556_start_blk12 0832                           __ccov492_start_blk13 1084  
                         __ccov660_start_blk13 1E42                           __ccov628_start_blk24 0B09  
                         __ccov580_start_blk17 0EB9                           __ccov468_start_blk27 1403  
                         __ccov476_start_blk46 144E                           __ccov636_start_blk38 0B69  
                         __ccov396_start_blk62 069E                           __ccov388_start_blk49 0638  
                           ??_fuel_calibration 00DD                            __end_ofi1_is_moving 274C  
                            __ccov201_end_blk0 1964                              __ccov105_end_blk0 07FE  
                            __ccov113_end_blk4 1A86                             EUSART_Write@txData 00A8  
                                 ___aodiv@sign 00BA                 __end_of_PIN_MANAGER_Initialize 1D07  
                      _TMR6_LoadPeriodRegister 2699                                    _PWMTMRSbits 061F  
                            __ccov202_end_blk1 1965                              __ccov106_end_blk1 0800  
                            __ccov114_end_blk5 1A87                            __ccov708_start_blk0 2691  
                          __ccov652_start_blk0 1E02                            __ccov644_start_blk0 1D74  
                          __ccov548_start_blk0 0806                            __ccov484_start_blk1 1050  
                          __ccov572_start_blk2 0E74                            __ccov564_start_blk3 1CD2  
                         __Umul8_16@multiplier 00B0                          _TMR2_InterruptHandler 01D8  
                   __size_of_ADC_GetConversion 001D                              __ccov107_end_blk0 27CA  
                            __ccov203_end_blk2 196C                              __ccov115_end_blk6 1A88  
                                  i1__Umul8_16 1ABB                                   ___aomod@sign 00BA  
                              _TMR1_Initialize 1960                             __ccov13_start_blk0 1B4A  
                      ?_fuel_percent_calculate 0070                              __Umul8_16@product 00AC  
                              main@stored_fuel 0226  
